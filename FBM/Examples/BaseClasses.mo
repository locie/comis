within FBM.Examples;
package BaseClasses
  model ConV3V2 "Command control for V3V_2"
  parameter Integer n(min=1) = 4 "Number of heating curve";
    Modelica.Blocks.Interfaces.RealInput T7
      "temperature de retour vers le ballon intersaisonnier"
      annotation (Placement(transformation(extent={{-120,50},{-80,90}})));
    Modelica.Blocks.Interfaces.RealInput T8
      "Temperature de départ du ballon intersaisonnier vers le circuit EC"
      annotation (Placement(transformation(extent={{-120,-54},{-80,-14}})));
    Modelica.Blocks.Interfaces.RealInput Tbb
      "Temperature basse du ballon intersaisonier"
      annotation (Placement(transformation(extent={{-120,-6},{-80,34}})));
    Modelica.Blocks.Logical.Switch switch1
      annotation (Placement(transformation(extent={{38,-2},{58,18}})));
    Modelica.Blocks.Sources.Constant V3V2III_II(k=0)
      "Temperature de ballon plus froid que le retour"
      annotation (Placement(transformation(extent={{40,-32},{60,-12}})));
    Modelica.Blocks.Logical.Switch switch2
      annotation (Placement(transformation(extent={{76,-10},{96,10}})));
  Buildings.Utilities.Math.Max maxYVal(nin=n)
    "Temperature de consigne maximum pour la modulation de la vanne V3V2"
    annotation (Placement(transformation(extent={{-74,-78},{-54,-58}})));
    Modelica.Blocks.Interfaces.RealInput[n] TConsigne
      "Groupement des temperatures de consignes pour la modulation de la vanne V3V2"
      annotation (Placement(transformation(
          extent={{-17,-17},{17,17}},
          rotation=0,
          origin={-101,-69})));
  public
    Modelica.Blocks.Interfaces.RealOutput y
      annotation (Placement(transformation(extent={{98,-10},{118,10}})));
    Modelica.Blocks.Interfaces.RealOutput TConsigneMax
      "Temperature maximum de consigne pour avoir à eviter de la recalculer sur V3V3"
      annotation (Placement(transformation(
          extent={{-13,-13},{13,13}},
          rotation=0,
          origin={113,-85})));
    FBM.Components.HystReference hystReference(DLow=0.5, DHigh=0.5)
      annotation (Placement(transformation(extent={{-64,36},{-44,56}})));
    Modelica.Blocks.Logical.Not not1
      annotation (Placement(transformation(extent={{-36,36},{-16,56}})));
    FBM.Components.HystReference hystReference1(DLow=0.5, DHigh=0.5)
      annotation (Placement(transformation(extent={{-40,-2},{-20,18}})));
    Modelica.Blocks.Logical.Not not2
      annotation (Placement(transformation(extent={{-10,-2},{10,18}})));
    Buildings.Controls.Continuous.LimPID conV3V(
    Td=60,
    controllerType=Modelica.Blocks.Types.SimpleController.PI,
    Ti=120,
      k=0.05)
    annotation (Placement(transformation(extent={{-24,-78},{-4,-58}})));
    Modelica.Blocks.Sources.Constant V3V2III_II1(k=1)
      "Temperature de ballon plus froid que le retour"
      annotation (Placement(transformation(extent={{-20,-30},{0,-10}})));
  equation
    connect(maxYVal.u, TConsigne) annotation (Line(points={{-76,-68},{-76,-68},
            {-101,-68},{-101,-69}},                color={0,0,127}));
    connect(switch2.y, y) annotation (Line(points={{97,0},{100,0},{108,0}},
                     color={0,0,127}));
    connect(switch1.y, switch2.u1) annotation (Line(points={{59,8},{68,8},{74,8}},
                              color={0,0,127}));
    connect(hystReference.y, not1.u)
      annotation (Line(points={{-43,46},{-38,46}}, color={255,0,255}));
    connect(Tbb, hystReference.Ref) annotation (Line(points={{-100,14},{-84,14},
            {-84,39.8},{-66.2,39.8}},     color={0,0,127}));
    connect(T7, hystReference.u) annotation (Line(points={{-100,70},{-84,70},
            {-84,46},{-66,46}}, color={0,0,127}));
    connect(not2.u, hystReference1.y)
      annotation (Line(points={{-12,8},{-12,8},{-19,8}}, color={255,0,255}));
    connect(maxYVal.y, hystReference1.u) annotation (Line(points={{-53,-68},{
            -46,-68},{-46,-24},{-46,8},{-42,8}},
                                       color={0,0,127}));
    connect(Tbb, hystReference1.Ref) annotation (Line(points={{-100,14},{-84,14},
            {-84,1.8},{-42.2,1.8}},       color={0,0,127}));
    connect(V3V2III_II.y, switch2.u3) annotation (Line(points={{61,-22},{68,-22},
            {68,-8},{74,-8}}, color={0,0,127}));
    connect(not2.y, switch1.u2) annotation (Line(points={{11,8},{11,8},{36,8}},
                            color={255,0,255}));
    connect(maxYVal.y, TConsigneMax) annotation (Line(points={{-53,-68},{-46,
            -68},{-46,-84},{82,-84},{82,-85},{113,-85}},
                                      color={0,0,127}));
  connect(maxYVal.y, conV3V.u_s) annotation (Line(points={{-53,-68},{-53,-68},{
            -26,-68}},          color={0,0,127}));
  connect(T8, conV3V.u_m) annotation (Line(points={{-100,-34},{-34,-34},{-34,
            -80},{-14,-80}},
                           color={0,0,127}));
  connect(conV3V.y, switch1.u1) annotation (Line(points={{-3,-68},{14,-68},{14,
            16},{36,16}},  color={0,0,127}));
    connect(switch1.u3, V3V2III_II1.y) annotation (Line(points={{36,0},{36,-20},
            {1,-20}},       color={0,0,127}));
    connect(not1.y, switch2.u2) annotation (Line(points={{-15,46},{64,46},{64,0},
            {74,0}}, color={255,0,255}));
    annotation (Icon(coordinateSystem(preserveAspectRatio=false), graphics={
            Rectangle(
            extent={{-100,100},{100,-100}},
            lineColor={0,0,127},
            pattern=LinePattern.Dash,
            fillColor={175,175,175},
            fillPattern=FillPattern.Solid), Text(
            extent={{-52,38},{50,-24}},
            lineColor={0,0,127},
            pattern=LinePattern.Dash,
            fillColor={175,175,175},
            fillPattern=FillPattern.Solid,
            textString="Con V3V2")}), Diagram(coordinateSystem(
            preserveAspectRatio=false)),
  Documentation(info="<html>
<p> See the ControlerGenerale Documentation for the behavior of the hot water network </p> 
       
        
        </html>"));
  end ConV3V2;

  model ConV3V3 "Command control for the V3V_3"

    Modelica.Blocks.Interfaces.RealInput T7
      "temperature de retour vers le ballon intersaisonnier"
      annotation (Placement(transformation(extent={{-120,50},{-80,90}})));
    Modelica.Blocks.Interfaces.RealInput T8
      "Temperature de départ du ballon intersaisonnier vers le circuit EC"
      annotation (Placement(transformation(extent={{-120,-54},{-80,-14}})));
    Modelica.Blocks.Interfaces.RealInput Tbb
      "Temperature basse du ballon intersaisonier"
      annotation (Placement(transformation(extent={{-120,-8},{-80,32}})));
    Modelica.Blocks.Logical.Switch switch2
      annotation (Placement(transformation(extent={{60,-14},{80,6}})));
    Modelica.Blocks.Interfaces.RealInput TConsigne
      "Groupement des temperatures de consignes pour la modulation de la vanne V3V3"
      annotation (Placement(transformation(
          extent={{-17,-17},{17,17}},
          rotation=0,
          origin={-101,-69})));
  public
    Modelica.Blocks.Interfaces.RealOutput y
      annotation (Placement(transformation(extent={{98,-10},{118,10}})));
    Modelica.Blocks.Logical.Switch switch1
      annotation (Placement(transformation(extent={{24,64},{44,84}})));
    FBM.Components.HystReference hystReference(DLow=0.5, DHigh=0.5)
      annotation (Placement(transformation(extent={{-60,38},{-40,58}})));
    FBM.Components.HystReference hystReference1(DHigh=0.5, DLow=0.5)
      annotation (Placement(transformation(extent={{-58,-18},{-38,2}})));
    Modelica.Blocks.Logical.Not not1
      annotation (Placement(transformation(extent={{-32,38},{-12,58}})));
    Modelica.Blocks.Logical.Not not2
      annotation (Placement(transformation(extent={{-28,-18},{-8,2}})));
    Buildings.Controls.Continuous.LimPID conV3V(
    Td=60,
    controllerType=Modelica.Blocks.Types.SimpleController.PI,
    Ti=120,
      k=0.05)
    annotation (Placement(transformation(extent={{-38,-52},{-18,-32}})));
    Modelica.Blocks.Sources.Constant V3V3III_I1(k=1)
      "Temeprature de bllon inferieurà temperature de retour donc on renvoi le retour vers la chaudière"
      annotation (Placement(transformation(extent={{-30,72},{-10,92}})));
  equation
    connect(switch2.y, y) annotation (Line(points={{81,-4},{96,-4},{96,0},{
            108,0}}, color={0,0,127}));
    connect(switch1.y, switch2.u1) annotation (Line(points={{45,74},{54,74},{54,
            4},{58,4}},      color={0,0,127}));
    connect(Tbb, hystReference.Ref) annotation (Line(points={{-100,12},{-68,
            12},{-68,41.8},{-62.2,41.8}}, color={0,0,127}));
    connect(T7, hystReference.u) annotation (Line(points={{-100,70},{-68,70},
            {-68,48},{-62,48}}, color={0,0,127}));
    connect(TConsigne, hystReference1.u) annotation (Line(points={{-101,-69},{
            -101,-7.5},{-60,-7.5},{-60,-8}},  color={0,0,127}));
    connect(Tbb, hystReference1.Ref) annotation (Line(points={{-100,12},{-77,
            12},{-77,-14.2},{-60.2,-14.2}}, color={0,0,127}));
    connect(hystReference.y, not1.u)
      annotation (Line(points={{-39,48},{-34,48}}, color={255,0,255}));
    connect(not1.y, switch2.u2) annotation (Line(points={{-11,48},{36,48},{36,
            -4},{58,-4}}, color={255,0,255}));
    connect(hystReference1.y, not2.u) annotation (Line(points={{-37,-8},{-32,
            -8},{-30,-8}}, color={255,0,255}));
    connect(not2.y, switch1.u2) annotation (Line(points={{-7,-8},{4,-8},{4,74},
            {22,74}}, color={255,0,255}));
  connect(T8, conV3V.u_m) annotation (Line(points={{-100,-34},{-64,-34},{-64,
          -54},{-28,-54}}, color={0,0,127}));
  connect(TConsigne, conV3V.u_s) annotation (Line(points={{-101,-69},{-70.5,-69},
          {-70.5,-42},{-40,-42}}, color={0,0,127}));
  connect(conV3V.y, switch1.u3) annotation (Line(points={{-17,-42},{-2,-42},{-2,
            66},{22,66}},  color={0,0,127}));
    connect(switch1.u1, V3V3III_I1.y) annotation (Line(points={{22,82},{2,82},{
            -9,82}},          color={0,0,127}));
    connect(conV3V.y, switch2.u3) annotation (Line(points={{-17,-42},{20,-42},{
            20,-12},{58,-12}}, color={0,0,127}));
    annotation (Icon(coordinateSystem(preserveAspectRatio=false), graphics={
            Rectangle(
            extent={{-100,100},{100,-100}},
            lineColor={0,0,127},
            pattern=LinePattern.Dash,
            fillColor={175,175,175},
            fillPattern=FillPattern.Solid), Text(
            extent={{-52,38},{50,-24}},
            lineColor={0,0,127},
            pattern=LinePattern.Dash,
            fillColor={175,175,175},
            fillPattern=FillPattern.Solid,
            textString="Con V3V3")}), Diagram(coordinateSystem(
            preserveAspectRatio=false)),
            Documentation(info="<html>
<p> See the ControlerGenerale Documentation for the behavior of the hot water network </p> 
       
        
        </html>"));
  end ConV3V3;

  model GeneralSetPoint

    Modelica.Blocks.Logical.Switch swi "Switch to select set point"
      annotation (Placement(transformation(extent={{66,-12},{86,8}})));
    Modelica.Blocks.Sources.Constant TRooOff(k=273.15 - 5)
      "Low room temperature set point to switch heating off"
      annotation (Placement(transformation(extent={{-24,-92},{-4,-72}})));
    Modelica.Blocks.Logical.OnOffController onOff(bandwidth=1)
      "On/off switch"
      annotation (Placement(transformation(extent={{-22,-62},{-2,-42}})));
    Modelica.Blocks.Continuous.FirstOrder aveTOut(
      initType=Modelica.Blocks.Types.Init.SteadyState,
      y(unit="K"),
      T=2*3600) "Integrated average of outside temperature"
      annotation (Placement(transformation(extent={{-72,-90},{-52,-70}})));
    Modelica.Blocks.Sources.Constant TOutSwi(k=22 + 273.15)
      "Outside air temperature to switch heating on or off"
      annotation (Placement(transformation(extent={{-70,-58},{-50,-38}})));
    Modelica.Blocks.Sources.Constant pumRadOn2(k=273.15 + 23)
      "Pump on signal"
      annotation (Placement(transformation(extent={{-98,58},{-78,78}})));
    Modelica.Blocks.Logical.Switch swiPum2 "Pump switch"
      annotation (Placement(transformation(extent={{-62,50},{-42,70}})));
    Modelica.Blocks.Sources.Constant pumRadOff2(k=273.15 + 19)
      "Pump off signal"
      annotation (Placement(transformation(extent={{-98,0},{-78,20}})));
    Buildings.Controls.SetPoints.OccupancySchedule occSch2(occupancy=3600*{8,17})
      "Occupancy schedule"
      annotation (Placement(transformation(extent={{-98,28},{-78,48}})));
    Modelica.Blocks.Logical.Switch swiPum5 "Pump switch"
      annotation (Placement(transformation(extent={{34,2},{54,22}})));
    Modelica.Blocks.Sources.Constant pumRadOff5(k=273.15 + 12)
      "Pump off signal"
      annotation (Placement(transformation(extent={{-24,-20},{-4,0}})));
    FBM.Components.TestHoliday
                testHoliday annotation (Placement(transformation(extent={{-20,6},
              {0,24}})));
    Modelica.Blocks.Logical.Switch swiPum1 "Pump switch"
      annotation (Placement(transformation(extent={{2,42},{22,62}})));
    FBM.Components.TestSunday
               testSunday
      annotation (Placement(transformation(extent={{-38,66},{-16,86}})));
    Modelica.Blocks.Sources.Constant pumRadOff1(k=273.15 + 16)
      "Pump off signal"
      annotation (Placement(transformation(extent={{-48,22},{-28,42}})));
    Buildings.BoundaryConditions.WeatherData.Bus weaBus annotation (Placement(
          transformation(extent={{-102,-42},{-62,-2}}), iconTransformation(
            extent={{-84,64},{-64,84}})));
    Modelica.Blocks.Interfaces.RealOutput y "Air room set point"
      annotation (Placement(transformation(extent={{100,-12},{120,8}})));
    Modelica.Blocks.Interfaces.BooleanOutput OnOff "Winter or Summer mode"
      annotation (Placement(transformation(extent={{100,-62},{120,-42}})));
  equation
    connect(aveTOut.y,onOff. u) annotation (Line(
        points={{-51,-80},{-32,-80},{-32,-58},{-24,-58}},
        color={0,0,127},
        pattern=LinePattern.Dash));
    connect(TOutSwi.y,onOff. reference) annotation (Line(
        points={{-49,-48},{-32,-48},{-32,-46},{-24,-46}},
        color={0,0,127},
        pattern=LinePattern.Dash));
    connect(TRooOff.y,swi. u3) annotation (Line(
        points={{-3,-82},{10,-82},{10,-10},{64,-10}},
        color={0,0,127},
        pattern=LinePattern.Dash));
    connect(pumRadOn2.y,swiPum2. u1) annotation (Line(
        points={{-77,68},{-64,68}},
        color={0,0,127},
        smooth=Smooth.None));
    connect(pumRadOff2.y,swiPum2. u3) annotation (Line(
        points={{-77,10},{-68,10},{-68,52},{-64,52}},
        color={0,0,127},
        smooth=Smooth.None));
    connect(occSch2.occupied,swiPum2. u2) annotation (Line(points={{-77,32},{
            -74,32},{-74,60},{-64,60}},
                                color={255,0,255}));
    connect(pumRadOff5.y,swiPum5. u3) annotation (Line(points={{-3,-10},{4,-10},
            {4,4},{32,4}},                  color={0,0,127}));
    connect(onOff.y,swi. u2) annotation (Line(points={{-1,-52},{14,-52},{14,-2},
            {64,-2}},  color={255,0,255}));
    connect(testHoliday.y,swiPum5. u2) annotation (Line(points={{1,15},{1,12},{
            32,12}},                          color={255,0,255}));
    connect(testSunday.y,swiPum1. u2) annotation (Line(points={{-14.9,76},{
            -14.9,52},{0,52}},   color={255,0,255}));
    connect(pumRadOff1.y,swiPum1. u3) annotation (Line(points={{-27,32},{-27,44},
            {0,44}},                   color={0,0,127}));
    connect(swiPum5.y,swi. u1) annotation (Line(points={{55,12},{58,12},{58,6},
            {64,6}},    color={0,0,127}));
    connect(swiPum1.y,swiPum5. u1) annotation (Line(points={{23,52},{22,52},{22,
            20},{32,20}},           color={0,0,127}));
    connect(swiPum2.y,swiPum1. u1) annotation (Line(points={{-41,60},{-28,60},{
            0,60}},                  color={0,0,127}));
    connect(swi.y, y)
      annotation (Line(points={{87,-2},{110,-2}}, color={0,0,127}));
    connect(onOff.y, OnOff) annotation (Line(points={{-1,-52},{50,-52},{110,-52}},
          color={255,0,255}));
    connect(weaBus.TDryBul, aveTOut.u) annotation (Line(
        points={{-82,-22},{-80,-22},{-80,-80},{-74,-80}},
        color={255,204,51},
        thickness=0.5), Text(
        string="%first",
        index=-1,
        extent={{-6,3},{-6,3}}));
    annotation (Icon(coordinateSystem(preserveAspectRatio=false), graphics={
            Rectangle(
            extent={{-102,100},{100,-100}},
            lineColor={0,0,127},
            pattern=LinePattern.Dash,
            fillColor={175,175,175},
            fillPattern=FillPattern.Solid)}), Diagram(coordinateSystem(
            preserveAspectRatio=false)));
  end GeneralSetPoint;

  model Weather
    Buildings.BoundaryConditions.WeatherData.ReaderTMY3 weaDat(
      winDirSou=Buildings.BoundaryConditions.Types.DataSource.Input,
      winSpeSou=Buildings.BoundaryConditions.Types.DataSource.Input,
      pAtmSou=Buildings.BoundaryConditions.Types.DataSource.Parameter,
      relHumSou=Buildings.BoundaryConditions.Types.DataSource.Input,
      TDryBulSou=Buildings.BoundaryConditions.Types.DataSource.Input,
      TDewPoiSou=Buildings.BoundaryConditions.Types.DataSource.Input,
      ceiHeiSou=Buildings.BoundaryConditions.Types.DataSource.Input,
      HSou=Buildings.BoundaryConditions.Types.RadiationDataSource.Input_HDirNor_HDifHor,
      pAtm=98828,
      filNam=
          "modelica://FBM/Resources/weatherdata/FRA-Chambe Aix Les Ba_INES data2014 timestep 1H.mos")
      annotation (Placement(transformation(extent={{18,-8},{28,2}})));
    Modelica.Blocks.Sources.TimeTable TDryBulb(table=[0,5.8; 3600,5.58833333333333;
          7200,5.57166666666667; 10800,5.7; 14400,5.90166666666667; 18000,5.825; 21600,
          5.76; 25200,5.68; 28800,5.85; 32400,6.71166666666667; 36000,7.36166666666667;
          39600,8.07; 43200,10.3016666666667; 46800,10.585; 50400,9.34833333333333;
          54000,8.29166666666667; 57600,7.65166666666667; 61200,7.385; 64800,6.395;
          68400,4.055; 72000,3.97833333333333; 75600,4.49333333333333; 79200,5.03166666666667;
          82800,4.96166666666667; 86400,4.84333333333333; 90000,4.59333333333333;
          93600,4.56166666666667; 97200,4.65166666666667; 100800,4.60666666666667;
          104400,4.80833333333333; 108000,5.035; 111600,5.185; 115200,5.55833333333333;
          118800,5.555; 122400,6.32333333333333; 126000,6.86333333333333; 129600,6.90333333333333;
          133200,6.90666666666667; 136800,6.73166666666667; 140400,6.53166666666667;
          144000,6.10666666666667; 147600,6.275; 151200,5.62166666666667; 154800,5.42166666666667;
          158400,5.165; 162000,5.085; 165600,4.95; 169200,4.81166666666667; 172800,
          5.3; 176400,5.05166666666667; 180000,5.01833333333333; 183600,4.77166666666667;
          187200,4.405; 190800,3.19666666666667; 194400,1.79666666666667; 198000,2.085;
          201600,2.505; 205200,3.44833333333333; 208800,4.45; 212400,5.335; 216000,
          6.09666666666667; 219600,6.12333333333333; 223200,6.24833333333333; 226800,
          6.37333333333333; 230400,5.74666666666667; 234000,6.12666666666667; 237600,
          6.51666666666667; 241200,6.13666666666667; 244800,5.26; 248400,5.57333333333333;
          252000,5.18166666666667; 255600,4.99333333333333; 259200,5.345; 262800,5.50666666666667;
          266400,5.48333333333333; 270000,5.77166666666667; 273600,5.91333333333333;
          277200,5.305; 280800,5.18166666666667; 284400,5.37666666666667; 288000,6.72333333333333;
          291600,9.235; 295200,9.61333333333333; 298800,9.65; 302400,8.985; 306000,
          8.28666666666667; 309600,8.205; 313200,7.595; 316800,7.29166666666667; 320400,
          7.33666666666667; 324000,6.79833333333333; 327600,6.42; 331200,6.33166666666667;
          334800,5.84166666666667; 338400,5.665; 342000,5.92666666666667; 345600,5.80833333333333;
          349200,5.875; 352800,5.22833333333333; 356400,5.03666666666667; 360000,5.36;
          363600,5.27666666666667; 367200,5.265; 370800,5.265; 374400,5.70333333333333;
          378000,6.19; 381600,7.28; 385200,8.54166666666667; 388800,10.265; 392400,
          10.0983333333333; 396000,9.335; 399600,8.55833333333333; 403200,6.79166666666667;
          406800,6.07; 410400,6.425; 414000,5.91833333333333; 417600,6.45; 421200,
          5.89166666666667; 424800,5.77666666666667; 428400,5.19; 432000,5.39666666666667;
          435600,5.42833333333333; 439200,5.66166666666667; 442800,5.20833333333333;
          446400,4.91; 450000,4.6; 453600,4.21833333333333; 457200,3.14; 460800,4.70833333333333;
          464400,5.725; 468000,6.63166666666667; 471600,7.08333333333333; 475200,6.32833333333333;
          478800,5.80166666666667; 482400,5.71833333333333; 486000,5.60333333333333;
          489600,5.30166666666667; 493200,5.09; 496800,5.075; 500400,5.01166666666667;
          504000,4.75666666666667; 507600,4.76833333333333; 511200,4.765; 514800,4.605;
          518400,4.15166666666667; 522000,4.07833333333333; 525600,4.20166666666667;
          529200,4.205; 532800,4.26166666666667; 536400,4.66166666666667; 540000,4.425;
          543600,4.51; 547200,4.31833333333333; 550800,3.94833333333333; 554400,4.115;
          558000,3.975; 561600,4.26833333333333; 565200,4.48166666666667; 568800,4.86;
          572400,4.74; 576000,5.075; 579600,5.075; 583200,4.94; 586800,5.24166666666667;
          590400,4.625; 594000,4.46166666666667; 597600,5.09833333333333; 601200,4.74666666666667;
          604800,4.89; 608400,5.39666666666667; 612000,5.37166666666667; 615600,5.36833333333333;
          619200,5.19333333333333; 622800,5.00166666666667; 626400,5.57666666666667;
          630000,6.11; 633600,6.84166666666667; 637200,7.50166666666667; 640800,8.13833333333333;
          644400,8.28833333333333; 648000,8.445; 651600,8.51; 655200,8.28166666666667;
          658800,8.20666666666667; 662400,9.14666666666667; 666000,9.425; 669600,9.74333333333333;
          673200,10.4283333333333; 676800,9.79333333333333; 680400,10.1466666666667;
          684000,10.3766666666667; 687600,9.75666666666667; 691200,9.195; 694800,8.205;
          698400,7.72833333333333; 702000,7.84333333333333; 705600,7.81666666666667;
          709200,8.005; 712800,7.93; 716400,7.96; 720000,8.06166666666667; 723600,
          8.195; 727200,8.435; 730800,8.60166666666667; 734400,8.83333333333333; 738000,
          9.43666666666667; 741600,9.46166666666667; 745200,9.33666666666667; 748800,
          8.91166666666667; 752400,8.83; 756000,8.21333333333333; 759600,8.115; 763200,
          8.10833333333333; 766800,7.25; 770400,6.82833333333333; 774000,7.01; 777600,
          7.06166666666667; 781200,7.85166666666667; 784800,7.78666666666667; 788400,
          6.98; 792000,6.74166666666667; 795600,7.57166666666667; 799200,7.68666666666667;
          802800,7.01166666666667; 806400,6.64666666666667; 810000,6.80166666666667;
          813600,7.22; 817200,7.80833333333333; 820800,8.24166666666667; 824400,8.26666666666667;
          828000,8.24666666666667; 831600,8.885; 835200,8.86; 838800,8.86333333333333;
          842400,9.40666666666667; 846000,10.09; 849600,11.9166666666667; 853200,9.64333333333333;
          856800,9.44166666666667; 860400,9.04166666666667; 864000,9.30666666666667;
          867600,9.53666666666667; 871200,9.97833333333333; 874800,9.535; 878400,8.21666666666667;
          882000,8.83333333333333; 885600,10.225; 889200,11.09; 892800,13.4616666666667;
          896400,13.635; 900000,13.1566666666667; 903600,12.4466666666667; 907200,
          12.1383333333333; 910800,12.165; 914400,12.085; 918000,11.045; 921600,10.835;
          925200,10.5316666666667; 928800,10.0816666666667; 932400,9.57666666666667;
          936000,9.37333333333333; 939600,9.22333333333333; 943200,9.44; 946800,9.01333333333333;
          950400,9.305; 954000,9.245; 957600,7.70666666666667; 961200,6.16; 964800,
          5.89333333333333; 968400,6.645; 972000,7.46666666666667; 975600,7.625; 979200,
          8.02166666666667; 982800,8.24166666666667; 986400,7.40833333333333; 990000,
          7.925; 993600,8.33; 997200,8.48833333333333; 1000800,6.875; 1004400,5.52333333333333;
          1008000,7.30833333333333; 1011600,7.71; 1015200,7.81833333333333; 1018800,
          7.87666666666667; 1022400,6.615; 1026000,5.65166666666667; 1029600,6.57;
          1033200,4.54166666666667; 1036800,4.59333333333333; 1040400,3.72833333333333;
          1044000,4.565; 1047600,3.78333333333333; 1051200,3.9; 1054800,4.66666666666667;
          1058400,3.87333333333333; 1062000,3.09; 1065600,2.52833333333333; 1069200,
          3.18666666666667; 1072800,6.17666666666667; 1076400,6.995; 1080000,6.93333333333333;
          1083600,7.16; 1087200,6.865; 1090800,5.52166666666667; 1094400,3.10666666666667;
          1098000,1.62333333333333; 1101600,0.553333333333333; 1105200,0.0416666666666667;
          1108800,0.248333333333333; 1112400,0.835; 1116000,0.906666666666667; 1119600,
          0.17; 1123200,0.463333333333333; 1126800,-0.0266666666666667; 1130400,-0.166666666666667;
          1134000,-0.015; 1137600,0.83; 1141200,0.965; 1144800,0.91; 1148400,0.145;
          1152000,-0.128333333333333; 1155600,0.15; 1159200,0.37; 1162800,0.698333333333333;
          1166400,0.865; 1170000,1.35166666666667; 1173600,1.29; 1177200,1.14833333333333;
          1180800,1.06833333333333; 1184400,0.901666666666667; 1188000,1.08166666666667;
          1191600,1.31833333333333; 1195200,1.47; 1198800,1.655; 1202400,1.77166666666667;
          1206000,1.54166666666667; 1209600,2.26833333333333; 1213200,2.25833333333333;
          1216800,2.16833333333333; 1220400,2.04666666666667; 1224000,1.00833333333333;
          1227600,0.775; 1231200,1.05666666666667; 1234800,0.00166666666666667; 1238400,
          0.185; 1242000,2.18666666666667; 1245600,4.29666666666667; 1249200,5.31;
          1252800,5.82833333333333; 1256400,5.74666666666667; 1260000,5.62666666666667;
          1263600,4.155; 1267200,2.91833333333333; 1270800,1.96333333333333; 1274400,
          2.22833333333333; 1278000,1.95666666666667; 1281600,1.42666666666667; 1285200,
          0.726666666666667; 1288800,0.746666666666667; 1292400,0.353333333333333;
          1296000,-0.113333333333333; 1299600,0.205; 1303200,-0.141666666666667; 1306800,
          -0.273333333333333; 1310400,-0.303333333333333; 1314000,-0.426666666666667;
          1317600,-0.328333333333333; 1321200,-0.25; 1324800,-0.045; 1328400,0.678333333333333;
          1332000,1.33; 1335600,2.19166666666667; 1339200,3.17166666666667; 1342800,
          4.095; 1346400,3.63333333333333; 1350000,2.44833333333333; 1353600,2.09666666666667;
          1357200,2.08166666666667; 1360800,2.10166666666667; 1364400,2.49666666666667;
          1368000,2.26166666666667; 1371600,1.39; 1375200,0.415; 1378800,0.371666666666667;
          1382400,0; 1386000,-0.186666666666667; 1389600,-0.548333333333333; 1393200,
          -0.508333333333333; 1396800,-0.606666666666667; 1400400,-1.07333333333333;
          1404000,-0.828333333333333; 1407600,-0.995; 1411200,-0.465; 1414800,0.32;
          1418400,0.995; 1422000,1.745; 1425600,2.25833333333333; 1429200,2.90333333333333;
          1432800,3.425; 1436400,2.675; 1440000,1.745; 1443600,0.648333333333333;
          1447200,0.713333333333333; 1450800,0.301666666666667; 1454400,-0.226666666666667;
          1458000,-0.436666666666667; 1461600,-1.47; 1465200,-1.745; 1468800,-1.49166666666667;
          1472400,-1.565; 1476000,-3.3; 1479600,-3.33166666666667; 1483200,-2.96;
          1486800,-2.67333333333333; 1490400,-3.41833333333333; 1494000,-3.18666666666667;
          1497600,-2.48833333333333; 1501200,-1.64333333333333; 1504800,-0.918333333333333;
          1508400,-0.395; 1512000,-0.503333333333333; 1515600,-0.116666666666667;
          1519200,0.03; 1522800,-0.0333333333333333; 1526400,-0.308333333333333; 1530000,
          -0.436666666666667; 1533600,-0.543333333333333; 1537200,-1.42666666666667;
          1540800,-1.63333333333333; 1544400,-1.625; 1548000,-1.62666666666667; 1551600,
          -1.55; 1555200,-1.48833333333333; 1558800,-1.44833333333333; 1562400,-1.39;
          1566000,-1.20666666666667; 1569600,-1.03666666666667; 1573200,-0.966666666666667;
          1576800,-0.845; 1580400,-0.58; 1584000,-0.13; 1587600,0.59; 1591200,1.59333333333333;
          1594800,2.63666666666667; 1598400,3.49333333333333; 1602000,3.49166666666667;
          1605600,3.85666666666667; 1609200,3.59166666666667; 1612800,3.27666666666667;
          1616400,2.74333333333333; 1620000,2.10333333333333; 1623600,1.81833333333333;
          1627200,1.67333333333333; 1630800,1.5; 1634400,1.51333333333333; 1638000,
          1.38666666666667; 1641600,1.33; 1645200,1.31333333333333; 1648800,1.25333333333333;
          1652400,1.58333333333333; 1656000,1.45; 1659600,1.64; 1663200,1.69833333333333;
          1666800,1.575; 1670400,2.325; 1674000,3.4; 1677600,4.64166666666667; 1681200,
          4.58; 1684800,5.54666666666667; 1688400,5.61666666666667; 1692000,5.775;
          1695600,5.52166666666667; 1699200,4.79333333333333; 1702800,4.48666666666667;
          1706400,4.665; 1710000,4.69333333333333; 1713600,4.76333333333333; 1717200,
          4.78833333333333; 1720800,4.74666666666667; 1724400,4.725; 1728000,4.905;
          1731600,4.885; 1735200,4.65166666666667; 1738800,4.44166666666667; 1742400,
          4.225; 1746000,4.14333333333333; 1749600,3.975; 1753200,4.47666666666667;
          1756800,4.81; 1760400,5.285; 1764000,5.93166666666667; 1767600,6.07666666666667;
          1771200,6.175; 1774800,5.99166666666667; 1778400,5.93666666666667; 1782000,
          5.66166666666667; 1785600,5.31333333333333; 1789200,5.13; 1792800,4.97166666666667;
          1796400,4.475; 1800000,4.06666666666667; 1803600,3.81833333333333; 1807200,
          2.21833333333333; 1810800,0.495; 1814400,-0.923333333333333; 1818000,-1.57666666666667;
          1821600,-2.00333333333333; 1825200,-2.27666666666667; 1828800,-2.47; 1832400,
          -2.93333333333333; 1836000,-2.99; 1839600,-2.84; 1843200,-1.15833333333333;
          1846800,1.09333333333333; 1850400,3.32666666666667; 1854000,5.75833333333333;
          1857600,7.52666666666667; 1861200,8.05666666666667; 1864800,9.32; 1868400,
          7.40166666666667; 1872000,4.72833333333333; 1875600,3.315; 1879200,3.405;
          1882800,3.555; 1886400,3.68833333333333; 1890000,3.69666666666667; 1893600,
          3.72333333333333; 1897200,3.57833333333333; 1900800,3.86; 1904400,3.80333333333333;
          1908000,3.79; 1911600,4.01666666666667; 1915200,3.84166666666667; 1918800,
          3.70666666666667; 1922400,4.35666666666667; 1926000,4.46666666666667; 1929600,
          4.995; 1933200,6.325; 1936800,7.46166666666667; 1940400,10.5816666666667;
          1944000,10.9483333333333; 1947600,11.0683333333333; 1951200,11.8733333333333;
          1954800,10.4133333333333; 1958400,6.23333333333333; 1962000,4.23333333333333;
          1965600,6.145; 1969200,4.44166666666667; 1972800,4.05; 1976400,1.72666666666667;
          1980000,0.908333333333333; 1983600,0.416666666666667; 1987200,-0.025; 1990800,
          -0.72; 1994400,-0.878333333333333; 1998000,-1.15666666666667; 2001600,-1.33166666666667;
          2005200,-1.44; 2008800,-1.32666666666667; 2012400,-1.35; 2016000,-0.0716666666666666;
          2019600,2.36666666666667; 2023200,6.69166666666667; 2026800,8.74833333333333;
          2030400,10.7433333333333; 2034000,11.49; 2037600,12.5533333333333; 2041200,
          10.1616666666667; 2044800,5.06333333333333; 2048400,2.96666666666667; 2052000,
          1.62166666666667; 2055600,0.733333333333333; 2059200,0.581666666666667;
          2062800,0.163333333333333; 2066400,-0.0466666666666667; 2070000,0.223333333333333;
          2073600,-0.486666666666667; 2077200,-0.978333333333333; 2080800,-1.495;
          2084400,-1.88333333333333; 2088000,-2.35333333333333; 2091600,-2.285; 2095200,
          -2.49666666666667; 2098800,-2.22166666666667; 2102400,-0.885; 2106000,2.29;
          2109600,6.11; 2113200,8.88833333333333; 2116800,9.76833333333333; 2120400,
          10.54; 2124000,10.9766666666667; 2127600,9.53166666666667; 2131200,5.26833333333333;
          2134800,3.135; 2138400,2.06833333333333; 2142000,1.21; 2145600,0.946666666666667;
          2149200,0.613333333333333; 2152800,0.235; 2156400,-0.253333333333333; 2160000,
          -0.253333333333333; 2163600,-0.781666666666667; 2167200,-0.998333333333333;
          2170800,-1.05166666666667; 2174400,-1.10166666666667; 2178000,-1.04666666666667;
          2181600,-1.26333333333333; 2185200,-0.848333333333333; 2188800,0.74; 2192400,
          3.135; 2196000,6.52; 2199600,9.93833333333333; 2203200,11.1333333333333;
          2206800,9.95666666666667; 2210400,10.4433333333333; 2214000,8.715; 2217600,
          6.47333333333333; 2221200,4.12666666666667; 2224800,2.89333333333333; 2228400,
          1.95166666666667; 2232000,1.325; 2235600,0.753333333333333; 2239200,0.315;
          2242800,0.0766666666666667; 2246400,-0.0583333333333333; 2250000,-0.466666666666667;
          2253600,-0.708333333333333; 2257200,-1.37666666666667; 2260800,-1.20333333333333;
          2264400,-1.215; 2268000,-1.53833333333333; 2271600,-1.29166666666667; 2275200,
          0.718333333333333; 2278800,4.35666666666667; 2282400,7.96333333333333; 2286000,
          8.44333333333333; 2289600,8.975; 2293200,11.37; 2296800,12.07; 2300400,10.585;
          2304000,7.77666666666667; 2307600,5.215; 2311200,3.69833333333333; 2314800,
          2.77833333333333; 2318400,1.9; 2322000,1.07833333333333; 2325600,0.833333333333333;
          2329200,0.408333333333333; 2332800,0.64; 2336400,0.775; 2340000,0.681666666666667;
          2343600,0.618333333333333; 2347200,0.655; 2350800,-0.16; 2354400,0.25; 2358000,
          0.486666666666667; 2361600,1.79166666666667; 2365200,4.39833333333333; 2368800,
          7.375; 2372400,9.355; 2376000,10.1216666666667; 2379600,10.3683333333333;
          2383200,10.1166666666667; 2386800,9.58833333333333; 2390400,8.62666666666667;
          2394000,8.47833333333333; 2397600,7.9; 2401200,7.73833333333333; 2404800,
          7.75666666666667; 2408400,7.89; 2412000,7.955; 2415600,7.63666666666667;
          2419200,7.57666666666667; 2422800,7.41166666666667; 2426400,7.34333333333333;
          2430000,7.74166666666667; 2433600,6.93833333333333; 2437200,6.615; 2440800,
          6.645; 2444400,6.85333333333333; 2448000,6.88666666666667; 2451600,7.98166666666667;
          2455200,10.9233333333333; 2458800,12.1083333333333; 2462400,11; 2466000,
          11.5883333333333; 2469600,11.1366666666667; 2473200,11.2116666666667; 2476800,
          10.3; 2480400,7.855; 2484000,5.79333333333333; 2487600,4.60333333333333;
          2491200,3.88833333333333; 2494800,4.50333333333333; 2498400,4.24; 2502000,
          4.97833333333333; 2505600,4.82; 2509200,4.40666666666667; 2512800,3.20166666666667;
          2516400,2.58666666666667; 2520000,1.81; 2523600,2.62; 2527200,2.34; 2530800,
          2.43166666666667; 2534400,2.96; 2538000,4.70666666666667; 2541600,8.23666666666667;
          2545200,10.8466666666667; 2548800,13.42; 2552400,15.1916666666667; 2556000,
          14.3683333333333; 2559600,13.705; 2563200,13.255; 2566800,12.4266666666667;
          2570400,11.4616666666667; 2574000,10.1333333333333; 2577600,9.60166666666667;
          2581200,8.92833333333333; 2584800,8.13166666666667; 2588400,8.07333333333333;
          2592000,8.07166666666667; 2595600,8.03166666666667; 2599200,8.06833333333333;
          2602800,7.97333333333333; 2606400,8.06; 2610000,8.10833333333333; 2613600,
          8.10166666666667; 2617200,8.28666666666667; 2620800,8.38; 2624400,8.57333333333334;
          2628000,8.67666666666667; 2631600,8.5; 2635200,8.53; 2638800,8.595; 2642400,
          8.58166666666667; 2646000,8.49666666666667; 2649600,8.425; 2653200,8.47833333333333;
          2656800,8.46; 2660400,8.69333333333333; 2664000,8.56333333333333; 2667600,
          8.62333333333333; 2671200,8.67333333333333; 2674800,8.80833333333333; 2678400,
          8.83; 2682000,8.56; 2685600,8.48166666666667; 2689200,8.61; 2692800,8.60833333333333;
          2696400,8.40166666666667; 2700000,8.29666666666667; 2703600,8.24; 2707200,
          9.06166666666667; 2710800,9.995; 2714400,10.78; 2718000,11.0566666666667;
          2721600,12.8366666666667; 2725200,13.4633333333333; 2728800,13.36; 2732400,
          13.9133333333333; 2736000,11.8716666666667; 2739600,9.95; 2743200,8.40333333333333;
          2746800,7.18333333333333; 2750400,6.28833333333333; 2754000,5.72666666666667;
          2757600,6.23666666666667; 2761200,6.56666666666667; 2764800,7.02666666666667;
          2768400,7.195; 2772000,7.10333333333333; 2775600,6.88666666666667; 2779200,
          6.415; 2782800,6.465; 2786400,5.81; 2790000,5.74; 2793600,6.54333333333333;
          2797200,7.71833333333333; 2800800,9.24666666666667; 2804400,10.8933333333333;
          2808000,11.6916666666667; 2811600,11.215; 2815200,11.655; 2818800,10.8016666666667;
          2822400,10.1966666666667; 2826000,9.38833333333333; 2829600,8.57333333333333;
          2833200,7.83166666666667; 2836800,7.33833333333333; 2840400,7.26; 2844000,
          7.665; 2847600,7.16333333333333; 2851200,6.64; 2854800,6.45666666666667;
          2858400,6.10833333333333; 2862000,5.90333333333333; 2865600,6.07833333333333;
          2869200,7.21; 2872800,7.155; 2876400,7.44666666666667; 2880000,8.00666666666667;
          2883600,8.75333333333333; 2887200,8.48333333333333; 2890800,8.825; 2894400,
          6.64; 2898000,7.19; 2901600,6.67333333333333; 2905200,4.195; 2908800,3.955;
          2912400,3.11333333333333; 2916000,3.06666666666667; 2919600,3.195; 2923200,
          3.22166666666667; 2926800,2.995; 2930400,2.75833333333333; 2934000,2.66166666666667;
          2937600,2.655; 2941200,2.65833333333333; 2944800,2.55666666666667; 2948400,
          2.67666666666667; 2952000,2.61166666666667; 2955600,2.795; 2959200,2.77;
          2962800,2.855; 2966400,4.23166666666667; 2970000,5.29666666666667; 2973600,
          6.855; 2977200,7.50666666666667; 2980800,7.79; 2984400,8.01166666666666;
          2988000,7.62166666666667; 2991600,7.07666666666667; 2995200,6.98333333333333;
          2998800,6.97166666666667; 3002400,6.56; 3006000,5.755; 3009600,5.055; 3013200,
          4.67; 3016800,4.595; 3020400,4.51166666666667; 3024000,4.515; 3027600,4.53;
          3031200,4.51333333333333; 3034800,4.42; 3038400,4.40833333333333; 3042000,
          3.49333333333333; 3045600,3.075; 3049200,2.77666666666667; 3052800,3.26333333333333;
          3056400,5.39333333333333; 3060000,7.44333333333333; 3063600,9.41166666666667;
          3067200,10.3233333333333; 3070800,11.6883333333333; 3074400,11.9766666666667;
          3078000,11.425; 3081600,7.565; 3085200,5.51833333333333; 3088800,4.85333333333333;
          3092400,3.815; 3096000,3.01833333333333; 3099600,2.405; 3103200,1.87333333333333;
          3106800,1.51333333333333; 3110400,0.898333333333333; 3114000,0.201666666666667;
          3117600,0.185; 3121200,-0.326666666666667; 3124800,-0.34; 3128400,0.025;
          3132000,0.88; 3135600,1.595; 3139200,1.68833333333333; 3142800,1.96166666666667;
          3146400,2.895; 3150000,5.45833333333333; 3153600,8.28166666666667; 3157200,
          9.895; 3160800,12.6916666666667; 3164400,12.215; 3168000,9.05166666666667;
          3171600,6.58833333333333; 3175200,5.28666666666667; 3178800,4.39166666666667;
          3182400,4.09666666666667; 3186000,4.495; 3189600,4.54666666666667; 3193200,
          4.47166666666667; 3196800,4.005; 3200400,4.10333333333333; 3204000,3.475;
          3207600,4.38666666666667; 3211200,4.48333333333333; 3214800,4.745; 3218400,
          5.17; 3222000,5.88; 3225600,6.93333333333333; 3229200,8.40333333333333;
          3232800,5.96166666666667; 3236400,4.42333333333333; 3240000,3.52333333333333;
          3243600,3.49833333333333; 3247200,3.805; 3250800,4.32333333333333; 3254400,
          4.19666666666667; 3258000,3.52166666666667; 3261600,2.55166666666667; 3265200,
          2.72166666666667; 3268800,3.05833333333333; 3272400,2.98666666666667; 3276000,
          3.01666666666667; 3279600,2.615; 3283200,2.39; 3286800,2.335; 3290400,2.31666666666667;
          3294000,3.025; 3297600,3.83833333333333; 3301200,4.47666666666667; 3304800,
          4.72166666666667; 3308400,5.19666666666667; 3312000,5.67666666666667; 3315600,
          6.46; 3319200,7.265; 3322800,8.08333333333333; 3326400,8.43666666666667;
          3330000,8.535; 3333600,9.47333333333333; 3337200,10.5433333333333; 3340800,
          11.0033333333333; 3344400,11.425; 3348000,12.2816666666667; 3351600,12.0666666666667;
          3355200,10.6333333333333; 3358800,9.74833333333333; 3362400,10.7116666666667;
          3366000,10.0916666666667; 3369600,10.0483333333333; 3373200,9.52166666666667;
          3376800,9.87166666666667; 3380400,9.69833333333333; 3384000,9.975; 3387600,
          10.17; 3391200,10.0633333333333; 3394800,9.84833333333333; 3398400,10.625;
          3402000,11.2566666666667; 3405600,11.0916666666667; 3409200,11.345; 3412800,
          12.1016666666667; 3416400,12.5066666666667; 3420000,12.11; 3423600,11.2066666666667;
          3427200,10.5516666666667; 3430800,10.1833333333333; 3434400,10.26; 3438000,
          9.365; 3441600,9.745; 3445200,9.22166666666667; 3448800,8.1; 3452400,6.76;
          3456000,5.74833333333333; 3459600,5.665; 3463200,5.965; 3466800,5.5; 3470400,
          5.455; 3474000,5.27833333333333; 3477600,5.17833333333333; 3481200,4.95833333333333;
          3484800,4.56666666666667; 3488400,3.63; 3492000,4.585; 3495600,5.77666666666667;
          3499200,6.815; 3502800,6.47333333333333; 3506400,5.62; 3510000,5.345; 3513600,
          5.18; 3517200,4.49166666666667; 3520800,4.34833333333333; 3524400,4.40333333333333;
          3528000,3.92333333333333; 3531600,2.695; 3535200,1.49833333333333; 3538800,
          0.99; 3542400,1.15; 3546000,1.165; 3549600,1.07166666666667; 3553200,0.805;
          3556800,0.508333333333333; 3560400,1.00833333333333; 3564000,1.44666666666667;
          3567600,1.705; 3571200,2.13333333333333; 3574800,2.84666666666667; 3578400,
          4.04666666666667; 3582000,5.90833333333333; 3585600,7.06166666666667; 3589200,
          8.70166666666667; 3592800,6.53166666666667; 3596400,5.64; 3600000,4.7; 3603600,
          3.30666666666667; 3607200,2.72166666666667; 3610800,2.13333333333333; 3614400,
          1.92166666666667; 3618000,2.07833333333333; 3621600,2.345; 3625200,2.435;
          3628800,2.20333333333333; 3632400,1.76666666666667; 3636000,1.56333333333333;
          3639600,1.96; 3643200,2.215; 3646800,2.415; 3650400,2.755; 3654000,2.86666666666667;
          3657600,3.56; 3661200,3.47666666666667; 3664800,3.12333333333333; 3668400,
          2.62; 3672000,2.93833333333333; 3675600,3.775; 3679200,3.72166666666667;
          3682800,4.45833333333333; 3686400,4.775; 3690000,5.07166666666667; 3693600,
          7.26666666666667; 3697200,8.70333333333333; 3700800,8.44166666666667; 3704400,
          8.47333333333333; 3708000,8.49833333333333; 3711600,8.615; 3715200,7.24;
          3718800,6.72333333333333; 3722400,7.16666666666667; 3726000,5.99333333333333;
          3729600,5.37; 3733200,5.39333333333333; 3736800,4.94666666666667; 3740400,
          5.44166666666667; 3744000,5.565; 3747600,5.34833333333333; 3751200,5.70833333333333;
          3754800,7.935; 3758400,9.14666666666667; 3762000,9.40833333333333; 3765600,
          12.035; 3769200,12.89; 3772800,10.6383333333333; 3776400,12.3766666666667;
          3780000,12.1733333333333; 3783600,12.2166666666667; 3787200,12.4216666666667;
          3790800,12.2533333333333; 3794400,12.0583333333333; 3798000,10.185; 3801600,
          9.79333333333333; 3805200,10.0466666666667; 3808800,8.80333333333333; 3812400,
          8.465; 3816000,8.4; 3819600,8.49333333333333; 3823200,7.75333333333333;
          3826800,8.35166666666667; 3830400,7.65; 3834000,6.75833333333333; 3837600,
          6.44; 3841200,8.17; 3844800,9.05666666666666; 3848400,7.43166666666667;
          3852000,8.695; 3855600,8.63833333333333; 3859200,7.43166666666667; 3862800,
          5.27833333333333; 3866400,3.59833333333333; 3870000,2.55666666666667; 3873600,
          1.68333333333333; 3877200,1.06; 3880800,0.548333333333333; 3884400,0.96;
          3888000,1.04166666666667; 3891600,1.66; 3895200,1.93333333333333; 3898800,
          2.35666666666667; 3902400,2.00166666666667; 3906000,1.93333333333333; 3909600,
          2.75333333333333; 3913200,4.49833333333333; 3916800,5.57; 3920400,5.29;
          3924000,5.34; 3927600,5.20166666666667; 3931200,5.26666666666667; 3934800,
          5.35666666666667; 3938400,5.03666666666667; 3942000,5.30666666666667; 3945600,
          5.26666666666667; 3949200,5.02; 3952800,4.905; 3956400,4.88333333333333;
          3960000,4.87; 3963600,4.65; 3967200,4.815; 3970800,4.95666666666667; 3974400,
          4.92833333333333; 3978000,4.795; 3981600,4.59833333333333; 3985200,4.72333333333333;
          3988800,4.23; 3992400,4.07833333333333; 3996000,4.45666666666667; 3999600,
          4.82; 4003200,5.76666666666667; 4006800,6.74166666666667; 4010400,6.42666666666667;
          4014000,6.08333333333333; 4017600,5.93333333333333; 4021200,5.84666666666667;
          4024800,5.66333333333333; 4028400,5.51333333333333; 4032000,5.28833333333333;
          4035600,5.01333333333333; 4039200,4.91; 4042800,4.82333333333333; 4046400,
          4.68833333333333; 4050000,4.66333333333333; 4053600,4.71; 4057200,4.68166666666667;
          4060800,4.425; 4064400,4.23; 4068000,3.92333333333333; 4071600,3.91; 4075200,
          3.71166666666667; 4078800,3.525; 4082400,3.64833333333333; 4086000,3.5;
          4089600,3.50666666666667; 4093200,3.62666666666667; 4096800,3.93666666666667;
          4100400,4.47666666666667; 4104000,4.72; 4107600,5.125; 4111200,5.45666666666667;
          4114800,5.32333333333333; 4118400,5.22; 4122000,4.73833333333333; 4125600,
          4.69833333333333; 4129200,4.48666666666667; 4132800,3.90166666666667; 4136400,
          3.375; 4140000,3.31666666666667; 4143600,3.24833333333333; 4147200,3.205;
          4150800,2.705; 4154400,1.70833333333333; 4158000,1.19166666666667; 4161600,
          0.773333333333333; 4165200,1.405; 4168800,1.02666666666667; 4172400,0.75;
          4176000,1.90833333333333; 4179600,3.94; 4183200,5.66333333333333; 4186800,
          6.905; 4190400,8.06166666666667; 4194000,9.14666666666667; 4197600,8.62666666666667;
          4201200,7.93833333333333; 4204800,7.53833333333333; 4208400,7.13833333333333;
          4212000,6.66333333333333; 4215600,6.47; 4219200,6.31333333333333; 4222800,
          6.19; 4226400,6.165; 4230000,6.88166666666667; 4233600,6.34833333333333;
          4237200,5.46333333333333; 4240800,4.575; 4244400,3.82666666666667; 4248000,
          3.375; 4251600,3.13833333333333; 4255200,2.57666666666667; 4258800,2.84666666666667;
          4262400,3.50333333333333; 4266000,3.80666666666667; 4269600,4.34666666666667;
          4273200,5.84166666666667; 4276800,6.02166666666667; 4280400,8.17666666666667;
          4284000,6.95; 4287600,5.91; 4291200,5.07; 4294800,3.73833333333333; 4298400,
          2.72666666666667; 4302000,1.49; 4305600,0.331666666666667; 4309200,-0.551666666666667;
          4312800,-0.765; 4316400,-1.15666666666667; 4320000,-1.69833333333333; 4323600,
          -2.075; 4327200,-2.4; 4330800,-2.32666666666667; 4334400,-2.8; 4338000,-1.84833333333333;
          4341600,-1.84333333333333; 4345200,-1.19666666666667; 4348800,1.22833333333333;
          4352400,3.03666666666667; 4356000,4.87166666666667; 4359600,6.03166666666667;
          4363200,7.46; 4366800,8.215; 4370400,8.59333333333333; 4374000,8.64; 4377600,
          8.60833333333333; 4381200,8.55166666666667; 4384800,8.51666666666667; 4388400,
          8.42; 4392000,8.41333333333333; 4395600,7.32333333333333; 4399200,6.10833333333333;
          4402800,5.59333333333333; 4406400,4.50166666666667; 4410000,2.74; 4413600,
          2.13333333333333; 4417200,1.69333333333333; 4420800,1.385; 4424400,1.23666666666667;
          4428000,0.861666666666666; 4431600,1.06; 4435200,4.17833333333333; 4438800,
          8.065; 4442400,12.0483333333333; 4446000,14.125; 4449600,16.3383333333333;
          4453200,15.065; 4456800,14.9883333333333; 4460400,16.38; 4464000,12.6883333333333;
          4467600,9.75; 4471200,8.18833333333333; 4474800,6.875; 4478400,6.15333333333333;
          4482000,5.455; 4485600,5.03666666666667; 4489200,4.60666666666667; 4492800,
          4.90166666666667; 4496400,4.91833333333333; 4500000,3.68333333333333; 4503600,
          3.49333333333333; 4507200,2.80333333333333; 4510800,2.08666666666667; 4514400,
          1.84333333333333; 4518000,3.54333333333333; 4521600,5.91666666666667; 4525200,
          7.40166666666667; 4528800,8.825; 4532400,8.03666666666667; 4536000,8.545;
          4539600,8.94666666666667; 4543200,9.01333333333333; 4546800,9.80333333333333;
          4550400,9.33333333333333; 4554000,8.81833333333333; 4557600,8.705; 4561200,
          8.435; 4564800,8.575; 4568400,8.21; 4572000,8.10833333333333; 4575600,8.00333333333333;
          4579200,7.895; 4582800,7.89333333333333; 4586400,7.79833333333333; 4590000,
          7.79; 4593600,7.60333333333333; 4597200,7.76166666666667; 4600800,7.83833333333333;
          4604400,7.58833333333333; 4608000,7.95666666666667; 4611600,8.27833333333333;
          4615200,8.92; 4618800,9.74166666666667; 4622400,10.0033333333333; 4626000,
          10.0183333333333; 4629600,9.64666666666667; 4633200,9.22666666666667; 4636800,
          8.88333333333333; 4640400,8.60833333333333; 4644000,8.20166666666667; 4647600,
          7.46; 4651200,6.47333333333333; 4654800,6.43833333333333; 4658400,6.17166666666667;
          4662000,6.34666666666667; 4665600,6.30833333333333; 4669200,5.95666666666667;
          4672800,5.87166666666667; 4676400,5.45166666666667; 4680000,5.23166666666667;
          4683600,5.02166666666667; 4687200,4.945; 4690800,5.07166666666667; 4694400,
          5.67333333333333; 4698000,6.2; 4701600,6.65333333333333; 4705200,7.31833333333333;
          4708800,7.83666666666667; 4712400,7.88666666666667; 4716000,8.25666666666667;
          4719600,8.49333333333333; 4723200,7.96; 4726800,7.15666666666667; 4730400,
          6.45666666666667; 4734000,5.98666666666667; 4737600,5.815; 4741200,5.97333333333333;
          4744800,5.655; 4748400,5.605; 4752000,5.19; 4755600,5.13333333333333; 4759200,
          5.095; 4762800,5.16; 4766400,5.605; 4770000,6.03333333333333; 4773600,6.05;
          4777200,6.30833333333333; 4780800,6.98666666666667; 4784400,7.8; 4788000,
          8.22333333333333; 4791600,8.85166666666667; 4795200,8.695; 4798800,8.54833333333333;
          4802400,7.68666666666667; 4806000,7.395; 4809600,6.72166666666667; 4813200,
          6.085; 4816800,5.78333333333333; 4820400,5.36166666666667; 4824000,4.605;
          4827600,4.36333333333333; 4831200,4.295; 4834800,4.255; 4838400,4.35333333333333;
          4842000,4.25166666666667; 4845600,4.14166666666667; 4849200,3.89166666666667;
          4852800,3.77833333333333; 4856400,3.435; 4860000,3.445; 4863600,3.485; 4867200,
          3.55333333333333; 4870800,4.16333333333333; 4874400,5.01333333333333; 4878000,
          6.64333333333333; 4881600,8.54666666666667; 4885200,7.32833333333333; 4888800,
          8.50666666666667; 4892400,7.67833333333333; 4896000,6.45166666666667; 4899600,
          4.59; 4903200,2.93; 4906800,2.13833333333333; 4910400,1.64666666666667;
          4914000,1.04166666666667; 4917600,0.733333333333333; 4921200,0.521666666666667;
          4924800,0.41; 4928400,1.87666666666667; 4932000,2.21666666666667; 4935600,
          2.49333333333333; 4939200,2.88666666666667; 4942800,2.70333333333333; 4946400,
          2.75; 4950000,3.105; 4953600,3.91; 4957200,4.745; 4960800,5.96166666666667;
          4964400,7.13333333333333; 4968000,7.63333333333333; 4971600,7.82166666666667;
          4975200,8.21666666666667; 4978800,8.55333333333333; 4982400,8.48166666666667;
          4986000,8.155; 4989600,7.89166666666667; 4993200,7.78166666666667; 4996800,
          7.14; 5000400,6.78333333333333; 5004000,6.43333333333333; 5007600,6.04;
          5011200,5.77; 5014800,5.34666666666667; 5018400,5.17333333333333; 5022000,
          3.97333333333333; 5025600,4.025; 5029200,3.67666666666667; 5032800,3.315;
          5036400,3.21333333333333; 5040000,4.725; 5043600,6.32666666666667; 5047200,
          8.31333333333333; 5050800,9.34833333333333; 5054400,9.57833333333333; 5058000,
          10.385; 5061600,10.355; 5065200,9.63166666666667; 5068800,8.68; 5072400,
          8.21166666666667; 5076000,7.56333333333333; 5079600,7.28; 5083200,6.79166666666667;
          5086800,7.02; 5090400,7.04166666666667; 5094000,6.37666666666667; 5097600,
          6.17; 5101200,6.15166666666667; 5104800,6.12333333333333; 5108400,6.16;
          5112000,6.1; 5115600,5.95; 5119200,5.87166666666667; 5122800,5.94333333333333;
          5126400,5.75833333333333; 5130000,5.88833333333333; 5133600,6.28333333333333;
          5137200,6.44333333333333; 5140800,6.72333333333333; 5144400,6.675; 5148000,
          6.44666666666667; 5151600,6.54833333333333; 5155200,6.43666666666667; 5158800,
          5.94666666666667; 5162400,5.30833333333333; 5166000,5.54; 5169600,5.75;
          5173200,5.75333333333333; 5176800,5.58; 5180400,5.42333333333333; 5184000,
          5.14166666666667; 5187600,4.90833333333333; 5191200,5.04; 5194800,5.07166666666667;
          5198400,5.085; 5202000,5.11833333333333; 5205600,5.05333333333333; 5209200,
          5.27166666666667; 5212800,5.73666666666667; 5216400,7.07166666666667; 5220000,
          7.655; 5223600,9.09; 5227200,10.2433333333333; 5230800,9.92833333333333;
          5234400,9.81; 5238000,9.34333333333333; 5241600,8.16; 5245200,7.44166666666667;
          5248800,6.73666666666667; 5252400,6.59666666666667; 5256000,6.28; 5259600,
          6.23166666666667; 5263200,5.54333333333333; 5266800,4.59; 5270400,5.07333333333333;
          5274000,5.22; 5277600,4.23833333333333; 5281200,4.28333333333333; 5284800,
          4.89666666666667; 5288400,4.98; 5292000,4.94833333333333; 5295600,5.145;
          5299200,5.89666666666667; 5302800,6.20166666666667; 5306400,6.84666666666667;
          5310000,7.37; 5313600,7.96666666666667; 5317200,8.97; 5320800,8.795; 5324400,
          7.19; 5328000,6.65; 5331600,6.44833333333333; 5335200,7.35666666666667;
          5338800,6.89833333333333; 5342400,6.095; 5346000,4.55666666666667; 5349600,
          3.255; 5353200,2.91333333333333; 5356800,2.89166666666667; 5360400,2.78;
          5364000,2.90333333333333; 5367600,1.96666666666667; 5371200,1.29; 5374800,
          1.23; 5378400,1.25666666666667; 5382000,1.61666666666667; 5385600,1.85;
          5389200,2.83166666666667; 5392800,4.20666666666667; 5396400,6.045; 5400000,
          7.48666666666667; 5403600,5.365; 5407200,4.42333333333333; 5410800,3.935;
          5414400,3.48; 5418000,3.11166666666667; 5421600,3.29333333333333; 5425200,
          3.38833333333333; 5428800,3.04166666666667; 5432400,2.8; 5436000,2.15; 5439600,
          1.37833333333333; 5443200,1.22333333333333; 5446800,1.905; 5450400,1.87333333333333;
          5454000,1.19333333333333; 5457600,1.25; 5461200,1.83; 5464800,2.68666666666667;
          5468400,3.03166666666667; 5472000,3.70666666666667; 5475600,4.3; 5479200,
          3.54833333333333; 5482800,4.30833333333333; 5486400,5.73833333333333; 5490000,
          6.14333333333333; 5493600,6.03333333333333; 5497200,5.69833333333333; 5500800,
          6.25; 5504400,7.17166666666667; 5508000,7.83333333333333; 5511600,8.21333333333333;
          5515200,7.13166666666667; 5518800,5.66166666666667; 5522400,5.24833333333333;
          5526000,5.35666666666667; 5529600,4.945; 5533200,3.65833333333333; 5536800,
          2.51666666666667; 5540400,2.45; 5544000,2.56; 5547600,2.21833333333333;
          5551200,2.14; 5554800,2.26666666666667; 5558400,2.465; 5562000,3.04333333333333;
          5565600,3.83333333333333; 5569200,5.84; 5572800,8.70333333333333; 5576400,
          9.07833333333333; 5580000,7.41666666666667; 5583600,7.455; 5587200,7.04;
          5590800,4.28666666666667; 5594400,4.365; 5598000,5.73333333333333; 5601600,
          4.905; 5605200,3.96333333333333; 5608800,3.545; 5612400,3.50166666666667;
          5616000,3.39; 5619600,3.15166666666667; 5623200,2.77333333333333; 5626800,
          1.15166666666667; 5630400,0.565; 5634000,-0.405; 5637600,-0.345; 5641200,
          0.623333333333333; 5644800,2.15; 5648400,3.55833333333333; 5652000,5.21333333333333;
          5655600,6.09666666666667; 5659200,5.42666666666667; 5662800,5.27333333333333;
          5666400,5.67; 5670000,5.95666666666667; 5673600,4.56166666666667; 5677200,
          3.5; 5680800,2.02833333333333; 5684400,1.46333333333333; 5688000,1.185;
          5691600,0.923333333333333; 5695200,0.0766666666666667; 5698800,0.0466666666666667;
          5702400,-0.953333333333333; 5706000,-0.896666666666667; 5709600,-0.51; 5713200,
          -0.07; 5716800,-0.015; 5720400,0.00333333333333333; 5724000,0.456666666666667;
          5727600,1.33833333333333; 5731200,2.24833333333333; 5734800,3.795; 5738400,
          5.81333333333333; 5742000,6.41833333333333; 5745600,7.56; 5749200,8.09166666666667;
          5752800,8.85; 5756400,8.235; 5760000,6.92; 5763600,4.435; 5767200,1.91333333333333;
          5770800,1.95; 5774400,1.90166666666667; 5778000,1.97666666666667; 5781600,
          1.99333333333333; 5785200,1.62166666666667; 5788800,1.33833333333333; 5792400,
          0.496666666666667; 5796000,0.481666666666667; 5799600,0.335; 5803200,0.36;
          5806800,0.406666666666667; 5810400,0.653333333333333; 5814000,1.25666666666667;
          5817600,1.93; 5821200,3.30666666666667; 5824800,4.3; 5828400,5.62666666666667;
          5832000,5.43166666666667; 5835600,3.34833333333333; 5839200,3.27333333333333;
          5842800,4.00666666666667; 5846400,4.32666666666667; 5850000,3.625; 5853600,
          3.54666666666667; 5857200,3.69333333333333; 5860800,3.41666666666667; 5864400,
          3.11833333333333; 5868000,2.56166666666667; 5871600,1.04; 5875200,-0.553333333333333;
          5878800,-1.55833333333333; 5882400,-2.09166666666667; 5886000,-2.65333333333333;
          5889600,-3.19333333333333; 5893200,-3.26833333333333; 5896800,-3.43666666666667;
          5900400,-1.92166666666667; 5904000,1.23833333333333; 5907600,3.295; 5911200,
          5.44; 5914800,6.99; 5918400,7.75833333333333; 5922000,9.00166666666667;
          5925600,9.21833333333333; 5929200,8.81666666666667; 5932800,7.915; 5936400,
          6.94666666666667; 5940000,6.30333333333333; 5943600,5.47333333333333; 5947200,
          4.38; 5950800,3.64333333333333; 5954400,2.96666666666667; 5958000,2.19;
          5961600,1.86166666666667; 5965200,0.873333333333333; 5968800,0.146666666666667;
          5972400,-0.691666666666667; 5976000,-1.38833333333333; 5979600,-1.49333333333333;
          5983200,-1.64333333333333; 5986800,-0.173333333333333; 5990400,3.22666666666667;
          5994000,6.365; 5997600,8.75833333333333; 6001200,10.6833333333333; 6004800,
          12.0166666666667; 6008400,12.61; 6012000,13.0733333333333; 6015600,12.8866666666667;
          6019200,10.6816666666667; 6022800,9.24833333333333; 6026400,8.62666666666667;
          6030000,7.05; 6033600,5.92; 6037200,5.785; 6040800,3.34833333333333; 6044400,
          1.76; 6048000,1.14333333333333; 6051600,0.0866666666666667; 6055200,-0.395;
          6058800,-0.593333333333333; 6062400,-0.976666666666667; 6066000,-1.36; 6069600,
          -1.00666666666667; 6073200,2.04666666666667; 6076800,5.39; 6080400,6.79333333333333;
          6084000,7.84666666666667; 6087600,9.43833333333333; 6091200,11.2566666666667;
          6094800,12.01; 6098400,11.7383333333333; 6102000,11.19; 6105600,10.2283333333333;
          6109200,9.07333333333333; 6112800,8.47333333333333; 6116400,7.37833333333333;
          6120000,6.32166666666667; 6123600,5.02666666666667; 6127200,3.385; 6130800,
          1.86666666666667; 6134400,0.958333333333333; 6138000,1.52833333333333; 6141600,
          1.69833333333333; 6145200,1.57333333333333; 6148800,2.32; 6152400,2.845;
          6156000,2.78333333333333; 6159600,3.625; 6163200,4.16833333333333; 6166800,
          5.645; 6170400,7.78166666666667; 6174000,9.30666666666667; 6177600,10.76;
          6181200,10.27; 6184800,10.1066666666667; 6188400,9.31; 6192000,8.25; 6195600,
          7.29166666666667; 6199200,6.905; 6202800,7.265; 6206400,6.56333333333333;
          6210000,6.055; 6213600,6.49333333333333; 6217200,6.88166666666667; 6220800,
          6.895; 6224400,6.86166666666667; 6228000,6.36666666666667; 6231600,6.02833333333333;
          6235200,5.96666666666667; 6238800,5.70833333333333; 6242400,5.65166666666667;
          6246000,5.75833333333333; 6249600,5.94; 6253200,6.21333333333333; 6256800,
          7.87166666666667; 6260400,9.47166666666667; 6264000,11.5916666666667; 6267600,
          11.9666666666667; 6271200,12.4983333333333; 6274800,11.32; 6278400,9.20166666666667;
          6282000,8.30666666666667; 6285600,7.53; 6289200,6.94333333333333; 6292800,
          6.58666666666667; 6296400,6.205; 6300000,5.82166666666667; 6303600,5.11333333333333;
          6307200,4.645; 6310800,4.12666666666667; 6314400,3.68166666666667; 6318000,
          1.705; 6321600,1.01666666666667; 6325200,1.69666666666667; 6328800,2.25166666666667;
          6332400,3.83166666666667; 6336000,6.25166666666667; 6339600,7.825; 6343200,
          9.86833333333333; 6346800,11.7016666666667; 6350400,12.77; 6354000,13.645;
          6357600,13.8016666666667; 6361200,13.9766666666667; 6364800,11.9133333333333;
          6368400,9.66833333333333; 6372000,8.50166666666667; 6375600,7.65333333333333;
          6379200,6.88833333333333; 6382800,6.07666666666667; 6386400,5.345; 6390000,
          4.85333333333333; 6393600,4.105; 6397200,3.16666666666667; 6400800,1.87666666666667;
          6404400,0.461666666666667; 6408000,-0.39; 6411600,-0.92; 6415200,-1.29;
          6418800,0.981666666666667; 6422400,4.465; 6426000,7.085; 6429600,9.80833333333333;
          6433200,11.485; 6436800,13.6066666666667; 6440400,14.0033333333333; 6444000,
          14.0133333333333; 6447600,13.2416666666667; 6451200,12.5833333333333; 6454800,
          11.4666666666667; 6458400,11.1783333333333; 6462000,8.88166666666667; 6465600,
          7.24833333333333; 6469200,6.30833333333333; 6472800,6.285; 6476400,6.15;
          6480000,5.70833333333333; 6483600,5.285; 6487200,4.955; 6490800,4.75166666666667;
          6494400,4.54333333333333; 6498000,3.76333333333333; 6501600,2.75833333333333;
          6505200,2.87666666666667; 6508800,2.69166666666667; 6512400,3.28333333333333;
          6516000,4.165; 6519600,4.48; 6523200,4.87833333333333; 6526800,5.65333333333333;
          6530400,6.27833333333333; 6534000,6.815; 6537600,6.525; 6541200,5.96166666666667;
          6544800,5.445; 6548400,5.41166666666667; 6552000,4.885; 6555600,3.76833333333333;
          6559200,1.49166666666667; 6562800,0.281666666666667; 6566400,-0.43; 6570000,
          -0.965; 6573600,-1.19166666666667; 6577200,-1.36666666666667; 6580800,-1.73166666666667;
          6584400,-1.39666666666667; 6588000,-1.045; 6591600,0.808333333333333; 6595200,
          3.76; 6598800,6.10333333333333; 6602400,7.65; 6606000,9.16333333333333;
          6609600,10.6916666666667; 6613200,13.8266666666667; 6616800,14.3933333333333;
          6620400,14.6; 6624000,12.6733333333333; 6627600,10.455; 6631200,7.63166666666667;
          6634800,5.40833333333333; 6638400,4.035; 6642000,3.1; 6645600,2.48166666666667;
          6649200,1.84166666666667; 6652800,1.36; 6656400,0.59; 6660000,0.143333333333333;
          6663600,-0.403333333333333; 6667200,-0.965; 6670800,-1.015; 6674400,-0.851666666666667;
          6678000,1.33666666666667; 6681600,4.49833333333333; 6685200,7.585; 6688800,
          10.8433333333333; 6692400,13.4; 6696000,15.725; 6699600,16.7983333333333;
          6703200,17.2466666666667; 6706800,16.4583333333333; 6710400,14.515; 6714000,
          10.935; 6717600,8.22666666666667; 6721200,6.18666666666667; 6724800,5.13666666666667;
          6728400,4.08166666666667; 6732000,3.3; 6735600,2.53333333333333; 6739200,
          1.99; 6742800,1.245; 6746400,0.6; 6750000,0.246666666666667; 6753600,-0.13;
          6757200,-0.583333333333333; 6760800,-0.686666666666667; 6764400,1.98833333333333;
          6768000,5.455; 6771600,8.85333333333333; 6775200,12.165; 6778800,14.3516666666667;
          6782400,16.235; 6786000,17.37; 6789600,18.3833333333333; 6793200,18.4466666666667;
          6796800,16.335; 6800400,11.5133333333333; 6804000,8.755; 6807600,7.06333333333333;
          6811200,5.565; 6814800,4.61166666666667; 6818400,3.70333333333333; 6822000,
          2.89; 6825600,2.21333333333333; 6829200,1.63333333333333; 6832800,1.005;
          6836400,0.603333333333333; 6840000,-0.045; 6843600,-0.28; 6847200,-0.116666666666667;
          6850800,2.73666666666667; 6854400,6.29666666666667; 6858000,8.765; 6861600,
          10.6433333333333; 6865200,10.755; 6868800,11.7716666666667; 6872400,12.1516666666667;
          6876000,13.9616666666667; 6879600,14.0783333333333; 6883200,13.3416666666667;
          6886800,11.4766666666667; 6890400,10.1283333333333; 6894000,9.46166666666667;
          6897600,8.79833333333333; 6901200,8.055; 6904800,7.58333333333333; 6908400,
          7.90333333333333; 6912000,7.33833333333333; 6915600,7.61666666666667; 6919200,
          6.92333333333333; 6922800,5.61333333333333; 6926400,3.94333333333333; 6930000,
          3.04; 6933600,3.20166666666667; 6937200,5.64166666666667; 6940800,7.55333333333333;
          6944400,8.74166666666667; 6948000,10.2116666666667; 6951600,11.535; 6955200,
          12.0833333333333; 6958800,12.355; 6962400,12.4633333333333; 6966000,11.795;
          6969600,11.3766666666667; 6973200,10.3333333333333; 6976800,8.27333333333333;
          6980400,7.52; 6984000,7.16; 6987600,7.91166666666667; 6991200,7.76; 6994800,
          6.79; 6998400,6.11333333333333; 7002000,6.31666666666667; 7005600,5.95333333333333;
          7009200,5.115; 7012800,5.20166666666667; 7016400,5.91833333333333; 7020000,
          6.03; 7023600,6.56; 7027200,7.54833333333333; 7030800,8.275; 7034400,8.98333333333333;
          7038000,11.045; 7041600,12.2633333333333; 7045200,13.325; 7048800,13.9466666666667;
          7052400,13.9866666666667; 7056000,12.8266666666667; 7059600,11.2216666666667;
          7063200,10.71; 7066800,10.3583333333333; 7070400,9.565; 7074000,8.99833333333333;
          7077600,8.335; 7081200,7.89333333333333; 7084800,7.12833333333333; 7088400,
          6.76666666666667; 7092000,6.62333333333333; 7095600,6.01333333333333; 7099200,
          5.81333333333333; 7102800,5.63833333333333; 7106400,5.875; 7110000,6.81333333333333;
          7113600,8.65166666666667; 7117200,10.78; 7120800,12.185; 7124400,11.7533333333333;
          7128000,12.925; 7131600,12.6333333333333; 7135200,12.685; 7138800,11.72;
          7142400,11.2866666666667; 7146000,10.1483333333333; 7149600,9.74833333333333;
          7153200,9.59833333333333; 7156800,9.375; 7160400,9.02666666666667; 7164000,
          8.90666666666667; 7167600,8.53166666666667; 7171200,8.09833333333333; 7174800,
          7.48; 7178400,7.165; 7182000,6.965; 7185600,6.055; 7189200,5.31333333333333;
          7192800,5.57833333333333; 7196400,7.68833333333333; 7200000,8.56333333333333;
          7203600,10.3166666666667; 7207200,12.4583333333333; 7210800,14.0083333333333;
          7214400,14.1883333333333; 7218000,15.0416666666667; 7221600,15.8416666666667;
          7225200,15.4166666666667; 7228800,14.1333333333333; 7232400,11.98; 7236000,
          10.06; 7239600,8.40833333333333; 7243200,6.67166666666667; 7246800,4.995;
          7250400,4.27666666666667; 7254000,3.535; 7257600,3.57833333333333; 7261200,
          3.43; 7264800,3.875; 7268400,4.17166666666667; 7272000,4.69166666666667;
          7275600,4.61833333333333; 7279200,4.97333333333333; 7282800,6.235; 7286400,
          8.095; 7290000,9.56166666666667; 7293600,9.48166666666667; 7297200,9.88666666666667;
          7300800,9.155; 7304400,9.46333333333333; 7308000,9.565; 7311600,10.1183333333333;
          7315200,9.35166666666667; 7318800,8.62666666666667; 7322400,7.83666666666667;
          7326000,7.87333333333333; 7329600,7.75333333333333; 7333200,7.62; 7336800,
          7.27; 7340400,6.72666666666667; 7344000,6.64333333333333; 7347600,5.16333333333333;
          7351200,4.155; 7354800,3.035; 7358400,2.35166666666667; 7362000,1.64333333333333;
          7365600,1.85; 7369200,4.54666666666667; 7372800,7.585; 7376400,10.3316666666667;
          7380000,12.8316666666667; 7383600,15.4116666666667; 7387200,16.81; 7390800,
          16.7633333333333; 7394400,18.6133333333333; 7398000,18.475; 7401600,16.715;
          7405200,13.1783333333333; 7408800,10.4416666666667; 7412400,8.77666666666667;
          7416000,7.70166666666667; 7419600,8.09333333333333; 7423200,9.98833333333333;
          7426800,10.3383333333333; 7430400,9.30166666666667; 7434000,7.435; 7437600,
          5.83166666666667; 7441200,5.95166666666667; 7444800,6.09333333333333; 7448400,
          8.15333333333333; 7452000,9.25666666666667; 7455600,8.34166666666667; 7459200,
          8.71833333333333; 7462800,9.115; 7466400,8.92; 7470000,8.71; 7473600,9.01166666666667;
          7477200,9.53; 7480800,9.71666666666667; 7484400,10.5583333333333; 7488000,
          10.8516666666667; 7491600,8.81333333333333; 7495200,6.23333333333333; 7498800,
          4.79833333333333; 7502400,4.05333333333333; 7506000,3.455; 7509600,3.50166666666667;
          7513200,5.37; 7516800,5.81; 7520400,5.795; 7524000,5.335; 7527600,5.75;
          7531200,6.17; 7534800,5.87; 7538400,6.89833333333333; 7542000,7.38666666666667;
          7545600,7.82333333333333; 7549200,7.89166666666667; 7552800,8.32166666666667;
          7556400,9.07; 7560000,9.82666666666667; 7563600,10.7816666666667; 7567200,
          11.0483333333333; 7570800,11.5233333333333; 7574400,11.705; 7578000,11.5683333333333;
          7581600,11.3016666666667; 7585200,10.535; 7588800,9.92333333333333; 7592400,
          9.69166666666667; 7596000,10.0583333333333; 7599600,10.035; 7603200,10.035;
          7606800,9.83166666666667; 7610400,9.505; 7614000,9.45666666666667; 7617600,
          9.27333333333333; 7621200,9.55666666666667; 7624800,9.39333333333333; 7628400,
          10.2016666666667; 7632000,11.5816666666667; 7635600,13.5816666666667; 7639200,
          15.7816666666667; 7642800,17.1; 7646400,16.0933333333333; 7650000,16.5016666666667;
          7653600,15.2316666666667; 7657200,13.265; 7660800,12.5316666666667; 7664400,
          11.7966666666667; 7668000,11.55; 7671600,11.17; 7675200,10.7483333333333;
          7678800,10.2366666666667; 7682400,10.6266666666667; 7686000,10.825; 7689600,
          10.905; 7693200,10.905; 7696800,10.8366666666667; 7700400,10.7116666666667;
          7704000,10.8483333333333; 7707600,10.9483333333333; 7711200,11.1216666666667;
          7714800,11.7533333333333; 7718400,12.82; 7722000,14.345; 7725600,16.25;
          7729200,17.755; 7732800,17.8416666666667; 7736400,18.9433333333333; 7740000,
          20.655; 7743600,21.4216666666667; 7747200,20.2016666666667; 7750800,18.7083333333333;
          7754400,17.43; 7758000,16.6033333333333; 7761600,13.8333333333333; 7765200,
          12.89; 7768800,10.9816666666667; 7772400,9.77666666666667; 7776000,9.32;
          7779600,8.72333333333333; 7783200,8.395; 7786800,8.33666666666667; 7790400,
          7.76; 7794000,7.53833333333333; 7797600,8.21666666666667; 7801200,9.465;
          7804800,10.91; 7808400,12.5233333333333; 7812000,13.8433333333333; 7815600,
          14.6466666666667; 7819200,16.8983333333333; 7822800,16.9583333333333; 7826400,
          16.3016666666667; 7830000,16.3816666666667; 7833600,15.2833333333333; 7837200,
          14.9166666666667; 7840800,13.7566666666667; 7844400,13.1866666666667; 7848000,
          13.3016666666667; 7851600,15.3966666666667; 7855200,16.8566666666667; 7858800,
          15.5966666666667; 7862400,12.9216666666667; 7866000,11.94; 7869600,10.7816666666667;
          7873200,9.85; 7876800,9.155; 7880400,8.74666666666667; 7884000,8.91; 7887600,
          9.12666666666667; 7891200,8.86166666666667; 7894800,9.78833333333333; 7898400,
          10.3283333333333; 7902000,10.8533333333333; 7905600,10.8983333333333; 7909200,
          10.9633333333333; 7912800,11.3433333333333; 7916400,10.935; 7920000,10.105;
          7923600,9.35; 7927200,8.52; 7930800,8.37166666666667; 7934400,8.21666666666667;
          7938000,8.12166666666667; 7941600,8.06; 7945200,7.81666666666667; 7948800,
          7.73666666666667; 7952400,7.49666666666667; 7956000,7.06166666666667; 7959600,
          6.89666666666667; 7963200,7.26833333333333; 7966800,7.59666666666667; 7970400,
          8.38666666666666; 7974000,8.60666666666667; 7977600,8.63833333333333; 7981200,
          10.4466666666667; 7984800,13.285; 7988400,15.405; 7992000,16.675; 7995600,
          17.4033333333333; 7999200,18.6683333333333; 8002800,19.6416666666667; 8006400,
          18.4033333333333; 8010000,16.5233333333333; 8013600,13.9383333333333; 8017200,
          12.4316666666667; 8020800,11.865; 8024400,10.9066666666667; 8028000,10.9066666666667;
          8031600,10.68; 8035200,9.61666666666667; 8038800,8.93666666666667; 8042400,
          8.52166666666667; 8046000,8.72833333333333; 8049600,9.01; 8053200,8.98833333333333;
          8056800,9.39; 8060400,10.6583333333333; 8064000,11.8433333333333; 8067600,
          13.3566666666667; 8071200,13.4566666666667; 8074800,13.6083333333333; 8078400,
          14.8; 8082000,13.8; 8085600,14.925; 8089200,14.46; 8092800,13.86; 8096400,
          13.6316666666667; 8100000,12.7066666666667; 8103600,12.1683333333333; 8107200,
          11.9366666666667; 8110800,11.3366666666667; 8114400,9.57833333333333; 8118000,
          8.57166666666667; 8121600,7.62666666666667; 8125200,7.37166666666667; 8128800,
          7.16166666666667; 8132400,7.21666666666667; 8136000,7.43; 8139600,7.50833333333333;
          8143200,9.3; 8146800,10.0916666666667; 8150400,11.3133333333333; 8154000,
          12.0466666666667; 8157600,12.32; 8161200,12.5583333333333; 8164800,12.3433333333333;
          8168400,12.8383333333333; 8172000,14.445; 8175600,14.9683333333333; 8179200,
          13.5533333333333; 8182800,11.9816666666667; 8186400,10.4766666666667; 8190000,
          9.055; 8193600,9.23; 8197200,9.73; 8200800,9.67166666666667; 8204400,9.38166666666667;
          8208000,9.26166666666667; 8211600,9.32166666666667; 8215200,9.18666666666667;
          8218800,9.18666666666667; 8222400,9.135; 8226000,9.42833333333333; 8229600,
          10.03; 8233200,10.1933333333333; 8236800,10.6416666666667; 8240400,11.525;
          8244000,12.295; 8247600,11.1816666666667; 8251200,11.645; 8254800,12.41;
          8258400,12.0583333333333; 8262000,12.115; 8265600,12.2266666666667; 8269200,
          12.0166666666667; 8272800,11.6316666666667; 8276400,11.315; 8280000,11.49;
          8283600,11.1233333333333; 8287200,10.7; 8290800,10.49; 8294400,10.3616666666667;
          8298000,10.1133333333333; 8301600,9.97833333333333; 8305200,9.575; 8308800,
          9.485; 8312400,9.39833333333333; 8316000,9.725; 8319600,10.0766666666667;
          8323200,11.25; 8326800,12.72; 8330400,14.9366666666667; 8334000,16.9633333333333;
          8337600,16.665; 8341200,16.3466666666667; 8344800,16.9016666666667; 8348400,
          17.5616666666667; 8352000,15.5916666666667; 8355600,13.4716666666667; 8359200,
          11.41; 8362800,9.81833333333333; 8366400,9.165; 8370000,8.95166666666667;
          8373600,8.40333333333333; 8377200,7.66166666666667; 8380800,6.73333333333333;
          8384400,6.295; 8388000,6.35333333333333; 8391600,5.55166666666667; 8395200,
          5.27666666666667; 8398800,5.89333333333333; 8402400,7.29166666666667; 8406000,
          9.37333333333333; 8409600,11.3466666666667; 8413200,11.0216666666667; 8416800,
          12.4266666666667; 8420400,12.8683333333333; 8424000,13.2416666666667; 8427600,
          13.775; 8431200,11.8366666666667; 8434800,11.1983333333333; 8438400,11.455;
          8442000,11.1983333333333; 8445600,10.3483333333333; 8449200,8.83333333333333;
          8452800,8.46666666666667; 8456400,6.38333333333333; 8460000,5.455; 8463600,
          3.43; 8467200,2.6; 8470800,3.27833333333333; 8474400,1.855; 8478000,2.15166666666667;
          8481600,3.66166666666667; 8485200,5.98; 8488800,6.73333333333333; 8492400,
          7.165; 8496000,7.78666666666667; 8499600,8.74; 8503200,9.16833333333333;
          8506800,9.07833333333333; 8510400,8.965; 8514000,9.18; 8517600,8.72; 8521200,
          8.32166666666667; 8524800,7.63333333333333; 8528400,7.51833333333333; 8532000,
          7.53833333333333; 8535600,6.90666666666667; 8539200,6.49; 8542800,6.70166666666667;
          8546400,6.93; 8550000,7.05; 8553600,7.24833333333333; 8557200,7.085; 8560800,
          7.38833333333333; 8564400,7.34333333333333; 8568000,7.44833333333333; 8571600,
          7.30666666666667; 8575200,7.33666666666667; 8578800,7.86833333333333; 8582400,
          8.665; 8586000,8.805; 8589600,9.17333333333333; 8593200,9.67833333333333;
          8596800,10.8483333333333; 8600400,11.785; 8604000,10.6833333333333; 8607600,
          10.7866666666667; 8611200,11.3783333333333; 8614800,10.5466666666667; 8618400,
          8.72; 8622000,5.955; 8625600,4.55166666666667; 8629200,3.43333333333333;
          8632800,2.95666666666667; 8636400,2.355; 8640000,1.91833333333333; 8643600,
          1.34833333333333; 8647200,1.24333333333333; 8650800,0.831666666666667; 8654400,
          0.616666666666667; 8658000,0.738333333333333; 8661600,2.50833333333333;
          8665200,6.26166666666667; 8668800,8.605; 8672400,10.4066666666667; 8676000,
          12.3416666666667; 8679600,14.1; 8683200,16.1416666666667; 8686800,18.57;
          8690400,18.1233333333333; 8694000,18.5233333333333; 8697600,19.27; 8701200,
          15.09; 8704800,12.2333333333333; 8708400,10.24; 8712000,8.86833333333333;
          8715600,7.85; 8719200,6.91333333333333; 8722800,6.31166666666667; 8726400,
          5.77666666666667; 8730000,5.04333333333333; 8733600,4.62; 8737200,4.585;
          8740800,4.00333333333333; 8744400,3.52833333333333; 8748000,7.11333333333333;
          8751600,9.90333333333333; 8755200,13.3233333333333; 8758800,15.425; 8762400,
          14.7033333333333; 8766000,17.2166666666667; 8769600,17.6433333333333; 8773200,
          18.8283333333333; 8776800,21.465; 8780400,21.2316666666667; 8784000,19.755;
          8787600,17.79; 8791200,16.6466666666667; 8794800,14.845; 8798400,13.21;
          8802000,12.185; 8805600,12.0866666666667; 8809200,12.1616666666667; 8812800,
          10.595; 8816400,8.43166666666667; 8820000,7.33333333333333; 8823600,7.175;
          8827200,6.85833333333333; 8830800,6.36; 8834400,8.435; 8838000,12.3033333333333;
          8841600,13.0316666666667; 8845200,14.8316666666667; 8848800,17.2866666666667;
          8852400,18.595; 8856000,21.3316666666667; 8859600,21.6666666666667; 8863200,
          22; 8866800,21.5383333333333; 8870400,19.6533333333333; 8874000,18.1916666666667;
          8877600,16.4233333333333; 8881200,16.0516666666667; 8884800,14.9766666666667;
          8888400,13.8066666666667; 8892000,12.0016666666667; 8895600,11.04; 8899200,
          10.0933333333333; 8902800,9.34; 8906400,8.24; 8910000,7.99; 8913600,9.06333333333333;
          8917200,9.70166666666667; 8920800,10.2583333333333; 8924400,10.74; 8928000,
          10.825; 8931600,10.5233333333333; 8935200,10.72; 8938800,11.9033333333333;
          8942400,12.3683333333333; 8946000,15.02; 8949600,14.19; 8953200,14.455;
          8956800,11.9933333333333; 8960400,9.18666666666667; 8964000,9.115; 8967600,
          9.84166666666667; 8971200,10.0533333333333; 8974800,9.605; 8978400,8.95666666666667;
          8982000,8.56833333333333; 8985600,8.70833333333333; 8989200,8.48166666666667;
          8992800,7.57166666666667; 8996400,7.54666666666667; 9000000,7.86166666666667;
          9003600,7.49; 9007200,9.38333333333333; 9010800,11.2683333333333; 9014400,
          12.0316666666667; 9018000,13.9966666666667; 9021600,15.9316666666667; 9025200,
          15.77; 9028800,17.25; 9032400,17.7783333333333; 9036000,18.875; 9039600,
          18.4916666666667; 9043200,19.7933333333333; 9046800,16.0966666666667; 9050400,
          14.5183333333333; 9054000,12.995; 9057600,11.3383333333333; 9061200,9.94166666666667;
          9064800,8.72333333333333; 9068400,8.77666666666667; 9072000,9.275; 9075600,
          10.0916666666667; 9079200,10.3616666666667; 9082800,9.84833333333333; 9086400,
          9.81; 9090000,10.55; 9093600,11.7916666666667; 9097200,12.8216666666667;
          9100800,12.6066666666667; 9104400,14.0016666666667; 9108000,15.9416666666667;
          9111600,17.455; 9115200,17.5066666666667; 9118800,18.3916666666667; 9122400,
          18.785; 9126000,17.455; 9129600,20.245; 9133200,17.2466666666667; 9136800,
          14.8866666666667; 9140400,14.0633333333333; 9144000,14.8683333333333; 9147600,
          12.9233333333333; 9151200,11.675; 9154800,11.4483333333333; 9158400,11.0733333333333;
          9162000,15.495; 9165600,16.5316666666667; 9169200,14.86; 9172800,14.0616666666667;
          9176400,13.975; 9180000,14.1333333333333; 9183600,13.9966666666667; 9187200,
          15.5083333333333; 9190800,18.2733333333333; 9194400,17.6966666666667; 9198000,
          20.6333333333333; 9201600,23.105; 9205200,22.0016666666667; 9208800,21.5216666666667;
          9212400,22.71; 9216000,20.4616666666667; 9219600,18.8266666666667; 9223200,
          18.4083333333333; 9226800,19.185; 9230400,19.2583333333333; 9234000,19.1116666666667;
          9237600,15.9683333333333; 9241200,13.91; 9244800,13.0966666666667; 9248400,
          12.6466666666667; 9252000,12.2666666666667; 9255600,11.995; 9259200,12.2616666666667;
          9262800,12.34; 9266400,12.65; 9270000,13.4766666666667; 9273600,14.1783333333333;
          9277200,13.19; 9280800,12.7366666666667; 9284400,12.0666666666667; 9288000,
          13.28; 9291600,13.9316666666667; 9295200,12.2066666666667; 9298800,12.0133333333333;
          9302400,11.3916666666667; 9306000,10.6733333333333; 9309600,9.91666666666667;
          9313200,9.345; 9316800,9.29333333333333; 9320400,9.21833333333333; 9324000,
          9.22833333333333; 9327600,8.96666666666667; 9331200,8.78833333333333; 9334800,
          8.51; 9338400,8.285; 9342000,8.04333333333333; 9345600,7.65; 9349200,7.40333333333333;
          9352800,7.87166666666667; 9356400,8.135; 9360000,8.45666666666667; 9363600,
          8.695; 9367200,8.595; 9370800,9.23666666666667; 9374400,10.4983333333333;
          9378000,9.105; 9381600,7.86333333333333; 9385200,6.65; 9388800,6.64666666666667;
          9392400,6.92; 9396000,6.26166666666667; 9399600,5.575; 9403200,5.445; 9406800,
          5.61166666666667; 9410400,5.95833333333333; 9414000,5.885; 9417600,5.87333333333333;
          9421200,6.52166666666667; 9424800,6.56666666666667; 9428400,6.515; 9432000,
          6.33; 9435600,6.37; 9439200,8.08333333333333; 9442800,9.14; 9446400,10.2383333333333;
          9450000,11.595; 9453600,13.485; 9457200,15.23; 9460800,16.2883333333333;
          9464400,17.37; 9468000,18.3583333333333; 9471600,18.415; 9475200,18.4033333333333;
          9478800,15.155; 9482400,13.0866666666667; 9486000,11.2616666666667; 9489600,
          10.6916666666667; 9493200,11.43; 9496800,11.0616666666667; 9500400,10.6983333333333;
          9504000,10.375; 9507600,8.39833333333334; 9511200,6.33666666666667; 9514800,
          5.37166666666667; 9518400,4.86333333333333; 9522000,4.655; 9525600,10.2683333333333;
          9529200,12.0916666666667; 9532800,13.545; 9536400,14.735; 9540000,16.935;
          9543600,18.375; 9547200,19.2983333333333; 9550800,20.46; 9554400,19.54;
          9558000,20.575; 9561600,18.7366666666667; 9565200,17.365; 9568800,16.3983333333333;
          9572400,15.1466666666667; 9576000,14.3083333333333; 9579600,13.5483333333333;
          9583200,11.0533333333333; 9586800,9.96; 9590400,10.0966666666667; 9594000,
          9.89666666666667; 9597600,9.975; 9601200,9.24666666666667; 9604800,8.44833333333333;
          9608400,8.56333333333333; 9612000,12.4883333333333; 9615600,13.7933333333333;
          9619200,15.9416666666667; 9622800,17.9933333333333; 9626400,19.0566666666667;
          9630000,19.8833333333333; 9633600,20.735; 9637200,20.1366666666667; 9640800,
          18.86; 9644400,18.57; 9648000,19.5233333333333; 9651600,18.705; 9655200,
          17.1066666666667; 9658800,16.4583333333333; 9662400,15.9166666666667; 9666000,
          15.2683333333333; 9669600,13.7283333333333; 9673200,12.1633333333333; 9676800,
          11.8883333333333; 9680400,11.7066666666667; 9684000,11.5566666666667; 9687600,
          11.5266666666667; 9691200,11.475; 9694800,11.5; 9698400,11.9133333333333;
          9702000,12.3366666666667; 9705600,12.45; 9709200,12.48; 9712800,13.8216666666667;
          9716400,16.0366666666667; 9720000,17.0633333333333; 9723600,16.63; 9727200,
          17.0433333333333; 9730800,17.2566666666667; 9734400,17.4083333333333; 9738000,
          17.0316666666667; 9741600,14.875; 9745200,13.3083333333333; 9748800,12.8816666666667;
          9752400,12.8116666666667; 9756000,13.2433333333333; 9759600,12.3466666666667;
          9763200,11.9533333333333; 9766800,11.58; 9770400,11.5366666666667; 9774000,
          11.4; 9777600,11.29; 9781200,11.3733333333333; 9784800,11.5416666666667;
          9788400,11.9216666666667; 9792000,12.38; 9795600,12.315; 9799200,12.38;
          9802800,12.1833333333333; 9806400,12.0366666666667; 9810000,12.125; 9813600,
          11.8616666666667; 9817200,11.3533333333333; 9820800,11.2216666666667; 9824400,
          10.835; 9828000,10.355; 9831600,10.455; 9835200,10.1416666666667; 9838800,
          10.1; 9842400,9.66333333333333; 9846000,9.27333333333333; 9849600,8.74166666666667;
          9853200,8.53166666666667; 9856800,8.24; 9860400,7.80666666666667; 9864000,
          7.345; 9867600,7.14333333333333; 9871200,7.225; 9874800,8.27166666666667;
          9878400,9.90333333333333; 9882000,9.71; 9885600,10.3066666666667; 9889200,
          10.12; 9892800,10.8233333333333; 9896400,10.1716666666667; 9900000,9.50666666666667;
          9903600,9.72666666666667; 9907200,9.50166666666667; 9910800,8.69333333333334;
          9914400,8.39833333333333; 9918000,8.09666666666667; 9921600,7.73166666666667;
          9925200,7.31; 9928800,6.03833333333333; 9932400,5.41; 9936000,4.94833333333333;
          9939600,5.04166666666667; 9943200,5.285; 9946800,4.64333333333333; 9950400,
          4.62166666666667; 9954000,5.045; 9957600,5.65833333333333; 9961200,7.08666666666667;
          9964800,8.5; 9968400,9.465; 9972000,10.5183333333333; 9975600,11.605; 9979200,
          12.445; 9982800,13.52; 9986400,13.0583333333333; 9990000,11.9316666666667;
          9993600,11.3216666666667; 9997200,10.895; 10000800,9.675; 10004400,7.86833333333333;
          10008000,7.61666666666667; 10011600,7.92; 10015200,8.99333333333333; 10018800,
          8.24; 10022400,8.44666666666667; 10026000,8.17666666666667; 10029600,7.93833333333333;
          10033200,7.74833333333333; 10036800,8.105; 10040400,8.395; 10044000,8.465;
          10047600,9.275; 10051200,10.77; 10054800,11.3866666666667; 10058400,11.7333333333333;
          10062000,11.6433333333333; 10065600,12.6483333333333; 10069200,12.8883333333333;
          10072800,12.8366666666667; 10076400,12.5266666666667; 10080000,12.3233333333333;
          10083600,11.2483333333333; 10087200,9.21; 10090800,8.45333333333333; 10094400,
          8.48; 10098000,7.96833333333333; 10101600,6.31166666666667; 10105200,6.145;
          10108800,5.83833333333333; 10112400,5.40666666666667; 10116000,5.17333333333333;
          10119600,4.77166666666667; 10123200,3.97666666666667; 10126800,3.9; 10130400,
          6.97333333333333; 10134000,7.53166666666667; 10137600,8.37333333333333;
          10141200,9.34833333333333; 10144800,9.995; 10148400,10.1716666666667; 10152000,
          11.0866666666667; 10155600,11.815; 10159200,11.09; 10162800,10.56; 10166400,
          11.7066666666667; 10170000,9.86666666666667; 10173600,7.05666666666667;
          10177200,6.25; 10180800,5.12; 10184400,4.14833333333333; 10188000,3.02;
          10191600,2.10333333333333; 10195200,2.01833333333333; 10198800,1.70166666666667;
          10202400,1.605; 10206000,1.79833333333333; 10209600,1.70166666666667; 10213200,
          2.94; 10216800,6.49; 10220400,8.48; 10224000,10.2716666666667; 10227600,
          11.6866666666667; 10231200,13.4666666666667; 10234800,14.4733333333333;
          10238400,15.3133333333333; 10242000,15.5666666666667; 10245600,15.4466666666667;
          10249200,14.4366666666667; 10252800,15.1933333333333; 10256400,13.72; 10260000,
          12.105; 10263600,11.0133333333333; 10267200,10.1533333333333; 10270800,7.92833333333333;
          10274400,5.13666666666667; 10278000,4.03666666666667; 10281600,2.93; 10285200,
          2.52166666666667; 10288800,1.91333333333333; 10292400,1.32166666666667;
          10296000,0.9; 10299600,1.75166666666667; 10303200,6.105; 10306800,8.42;
          10310400,9.68333333333334; 10314000,11.1083333333333; 10317600,13.7616666666667;
          10321200,14.975; 10324800,15.5766666666667; 10328400,17.2233333333333; 10332000,
          17.4283333333333; 10335600,17.22; 10339200,17.7983333333333; 10342800,15.3016666666667;
          10346400,11.57; 10350000,9.2; 10353600,7.85; 10357200,6.76833333333333;
          10360800,5.90333333333333; 10364400,5.41; 10368000,4.68833333333333; 10371600,
          4.17666666666667; 10375200,3.79166666666667; 10378800,3.23666666666667;
          10382400,2.825; 10386000,3.58666666666667; 10389600,7.19166666666667; 10393200,
          10.1433333333333; 10396800,12.4633333333333; 10400400,11.945; 10404000,13.52;
          10407600,12.095; 10411200,10.5; 10414800,10.4116666666667; 10418400,10.3666666666667;
          10422000,9.335; 10425600,8.18333333333334; 10429200,7.52666666666667; 10432800,
          7.31333333333333; 10436400,6.955; 10440000,6.88333333333333; 10443600,6.845;
          10447200,6.595; 10450800,6.54])
      annotation (Placement(transformation(extent={{-8,10},{-2,16}})));
    Modelica.Blocks.Sources.TimeTable WindDir(table=[0,145.151666666667; 3600,127.113333333333;
          7200,133.573333333333; 10800,146.813333333333; 14400,176.221666666667; 18000,
          169.035; 21600,193.726666666667; 25200,162.896666666667; 28800,142.323333333333;
          32400,189.605; 36000,163.36; 39600,102.518333333333; 43200,194.758333333333;
          46800,198.091666666667; 50400,242.596666666667; 54000,158.206666666667;
          57600,152.295; 61200,152.516666666667; 64800,184.551666666667; 68400,210.9;
          72000,270.018333333333; 75600,165.301666666667; 79200,64.4716666666666;
          82800,105.663333333333; 86400,50.705; 90000,114.36; 93600,103.131666666667;
          97200,10.1866666666666; 100800,10.1283333333333; 104400,10.0116666666667;
          108000,10.07; 111600,10.42; 115200,12.045; 118800,10.42; 122400,10.42; 126000,
          230.031666666667; 129600,50.7366666666667; 133200,28.0183333333333; 136800,
          59.805; 140400,73.8766666666667; 144000,5.66333333333333; 147600,72.7533333333333;
          151200,259.893333333333; 154800,119.656666666667; 158400,64.415; 162000,
          121.553333333333; 165600,117.161666666667; 169200,128.51; 172800,60.83;
          176400,9.95333333333335; 180000,8.61833333333334; 183600,74.355; 187200,
          11.1283333333334; 190800,41.955; 194400,10.3616666666667; 198000,8.96666666666667;
          201600,8.155; 205200,9.6633333333333; 208800,9.48666666666665; 212400,43.05;
          216000,60.9966666666667; 219600,5.49000000000001; 223200,4.97166666666666;
          226800,35.1666666666667; 230400,45.2866666666667; 234000,23.1333333333334;
          237600,23.5916666666667; 241200,64.7033333333333; 244800,77.255; 248400,
          12.7666666666667; 252000,6.94000000000003; 255600,8.67999999999998; 259200,
          18.3116666666667; 262800,11.64; 266400,27.2416666666666; 270000,12.1; 273600,
          6.94000000000003; 277200,6.94000000000003; 280800,6.94000000000003; 284400,
          6.94000000000003; 288000,19.8866666666667; 291600,3.47; 295200,3.47; 298800,
          4.91833333333332; 302400,144.7; 306000,69.0216666666667; 309600,24.23; 313200,
          3.47; 316800,3.47; 320400,38.57; 324000,29.4066666666667; 327600,6.07333333333335;
          331200,5.95333333333335; 334800,123.176666666667; 338400,19.915; 342000,
          29.3733333333333; 345600,67.81; 349200,239.285; 352800,186.448333333333;
          356400,91.7083333333333; 360000,40.69; 363600,23.5333333333333; 367200,27.5566666666667;
          370800,17.0066666666667; 374400,46.3633333333333; 378000,18.875; 381600,
          3.23666666666668; 385200,3.47; 388800,3.47; 392400,3.47; 396000,3.47; 399600,
          3.35333333333332; 403200,3.47; 406800,3.47; 410400,3.47; 414000,3.47; 417600,
          66.575; 421200,64.4516666666667; 424800,55.9783333333333; 428400,46.6533333333333;
          432000,145.691666666667; 435600,7.05999999999997; 439200,4.79333333333332;
          442800,136.44; 446400,104.945; 450000,29.6616666666667; 453600,128.98; 457200,
          102.626666666667; 460800,5.66333333333333; 464400,29.87; 468000,129.855;
          471600,155.053333333333; 475200,192.588333333333; 478800,93.2666666666667;
          482400,94.145; 486000,72.8283333333333; 489600,34.7466666666666; 493200,
          43.1216666666667; 496800,93.6116666666667; 500400,103.863333333333; 504000,
          68.095; 507600,42.55; 511200,3.64333333333335; 514800,75.9; 518400,3.47;
          522000,3.47; 525600,4.97499999999999; 529200,240.158333333333; 532800,190.676666666667;
          536400,80.195; 540000,23.405; 543600,15.2433333333333; 547200,20.3983333333333;
          550800,16.7133333333333; 554400,82.7966666666667; 558000,61.8716666666667;
          561600,98.9866666666667; 565200,50.2133333333333; 568800,7.11166666666668;
          572400,8.84999999999999; 576000,8.67499999999998; 579600,9.31333333333336;
          583200,9.54666666666665; 586800,9.19666666666669; 590400,8.4433333333333;
          594000,8.03833333333333; 597600,8.38499999999999; 601200,8.44333333333336;
          604800,8.90666666666667; 608400,8.67500000000004; 612000,7.92166666666665;
          615600,7.80500000000004; 619200,7.68999999999997; 622800,8.21166666666667;
          626400,9.89500000000001; 630000,10.0116666666667; 633600,8.90833333333339;
          637200,7.28666666666672; 640800,6.94000000000003; 644400,6.94000000000003;
          648000,6.94000000000003; 651600,6.94000000000003; 655200,6.94000000000003;
          658800,6.94000000000003; 662400,6.99666666666667; 666000,6.99666666666667;
          669600,4.79999999999998; 673200,3.47; 676800,5.66666666666666; 680400,20.9616666666667;
          684000,6.94000000000003; 687600,7.11333333333334; 691200,6.9966666666667;
          694800,6.94000000000003; 698400,6.94000000000003; 702000,6.94000000000003;
          705600,6.9966666666667; 709200,6.94000000000003; 712800,6.94000000000003;
          716400,6.94000000000003; 720000,6.94000000000003; 723600,6.99666666666667;
          727200,7.05333333333331; 730800,7.74666666666667; 734400,8.03833333333333;
          738000,7.92166666666665; 741600,7.74666666666667; 745200,7.74666666666667;
          748800,7.63; 752400,7.51333333333332; 756000,7.92166666666665; 759600,7.51333333333332;
          763200,7.45500000000001; 766800,7.51333333333332; 770400,7.57166666666663;
          774000,7.74666666666667; 777600,7.74666666666667; 781200,7.68833333333336;
          784800,7.80499999999998; 788400,7.57166666666669; 792000,7.74666666666667;
          795600,7.92166666666665; 799200,7.74666666666667; 802800,7.63; 806400,8.03833333333333;
          810000,8.21333333333337; 813600,7.57166666666669; 817200,7.74666666666667;
          820800,7.86333333333334; 824400,7.80499999999998; 828000,7.86333333333334;
          831600,7.86333333333332; 835200,8.44666666666669; 838800,8.09666666666666;
          842400,7.98000000000002; 846000,8.44500000000002; 849600,10.1866666666666;
          853200,9.48666666666668; 856800,9.66166666666666; 860400,9.66166666666666;
          864000,9.37; 867600,9.37; 871200,8.85000000000002; 874800,8.85000000000002;
          878400,9.60333333333335; 882000,8.79333333333338; 885600,6.94000000000003;
          889200,6.94000000000003; 892800,73.0516666666667; 896400,119.468333333333;
          900000,127.25; 903600,68.3066666666667; 907200,101.811666666667; 910800,
          145.88; 914400,78.1166666666667; 918000,163.705; 921600,201.071666666667;
          925200,145.063333333333; 928800,178.331666666667; 932400,206.085; 936000,
          131.14; 939600,127.895; 943200,22.8416666666667; 946800,53.8216666666667;
          950400,236.2; 954000,63.8833333333333; 957600,180.153333333333; 961200,53.7366666666667;
          964800,141.168333333333; 968400,77.8; 972000,100.815; 975600,241.875; 979200,
          9.3183333333333; 982800,46.2483333333333; 986400,91.985; 990000,135.685;
          993600,177.188333333333; 997200,190.408333333333; 1000800,25.585; 1004400,
          100.705; 1008000,91.5633333333333; 1011600,82.75; 1015200,70.325; 1018800,
          120.533333333333; 1022400,142.261666666667; 1026000,139.74; 1029600,120.835;
          1033200,128.671666666667; 1036800,130.911666666667; 1040400,39.7433333333333;
          1044000,134.556666666667; 1047600,229.38; 1051200,42.5066666666666; 1054800,
          60.3433333333333; 1058400,14.605; 1062000,111.61; 1065600,113.06; 1069200,
          74.14; 1072800,233.81; 1076400,134.781666666667; 1080000,117.798333333333;
          1083600,78.98; 1087200,67.3633333333333; 1090800,75.055; 1094400,38.6666666666667;
          1098000,66.7083333333333; 1101600,16.4033333333333; 1105200,15.005; 1108800,
          46.12; 1112400,42.1833333333333; 1116000,32.2216666666667; 1119600,47.6033333333333;
          1123200,43.3616666666667; 1126800,24.1516666666666; 1130400,51.16; 1134000,
          53.525; 1137600,38.355; 1141200,76.8266666666667; 1144800,50.04; 1148400,
          24.925; 1152000,10.42; 1155600,10.42; 1159200,10.42; 1162800,10.42; 1166400,
          10.42; 1170000,10.42; 1173600,10.42; 1177200,10.42; 1180800,10.42; 1184400,
          10.42; 1188000,10.42; 1191600,114.096666666667; 1195200,25.72; 1198800,169.591666666667;
          1202400,133.188333333333; 1206000,124.438333333333; 1209600,118.71; 1213200,
          59.6883333333333; 1216800,130.665; 1220400,63.7566666666667; 1224000,182.265;
          1227600,156.461666666667; 1231200,126.251666666667; 1234800,148.945; 1238400,
          10.42; 1242000,10.42; 1245600,181.275; 1249200,211.336666666667; 1252800,
          202.873333333333; 1256400,188.931666666667; 1260000,148.006666666667; 1263600,
          184.463333333333; 1267200,95.5633333333333; 1270800,126.356666666667; 1274400,
          34.4283333333333; 1278000,40.4733333333333; 1281600,148.796666666667; 1285200,
          87.655; 1288800,5.55000000000004; 1292400,123.425; 1296000,268.385; 1299600,
          185.34; 1303200,130.455; 1306800,36.28; 1310400,198.353333333333; 1314000,
          135.068333333333; 1317600,113.265; 1321200,3.47; 1324800,5.20500000000001;
          1328400,8.09999999999999; 1332000,6.94000000000003; 1335600,160.435; 1339200,
          148.346666666667; 1342800,210.671666666667; 1346400,72.3283333333333; 1350000,
          3.47; 1353600,3.47; 1357200,3.47; 1360800,3.47; 1364400,3.47; 1368000,3.47;
          1371600,3.47; 1375200,3.47; 1378800,3.47; 1382400,3.47; 1386000,3.47; 1389600,
          3.47; 1393200,3.47; 1396800,3.47; 1400400,3.47; 1404000,3.47; 1407600,3.47;
          1411200,3.47; 1414800,3.47; 1418400,3.47; 1422000,3.47; 1425600,3.47; 1429200,
          3.47; 1432800,3.47; 1436400,3.47; 1440000,3.47; 1443600,3.47; 1447200,3.47;
          1450800,3.47; 1454400,3.47; 1458000,3.47; 1461600,3.47; 1465200,3.47; 1468800,
          3.47; 1472400,3.47; 1476000,3.47; 1479600,3.47; 1483200,3.47; 1486800,3.47;
          1490400,3.47; 1494000,3.47; 1497600,3.47; 1501200,3.47; 1504800,3.47; 1508400,
          3.47; 1512000,3.47; 1515600,3.47; 1519200,3.47; 1522800,3.47; 1526400,3.47;
          1530000,3.47; 1533600,3.47; 1537200,3.47; 1540800,3.47; 1544400,3.47; 1548000,
          3.47; 1551600,3.47; 1555200,3.47; 1558800,3.47; 1562400,3.47; 1566000,3.47;
          1569600,3.47; 1573200,3.47; 1576800,3.47; 1580400,3.47; 1584000,3.47; 1587600,
          3.47; 1591200,3.47; 1594800,3.47; 1598400,3.47; 1602000,3.47; 1605600,3.47;
          1609200,3.47; 1612800,3.47; 1616400,3.47; 1620000,3.47; 1623600,3.47; 1627200,
          3.47; 1630800,3.47; 1634400,3.47; 1638000,3.47; 1641600,3.47; 1645200,3.47;
          1648800,3.47; 1652400,3.47; 1656000,3.47; 1659600,3.47; 1663200,3.47; 1666800,
          3.47; 1670400,3.47; 1674000,3.47; 1677600,3.47; 1681200,3.47; 1684800,3.47;
          1688400,3.47; 1692000,3.47; 1695600,3.47; 1699200,3.47; 1702800,3.47; 1706400,
          3.47; 1710000,3.47; 1713600,3.47; 1717200,3.47; 1720800,3.47; 1724400,3.47;
          1728000,3.47; 1731600,3.47; 1735200,3.47; 1738800,3.47; 1742400,3.47; 1746000,
          3.47; 1749600,3.47; 1753200,3.47; 1756800,3.47; 1760400,3.47; 1764000,3.47;
          1767600,3.47; 1771200,3.47; 1774800,3.47; 1778400,3.47; 1782000,3.47; 1785600,
          3.47; 1789200,3.47; 1792800,3.47; 1796400,3.47; 1800000,3.47; 1803600,3.47;
          1807200,3.47; 1810800,3.47; 1814400,3.47; 1818000,3.47; 1821600,3.47; 1825200,
          3.47; 1828800,3.47; 1832400,3.47; 1836000,3.47; 1839600,3.47; 1843200,3.47;
          1846800,3.47; 1850400,3.47; 1854000,3.47; 1857600,3.47; 1861200,4.33500000000001;
          1864800,4.38999999999999; 1868400,3.47; 1872000,5.20500000000001; 1875600,
          6.94000000000003; 1879200,6.94000000000003; 1882800,6.94000000000003; 1886400,
          6.94000000000003; 1890000,6.01166666666666; 1893600,3.8133333333333; 1897200,
          3.58333333333334; 1900800,3.52666666666667; 1904400,3.58333333333334; 1908000,
          3.69666666666663; 1911600,3.69666666666669; 1915200,3.7533333333333; 1918800,
          3.63999999999999; 1922400,4.16; 1926000,3.86833333333331; 1929600,4.62333333333333;
          1933200,4.56500000000003; 1936800,3.52666666666667; 1940400,3.47; 1944000,
          3.47; 1947600,5.25833333333335; 1951200,4.27499999999998; 1954800,6.76500000000001;
          1958400,6.94000000000003; 1962000,6.76499999999999; 1965600,6.53166666666667;
          1969200,4.74000000000001; 1972800,5.49000000000001; 1976400,6.35833333333332;
          1980000,5.83666666666667; 1983600,5.66166666666666; 1987200,6.00833333333333;
          1990800,5.42833333333331; 1994400,4.91166666666663; 1998000,5.14499999999998;
          2001600,4.96833333333333; 2005200,5.13999999999999; 2008800,5.49000000000001;
          2012400,4.91166666666666; 2016000,5.08666666666667; 2019600,3.75666666666666;
          2023200,3.52666666666667; 2026800,3.52666666666667; 2030400,3.47; 2034000,
          3.58500000000001; 2037600,3.58333333333334; 2041200,3.64000000000001; 2044800,
          3.52666666666667; 2048400,3.58333333333334; 2052000,3.47; 2055600,3.58333333333334;
          2059200,3.52666666666667; 2062800,3.47; 2066400,3.47; 2070000,3.52666666666667;
          2073600,3.58333333333334; 2077200,3.58333333333334; 2080800,3.52666666666667;
          2084400,3.52666666666667; 2088000,3.47; 2091600,3.69833333333335; 2095200,
          4.56666666666669; 2098800,4.62333333333333; 2102400,3.52666666666667; 2106000,
          3.47; 2109600,3.47; 2113200,3.47; 2116800,3.47; 2120400,3.47; 2124000,3.47;
          2127600,3.52666666666667; 2131200,3.52666666666667; 2134800,3.92833333333331;
          2138400,3.69666666666669; 2142000,3.755; 2145600,3.47; 2149200,3.52666666666667;
          2152800,3.47; 2156400,3.47; 2160000,3.52666666666667; 2163600,3.47; 2167200,
          3.52666666666667; 2170800,3.58333333333334; 2174400,3.58333333333334; 2178000,
          3.58333333333334; 2181600,4.15999999999997; 2185200,4.04333333333332; 2188800,
          3.58333333333334; 2192400,3.52666666666667; 2196000,3.52666666666667; 2199600,
          3.47; 2203200,3.47; 2206800,3.47; 2210400,3.64000000000001; 2214000,3.47;
          2217600,3.63999999999999; 2221200,3.87333333333333; 2224800,4.10333333333332;
          2228400,3.70000000000002; 2232000,3.58333333333334; 2235600,3.52666666666667;
          2239200,3.47; 2242800,3.47; 2246400,3.52666666666667; 2250000,3.47; 2253600,
          3.47; 2257200,3.58333333333334; 2260800,3.69666666666669; 2264400,3.81166666666664;
          2268000,4.39166666666665; 2271600,4.62333333333333; 2275200,3.69666666666669;
          2278800,3.52666666666667; 2282400,3.52666666666667; 2286000,3.47; 2289600,
          3.58333333333334; 2293200,3.58333333333334; 2296800,3.52666666666667; 2300400,
          3.52666666666667; 2304000,3.63999999999999; 2307600,3.92999999999998; 2311200,
          3.92999999999998; 2314800,3.75666666666666; 2318400,3.47; 2322000,3.52666666666667;
          2325600,3.58333333333334; 2329200,3.52666666666667; 2332800,3.52666666666667;
          2336400,3.47; 2340000,3.47; 2343600,3.47; 2347200,3.47; 2350800,3.58333333333334;
          2354400,3.69666666666669; 2358000,3.87166666666667; 2361600,3.52666666666667;
          2365200,3.52666666666667; 2368800,3.47; 2372400,3.47; 2376000,3.52666666666667;
          2379600,3.47; 2383200,3.47; 2386800,3.63999999999999; 2390400,3.58333333333334;
          2394000,3.81499999999997; 2397600,3.98833333333334; 2401200,3.70000000000002;
          2404800,3.52666666666667; 2408400,3.47; 2412000,3.47; 2415600,3.47; 2419200,
          3.47; 2422800,3.47; 2426400,3.47; 2430000,3.52666666666667; 2433600,3.52666666666667;
          2437200,3.47; 2440800,3.81166666666664; 2444400,3.8133333333333; 2448000,
          3.52666666666667; 2451600,3.47; 2455200,3.58333333333334; 2458800,3.58333333333334;
          2462400,3.47; 2466000,3.47; 2469600,3.47; 2473200,3.52666666666667; 2476800,
          3.81499999999997; 2480400,3.87; 2484000,3.92999999999998; 2487600,4.16;
          2491200,3.58333333333334; 2494800,3.58333333333334; 2498400,3.47; 2502000,
          3.47; 2505600,3.47; 2509200,3.52666666666667; 2512800,3.52666666666667;
          2516400,3.58333333333334; 2520000,3.47; 2523600,3.58333333333334; 2527200,
          3.52666666666667; 2530800,3.47; 2534400,3.47; 2538000,3.47; 2541600,3.47;
          2545200,3.47; 2548800,3.47; 2552400,3.47; 2556000,3.47; 2559600,3.47; 2563200,
          34.5333333333333; 2566800,50.495; 2570400,154; 2574000,82.0566666666667;
          2577600,66.5916666666667; 2581200,123.23; 2584800,6.94000000000003; 2588400,
          112.223333333333; 2592000,87.87; 2595600,143.233333333333; 2599200,134.02;
          2602800,112.908333333333; 2606400,86.8816666666666; 2610000,30.3316666666667;
          2613600,6.94000000000003; 2617200,6.94000000000003; 2620800,6.94000000000003;
          2624400,6.94000000000003; 2628000,6.36166666666668; 2631600,3.35333333333332;
          2635200,3.12; 2638800,3.12; 2642400,3.12; 2646000,3.12; 2649600,3.12; 2653200,
          3.12; 2656800,3.12; 2660400,3.12; 2664000,3.12; 2667600,3.12; 2671200,3.12;
          2674800,3.12; 2678400,3.12; 2682000,3.12; 2685600,3.12; 2689200,3.12; 2692800,
          3.12; 2696400,3.12; 2700000,3.12; 2703600,3.12; 2707200,3.12; 2710800,3.12;
          2714400,3.12; 2718000,3.12; 2721600,3.12; 2725200,3.12; 2728800,3.12; 2732400,
          3.12; 2736000,3.12; 2739600,3.12; 2743200,3.12; 2746800,3.23666666666668;
          2750400,3.17833333333337; 2754000,3.12; 2757600,3.12; 2761200,3.12; 2764800,
          3.12; 2768400,3.12; 2772000,3.12; 2775600,3.17833333333337; 2779200,3.12;
          2782800,3.12; 2786400,3.12; 2790000,3.23666666666668; 2793600,3.12; 2797200,
          3.12; 2800800,3.12; 2804400,3.12; 2808000,3.12; 2811600,3.12; 2815200,3.12;
          2818800,3.12; 2822400,3.12; 2826000,3.12; 2829600,3.12; 2833200,3.23666666666668;
          2836800,3.23666666666668; 2840400,3.12; 2844000,3.12; 2847600,3.12; 2851200,
          3.12; 2854800,3.12; 2858400,3.12; 2862000,3.17833333333337; 2865600,3.12;
          2869200,3.12; 2872800,3.12; 2876400,3.12; 2880000,3.23666666666668; 2883600,
          3.12; 2887200,62.1016666666667; 2890800,181.323333333333; 2894400,60.1583333333333;
          2898000,192.81; 2901600,100.081666666667; 2905200,177.075; 2908800,183.113333333333;
          2912400,142.795; 2916000,126.968333333333; 2919600,163.516666666667; 2923200,
          152.953333333333; 2926800,101.985; 2930400,164.701666666667; 2934000,149.63;
          2937600,97.6633333333333; 2941200,10.42; 2944800,10.42; 2948400,10.4766666666666;
          2952000,10.42; 2955600,10.42; 2959200,10.42; 2962800,10.42; 2966400,10.42;
          2970000,58.895; 2973600,189.805; 2977200,181.853333333333; 2980800,92.2866666666667;
          2984400,195.463333333333; 2988000,204.163333333333; 2991600,190.871666666667;
          2995200,48.995; 2998800,6.88166666666669; 3002400,248.685; 3006000,133.101666666667;
          3009600,174.833333333333; 3013200,51.195; 3016800,53.8466666666666; 3020400,
          64.6633333333333; 3024000,108.79; 3027600,159.97; 3031200,64.6433333333333;
          3034800,235.465; 3038400,175.866666666667; 3042000,169.573333333333; 3045600,
          64.155; 3049200,94.7466666666667; 3052800,278.936666666667; 3056400,210.37;
          3060000,208.931666666667; 3063600,194.711666666667; 3067200,175.003333333333;
          3070800,180.378333333333; 3074400,193.356666666667; 3078000,165.141666666667;
          3081600,146.37; 3085200,100.898333333333; 3088800,11.9866666666667; 3092400,
          15.1266666666666; 3096000,11.6366666666667; 3099600,50.0783333333333; 3103200,
          10.42; 3106800,10.42; 3110400,10.42; 3114000,10.42; 3117600,10.42; 3121200,
          10.42; 3124800,10.42; 3128400,10.42; 3132000,10.42; 3135600,10.42; 3139200,
          10.4766666666666; 3142800,10.42; 3146400,10.42; 3150000,10.42; 3153600,221.36;
          3157200,200.678333333333; 3160800,166.63; 3164400,188.428333333333; 3168000,
          181.21; 3171600,92.2666666666667; 3175200,165.685; 3178800,250.48; 3182400,
          151.948333333333; 3186000,230.778333333333; 3189600,152.16; 3193200,109.546666666667;
          3196800,166.368333333333; 3200400,94.1166666666667; 3204000,220.435; 3207600,
          137.2; 3211200,206.425; 3214800,138.001666666667; 3218400,153.32; 3222000,
          148.033333333333; 3225600,136.19; 3229200,57.845; 3232800,7.22500000000002;
          3236400,7.40000000000001; 3240000,7.11000000000001; 3243600,6.99666666666667;
          3247200,6.99666666666667; 3250800,6.99666666666667; 3254400,6.99666666666667;
          3258000,6.99666666666667; 3261600,6.99666666666667; 3265200,7.05333333333337;
          3268800,6.94000000000003; 3272400,6.9966666666667; 3276000,6.94000000000003;
          3279600,7.80499999999998; 3283200,7.39666666666665; 3286800,7.39666666666665;
          3290400,8.09333333333333; 3294000,9.42999999999998; 3297600,7.69000000000003;
          3301200,100.353333333333; 3304800,52.4816666666667; 3308400,83.32; 3312000,
          20.81; 3315600,53.8583333333333; 3319200,22.7516666666667; 3322800,12.1416666666667;
          3326400,6.94000000000003; 3330000,7.46000000000001; 3333600,14.445; 3337200,
          119.855; 3340800,151.375; 3344400,110.733333333333; 3348000,163.726666666667;
          3351600,63.6583333333333; 3355200,6.94000000000003; 3358800,6.94000000000003;
          3362400,6.94000000000003; 3366000,6.94000000000003; 3369600,6.94000000000003;
          3373200,6.94000000000003; 3376800,3.52666666666667; 3380400,4.625; 3384000,
          4.45166666666668; 3387600,6.76500000000001; 3391200,7.05333333333331; 3394800,
          14.8066666666666; 3398400,9.08333333333334; 3402000,9.44499999999999; 3405600,
          6.94000000000003; 3409200,6.94000000000003; 3412800,6.94000000000003; 3416400,
          78.85; 3420000,6.94000000000003; 3423600,6.94000000000003; 3427200,6.94000000000003;
          3430800,170.095; 3434400,102.621666666667; 3438000,77.4683333333333; 3441600,
          83.065; 3445200,108.813333333333; 3448800,116.025; 3452400,145.035; 3456000,
          278.133333333333; 3459600,84.06; 3463200,276.4; 3466800,157.165; 3470400,
          56.175; 3474000,308.408333333333; 3477600,172.048333333333; 3481200,85.9866666666667;
          3484800,35.5533333333334; 3488400,21.25; 3492000,199.158333333333; 3495600,
          188.921666666667; 3499200,156.006666666667; 3502800,176.301666666667; 3506400,
          116.821666666667; 3510000,48.9916666666667; 3513600,13.36; 3517200,99.5966666666667;
          3520800,29.2316666666667; 3524400,100.28; 3528000,127.203333333333; 3531600,
          240.091666666667; 3535200,100.928333333333; 3538800,10.42; 3542400,38.3283333333333;
          3546000,10.42; 3549600,10.42; 3553200,171.03; 3556800,164.855; 3560400,160.938333333333;
          3564000,18.7733333333333; 3567600,34.7233333333333; 3571200,100.796666666667;
          3574800,41.9616666666667; 3578400,80.2866666666667; 3582000,48.8083333333333;
          3585600,58.355; 3589200,54.105; 3592800,140.771666666667; 3596400,180.178333333333;
          3600000,275.973333333333; 3603600,358.993333333333; 3607200,358.956666666667;
          3610800,358.976666666667; 3614400,358.97; 3618000,318.345; 3621600,127.875;
          3625200,108.021666666667; 3628800,10.7216666666667; 3632400,66.91; 3636000,
          29.0966666666667; 3639600,41.5916666666667; 3643200,82.6233333333333; 3646800,
          147.85; 3650400,75.355; 3654000,92.04; 3657600,147.178333333333; 3661200,
          76.88; 3664800,20.6433333333333; 3668400,14.0333333333333; 3672000,16.6433333333333;
          3675600,16.565; 3679200,28.8233333333333; 3682800,69.8966666666666; 3686400,
          153.251666666667; 3690000,50.0433333333333; 3693600,130.566666666667; 3697200,
          73.8266666666667; 3700800,37.5483333333333; 3704400,37.775; 3708000,20.875;
          3711600,10.3033333333333; 3715200,10.42; 3718800,10.245; 3722400,10.3616666666667;
          3726000,10.3033333333333; 3729600,10.3033333333333; 3733200,10.42; 3736800,
          10.3616666666667; 3740400,5.7833333333333; 3744000,93.195; 3747600,182.308333333333;
          3751200,17.2533333333333; 3754800,14.08; 3758400,65.2266666666666; 3762000,
          16.4416666666667; 3765600,168.823333333333; 3769200,97.59; 3772800,42.2566666666667;
          3776400,118.998333333333; 3780000,205.151666666667; 3783600,122.796666666667;
          3787200,138.85; 3790800,221.51; 3794400,6.94000000000003; 3798000,6.88166666666666;
          3801600,6.94000000000003; 3805200,6.94000000000003; 3808800,6.82333333333335;
          3812400,28.7283333333333; 3816000,129.14; 3819600,50.115; 3823200,9.72333333333333;
          3826800,9.84; 3830400,148.395; 3834000,49.1783333333333; 3837600,130.16;
          3841200,196.056666666667; 3844800,206.636666666667; 3848400,193.128333333333;
          3852000,116.306666666667; 3855600,169.716666666667; 3859200,157.856666666667;
          3862800,140.375; 3866400,108.866666666667; 3870000,142.905; 3873600,10.42;
          3877200,10.42; 3880800,10.42; 3884400,49.7033333333333; 3888000,10.42; 3891600,
          10.42; 3895200,31.1883333333333; 3898800,91.1783333333333; 3902400,168.151666666667;
          3906000,118.371666666667; 3909600,52.0366666666666; 3913200,158.725; 3916800,
          197.618333333333; 3920400,188.805; 3924000,172.586666666667; 3927600,165.163333333333;
          3931200,195.348333333333; 3934800,117.106666666667; 3938400,89.065; 3942000,
          184.885; 3945600,32.3716666666666; 3949200,87.52; 3952800,90.1116666666667;
          3956400,117.95; 3960000,174.44; 3963600,175.58; 3967200,123.448333333333;
          3970800,31.9133333333333; 3974400,125.765; 3978000,183.89; 3981600,179.325;
          3985200,164.073333333333; 3988800,171.345; 3992400,172.796666666667; 3996000,
          153.508333333333; 3999600,174.775; 4003200,167.196666666667; 4006800,211.22;
          4010400,191.948333333333; 4014000,107.055; 4017600,183.423333333333; 4021200,
          151.07; 4024800,170.823333333333; 4028400,142.49; 4032000,162.903333333333;
          4035600,151.166666666667; 4039200,174.6; 4042800,155.508333333333; 4046400,
          181.256666666667; 4050000,134.151666666667; 4053600,178.803333333333; 4057200,
          124.783333333333; 4060800,205.461666666667; 4064400,185.3; 4068000,139.138333333333;
          4071600,172.881666666667; 4075200,179.475; 4078800,196.035; 4082400,220.895;
          4086000,214.586666666667; 4089600,164.613333333333; 4093200,201.343333333333;
          4096800,162.883333333333; 4100400,177.606666666667; 4104000,182.153333333333;
          4107600,166.725; 4111200,200.321666666667; 4114800,184.098333333333; 4118400,
          193.073333333333; 4122000,222.471666666667; 4125600,136.591666666667; 4129200,
          167.223333333333; 4132800,78.675; 4136400,84.865; 4140000,77.925; 4143600,
          152.906666666667; 4147200,137.63; 4150800,174.348333333333; 4154400,61.8533333333333;
          4158000,20.0666666666667; 4161600,156.408333333333; 4165200,161.561666666667;
          4168800,62.6566666666667; 4172400,220.546666666667; 4176000,59.1316666666667;
          4179600,119.885; 4183200,113.026666666667; 4186800,183.621666666667; 4190400,
          108.311666666667; 4194000,94.9183333333333; 4197600,194.898333333333; 4201200,
          142.12; 4204800,112.015; 4208400,173.07; 4212000,185.845; 4215600,122.313333333333;
          4219200,87.2283333333333; 4222800,65.995; 4226400,120.451666666667; 4230000,
          130.44; 4233600,89.2083333333333; 4237200,303.69; 4240800,273.063333333333;
          4244400,168.121666666667; 4248000,155.583333333333; 4251600,98.8883333333333;
          4255200,85.9016666666667; 4258800,193.783333333333; 4262400,165.445; 4266000,
          137.511666666667; 4269600,243.361666666667; 4273200,148.828333333333; 4276800,
          144.748333333333; 4280400,127.213333333333; 4284000,183.691666666667; 4287600,
          192.808333333333; 4291200,107.441666666667; 4294800,102.69; 4298400,57.0333333333333;
          4302000,147.873333333333; 4305600,146.521666666667; 4309200,98.4433333333333;
          4312800,24.6833333333333; 4316400,64.4933333333333; 4320000,41.0816666666667;
          4323600,178.353333333333; 4327200,20.8433333333333; 4330800,222.153333333333;
          4334400,175.43; 4338000,69.695; 4341600,81.9666666666667; 4345200,25.295;
          4348800,18.11; 4352400,46.6116666666667; 4356000,53.6216666666667; 4359600,
          73.5883333333333; 4363200,145.43; 4366800,101.526666666667; 4370400,40.8683333333333;
          4374000,73.4566666666667; 4377600,8.86333333333334; 4381200,49.4683333333333;
          4384800,114.611666666667; 4388400,28.2783333333333; 4392000,64.2966666666667;
          4395600,6.41500000000005; 4399200,115.071666666667; 4402800,101.445; 4406400,
          180.851666666667; 4410000,172.988333333333; 4413600,150.245; 4417200,91.8433333333333;
          4420800,49.0683333333333; 4424400,15.1566666666667; 4428000,120.791666666667;
          4431600,50.64; 4435200,122.608333333333; 4438800,201.443333333333; 4442400,
          37.2266666666667; 4446000,94.6733333333333; 4449600,113.191666666667; 4453200,
          187.988333333333; 4456800,190.493333333333; 4460400,164.313333333333; 4464000,
          127.543333333333; 4467600,172.511666666667; 4471200,136.501666666667; 4474800,
          287.451666666667; 4478400,118.443333333333; 4482000,92.37; 4485600,190.831666666667;
          4489200,230.016666666667; 4492800,118.701666666667; 4496400,138.476666666667;
          4500000,129.356666666667; 4503600,102.095; 4507200,155.003333333333; 4510800,
          131.056666666667; 4514400,204.643333333333; 4518000,124.996666666667; 4521600,
          167.018333333333; 4525200,147.56; 4528800,135.108333333333; 4532400,194.928333333333;
          4536000,174.451666666667; 4539600,160.381666666667; 4543200,121.125; 4546800,
          203.683333333333; 4550400,105.188333333333; 4554000,162.92; 4557600,188.775;
          4561200,126.02; 4564800,204.573333333333; 4568400,127.518333333333; 4572000,
          21.31; 4575600,10.1866666666666; 4579200,29.8916666666667; 4582800,175.755;
          4586400,10.3033333333333; 4590000,80.415; 4593600,130.396666666667; 4597200,
          35.8133333333333; 4600800,91.6716666666667; 4604400,107.106666666667; 4608000,
          52.5116666666667; 4611600,156.741666666667; 4615200,17.0183333333333; 4618800,
          73.2983333333333; 4622400,40.295; 4626000,17.1966666666667; 4629600,107.68;
          4633200,31.015; 4636800,90.115; 4640400,125.158333333333; 4644000,60.5533333333333;
          4647600,169.71; 4651200,161.786666666667; 4654800,192.846666666667; 4658400,
          166.943333333333; 4662000,109.043333333333; 4665600,213.208333333333; 4669200,
          172.475; 4672800,176.595; 4676400,178.193333333333; 4680000,159.156666666667;
          4683600,151.1; 4687200,122.641666666667; 4690800,167.716666666667; 4694400,
          156.078333333333; 4698000,149.826666666667; 4701600,172.038333333333; 4705200,
          90.5933333333333; 4708800,41.795; 4712400,193.353333333333; 4716000,199.716666666667;
          4719600,166.013333333333; 4723200,180.985; 4726800,193.771666666667; 4730400,
          151.07; 4734000,121.79; 4737600,153.358333333333; 4741200,147.825; 4744800,
          91.6666666666667; 4748400,207.875; 4752000,80.94; 4755600,151.1; 4759200,
          185.065; 4762800,165.88; 4766400,151.186666666667; 4770000,44.3583333333333;
          4773600,36.4233333333333; 4777200,7.05333333333337; 4780800,36.5133333333333;
          4784400,112.743333333333; 4788000,68.9033333333333; 4791600,239.415; 4795200,
          3.47; 4798800,87.9683333333333; 4802400,7.86666666666667; 4806000,287.378333333333;
          4809600,261.613333333333; 4813200,287.665; 4816800,121.696666666667; 4820400,
          200.126666666667; 4824000,52.9633333333334; 4827600,80.5783333333333; 4831200,
          95.9916666666667; 4834800,113.826666666667; 4838400,207.855; 4842000,190.51;
          4845600,174.735; 4849200,187.251666666667; 4852800,160.511666666667; 4856400,
          180.885; 4860000,188.086666666667; 4863600,191.646666666667; 4867200,207.598333333333;
          4870800,179.093333333333; 4874400,177.596666666667; 4878000,175.908333333333;
          4881600,175.155; 4885200,173.97; 4888800,196.066666666667; 4892400,181.33;
          4896000,118.068333333333; 4899600,114.263333333333; 4903200,110.786666666667;
          4906800,150.446666666667; 4910400,116.108333333333; 4914000,147.851666666667;
          4917600,108.348333333333; 4921200,83.8633333333333; 4924800,82.2433333333333;
          4928400,143.253333333333; 4932000,146.961666666667; 4935600,153.591666666667;
          4939200,18.405; 4942800,3.29499999999999; 4946400,3.23666666666668; 4950000,
          66.315; 4953600,6.94000000000003; 4957200,6.94000000000003; 4960800,6.94000000000003;
          4964400,6.94000000000003; 4968000,6.94000000000003; 4971600,6.94000000000003;
          4975200,26.555; 4978800,174.968333333333; 4982400,110.976666666667; 4986000,
          6.12333333333333; 4989600,6.125; 4993200,6.18166666666664; 4996800,6.12333333333333;
          5000400,6.1816666666667; 5004000,5.77833333333331; 5007600,5.89499999999998;
          5011200,5.83500000000004; 5014800,5.60499999999999; 5018400,6.06666666666669;
          5022000,5.95166666666668; 5025600,5.89333333333335; 5029200,5.72000000000003;
          5032800,5.66166666666663; 5036400,5.95166666666668; 5040000,5.60666666666668;
          5043600,5.83666666666667; 5047200,6.24166666666667; 5050800,6.18333333333331;
          5054400,6.29999999999998; 5058000,6.18333333333331; 5061600,6.01166666666666;
          5065200,5.94833333333335; 5068800,5.83333333333334; 5072400,5.95166666666668;
          5076000,6.06666666666669; 5079600,5.94999999999996; 5083200,5.89333333333335;
          5086800,5.66333333333333; 5090400,5.77833333333334; 5094000,5.375; 5097600,
          5.49000000000001; 5101200,5.60499999999999; 5104800,5.54666666666665; 5108400,
          5.54499999999999; 5112000,5.60333333333332; 5115600,5.89499999999998; 5119200,
          6.59; 5122800,6.59; 5126400,6.35666666666665; 5130000,5.60500000000002;
          5133600,6.125; 5137200,5.66166666666666; 5140800,5.83333333333334; 5144400,
          5.83499999999995; 5148000,5.83500000000001; 5151600,5.66166666666666; 5155200,
          6.47333333333336; 5158800,6.53166666666667; 5162400,6.70666666666668; 5166000,
          6.47333333333336; 5169600,5.95000000000002; 5173200,5.89333333333335; 5176800,
          5.4316666666667; 5180400,5.72; 5184000,5.89333333333335; 5187600,5.20000000000002;
          5191200,5.72; 5194800,5.72; 5198400,5.60166666666666; 5202000,6.125; 5205600,
          6.76499999999999; 5209200,6.18333333333337; 5212800,5.83500000000001; 5216400,
          6.00833333333333; 5220000,6.41499999999999; 5223600,6.41499999999999; 5227200,
          6.41499999999999; 5230800,6.1816666666667; 5234400,6.35666666666668; 5238000,
          6.24000000000001; 5241600,6.24000000000001; 5245200,6.64833333333334; 5248800,
          6.70666666666668; 5252400,6.76500000000001; 5256000,6.12666666666667; 5259600,
          6.18333333333337; 5263200,6.24166666666667; 5266800,6.01166666666668; 5270400,
          6.18333333333331; 5274000,5.72333333333333; 5277600,6.18500000000003; 5281200,
          6.24166666666667; 5284800,6.06666666666669; 5288400,6.24166666666667; 5292000,
          6.76500000000001; 5295600,6.24000000000001; 5299200,6.1816666666667; 5302800,
          6.18333333333331; 5306400,6.41499999999999; 5310000,6.41500000000005; 5313600,
          6.53166666666667; 5317200,6.47333333333336; 5320800,126.653333333333; 5324400,
          68.2133333333333; 5328000,165.803333333333; 5331600,177.82; 5335200,84.3983333333333;
          5338800,177.55; 5342400,267.305; 5346000,145.93; 5349600,30.27; 5353200,
          186.628333333333; 5356800,86.095; 5360400,49.975; 5364000,61.84; 5367600,
          50.705; 5371200,50.9316666666667; 5374800,20.15; 5378400,10.42; 5382000,
          10.42; 5385600,50.4016666666667; 5389200,178.666666666667; 5392800,113.69;
          5396400,147.511666666667; 5400000,185.525; 5403600,131.071666666667; 5407200,
          132.981666666667; 5410800,97.0316666666667; 5414400,147.131666666667; 5418000,
          70.3916666666667; 5421600,150.491666666667; 5425200,54.97; 5428800,10.42;
          5432400,10.3616666666667; 5436000,10.3616666666667; 5439600,28.4416666666666;
          5443200,42.6266666666666; 5446800,74.5616666666667; 5450400,45.975; 5454000,
          97.16; 5457600,82.0066666666667; 5461200,192.175; 5464800,16.3966666666667;
          5468400,138.606666666667; 5472000,6.94000000000003; 5475600,6.94000000000003;
          5479200,6.94000000000003; 5482800,30.6583333333333; 5486400,13.445; 5490000,
          103.733333333333; 5493600,39.4716666666667; 5497200,3.58333333333334; 5500800,
          4.91166666666666; 5504400,4.97; 5508000,6.41833333333338; 5511600,6.94000000000003;
          5515200,6.94000000000003; 5518800,6.94000000000003; 5522400,6.94000000000003;
          5526000,6.94000000000003; 5529600,6.94000000000003; 5533200,6.94000000000003;
          5536800,9.60666666666665; 5540400,10.825; 5544000,10.42; 5547600,10.42;
          5551200,10.42; 5554800,10.42; 5558400,10.42; 5562000,10.42; 5565600,10.42;
          5569200,10.42; 5572800,10.42; 5576400,10.42; 5580000,10.42; 5583600,10.42;
          5587200,13.5683333333333; 5590800,15.63; 5594400,124.091666666667; 5598000,
          119.831666666667; 5601600,76.0933333333333; 5605200,120.678333333333; 5608800,
          137.661666666667; 5612400,13.8233333333334; 5616000,167.705; 5619600,264.9;
          5623200,175.988333333333; 5626800,179.108333333333; 5630400,78.2616666666667;
          5634000,147.826666666667; 5637600,279.516666666667; 5641200,119.016666666667;
          5644800,42.0416666666667; 5648400,131.885; 5652000,131.041666666667; 5655600,
          173.431666666667; 5659200,165; 5662800,197.286666666667; 5666400,95.4616666666667;
          5670000,129.056666666667; 5673600,175.536666666667; 5677200,93.235; 5680800,
          145.04; 5684400,80.7966666666667; 5688000,129.348333333333; 5691600,81.6066666666666;
          5695200,22.175; 5698800,8.56000000000003; 5702400,9.77833333333331; 5706000,
          85.6733333333333; 5709600,166.471666666667; 5713200,193.47; 5716800,13.1533333333333;
          5720400,158.593333333333; 5724000,72.8566666666667; 5727600,69.0766666666667;
          5731200,55.9016666666667; 5734800,39.81; 5738400,184.988333333333; 5742000,
          199.366666666667; 5745600,154.353333333333; 5749200,152.381666666667; 5752800,
          194.475; 5756400,162.725; 5760000,189.483333333333; 5763600,128.323333333333;
          5767200,10.42; 5770800,83.87; 5774400,138.291666666667; 5778000,81.0833333333333;
          5781600,126.675; 5785200,86.1783333333333; 5788800,146.32; 5792400,123.188333333333;
          5796000,157.018333333333; 5799600,28.0816666666667; 5803200,13.6666666666667;
          5806800,13.6083333333333; 5810400,13.7833333333333; 5814000,13.7833333333333;
          5817600,13.725; 5821200,157.78; 5824800,130.8; 5828400,196.358333333333;
          5832000,206.303333333333; 5835600,37.5983333333333; 5839200,6.94000000000003;
          5842800,6.94000000000003; 5846400,6.94000000000003; 5850000,6.94000000000003;
          5853600,6.94000000000003; 5857200,6.94000000000003; 5860800,6.94000000000003;
          5864400,6.94000000000003; 5868000,6.94000000000003; 5871600,6.94000000000003;
          5875200,6.94000000000003; 5878800,6.94000000000003; 5882400,6.94000000000003;
          5886000,6.94000000000003; 5889600,6.94000000000003; 5893200,6.94000000000003;
          5896800,6.94000000000003; 5900400,6.94000000000003; 5904000,6.94000000000003;
          5907600,6.94000000000003; 5911200,66.7283333333333; 5914800,30.165; 5918400,
          15.4066666666667; 5922000,3.47; 5925600,3.29499999999999; 5929200,3.41166666666666;
          5932800,3.41166666666666; 5936400,3.12; 5940000,3.12; 5943600,3.23666666666668;
          5947200,200.681666666667; 5950800,207.786666666667; 5954400,248.446666666667;
          5958000,168.361666666667; 5961600,191.021666666667; 5965200,236.041666666667;
          5968800,53.9933333333333; 5972400,182.893333333333; 5976000,251.485; 5979600,
          62.7816666666667; 5983200,3.47; 5986800,227.523333333333; 5990400,209.478333333333;
          5994000,188.341666666667; 5997600,168.97; 6001200,135.393333333333; 6004800,
          151.193333333333; 6008400,176.271666666667; 6012000,127.911666666667; 6015600,
          153.06; 6019200,54.3866666666667; 6022800,150.4; 6026400,170.74; 6030000,
          207.645; 6033600,133.891666666667; 6037200,130.068333333333; 6040800,143.153333333333;
          6044400,154.456666666667; 6048000,158.615; 6051600,103.561666666667; 6055200,
          140.056666666667; 6058800,113.096666666667; 6062400,58.485; 6066000,162.82;
          6069600,83.985; 6073200,93.4983333333333; 6076800,163.586666666667; 6080400,
          198.868333333333; 6084000,191.756666666667; 6087600,189.211666666667; 6091200,
          180.158333333333; 6094800,103.108333333333; 6098400,149.883333333333; 6102000,
          158.851666666667; 6105600,158.66; 6109200,165.26; 6112800,200.586666666667;
          6116400,221.708333333333; 6120000,212.283333333333; 6123600,154.62; 6127200,
          175.183333333333; 6130800,186.015; 6134400,156.803333333333; 6138000,196.425;
          6141600,204.465; 6145200,122.231666666667; 6148800,121.775; 6152400,148.556666666667;
          6156000,69.35; 6159600,180.348333333333; 6163200,168.955; 6166800,164.248333333333;
          6170400,129.475; 6174000,204.096666666667; 6177600,163.315; 6181200,188.306666666667;
          6184800,206.321666666667; 6188400,225.331666666667; 6192000,191.255; 6195600,
          211.393333333333; 6199200,194.215; 6202800,236.923333333333; 6206400,109.58;
          6210000,124.841666666667; 6213600,143.635; 6217200,101.023333333333; 6220800,
          213.438333333333; 6224400,206.306666666667; 6228000,192.268333333333; 6231600,
          164.596666666667; 6235200,187.728333333333; 6238800,190.176666666667; 6242400,
          204.885; 6246000,121.615; 6249600,13.9; 6253200,91.4616666666667; 6256800,
          144.121666666667; 6260400,211.671666666667; 6264000,191.146666666667; 6267600,
          173.588333333333; 6271200,155.718333333333; 6274800,174.313333333333; 6278400,
          225.11; 6282000,110.776666666667; 6285600,168.538333333333; 6289200,163.93;
          6292800,221.59; 6296400,211.133333333333; 6300000,188.498333333333; 6303600,
          135.01; 6307200,134.793333333333; 6310800,174.878333333333; 6314400,198.993333333333;
          6318000,226.381666666667; 6321600,163.165; 6325200,150.023333333333; 6328800,
          171.711666666667; 6332400,164.895; 6336000,191.216666666667; 6339600,148.111666666667;
          6343200,188.895; 6346800,165.383333333333; 6350400,158.043333333333; 6354000,
          161.223333333333; 6357600,126.853333333333; 6361200,162.861666666667; 6364800,
          164.886666666667; 6368400,194.801666666667; 6372000,187.343333333333; 6375600,
          187.578333333333; 6379200,191.203333333333; 6382800,247.806666666667; 6386400,
          181.126666666667; 6390000,261.088333333333; 6393600,186.538333333333; 6397200,
          123.306666666667; 6400800,143.19; 6404400,226.481666666667; 6408000,116.178333333333;
          6411600,198.003333333333; 6415200,194.558333333333; 6418800,134.35; 6422400,
          178.325; 6426000,174.123333333333; 6429600,155.985; 6433200,222.226666666667;
          6436800,162.588333333333; 6440400,203.438333333333; 6444000,222.82; 6447600,
          152.03; 6451200,184.683333333333; 6454800,233.801666666667; 6458400,267.4;
          6462000,235.875; 6465600,192.56; 6469200,166.75; 6472800,201.863333333333;
          6476400,168.625; 6480000,246.343333333333; 6483600,189.381666666667; 6487200,
          263.253333333333; 6490800,211.126666666667; 6494400,217.821666666667; 6498000,
          236.456666666667; 6501600,152.431666666667; 6505200,84.11; 6508800,172.955;
          6512400,214.326666666667; 6516000,176.281666666667; 6519600,230.418333333333;
          6523200,168.51; 6526800,240.343333333333; 6530400,194.13; 6534000,228.59;
          6537600,222.498333333333; 6541200,229.331666666667; 6544800,134.135; 6548400,
          214.833333333333; 6552000,239.321666666667; 6555600,197.635; 6559200,145.088333333333;
          6562800,124.17; 6566400,10.4933333333333; 6570000,28.2883333333333; 6573600,
          123.503333333333; 6577200,17.3083333333334; 6580800,6.94000000000003; 6584400,
          6.94000000000003; 6588000,7.11000000000001; 6591600,6.94000000000003; 6595200,
          82.9416666666666; 6598800,146.795; 6602400,235.436666666667; 6606000,171.25;
          6609600,166.713333333333; 6613200,168.268333333333; 6616800,214.575; 6620400,
          202.98; 6624000,245.706666666667; 6627600,205.473333333333; 6631200,36.8516666666667;
          6634800,147.666666666667; 6638400,76.9883333333333; 6642000,141.193333333333;
          6645600,158.373333333333; 6649200,38.4383333333333; 6652800,193.248333333333;
          6656400,188.166666666667; 6660000,225.993333333333; 6663600,225.923333333333;
          6667200,276.426666666667; 6670800,218.183333333333; 6674400,6.53333333333333;
          6678000,10.42; 6681600,144.851666666667; 6685200,141.781666666667; 6688800,
          159.74; 6692400,208.246666666667; 6696000,195.995; 6699600,196.485; 6703200,
          213.628333333333; 6706800,181.041666666667; 6710400,146.88; 6714000,93.8066666666667;
          6717600,104.99; 6721200,151.495; 6724800,166.47; 6728400,161.273333333333;
          6732000,69.0833333333333; 6735600,176.245; 6739200,162.261666666667; 6742800,
          207.635; 6746400,57.5466666666667; 6750000,7.22499999999999; 6753600,33;
          6757200,104.22; 6760800,179.55; 6764400,206.996666666667; 6768000,96.78;
          6771600,115.453333333333; 6775200,217.215; 6778800,194.956666666667; 6782400,
          138.321666666667; 6786000,209.573333333333; 6789600,226.408333333333; 6793200,
          263.623333333333; 6796800,223.706666666667; 6800400,161.403333333333; 6804000,
          184.296666666667; 6807600,44.8416666666667; 6811200,94.465; 6814800,204.668333333333;
          6818400,202.346666666667; 6822000,202.02; 6825600,150.263333333333; 6829200,
          16.105; 6832800,80.1183333333333; 6836400,125.79; 6840000,59.1833333333333;
          6843600,199.528333333333; 6847200,170.865; 6850800,253.515; 6854400,252.453333333333;
          6858000,174.323333333333; 6861600,132.623333333333; 6865200,253.336666666667;
          6868800,215.383333333333; 6872400,234.021666666667; 6876000,167.403333333333;
          6879600,199.408333333333; 6883200,248.805; 6886800,142.988333333333; 6890400,
          179.356666666667; 6894000,199.706666666667; 6897600,181.568333333333; 6901200,
          215.178333333333; 6904800,193.635; 6908400,223.906666666667; 6912000,183.788333333333;
          6915600,201.771666666667; 6919200,184.783333333333; 6922800,160.145; 6926400,
          202.35; 6930000,174.34; 6933600,84.7766666666667; 6937200,151.546666666667;
          6940800,260.383333333333; 6944400,245.276666666667; 6948000,10.42; 6951600,
          10.42; 6955200,10.9416666666666; 6958800,10.5333333333333; 6962400,239.673333333333;
          6966000,299.978333333333; 6969600,159.701666666667; 6973200,216.47; 6976800,
          174.071666666667; 6980400,254.986666666667; 6984000,241.56; 6987600,283.69;
          6991200,295.615; 6994800,235.703333333333; 6998400,228.528333333333; 7002000,
          276.158333333333; 7005600,198.191666666667; 7009200,224.353333333333; 7012800,
          240.4; 7016400,291.721666666667; 7020000,16.93; 7023600,10.42; 7027200,82.3766666666667;
          7030800,251.941666666667; 7034400,218.878333333333; 7038000,311.448333333333;
          7041600,154.351666666667; 7045200,205.725; 7048800,143.908333333333; 7052400,
          221.675; 7056000,53.6866666666667; 7059600,6.94000000000003; 7063200,6.94000000000003;
          7066800,6.94000000000003; 7070400,192.146666666667; 7074000,299.323333333333;
          7077600,283.113333333333; 7081200,271.411666666667; 7084800,274.581666666667;
          7088400,304.788333333333; 7092000,270.623333333333; 7095600,266.908333333333;
          7099200,308.4; 7102800,305.42; 7106400,289.366666666667; 7110000,281.685;
          7113600,265.026666666667; 7117200,259.281666666667; 7120800,278.686666666667;
          7124400,305.436666666667; 7128000,270.298333333333; 7131600,243.208333333333;
          7135200,234.366666666667; 7138800,184.935; 7142400,292.455; 7146000,250.931666666667;
          7149600,196.821666666667; 7153200,6.06666666666669; 7156800,4.73833333333334;
          7160400,4.68166666666664; 7164000,4.62333333333333; 7167600,4.45166666666668;
          7171200,4.39333333333332; 7174800,4.45166666666668; 7178400,4.4483333333333;
          7182000,4.27499999999998; 7185600,4.16; 7189200,4.62166666666667; 7192800,
          4.73833333333332; 7196400,4.50833333333333; 7200000,4.56333333333336; 7203600,
          4.33500000000001; 7207200,4.27666666666664; 7210800,3.92833333333337; 7214400,
          4.10166666666666; 7218000,4.97000000000003; 7221600,4.62333333333333; 7225200,
          4.04333333333332; 7228800,3.98500000000001; 7232400,4.62166666666667; 7236000,
          6.29833333333332; 7239600,6.18333333333331; 7243200,4.91166666666663; 7246800,
          5.02666666666664; 7250400,4.97; 7254000,6.24166666666667; 7257600,6.06833333333336;
          7261200,6.47333333333336; 7264800,6.35833333333335; 7268400,6.41499999999999;
          7272000,6.12666666666667; 7275600,6.41499999999999; 7279200,6.35833333333335;
          7282800,6.18500000000003; 7286400,5.77833333333334; 7290000,5.60166666666669;
          7293600,4.85666666666665; 7297200,5.08666666666667; 7300800,5.14333333333332;
          7304400,4.97166666666666; 7308000,4.97000000000003; 7311600,4.74000000000001;
          7315200,4.85333333333335; 7318800,5.25833333333333; 7322400,6.59; 7326000,
          6.70666666666671; 7329600,5.14166666666665; 7333200,5.03; 7336800,5.25999999999999;
          7340400,5.43333333333331; 7344000,4.85333333333332; 7347600,4.67833333333331;
          7351200,6.07000000000002; 7354800,6.59; 7358400,6.59; 7362000,6.70666666666668;
          7365600,6.64833333333334; 7369200,6.29999999999998; 7372800,4.96833333333333;
          7376400,5.66166666666666; 7380000,6.29833333333332; 7383600,4.85333333333332;
          7387200,4.62166666666667; 7390800,5.77999999999997; 7394400,4.67999999999998;
          7398000,4.56499999999997; 7401600,4.44666666666669; 7405200,4.33166666666662;
          7408800,4.91166666666666; 7412400,4.96833333333333; 7416000,5.95166666666668;
          7419600,5.60499999999999; 7423200,5.48666666666665; 7426800,5.60166666666666;
          7430400,5.25833333333335; 7434000,6.47333333333336; 7437600,6.64833333333334;
          7441200,6.70666666666668; 7444800,6.64833333333334; 7448400,6.64833333333334;
          7452000,6.70666666666671; 7455600,6.53166666666667; 7459200,6.53166666666667;
          7462800,6.47333333333336; 7466400,6.47333333333336; 7470000,6.35666666666668;
          7473600,6.53166666666667; 7477200,6.29833333333332; 7480800,6.47333333333336;
          7484400,6.41500000000005; 7488000,6.29833333333332; 7491600,6.35666666666668;
          7495200,6.41499999999999; 7498800,6.29999999999998; 7502400,6.41499999999999;
          7506000,6.35666666666668; 7509600,6.06666666666669; 7513200,5.95249999999999;
          7516800,5.78; 7520400,5.77833333333334; 7524000,5.94999999999996; 7527600,
          5.66166666666663; 7531200,6.125; 7534800,6.1816666666667; 7538400,5.95166666666663;
          7542000,5.89166666666665; 7545600,5.60333333333332; 7549200,6.47333333333336;
          7552800,6.47333333333333; 7556400,6.82333333333335; 7560000,6.76499999999999;
          7563600,6.70666666666671; 7567200,7.63500000000002; 7570800,7.05499999999998;
          7574400,38.4833333333333; 7578000,58.315; 7581600,164.558333333333; 7585200,
          277.401666666667; 7588800,63.065; 7592400,29.5383333333333; 7596000,56.47;
          7599600,262.683333333333; 7603200,54.86; 7606800,146.163333333333; 7610400,
          94.1033333333334; 7614000,6.94000000000003; 7617600,6.94000000000003; 7621200,
          6.94000000000003; 7624800,6.94000000000003; 7628400,6.94000000000003; 7632000,
          6.94000000000003; 7635600,6.94000000000003; 7639200,6.94000000000003; 7642800,
          6.94000000000003; 7646400,6.94000000000003; 7650000,6.94000000000003; 7653600,
          6.94000000000003; 7657200,6.94000000000003; 7660800,6.94000000000003; 7664400,
          6.94000000000003; 7668000,6.94000000000003; 7671600,6.94000000000003; 7675200,
          6.94000000000003; 7678800,6.94000000000003; 7682400,6.94000000000003; 7686000,
          6.94000000000003; 7689600,6.94000000000003; 7693200,6.94000000000003; 7696800,
          6.94000000000003; 7700400,6.94000000000003; 7704000,6.94000000000003; 7707600,
          6.94000000000003; 7711200,6.94000000000003; 7714800,6.94000000000003; 7718400,
          6.94000000000003; 7722000,6.94000000000003; 7725600,6.94000000000003; 7729200,
          6.94000000000003; 7732800,6.94000000000003; 7736400,6.94000000000003; 7740000,
          6.94000000000003; 7743600,6.94000000000003; 7747200,6.94000000000003; 7750800,
          6.94000000000003; 7754400,6.94000000000003; 7758000,6.94000000000003; 7761600,
          6.94000000000003; 7765200,6.94000000000003; 7768800,6.94000000000003; 7772400,
          6.94000000000003; 7776000,6.94000000000003; 7779600,6.94000000000003; 7783200,
          6.94000000000003; 7786800,6.94000000000003; 7790400,6.94000000000003; 7794000,
          6.94000000000003; 7797600,6.94000000000003; 7801200,6.94000000000003; 7804800,
          6.94000000000003; 7808400,6.94000000000003; 7812000,6.94000000000003; 7815600,
          6.94000000000003; 7819200,6.94000000000003; 7822800,6.94000000000003; 7826400,
          6.94000000000003; 7830000,6.94000000000003; 7833600,6.94000000000003; 7837200,
          6.94000000000003; 7840800,6.94000000000003; 7844400,6.94000000000003; 7848000,
          6.94000000000003; 7851600,6.94000000000003; 7855200,6.94000000000003; 7858800,
          6.94000000000003; 7862400,6.94000000000003; 7866000,6.94000000000003; 7869600,
          6.94000000000003; 7873200,6.94000000000003; 7876800,6.94000000000003; 7880400,
          6.94000000000003; 7884000,6.94000000000003; 7887600,6.94000000000003; 7891200,
          6.94000000000003; 7894800,6.94000000000003; 7898400,6.94000000000003; 7902000,
          6.94000000000003; 7905600,6.94000000000003; 7909200,6.94000000000003; 7912800,
          6.94000000000003; 7916400,6.94000000000003; 7920000,6.94000000000003; 7923600,
          6.94000000000003; 7927200,6.94000000000003; 7930800,6.94000000000003; 7934400,
          6.94000000000003; 7938000,6.94000000000003; 7941600,6.94000000000003; 7945200,
          6.94000000000003; 7948800,6.94000000000003; 7952400,6.94000000000003; 7956000,
          6.94000000000003; 7959600,6.94000000000003; 7963200,6.94000000000003; 7966800,
          6.94000000000003; 7970400,6.94000000000003; 7974000,6.94000000000003; 7977600,
          6.94000000000003; 7981200,6.94000000000003; 7984800,6.94000000000003; 7988400,
          6.94000000000003; 7992000,6.94000000000003; 7995600,6.94000000000003; 7999200,
          6.94000000000003; 8002800,6.94000000000003; 8006400,6.94000000000003; 8010000,
          6.94000000000003; 8013600,6.94000000000003; 8017200,6.94000000000003; 8020800,
          6.94000000000003; 8024400,6.94000000000003; 8028000,6.94000000000003; 8031600,
          6.94000000000003; 8035200,6.94000000000003; 8038800,6.94000000000003; 8042400,
          6.94000000000003; 8046000,6.94000000000003; 8049600,6.94000000000003; 8053200,
          6.94000000000003; 8056800,6.94000000000003; 8060400,6.94000000000003; 8064000,
          6.94000000000003; 8067600,6.94000000000003; 8071200,6.94000000000003; 8074800,
          6.94000000000003; 8078400,6.94000000000003; 8082000,6.94000000000003; 8085600,
          6.94000000000003; 8089200,6.94000000000003; 8092800,6.94000000000003; 8096400,
          6.94000000000003; 8100000,6.94000000000003; 8103600,6.94000000000003; 8107200,
          6.94000000000003; 8110800,6.94000000000003; 8114400,6.94000000000003; 8118000,
          6.94000000000003; 8121600,6.94000000000003; 8125200,6.94000000000003; 8128800,
          6.94000000000003; 8132400,6.94000000000003; 8136000,6.94000000000003; 8139600,
          6.94000000000003; 8143200,6.94000000000003; 8146800,6.94000000000003; 8150400,
          6.94000000000003; 8154000,6.94000000000003; 8157600,6.94000000000003; 8161200,
          6.94000000000003; 8164800,6.94000000000003; 8168400,6.94000000000003; 8172000,
          6.94000000000003; 8175600,6.94000000000003; 8179200,6.94000000000003; 8182800,
          6.94000000000003; 8186400,6.94000000000003; 8190000,6.94000000000003; 8193600,
          6.94000000000003; 8197200,6.94000000000003; 8200800,6.94000000000003; 8204400,
          6.94000000000003; 8208000,6.94000000000003; 8211600,6.94000000000003; 8215200,
          6.94000000000003; 8218800,6.94000000000003; 8222400,6.94000000000003; 8226000,
          6.94000000000003; 8229600,6.94000000000003; 8233200,6.94000000000003; 8236800,
          6.94000000000003; 8240400,6.94000000000003; 8244000,6.94000000000003; 8247600,
          6.94000000000003; 8251200,6.94000000000003; 8254800,6.94000000000003; 8258400,
          6.94000000000003; 8262000,6.94000000000003; 8265600,6.94000000000003; 8269200,
          6.94000000000003; 8272800,6.94000000000003; 8276400,6.94000000000003; 8280000,
          6.94000000000003; 8283600,6.94000000000003; 8287200,6.94000000000003; 8290800,
          6.94000000000003; 8294400,6.94000000000003; 8298000,6.94000000000003; 8301600,
          6.94000000000003; 8305200,6.94000000000003; 8308800,6.94000000000003; 8312400,
          6.94000000000003; 8316000,6.94000000000003; 8319600,6.94000000000003; 8323200,
          6.94000000000003; 8326800,6.94000000000003; 8330400,6.94000000000003; 8334000,
          6.94000000000003; 8337600,6.94000000000003; 8341200,6.94000000000003; 8344800,
          6.94000000000003; 8348400,6.94000000000003; 8352000,6.94000000000003; 8355600,
          6.94000000000003; 8359200,6.94000000000003; 8362800,6.94000000000003; 8366400,
          6.94000000000003; 8370000,6.94000000000003; 8373600,6.94000000000003; 8377200,
          6.94000000000003; 8380800,6.94000000000003; 8384400,6.94000000000003; 8388000,
          6.94000000000003; 8391600,6.94000000000003; 8395200,6.94000000000003; 8398800,
          6.94000000000003; 8402400,6.94000000000003; 8406000,6.94000000000003; 8409600,
          6.94000000000003; 8413200,6.94000000000003; 8416800,6.94000000000003; 8420400,
          6.94000000000003; 8424000,98.1866666666667; 8427600,176.058333333333; 8431200,
          175.153333333333; 8434800,214.471666666667; 8438400,269.825; 8442000,194.483333333333;
          8445600,181.756666666667; 8449200,189.405; 8452800,178.963333333333; 8456400,
          139.635; 8460000,291.908333333333; 8463600,268.905833333333; 8467200,80.7366666666667;
          8470800,95.3616666666667; 8474400,341.205; 8478000,156.728333333333; 8481600,
          280.215; 8485200,320.715; 8488800,248.981666666667; 8492400,332.335; 8496000,
          280.906666666667; 8499600,304.425; 8503200,251.558333333333; 8506800,259.316666666667;
          8510400,248.233333333333; 8514000,271.84; 8517600,142.068333333333; 8521200,
          280.346666666667; 8524800,174.55; 8528400,235.086666666667; 8532000,293.971666666667;
          8535600,281.836666666667; 8539200,323.621666666667; 8542800,311.99; 8546400,
          260.908333333333; 8550000,265.534166666667; 8553600,274.501666666667; 8557200,
          279.268333333333; 8560800,245.026666666667; 8564400,264.19; 8568000,263.035;
          8571600,326.965; 8575200,254.61; 8578800,291.126666666667; 8582400,297.441666666667;
          8586000,265.678333333333; 8589600,186.838333333333; 8593200,316.575; 8596800,
          314.875; 8600400,319.208333333333; 8604000,211.32; 8607600,292.858333333333;
          8611200,224.851666666667; 8614800,220.045; 8618400,102.216666666667; 8622000,
          294.221666666667; 8625600,170.718333333333; 8629200,208.855; 8632800,126.408333333333;
          8636400,138.479166666667; 8640000,85.1483333333333; 8643600,10.9983333333333;
          8647200,10.42; 8650800,163.493333333333; 8654400,154.826666666667; 8658000,
          34.3716666666666; 8661600,44.8183333333333; 8665200,189.485; 8668800,235.413333333333;
          8672400,201.835; 8676000,284.216666666667; 8679600,279.876666666667; 8683200,
          241.165; 8686800,309.658333333333; 8690400,253.626666666667; 8694000,264.281666666667;
          8697600,217.945; 8701200,102.356666666667; 8704800,170.13; 8708400,234.961666666667;
          8712000,36.1683333333333; 8715600,158.883333333333; 8719200,121.565; 8722800,
          143.801616666667; 8726400,130.696666666667; 8730000,55.2966666666667; 8733600,
          114.998333333333; 8737200,82.3283333333333; 8740800,134.785; 8744400,186.85;
          8748000,241.721666666667; 8751600,184.09; 8755200,234.531666666667; 8758800,
          235.606666666667; 8762400,268.228333333333; 8766000,278.258333333333; 8769600,
          292.745; 8773200,282.99; 8776800,243.99; 8780400,323.631666666667; 8784000,
          208.368333333333; 8787600,221.805; 8791200,160.6; 8794800,140.936666666667;
          8798400,182.386666666667; 8802000,271.891666666667; 8805600,260.661666666667;
          8809200,174.645833333333; 8812800,234.373333333333; 8816400,70.3016666666667;
          8820000,189.805; 8823600,169.203333333333; 8827200,123.23; 8830800,222.193333333333;
          8834400,238.3; 8838000,336.856666666667; 8841600,267.075; 8845200,277.13;
          8848800,337.853333333333; 8852400,314.846666666667; 8856000,154.31; 8859600,
          152.018333333333; 8863200,122.335; 8866800,97.0016666666667; 8870400,179.976666666667;
          8874000,256.856666666667; 8877600,233.125; 8881200,149.416666666667; 8884800,
          237.426666666667; 8888400,202.545; 8892000,149.286666666667; 8895600,232.283283333333;
          8899200,70.86; 8902800,184.008333333333; 8906400,258.456666666667; 8910000,
          218.125; 8913600,138.036666666667; 8917200,264.165; 8920800,304.625; 8924400,
          269.558333333333; 8928000,232.605; 8931600,207.955; 8935200,188.011666666667;
          8938800,156.166666666667; 8942400,182.71; 8946000,133.643333333333; 8949600,
          159.786666666667; 8953200,38.8516666666667; 8956800,135.445; 8960400,91.2366666666667;
          8964000,124.436666666667; 8967600,210.485; 8971200,169.393333333333; 8974800,
          144.413333333333; 8978400,48.55; 8982000,35.0925; 8985600,119.186666666667;
          8989200,114.608333333333; 8992800,146.303333333333; 8996400,214.866666666667;
          9000000,180.888333333333; 9003600,175.083333333333; 9007200,111.148333333333;
          9010800,220.998333333333; 9014400,218.99; 9018000,214.403333333333; 9021600,
          236.883333333333; 9025200,350.228333333333; 9028800,247.56; 9032400,339.218333333333;
          9036000,249.011666666667; 9039600,287.781666666667; 9043200,214.426666666667;
          9046800,219.33; 9050400,232.361666666667; 9054000,306.538333333333; 9057600,
          158.633333333333; 9061200,162.458333333333; 9064800,151.575; 9068400,188.4925;
          9072000,203.788333333333; 9075600,310.483333333333; 9079200,189.698333333333;
          9082800,217.128333333333; 9086400,101.825; 9090000,128.29; 9093600,175.413333333333;
          9097200,156.465; 9100800,233.92; 9104400,275.221666666667; 9108000,306.67;
          9111600,301.636666666667; 9115200,271.345; 9118800,284.816666666667; 9122400,
          239.251666666667; 9126000,229.953333333333; 9129600,222.761666666667; 9133200,
          197.236666666667; 9136800,241.62; 9140400,231.663333333333; 9144000,247.33;
          9147600,274.955; 9151200,171.713333333333; 9154800,227.733328333333; 9158400,
          173.616666666667; 9162000,191.811666666667; 9165600,227.386666666667; 9169200,
          310.186666666667; 9172800,346.213333333333; 9176400,357.001666666667; 9180000,
          307.591666666667; 9183600,329.991666666667; 9187200,181.516666666667; 9190800,
          277.951666666667; 9194400,332.175; 9198000,279.916666666667; 9201600,277.301666666667;
          9205200,334.106666666667; 9208800,257.081666666667; 9212400,198.668333333333;
          9216000,94.2383333333333; 9219600,222.046666666667; 9223200,28.7433333333333;
          9226800,120.338333333333; 9230400,18.3716666666667; 9234000,149.966666666667;
          9237600,190.081666666667; 9241200,214.0475; 9244800,13.7833333333333; 9248400,
          144.758333333333; 9252000,93.9933333333333; 9255600,99.3316666666667; 9259200,
          172.626666666667; 9262800,75.5316666666667; 9266400,100.185; 9270000,55.0516666666667;
          9273600,50.13; 9277200,152.075; 9280800,238.816666666667; 9284400,236.028333333333;
          9288000,125.868333333333; 9291600,197.623333333333; 9295200,133.323333333333;
          9298800,70.48; 9302400,81.305; 9306000,211.413333333333; 9309600,214.345;
          9313200,214.97; 9316800,242.665; 9320400,255.25; 9324000,298.728333333333;
          9327600,68.1833333333333; 9331200,192.71; 9334800,256.031666666667; 9338400,
          70.445; 9342000,10.4183333333333; 9345600,10.3616666666667; 9349200,28.7066666666666;
          9352800,219.225; 9356400,223.566666666667; 9360000,309.056666666667; 9363600,
          224.091666666667; 9367200,257.675; 9370800,242.168333333333; 9374400,253.958333333333;
          9378000,357.333333333333; 9381600,221.715; 9385200,200.941666666667; 9388800,
          225.898333333333; 9392400,242.746666666667; 9396000,231.956666666667; 9399600,
          244.71; 9403200,261.07; 9406800,190.245; 9410400,196.39; 9414000,160.11;
          9417600,267.223333333333; 9421200,231.316666666667; 9424800,239.513333333333;
          9428400,267.958333333333; 9432000,292.976666666667; 9435600,300.641666666667;
          9439200,309.873333333333; 9442800,278.816666666667; 9446400,193.573333333333;
          9450000,241.07; 9453600,265.19; 9457200,173.821666666667; 9460800,288.26;
          9464400,286.185; 9468000,264.725; 9471600,252.971666666667; 9475200,232.031666666667;
          9478800,166.376666666667; 9482400,223.548333333333; 9486000,255.341666666667;
          9489600,269.635; 9493200,277.366666666667; 9496800,269.221666666667; 9500400,
          222.153333333333; 9504000,242.605; 9507600,265.078333333333; 9511200,212.73;
          9514800,293.856666666667; 9518400,260.731666666667; 9522000,299.313333333333;
          9525600,268.53; 9529200,242.981666666667; 9532800,224.508333333333; 9536400,
          271.186666666667; 9540000,241.783333333333; 9543600,253.021666666667; 9547200,
          244.411666666667; 9550800,304.558333333333; 9554400,250.401666666667; 9558000,
          203.036666666667; 9561600,315.235; 9565200,257.688333333333; 9568800,262.893333333333;
          9572400,308.241666666667; 9576000,228.673333333333; 9579600,271.821666666667;
          9583200,309.203333333333; 9586800,358.333333333333; 9590400,169.295; 9594000,
          128.931666666667; 9597600,149.175; 9601200,110.415; 9604800,36.9366666666666;
          9608400,230.686666666667; 9612000,203.035; 9615600,248.55; 9619200,210.391666666667;
          9622800,193.036666666667; 9626400,247.376666666667; 9630000,317.933333333333;
          9633600,286.525; 9637200,249.785; 9640800,200.916666666667; 9644400,252.646666666667;
          9648000,21.4716666666667; 9651600,6.94000000000003; 9655200,6.94000000000003;
          9658800,6.94000000000003; 9662400,6.94000000000003; 9666000,6.94000000000003;
          9669600,6.94000000000003; 9673200,6.94000000000003; 9676800,6.94000000000003;
          9680400,6.94000000000003; 9684000,6.94000000000003; 9687600,6.94000000000003;
          9691200,6.94000000000003; 9694800,6.94000000000003; 9698400,6.94000000000003;
          9702000,6.94000000000003; 9705600,6.94000000000003; 9709200,6.94000000000003;
          9712800,6.94000000000003; 9716400,6.94000000000003; 9720000,6.94000000000003;
          9723600,6.94000000000003; 9727200,6.94000000000003; 9730800,6.94000000000003;
          9734400,6.94000000000003; 9738000,6.94000000000003; 9741600,6.94000000000003;
          9745200,6.94000000000003; 9748800,6.94000000000003; 9752400,6.94000000000003;
          9756000,6.94000000000003; 9759600,6.94000000000003; 9763200,6.94000000000003;
          9766800,6.94000000000003; 9770400,6.94000000000003; 9774000,6.94000000000003;
          9777600,6.94000000000003; 9781200,6.94000000000003; 9784800,6.94000000000003;
          9788400,6.94000000000003; 9792000,6.94000000000003; 9795600,65.285; 9799200,
          305.6; 9802800,106.606666666667; 9806400,268.631666666667; 9810000,7.4616666666667;
          9813600,27.3383333333333; 9817200,251.018333333333; 9820800,268.36; 9824400,
          264.665; 9828000,303.873333333333; 9831600,271.98; 9835200,290.076666666667;
          9838800,261.953333333333; 9842400,229.205; 9846000,320.633333333333; 9849600,
          308.493333333333; 9853200,290.168333333333; 9856800,230.875; 9860400,319.68;
          9864000,336.235; 9867600,311.28; 9871200,272.155; 9874800,203.496666666667;
          9878400,330.05; 9882000,286.541666666667; 9885600,302.373333333333; 9889200,
          301.81; 9892800,234.35; 9896400,311.258333333333; 9900000,264.495; 9903600,
          313.603333333333; 9907200,238.41; 9910800,328.705; 9914400,295.036666666667;
          9918000,286.663333333333; 9921600,237.268333333333; 9925200,262.545; 9928800,
          78.2416666666667; 9932400,136.829216666667; 9936000,219.86; 9939600,265.385;
          9943200,263.503333333333; 9946800,197.373333333333; 9950400,262.118333333333;
          9954000,257.73; 9957600,300.216666666667; 9961200,329.135; 9964800,327.785;
          9968400,247.961666666667; 9972000,285.856666666667; 9975600,286.755; 9979200,
          288.585; 9982800,264.866666666667; 9986400,268.156666666667; 9990000,153.153333333333;
          9993600,261.373333333333; 9997200,272.383333333333; 10000800,266.726666666667;
          10004400,66.755; 10008000,82.3966666666667; 10011600,48.185; 10015200,125.821666666667;
          10018800,153.83; 10022400,250.646666666667; 10026000,143.76; 10029600,166.528333333333;
          10033200,123.265; 10036800,238.35; 10040400,131.106666666667; 10044000,60.6816666666667;
          10047600,237.096666666667; 10051200,153.225; 10054800,277.655; 10058400,
          145.068333333333; 10062000,177.273333333333; 10065600,151.146666666667;
          10069200,143.57; 10072800,214.6; 10076400,255.276666666667; 10080000,274.835;
          10083600,263.981666666667; 10087200,167.183333333333; 10090800,238.101666666667;
          10094400,141.901666666667; 10098000,159.648333333333; 10101600,154.18; 10105200,
          12.0683333333334; 10108800,105.966666666667; 10112400,212.18; 10116000,179.606666666667;
          10119600,63.5883333333333; 10123200,111.225; 10126800,136.185; 10130400,
          288.325; 10134000,236.245; 10137600,309.911666666667; 10141200,260.02; 10144800,
          278.005; 10148400,299.55; 10152000,321.24; 10155600,256.01; 10159200,303.815;
          10162800,308.633333333333; 10166400,281.46; 10170000,183.836666666667; 10173600,
          205.303333333333; 10177200,245.555; 10180800,227.206666666667; 10184400,
          125.425; 10188000,56.0066666666667; 10191600,48.9541666666667; 10195200,
          138.676666666667; 10198800,193.955; 10202400,196.193333333333; 10206000,
          229.606666666667; 10209600,145.385; 10213200,145.328333333333; 10216800,
          216.83; 10220400,286.84; 10224000,308.5; 10227600,326.126666666667; 10231200,
          254.118333333333; 10234800,245.563333333333; 10238400,341.551666666667;
          10242000,315.311666666667; 10245600,333.255; 10249200,320.623333333333;
          10252800,301.093333333333; 10256400,314.171666666667; 10260000,327.786666666667;
          10263600,319.253333333333; 10267200,214.441666666667; 10270800,283.6; 10274400,
          219.025; 10278000,134.9725; 10281600,107.436666666667; 10285200,79.9183333333333;
          10288800,116.023333333333; 10292400,11.5183333333333; 10296000,20.0666666666667;
          10299600,156.748333333333; 10303200,186.938333333333; 10306800,261.525;
          10310400,237.575; 10314000,245.426666666667; 10317600,301.551666666667;
          10321200,243.401666666667; 10324800,254.206666666667; 10328400,303.685;
          10332000,305.996666666667; 10335600,282.016666666667; 10339200,195.556666666667;
          10342800,127.026666666667; 10346400,130.818333333333; 10350000,99.5866666666667;
          10353600,190.72; 10357200,187.151666666667; 10360800,249.163333333333; 10364400,
          180.433333333333; 10368000,214.01; 10371600,207.501666666667; 10375200,218.946666666667;
          10378800,244.208333333333; 10382400,294.36; 10386000,231.246666666667; 10389600,
          213.301666666667; 10393200,280.755; 10396800,250.063333333333; 10400400,
          293.03; 10404000,149.705; 10407600,357.006666666667; 10411200,235.858333333333;
          10414800,257.51; 10418400,201.365; 10422000,312.646666666667; 10425600,219.976666666667;
          10429200,189.11; 10432800,206.488333333333; 10436400,141.986666666667; 10440000,
          93.7466666666667; 10443600,126.188333333333; 10447200,139.415; 10450800,
          239.59])
      annotation (Placement(transformation(extent={{-32,-14},{-26,-8}})));
    Modelica.Blocks.Sources.TimeTable WindSpeed(table=[0,0.3; 3600,0.483333333333333;
          7200,0.648333333333333; 10800,0.366666666666667; 14400,0.366666666666667;
          18000,0.748333333333333; 21600,0.831666666666667; 25200,0.35; 28800,0.631666666666667;
          32400,0.581666666666667; 36000,0.6; 39600,0.5; 43200,0.681666666666667;
          46800,1.08; 50400,2.17333333333333; 54000,2.39; 57600,2.42333333333333;
          61200,1.84166666666667; 64800,1.21166666666667; 68400,0.3; 72000,0.416666666666667;
          75600,0.55; 79200,0.965; 82800,0.783333333333333; 86400,0.716666666666667;
          90000,0.483333333333333; 93600,0.516666666666667; 97200,0.383333333333333;
          100800,0.516666666666667; 104400,0.366666666666667; 108000,0.633333333333333;
          111600,0.516666666666667; 115200,0.896666666666667; 118800,0.383333333333333;
          122400,0.615; 126000,1.27833333333333; 129600,0.881666666666667; 133200,
          0.98; 136800,1.525; 140400,1.50833333333333; 144000,1.44166666666667; 147600,
          1.36; 151200,0.383333333333333; 154800,0.431666666666667; 158400,0.565;
          162000,0.781666666666667; 165600,0.433333333333333; 169200,0.765; 172800,
          1.045; 176400,0.483333333333333; 180000,0.681666666666667; 183600,0.581666666666667;
          187200,0.631666666666667; 190800,0.895; 194400,1.01166666666667; 198000,
          1.04666666666667; 201600,0.45; 205200,0.816666666666667; 208800,0.7; 212400,
          1.14333333333333; 216000,1.475; 219600,1.50833333333333; 223200,2.555; 226800,
          2.12333333333333; 230400,2.00666666666667; 234000,2.42333333333333; 237600,
          2.62166666666667; 241200,1.825; 244800,2.05666666666667; 248400,2.95333333333333;
          252000,3.10333333333333; 255600,4.23; 259200,3.68166666666667; 262800,3.88166666666667;
          266400,2.72166666666667; 270000,2.00666666666667; 273600,2.15666666666667;
          277200,2.37333333333333; 280800,1.32666666666667; 284400,2.05666666666667;
          288000,3.50166666666667; 291600,3.20333333333333; 295200,1.70666666666667;
          298800,1.57333333333333; 302400,1.77333333333333; 306000,1.02833333333333;
          309600,1.85666666666667; 313200,1.79; 316800,2.04; 320400,2.67166666666667;
          324000,2.15666666666667; 327600,2.14; 331200,1.85833333333333; 334800,1.87333333333333;
          338400,2.35666666666667; 342000,2.77166666666667; 345600,3.13666666666667;
          349200,2.82; 352800,2.38833333333333; 356400,1.94; 360000,1.74166666666667;
          363600,1.90666666666667; 367200,1.99; 370800,1.79; 374400,2.02333333333333;
          378000,2.35666666666667; 381600,2.05666666666667; 385200,2.105; 388800,1.79166666666667;
          392400,2.05666666666667; 396000,1.65666666666667; 399600,1.07666666666667;
          403200,0.433333333333333; 406800,1.30833333333333; 410400,1.72333333333333;
          414000,1.59; 417600,1.62333333333333; 421200,1.24166666666667; 424800,0.865;
          428400,0.98; 432000,1.675; 435600,2.555; 439200,2.89; 442800,2.09; 446400,
          1.95666666666667; 450000,1.99; 453600,1.72333333333333; 457200,1.17666666666667;
          460800,2.10666666666667; 464400,2.47; 468000,1.24166666666667; 471600,1.525;
          475200,2.29; 478800,2.34; 482400,1.47333333333333; 486000,1.75666666666667;
          489600,1.47333333333333; 493200,1.44; 496800,2.32333333333333; 500400,1.77333333333333;
          504000,2.04; 507600,2.04; 511200,3.05333333333333; 514800,2.83833333333333;
          518400,2.25666666666667; 522000,2.40666666666667; 525600,2.805; 529200,2.17333333333333;
          532800,2.39; 536400,1.85666666666667; 540000,3.13666666666667; 543600,4.82666666666667;
          547200,4.74666666666667; 550800,5.65666666666667; 554400,5.67166666666667;
          558000,4.87833333333333; 561600,3.93; 565200,3.13666666666667; 568800,1.675;
          572400,1.35666666666667; 576000,1.17666666666667; 579600,1.45833333333333;
          583200,1.75666666666667; 586800,1.01333333333333; 590400,1.46; 594000,0.815;
          597600,0.96; 601200,0.648333333333333; 604800,0.633333333333333; 608400,
          1.195; 612000,1.575; 615600,1.44333333333333; 619200,0.233333333333333;
          622800,0.796666666666667; 626400,1.49; 630000,1.59166666666667; 633600,1.89;
          637200,3.02; 640800,2.705; 644400,4.04666666666667; 648000,3.335; 651600,
          2.755; 655200,3.20333333333333; 658800,3.48333333333333; 662400,3.99666666666667;
          666000,3.99666666666667; 669600,4.21166666666667; 673200,4.04666666666667;
          676800,4.16166666666667; 680400,4.13166666666667; 684000,4.145; 687600,2.32333333333333;
          691200,1.36166666666667; 694800,0.233333333333333; 698400,0.166666666666667;
          702000,0.683333333333333; 705600,0.55; 709200,0.946666666666667; 712800,
          0.515; 716400,0.533333333333333; 720000,0.581666666666667; 723600,0.383333333333333;
          727200,0.383333333333333; 730800,0.63; 734400,1.295; 738000,2.57166666666667;
          741600,1.74; 745200,1.49; 748800,1.12833333333333; 752400,1.42666666666667;
          756000,2.14; 759600,1.97333333333333; 763200,2.82; 766800,2.22333333333333;
          770400,2.52333333333333; 774000,3.20333333333333; 777600,2.62; 781200,4.04666666666667;
          784800,4.31333333333333; 788400,2.63833333333333; 792000,2.34; 795600,3.385;
          799200,1.55833333333333; 802800,1.76; 806400,0.713333333333333; 810000,1.02666666666667;
          813600,0.416666666666667; 817200,0.366666666666667; 820800,0.416666666666667;
          824400,0.731666666666667; 828000,1.295; 831600,1.12666666666667; 835200,
          2.02333333333333; 838800,2.35666666666667; 842400,2.455; 846000,2.74; 849600,
          2.77166666666667; 853200,2.40666666666667; 856800,2.83833333333333; 860400,
          2.22333333333333; 864000,2.72; 867600,2.02333333333333; 871200,2.29; 874800,
          1.64166666666667; 878400,1.31; 882000,1.80666666666667; 885600,2.42333333333333;
          889200,2.53833333333333; 892800,2.27333333333333; 896400,2.655; 900000,3.66666666666667;
          903600,2.72166666666667; 907200,2.83666666666667; 910800,2.55666666666667;
          914400,2.92; 918000,2.55333333333333; 921600,2.95333333333333; 925200,3.02;
          928800,3.45166666666667; 932400,2.18833333333333; 936000,2.43833333333333;
          939600,2.10666666666667; 943200,2.09; 946800,2.92; 950400,2.17333333333333;
          954000,2.705; 957600,3.11833333333333; 961200,1.41; 964800,1.24333333333333;
          968400,2.53833333333333; 972000,3.25166666666667; 975600,2.58666666666667;
          979200,2.97; 982800,2.53833333333333; 986400,1.90833333333333; 990000,1.12833333333333;
          993600,1.01166666666667; 997200,1.64; 1000800,1.975; 1004400,1.395; 1008000,
          2.24; 1011600,2.705; 1015200,3.00333333333333; 1018800,2.50333333333333;
          1022400,1.60666666666667; 1026000,1.89166666666667; 1029600,3.11833333333333;
          1033200,2.12166666666667; 1036800,1.69; 1040400,2.05666666666667; 1044000,
          1.75833333333333; 1047600,1.345; 1051200,1.425; 1054800,2.455; 1058400,1.21166666666667;
          1062000,0.631666666666667; 1065600,0.833333333333333; 1069200,1.01333333333333;
          1072800,1.125; 1076400,1.01; 1080000,1.07833333333333; 1083600,0.83; 1087200,
          0.98; 1090800,0.698333333333333; 1094400,0.831666666666667; 1098000,1.02833333333333;
          1101600,0.516666666666667; 1105200,0.65; 1108800,1.17833333333333; 1112400,
          1.325; 1116000,1.11166666666667; 1119600,1.29; 1123200,1.525; 1126800,1.095;
          1130400,1.14333333333333; 1134000,1.20666666666667; 1137600,1.42333333333333;
          1141200,0.931666666666667; 1144800,1.36; 1148400,1.32833333333333; 1152000,
          0.681666666666667; 1155600,0.166666666666667; 1159200,0; 1162800,0; 1166400,
          0.315; 1170000,0.4; 1173600,0.548333333333333; 1177200,0.25; 1180800,0.4;
          1184400,0.533333333333333; 1188000,0.548333333333333; 1191600,1.37666666666667;
          1195200,1.07833333333333; 1198800,0.88; 1202400,0.366666666666667; 1206000,
          0.483333333333333; 1209600,1.12833333333333; 1213200,0.763333333333333;
          1216800,0.963333333333333; 1220400,0.515; 1224000,0.696666666666667; 1227600,
          0.415; 1231200,0.63; 1234800,0.4; 1238400,0.483333333333333; 1242000,0.698333333333333;
          1245600,1.24333333333333; 1249200,1.22833333333333; 1252800,0.863333333333333;
          1256400,1.57666666666667; 1260000,0.946666666666667; 1263600,1.19333333333333;
          1267200,0.465; 1270800,0.946666666666666; 1274400,0.83; 1278000,0.846666666666667;
          1281600,0.996666666666667; 1285200,0.666666666666667; 1288800,0.416666666666667;
          1292400,0.765; 1296000,0.566666666666667; 1299600,0.631666666666667; 1303200,
          0.466666666666667; 1306800,0.25; 1310400,0.383333333333333; 1314000,0.15;
          1317600,0.15; 1321200,0.116666666666667; 1324800,0.366666666666667; 1328400,
          0.233333333333333; 1332000,0.531666666666667; 1335600,1.31; 1339200,0.978333333333333;
          1342800,2.49; 1346400,2.20666666666667; 1350000,1.01166666666667; 1353600,
          0.483333333333333; 1357200,1.31; 1360800,1.16166666666667; 1364400,2.225;
          1368000,1.02666666666667; 1371600,0.846666666666667; 1375200,0.65; 1378800,
          0.75; 1382400,0.483333333333333; 1386000,0.348333333333333; 1389600,0.25;
          1393200,0.366666666666667; 1396800,0.283333333333333; 1400400,0.55; 1404000,
          0.3; 1407600,0.416666666666667; 1411200,0.25; 1414800,0.25; 1418400,0.45;
          1422000,0.5; 1425600,0.648333333333333; 1429200,0.583333333333333; 1432800,
          1.40833333333333; 1436400,1.60833333333333; 1440000,1.26; 1443600,0.928333333333333;
          1447200,1.375; 1450800,1.55833333333333; 1454400,1.82333333333333; 1458000,
          1.65833333333333; 1461600,1.095; 1465200,0.798333333333333; 1468800,1.03;
          1472400,1.12666666666667; 1476000,0.45; 1479600,0.533333333333333; 1483200,
          0.581666666666667; 1486800,0.846666666666667; 1490400,0.566666666666667;
          1494000,0.366666666666667; 1497600,0.383333333333333; 1501200,0.995; 1504800,
          1.09666666666667; 1508400,0.863333333333333; 1512000,0.913333333333333;
          1515600,1.01; 1519200,0.516666666666667; 1522800,0.945; 1526400,0.35; 1530000,
          0.416666666666667; 1533600,0.665; 1537200,0.3; 1540800,0.466666666666667;
          1544400,0.333333333333333; 1548000,0.283333333333333; 1551600,0.25; 1555200,
          0.216666666666667; 1558800,0.25; 1562400,0.166666666666667; 1566000,0.266666666666667;
          1569600,0.366666666666667; 1573200,0.516666666666667; 1576800,0.398333333333333;
          1580400,0.648333333333333; 1584000,0.4; 1587600,0.483333333333333; 1591200,
          0.333333333333333; 1594800,0.5; 1598400,0.4; 1602000,0.4; 1605600,0.5; 1609200,
          0.5; 1612800,1.22666666666667; 1616400,0.233333333333333; 1620000,0.116666666666667;
          1623600,0.133333333333333; 1627200,0.2; 1630800,0.316666666666667; 1634400,
          0.183333333333333; 1638000,0.483333333333333; 1641600,0.45; 1645200,0.166666666666667;
          1648800,0.583333333333333; 1652400,0.133333333333333; 1656000,0.366666666666667;
          1659600,0.416666666666667; 1663200,0.333333333333333; 1666800,0.383333333333333;
          1670400,0.416666666666667; 1674000,0.416666666666667; 1677600,0.633333333333333;
          1681200,0.763333333333333; 1684800,1.22833333333333; 1688400,1.03; 1692000,
          0.945; 1695600,1.44; 1699200,1.06; 1702800,0.698333333333333; 1706400,0.466666666666667;
          1710000,0.383333333333333; 1713600,1.14333333333333; 1717200,1.22666666666667;
          1720800,1.49166666666667; 1724400,1.77333333333333; 1728000,1.92333333333333;
          1731600,1.045; 1735200,1.17833333333333; 1738800,1.75666666666667; 1742400,
          0.895; 1746000,0.748333333333333; 1749600,0.266666666666667; 1753200,1.64;
          1756800,2.14; 1760400,2.09; 1764000,2.67; 1767600,2.44; 1771200,2.09; 1774800,
          2.29; 1778400,2.00666666666667; 1782000,1.575; 1785600,1.85666666666667;
          1789200,1.79; 1792800,1.49333333333333; 1796400,2.19; 1800000,2.48833333333333;
          1803600,1.87333333333333; 1807200,0.666666666666667; 1810800,0.833333333333333;
          1814400,0.7; 1818000,0.646666666666667; 1821600,0.433333333333333; 1825200,
          0.6; 1828800,0.666666666666667; 1832400,0.5; 1836000,0.683333333333333;
          1839600,0.433333333333333; 1843200,0.65; 1846800,0.831666666666667; 1850400,
          0.7; 1854000,0.731666666666667; 1857600,0.766666666666667; 1861200,0.815;
          1864800,0.633333333333333; 1868400,0.648333333333333; 1872000,0.416666666666667;
          1875600,0.533333333333333; 1879200,0.616666666666667; 1882800,0.4; 1886400,
          0.3; 1890000,0.533333333333333; 1893600,0.831666666666667; 1897200,0.515;
          1900800,0.515; 1904400,0.366666666666667; 1908000,0.5; 1911600,0.433333333333333;
          1915200,0.35; 1918800,0.233333333333333; 1922400,0.896666666666667; 1926000,
          0.333333333333333; 1929600,0.515; 1933200,0.683333333333333; 1936800,0.65;
          1940400,0.598333333333333; 1944000,0.995; 1947600,1.12666666666667; 1951200,
          0.781666666666667; 1954800,0.633333333333333; 1958400,0.466666666666667;
          1962000,0.831666666666667; 1965600,2.02333333333333; 1969200,1.62333333333333;
          1972800,1.295; 1976400,0.815; 1980000,0.748333333333333; 1983600,0.533333333333333;
          1987200,0.516666666666667; 1990800,0.55; 1994400,0.531666666666667; 1998000,
          0.25; 2001600,0.433333333333333; 2005200,0.4; 2008800,0.533333333333333;
          2012400,0.316666666666667; 2016000,0.516666666666667; 2019600,0.616666666666667;
          2023200,0.746666666666667; 2026800,0.945; 2030400,0.666666666666667; 2034000,
          0.765; 2037600,0.896666666666667; 2041200,0.6; 2044800,0.415; 2048400,0.781666666666667;
          2052000,0.516666666666667; 2055600,0.548333333333333; 2059200,0.616666666666667;
          2062800,0.516666666666667; 2066400,0.763333333333333; 2070000,0.945; 2073600,
          0.583333333333333; 2077200,0.433333333333333; 2080800,0.448333333333333;
          2084400,0.483333333333333; 2088000,0.166666666666667; 2091600,0.3; 2095200,
          0.55; 2098800,0.233333333333333; 2102400,0.383333333333333; 2106000,0.548333333333333;
          2109600,0.5; 2113200,0.483333333333333; 2116800,0.58; 2120400,1.195; 2124000,
          1.29333333333333; 2127600,0.45; 2131200,0.631666666666667; 2134800,0.748333333333333;
          2138400,0.65; 2142000,0.3; 2145600,1.14333333333333; 2149200,0.946666666666667;
          2152800,0.366666666666667; 2156400,0.4; 2160000,0.781666666666667; 2163600,
          0.516666666666667; 2167200,0.5; 2170800,0.416666666666667; 2174400,0.483333333333333;
          2178000,0.466666666666667; 2181600,0.35; 2185200,0.483333333333333; 2188800,
          0.483333333333333; 2192400,0.715; 2196000,0.831666666666667; 2199600,0.765;
          2203200,1.08; 2206800,1.19333333333333; 2210400,1.51; 2214000,0.383333333333333;
          2217600,0.5; 2221200,0.683333333333333; 2224800,0.483333333333333; 2228400,
          0.666666666666667; 2232000,0.216666666666667; 2235600,0.831666666666667;
          2239200,0.283333333333333; 2242800,0.565; 2246400,0.266666666666667; 2250000,
          0.283333333333333; 2253600,0.45; 2257200,0.481666666666667; 2260800,0.65;
          2264400,0.3; 2268000,0.216666666666667; 2271600,0.433333333333333; 2275200,
          0.465; 2278800,0.566666666666667; 2282400,1.27666666666667; 2286000,1.095;
          2289600,1.195; 2293200,1.54; 2296800,1.32666666666667; 2300400,0.995; 2304000,
          0.681666666666667; 2307600,0.483333333333333; 2311200,0.516666666666667;
          2314800,0.183333333333333; 2318400,0.5; 2322000,0.333333333333333; 2325600,
          0.466666666666667; 2329200,0.533333333333333; 2332800,0.616666666666667;
          2336400,0.831666666666667; 2340000,0.666666666666667; 2343600,0.765; 2347200,
          0.65; 2350800,0.6; 2354400,0.483333333333333; 2358000,0.55; 2361600,0.25;
          2365200,0.483333333333333; 2368800,0.55; 2372400,0.798333333333333; 2376000,
          0.961666666666667; 2379600,1.02833333333333; 2383200,0.598333333333333;
          2386800,0.4; 2390400,0.4; 2394000,0.4; 2397600,0.666666666666667; 2401200,
          0.533333333333333; 2404800,0.763333333333333; 2408400,0.798333333333333;
          2412000,1.245; 2415600,0.783333333333333; 2419200,0.681666666666667; 2422800,
          0.665; 2426400,0.733333333333333; 2430000,0.548333333333333; 2433600,0.266666666666667;
          2437200,0.166666666666667; 2440800,0.366666666666667; 2444400,0.483333333333333;
          2448000,0.483333333333333; 2451600,0.531666666666667; 2455200,0.748333333333333;
          2458800,1.575; 2462400,0.731666666666667; 2466000,0.73; 2469600,0.55; 2473200,
          0.4; 2476800,0.516666666666667; 2480400,0.366666666666667; 2484000,0.383333333333333;
          2487600,0.3; 2491200,0.2; 2494800,0.366666666666667; 2498400,0.416666666666667;
          2502000,0.681666666666667; 2505600,0.45; 2509200,0.583333333333333; 2512800,
          0.483333333333333; 2516400,0.765; 2520000,0.415; 2523600,0.531666666666667;
          2527200,0.996666666666667; 2530800,0.55; 2534400,0.481666666666667; 2538000,
          1.245; 2541600,1.89333333333333; 2545200,3.635; 2548800,2.58833333333333;
          2552400,3.35166666666667; 2556000,2.68833333333333; 2559600,4.43166666666667;
          2563200,2.62166666666667; 2566800,2.10666666666667; 2570400,1.94; 2574000,
          2.48833333333333; 2577600,2.15666666666667; 2581200,2.09; 2584800,2.205;
          2588400,2.68833333333333; 2592000,2.355; 2595600,2.32333333333333; 2599200,
          2.17333333333333; 2602800,2.22333333333333; 2606400,2.72166666666667; 2610000,
          2.62333333333333; 2613600,2.29; 2617200,2.42333333333333; 2620800,2.19;
          2624400,2.59; 2628000,3.02; 2631600,3.08833333333333; 2635200,2.75666666666667;
          2638800,2.73666666666667; 2642400,2.755; 2646000,2.455; 2649600,2.92; 2653200,
          3.13666666666667; 2656800,2.59; 2660400,2.52333333333333; 2664000,2.05666666666667;
          2667600,1.24333333333333; 2671200,1.01333333333333; 2674800,1.095; 2678400,
          0.911666666666667; 2682000,0.716666666666667; 2685600,0.583333333333333;
          2689200,0.516666666666667; 2692800,0.963333333333333; 2696400,0.616666666666667;
          2700000,0.55; 2703600,0.5; 2707200,0.283333333333333; 2710800,0.566666666666667;
          2714400,1.145; 2718000,0.831666666666667; 2721600,1.02833333333333; 2725200,
          0.6; 2728800,0.45; 2732400,0.583333333333333; 2736000,1.09333333333333;
          2739600,0.616666666666667; 2743200,0.7; 2746800,0.583333333333333; 2750400,
          0.533333333333333; 2754000,0.433333333333333; 2757600,0.765; 2761200,0.4;
          2764800,0.978333333333333; 2768400,0.565; 2772000,0.316666666666667; 2775600,
          0.581666666666667; 2779200,0.6; 2782800,1.06166666666667; 2786400,0.831666666666667;
          2790000,0.45; 2793600,0.266666666666667; 2797200,0.648333333333333; 2800800,
          0.7; 2804400,1.08; 2808000,0.865; 2811600,1.31; 2815200,1.01166666666667;
          2818800,0.4; 2822400,0.696666666666667; 2826000,0.978333333333333; 2829600,
          0.863333333333333; 2833200,0.5; 2836800,0.433333333333333; 2840400,0.631666666666667;
          2844000,0.416666666666667; 2847600,0.166666666666667; 2851200,0.416666666666667;
          2854800,0.5; 2858400,0.3; 2862000,0.45; 2865600,0.7; 2869200,0.646666666666667;
          2872800,0.88; 2876400,0.995; 2880000,1.44333333333333; 2883600,3.03666666666667;
          2887200,1.50833333333333; 2890800,1.95833333333333; 2894400,2.05666666666667;
          2898000,2.67166666666667; 2901600,2.02166666666667; 2905200,3.435; 2908800,
          2.72166666666667; 2912400,0.761666666666667; 2916000,1.95666666666667; 2919600,
          1.94; 2923200,1.74166666666667; 2926800,0.681666666666667; 2930400,0.566666666666667;
          2934000,0.383333333333333; 2937600,0.4; 2941200,0.666666666666667; 2944800,
          0.55; 2948400,0.615; 2952000,0.648333333333333; 2955600,0.283333333333333;
          2959200,0.748333333333333; 2962800,0.233333333333333; 2966400,0.698333333333333;
          2970000,0.898333333333333; 2973600,1.195; 2977200,0.978333333333333; 2980800,
          0.813333333333333; 2984400,0.911666666666667; 2988000,0.831666666666667;
          2991600,0.283333333333333; 2995200,1.02833333333333; 2998800,1.77333333333333;
          3002400,1.99; 3006000,1.34333333333333; 3009600,1.24; 3013200,0.931666666666667;
          3016800,0.898333333333333; 3020400,0.383333333333333; 3024000,0.383333333333333;
          3027600,0.416666666666667; 3031200,0.233333333333333; 3034800,0.35; 3038400,
          0.266666666666667; 3042000,0.216666666666667; 3045600,0.683333333333333;
          3049200,0.366666666666667; 3052800,0.7; 3056400,0.783333333333333; 3060000,
          0.815; 3063600,0.928333333333333; 3067200,0.848333333333333; 3070800,0.815;
          3074400,1.29333333333333; 3078000,0.846666666666667; 3081600,0.45; 3085200,
          0.433333333333333; 3088800,0.898333333333333; 3092400,0.15; 3096000,0.283333333333333;
          3099600,0.183333333333333; 3103200,0.25; 3106800,0.2; 3110400,0.466666666666667;
          3114000,0.55; 3117600,0.633333333333333; 3121200,0.383333333333333; 3124800,
          0.316666666666667; 3128400,0.45; 3132000,0.216666666666667; 3135600,0.283333333333333;
          3139200,0.583333333333333; 3142800,0.5; 3146400,0.366666666666667; 3150000,
          0.633333333333333; 3153600,1.12833333333333; 3157200,1.24333333333333; 3160800,
          0.78; 3164400,0.813333333333333; 3168000,0.581666666666667; 3171600,0.516666666666667;
          3175200,0.466666666666667; 3178800,0.515; 3182400,0.466666666666667; 3186000,
          0.581666666666667; 3189600,1.195; 3193200,1.27666666666667; 3196800,0.731666666666667;
          3200400,0.813333333333333; 3204000,0.813333333333333; 3207600,0.961666666666667;
          3211200,1.30833333333333; 3214800,0.765; 3218400,1.32666666666667; 3222000,
          1.06166666666667; 3225600,1.395; 3229200,2.325; 3232800,1.345; 3236400,1.29333333333333;
          3240000,0.75; 3243600,0.5; 3247200,0.996666666666667; 3250800,0.748333333333333;
          3254400,1.16166666666667; 3258000,0.498333333333333; 3261600,0.616666666666667;
          3265200,0.698333333333333; 3268800,1.31; 3272400,1.64; 3276000,2.40666666666667;
          3279600,2.25666666666667; 3283200,2.22333333333333; 3286800,2.74; 3290400,
          3.25166666666667; 3294000,3.20166666666667; 3297600,3.43333333333333; 3301200,
          4.52833333333333; 3304800,5.45833333333333; 3308400,4.795; 3312000,4.245;
          3315600,4.16333333333333; 3319200,5.11; 3322800,4.03166666666667; 3326400,
          4.595; 3330000,3.785; 3333600,3.00166666666667; 3337200,2.42166666666667;
          3340800,1.95666666666667; 3344400,2.05666666666667; 3348000,2.23833333333333;
          3351600,2.98666666666667; 3355200,1.67333333333333; 3358800,1.74; 3362400,
          2.38833333333333; 3366000,2.90333333333333; 3369600,3.6; 3373200,3.535;
          3376800,4.33; 3380400,4.26333333333333; 3384000,4.49666666666667; 3387600,
          4.19666666666667; 3391200,4.43; 3394800,4.74666666666667; 3398400,4.495;
          3402000,3.84833333333333; 3405600,3.51666666666667; 3409200,2.88833333333333;
          3412800,3.10166666666667; 3416400,2.77; 3420000,2.605; 3423600,2.805; 3427200,
          2.48833333333333; 3430800,4.74333333333333; 3434400,5.34333333333333; 3438000,
          2.54; 3441600,2.33833333333333; 3445200,3.51833333333333; 3448800,3.665;
          3452400,1.79166666666667; 3456000,1.01; 3459600,1.32833333333333; 3463200,
          2.75333333333333; 3466800,2.47166666666667; 3470400,2.24; 3474000,1.82166666666667;
          3477600,1.89; 3481200,1.64166666666667; 3484800,1.26166666666667; 3488400,
          1.06166666666667; 3492000,0.895; 3495600,1.16; 3499200,1.35833333333333;
          3502800,1.40666666666667; 3506400,1.64; 3510000,2.54; 3513600,2.14; 3517200,
          1.16; 3520800,1.75666666666667; 3524400,1.72333333333333; 3528000,1.19333333333333;
          3531600,0.748333333333333; 3535200,0.333333333333333; 3538800,0.65; 3542400,
          0.55; 3546000,0.4; 3549600,0.3; 3553200,0.433333333333333; 3556800,0.366666666666667;
          3560400,0.45; 3564000,0.715; 3567600,0.815; 3571200,0.433333333333333; 3574800,
          0.716666666666667; 3578400,0.781666666666667; 3582000,0.895; 3585600,0.978333333333333;
          3589200,1.39166666666667; 3592800,1.875; 3596400,1.875; 3600000,1.34166666666667;
          3603600,0.765; 3607200,0.5; 3610800,0.366666666666667; 3614400,0.565; 3618000,
          0.633333333333333; 3621600,0.548333333333333; 3625200,0.416666666666667;
          3628800,1.34166666666667; 3632400,1.37333333333333; 3636000,1.55833333333333;
          3639600,2.60333333333333; 3643200,2.13833333333333; 3646800,2.58833333333333;
          3650400,1.84; 3654000,2.83833333333333; 3657600,2.54; 3661200,3.40166666666667;
          3664800,4.745; 3668400,4.18; 3672000,5.79; 3675600,4.06333333333333; 3679200,
          2.705; 3682800,1.95666666666667; 3686400,2.49; 3690000,2.20666666666667;
          3693600,2.24; 3697200,3.25; 3700800,3.29833333333333; 3704400,3.41666666666667;
          3708000,3.28333333333333; 3711600,2.72166666666667; 3715200,1.83833333333333;
          3718800,1.045; 3722400,1.62333333333333; 3726000,1.17833333333333; 3729600,
          1.26; 3733200,1.84; 3736800,2.25666666666667; 3740400,3.31833333333333;
          3744000,2.57; 3747600,2.19; 3751200,4.26166666666667; 3754800,5.67333333333333;
          3758400,5.39; 3762000,3.43333333333333; 3765600,2.44; 3769200,4.57666666666667;
          3772800,2.43833333333333; 3776400,2.83666666666667; 3780000,2.87166666666667;
          3783600,3.6; 3787200,2.88833333333333; 3790800,2.105; 3794400,2.07333333333333;
          3798000,1.70666666666667; 3801600,1.79; 3805200,2.74; 3808800,2.905; 3812400,
          4.41333333333333; 3816000,4.56333333333333; 3819600,4.295; 3823200,4.545;
          3826800,3.64833333333333; 3830400,7.415; 3834000,1.97333333333333; 3837600,
          1.21; 3841200,0.946666666666667; 3844800,0.898333333333333; 3848400,1.19166666666667;
          3852000,1.06; 3855600,1.19333333333333; 3859200,0.631666666666667; 3862800,
          0.565; 3866400,0.383333333333333; 3870000,0.581666666666667; 3873600,0.283333333333333;
          3877200,0.383333333333333; 3880800,0.648333333333333; 3884400,0.663333333333333;
          3888000,0.68; 3891600,0.781666666666667; 3895200,0.665; 3898800,0.5; 3902400,
          0.383333333333333; 3906000,0.583333333333333; 3909600,0.65; 3913200,1.74166666666667;
          3916800,2.47166666666667; 3920400,2.58666666666667; 3924000,2.10666666666667;
          3927600,1.85833333333333; 3931200,1.41; 3934800,2.43666666666667; 3938400,
          3.81666666666667; 3942000,3.4; 3945600,4.14833333333333; 3949200,3.485;
          3952800,4.31333333333333; 3956400,5.02666666666667; 3960000,3.60166666666667;
          3963600,3.9; 3967200,2.90333333333333; 3970800,2.82333333333333; 3974400,
          2.885; 3978000,2.83666666666667; 3981600,3.285; 3985200,2.44; 3988800,2.65333333333333;
          3992400,2.28833333333333; 3996000,2.77; 3999600,3.15166666666667; 4003200,
          3.79666666666667; 4006800,3.58166666666667; 4010400,3.08833333333333; 4014000,
          2.64; 4017600,2.77166666666667; 4021200,2.38833333333333; 4024800,2.88666666666667;
          4028400,2.47333333333333; 4032000,2.38833333333333; 4035600,2.505; 4039200,
          2.77166666666667; 4042800,2.605; 4046400,2.47166666666667; 4050000,1.94;
          4053600,2.02333333333333; 4057200,1.72333333333333; 4060800,1.475; 4064400,
          1.44; 4068000,0.765; 4071600,1.29166666666667; 4075200,0.846666666666667;
          4078800,0.748333333333333; 4082400,1.75666666666667; 4086000,1.525; 4089600,
          1.01333333333333; 4093200,0.913333333333333; 4096800,1.37833333333333; 4100400,
          1.47333333333333; 4104000,1.64; 4107600,0.88; 4111200,0.978333333333333;
          4114800,0.566666666666667; 4118400,0.483333333333333; 4122000,0.75; 4125600,
          1.07666666666667; 4129200,0.88; 4132800,0.416666666666667; 4136400,0.466666666666667;
          4140000,0.383333333333333; 4143600,0.483333333333333; 4147200,0.416666666666667;
          4150800,0.433333333333333; 4154400,0.898333333333333; 4158000,1.11; 4161600,
          0.55; 4165200,0.583333333333333; 4168800,0.7; 4172400,0.45; 4176000,0.98;
          4179600,0.65; 4183200,1.01166666666667; 4186800,0.93; 4190400,0.961666666666667;
          4194000,0.93; 4197600,0.845; 4201200,0.583333333333333; 4204800,0.666666666666667;
          4208400,1.07833333333333; 4212000,0.65; 4215600,0.465; 4219200,0.631666666666667;
          4222800,0.615; 4226400,0.78; 4230000,1.16166666666667; 4233600,3.665; 4237200,
          1.825; 4240800,1.145; 4244400,0.846666666666667; 4248000,0.848333333333333;
          4251600,0.416666666666667; 4255200,0.963333333333333; 4258800,0.681666666666667;
          4262400,0.598333333333333; 4266000,0.683333333333333; 4269600,0.765; 4273200,
          0.763333333333333; 4276800,0.83; 4280400,0.898333333333333; 4284000,0.913333333333333;
          4287600,0.648333333333333; 4291200,0.716666666666667; 4294800,0.696666666666667;
          4298400,0.798333333333333; 4302000,0.481666666666667; 4305600,0.698333333333333;
          4309200,0.333333333333333; 4312800,0.716666666666667; 4316400,0.731666666666667;
          4320000,0.681666666666667; 4323600,0.696666666666667; 4327200,0.45; 4330800,
          0.65; 4334400,0.516666666666667; 4338000,0.716666666666667; 4341600,0.681666666666667;
          4345200,0.566666666666667; 4348800,1.31; 4352400,2.04; 4356000,1.95666666666667;
          4359600,1.99; 4363200,2.09; 4366800,1.92333333333333; 4370400,1.12833333333333;
          4374000,1.275; 4377600,1.79; 4381200,2.14; 4384800,1.65666666666667; 4388400,
          1.54; 4392000,1.245; 4395600,1.07833333333333; 4399200,1.14166666666667;
          4402800,0.581666666666667; 4406400,0.45; 4410000,0.533333333333333; 4413600,
          0.83; 4417200,0.583333333333333; 4420800,0.55; 4424400,0.25; 4428000,0.615;
          4431600,0.681666666666667; 4435200,0.733333333333333; 4438800,1.34166666666667;
          4442400,1.095; 4446000,1.07833333333333; 4449600,1.02833333333333; 4453200,
          1.31166666666667; 4456800,1.27666666666667; 4460400,1.325; 4464000,0.613333333333333;
          4467600,1.26; 4471200,0.65; 4474800,1.07833333333333; 4478400,0.566666666666667;
          4482000,0.896666666666667; 4485600,1.125; 4489200,0.681666666666667; 4492800,
          1.16; 4496400,0.88; 4500000,0.815; 4503600,0.4; 4507200,0.383333333333333;
          4510800,0.6; 4514400,0.333333333333333; 4518000,0.563333333333333; 4521600,
          0.4; 4525200,0.316666666666667; 4528800,0.4; 4532400,1.04666666666667; 4536000,
          0.915; 4539600,0.913333333333333; 4543200,0.681666666666667; 4546800,0.765;
          4550400,0.961666666666667; 4554000,1.09333333333333; 4557600,1.08; 4561200,
          0.581666666666667; 4564800,0.813333333333333; 4568400,0.946666666666667;
          4572000,0.63; 4575600,0.681666666666667; 4579200,0.533333333333333; 4582800,
          0.73; 4586400,0.183333333333333; 4590000,0.715; 4593600,0.961666666666667;
          4597200,1.45666666666667; 4600800,0.911666666666667; 4604400,0.448333333333333;
          4608000,0.45; 4611600,0.516666666666667; 4615200,0.961666666666667; 4618800,
          1.45833333333333; 4622400,1.52333333333333; 4626000,1.35833333333333; 4629600,
          1.25833333333333; 4633200,1.225; 4636800,2.14; 4640400,1.99; 4644000,1.32666666666667;
          4647600,2.85333333333333; 4651200,2.60333333333333; 4654800,1.09333333333333;
          4658400,0.996666666666667; 4662000,2.05666666666667; 4665600,2.555; 4669200,
          2.49; 4672800,1.70833333333333; 4676400,1.29166666666667; 4680000,1.22666666666667;
          4683600,0.963333333333333; 4687200,0.98; 4690800,0.631666666666667; 4694400,
          1.42666666666667; 4698000,1.06166666666667; 4701600,0.55; 4705200,0.533333333333333;
          4708800,0.6; 4712400,0.815; 4716000,0.831666666666667; 4719600,0.78; 4723200,
          0.4; 4726800,0.266666666666667; 4730400,0.615; 4734000,0.15; 4737600,1.095;
          4741200,0.516666666666667; 4744800,0.35; 4748400,1.03; 4752000,0.848333333333333;
          4755600,0.666666666666667; 4759200,0.3; 4762800,0.646666666666667; 4766400,
          1.22833333333333; 4770000,1.04333333333333; 4773600,0.333333333333333; 4777200,
          0.666666666666667; 4780800,0.515; 4784400,0.848333333333333; 4788000,0.748333333333333;
          4791600,0.898333333333333; 4795200,0.483333333333333; 4798800,1.045; 4802400,
          1.26; 4806000,0.631666666666667; 4809600,1.44333333333333; 4813200,1.44166666666667;
          4816800,0.795; 4820400,0.598333333333333; 4824000,1.06333333333333; 4827600,
          0.466666666666667; 4831200,0.846666666666667; 4834800,0.715; 4838400,1.79;
          4842000,2.40666666666667; 4845600,1.97333333333333; 4849200,2.00666666666667;
          4852800,2.07333333333333; 4856400,2.17333333333333; 4860000,1.65666666666667;
          4863600,1.675; 4867200,1.92333333333333; 4870800,1.59; 4874400,1.75666666666667;
          4878000,1.49; 4881600,1.40833333333333; 4885200,1.34333333333333; 4888800,
          1.29333333333333; 4892400,1.095; 4896000,0.65; 4899600,0.383333333333333;
          4903200,0.466666666666667; 4906800,0.25; 4910400,0.566666666666667; 4914000,
          0.333333333333333; 4917600,0.35; 4921200,0.483333333333333; 4924800,0.431666666666667;
          4928400,2.07333333333333; 4932000,2.30666666666667; 4935600,2.30833333333333;
          4939200,2.20666666666667; 4942800,2.32333333333333; 4946400,2.62; 4950000,
          3.26833333333333; 4953600,3.01833333333333; 4957200,3.7; 4960800,4.41333333333333;
          4964400,4.11333333333333; 4968000,3.18666666666667; 4971600,2.60333333333333;
          4975200,4.00166666666667; 4978800,2.57166666666667; 4982400,2.43833333333333;
          4986000,3.235; 4989600,2.85333333333333; 4993200,4.09666666666667; 4996800,
          3.50166666666667; 5000400,2.86833333333333; 5004000,3.21666666666667; 5007600,
          2.17333333333333; 5011200,2.275; 5014800,1.94; 5018400,1.04333333333333;
          5022000,0.633333333333333; 5025600,0.748333333333333; 5029200,0.566666666666667;
          5032800,0.796666666666667; 5036400,0.25; 5040000,0.88; 5043600,1.17666666666667;
          5047200,1.80666666666667; 5050800,1.26; 5054400,1.45666666666667; 5058000,
          2.00666666666667; 5061600,2.20666666666667; 5065200,3.135; 5068800,2.505;
          5072400,3.02; 5076000,3.21833333333333; 5079600,4.115; 5083200,3.59833333333333;
          5086800,3.55; 5090400,3.20166666666667; 5094000,4.24666666666667; 5097600,
          4.36166666666667; 5101200,3.71833333333333; 5104800,3.51833333333333; 5108400,
          2.95166666666667; 5112000,2.57333333333333; 5115600,3.28333333333333; 5119200,
          2.88833333333333; 5122800,3.54833333333333; 5126400,4.23333333333333; 5130000,
          4.165; 5133600,2.78833333333333; 5137200,3.485; 5140800,4.24833333333333;
          5144400,3.88166666666667; 5148000,2.39; 5151600,2.18833333333333; 5155200,
          2.62; 5158800,1.60833333333333; 5162400,3.05333333333333; 5166000,2.95166666666667;
          5169600,3.035; 5173200,2.105; 5176800,2.39; 5180400,1.725; 5184000,1.34333333333333;
          5187600,2.15666666666667; 5191200,2.00666666666667; 5194800,2.52333333333333;
          5198400,2.68833333333333; 5202000,2.20666666666667; 5205600,2.30833333333333;
          5209200,2.48833333333333; 5212800,2.72; 5216400,2.205; 5220000,1.72333333333333;
          5223600,1.36; 5227200,1.12666666666667; 5230800,1.07833333333333; 5234400,
          1.375; 5238000,1.34333333333333; 5241600,1.29; 5245200,0.813333333333333;
          5248800,0.766666666666667; 5252400,0.55; 5256000,0.3; 5259600,0.516666666666667;
          5263200,1.17666666666667; 5266800,1.04666666666667; 5270400,1.82333333333333;
          5274000,1.17833333333333; 5277600,0.813333333333333; 5281200,1.18; 5284800,
          3.17166666666667; 5288400,3.43166666666667; 5292000,3.48333333333333; 5295600,
          3.74833333333333; 5299200,3.91333333333333; 5302800,3.26666666666667; 5306400,
          3.665; 5310000,3.78166666666667; 5313600,4.03; 5317200,4.015; 5320800,3.6;
          5324400,1.34666666666667; 5328000,2.405; 5331600,2.53833333333333; 5335200,
          2.27333333333333; 5338800,1.14666666666667; 5342400,0.83; 5346000,1.89;
          5349600,1.67666666666667; 5353200,1.06166666666667; 5356800,0.881666666666667;
          5360400,1.14333333333333; 5364000,2.12333333333333; 5367600,1.87333333333333;
          5371200,1.64; 5374800,1.14333333333333; 5378400,0.716666666666667; 5382000,
          0.75; 5385600,1.09333333333333; 5389200,1.19333333333333; 5392800,0.963333333333333;
          5396400,1.36166666666667; 5400000,1.84; 5403600,2.57; 5407200,1.77333333333333;
          5410800,1.095; 5414400,1.90666666666667; 5418000,1.045; 5421600,0.548333333333333;
          5425200,0.731666666666667; 5428800,0.383333333333333; 5432400,0.681666666666667;
          5436000,0.75; 5439600,0.813333333333333; 5443200,1.37666666666667; 5446800,
          2.42333333333333; 5450400,3.05166666666667; 5454000,1.44166666666667; 5457600,
          1.69; 5461200,2.30666666666667; 5464800,3.055; 5468400,3.385; 5472000,2.855;
          5475600,3.53333333333333; 5479200,4.13; 5482800,5.16; 5486400,4.67666666666667;
          5490000,3.84833333333333; 5493600,4.145; 5497200,3.94666666666667; 5500800,
          3.965; 5504400,4.37833333333333; 5508000,4.51333333333333; 5511600,3.4;
          5515200,1.06166666666667; 5518800,0.913333333333333; 5522400,0.7; 5526000,
          1.37833333333333; 5529600,1.12833333333333; 5533200,0.896666666666667; 5536800,
          0.716666666666667; 5540400,1.26166666666667; 5544000,1.16; 5547600,2.32166666666667;
          5551200,2.12333333333333; 5554800,1.77333333333333; 5558400,1.34333333333333;
          5562000,2.37333333333333; 5565600,2.40333333333333; 5569200,2.78833333333333;
          5572800,1.95666666666667; 5576400,1.84; 5580000,1.70666666666667; 5583600,
          2.37166666666667; 5587200,2.555; 5590800,3.28333333333333; 5594400,2.63833333333333;
          5598000,3.31833333333333; 5601600,2.32166666666667; 5605200,1.49333333333333;
          5608800,0.995; 5612400,0.896666666666667; 5616000,0.648333333333333; 5619600,
          0.616666666666667; 5623200,0.533333333333333; 5626800,0.615; 5630400,1.03;
          5634000,0.78; 5637600,0.333333333333333; 5641200,0.333333333333333; 5644800,
          0.516666666666667; 5648400,0.781666666666667; 5652000,0.881666666666666;
          5655600,0.846666666666667; 5659200,1.27666666666667; 5662800,1.14666666666667;
          5666400,1.45833333333333; 5670000,1.27666666666667; 5673600,2.985; 5677200,
          0.748333333333333; 5680800,0.45; 5684400,0.865; 5688000,0.515; 5691600,0.433333333333333;
          5695200,0.333333333333333; 5698800,0.316666666666667; 5702400,0.433333333333333;
          5706000,0.531666666666667; 5709600,0.366666666666667; 5713200,0.3; 5716800,
          0.5; 5720400,0.516666666666667; 5724000,0.433333333333333; 5727600,0.715;
          5731200,1.16166666666667; 5734800,1.23; 5738400,1.12833333333333; 5742000,
          1.07833333333333; 5745600,1.54333333333333; 5749200,1.045; 5752800,0.896666666666667;
          5756400,0.798333333333333; 5760000,1.26166666666667; 5763600,2.90333333333333;
          5767200,1.14166666666667; 5770800,1.475; 5774400,0.383333333333333; 5778000,
          0.731666666666667; 5781600,0.5; 5785200,0.681666666666667; 5788800,1.90833333333333;
          5792400,0.796666666666667; 5796000,0.466666666666667; 5799600,0.333333333333333;
          5803200,0.533333333333333; 5806800,0.433333333333333; 5810400,0.583333333333333;
          5814000,0.35; 5817600,0.5; 5821200,0.715; 5824800,0.798333333333333; 5828400,
          1.97333333333333; 5832000,2.785; 5835600,1.64; 5839200,1.31166666666667;
          5842800,0.781666666666667; 5846400,0.913333333333333; 5850000,1.525; 5853600,
          1.55833333333333; 5857200,2.12333333333333; 5860800,2.44; 5864400,2.04;
          5868000,1.40666666666667; 5871600,0.781666666666667; 5875200,0.531666666666667;
          5878800,0.616666666666667; 5882400,0.533333333333333; 5886000,0.483333333333333;
          5889600,0.431666666666667; 5893200,0.316666666666667; 5896800,0.65; 5900400,
          0.765; 5904000,1.37333333333333; 5907600,1.95666666666667; 5911200,2.27333333333333;
          5914800,2.855; 5918400,3.07; 5922000,3.00333333333333; 5925600,1.59; 5929200,
          1.06166666666667; 5932800,1.02666666666667; 5936400,0.815; 5940000,1.47666666666667;
          5943600,1.93833333333333; 5947200,3.18333333333333; 5950800,1.425; 5954400,
          0.481666666666667; 5958000,0.516666666666667; 5961600,0.333333333333333;
          5965200,0.333333333333333; 5968800,0.35; 5972400,0.416666666666667; 5976000,
          0.383333333333333; 5979600,0.666666666666667; 5983200,0.483333333333333;
          5986800,0.483333333333333; 5990400,0.913333333333333; 5994000,2.07333333333333;
          5997600,1.47666666666667; 6001200,1.90666666666667; 6004800,1.67333333333333;
          6008400,2.32333333333333; 6012000,1.97333333333333; 6015600,3.565; 6019200,
          3.51833333333333; 6022800,3.48333333333333; 6026400,2.22333333333333; 6030000,
          1.25833333333333; 6033600,1.32666666666667; 6037200,1.65666666666667; 6040800,
          0.715; 6044400,0.766666666666667; 6048000,0.633333333333333; 6051600,0.616666666666667;
          6055200,0.633333333333333; 6058800,0.7; 6062400,0.55; 6066000,0.55; 6069600,
          0.4; 6073200,0.4; 6076800,1.47666666666667; 6080400,2.13833333333333; 6084000,
          2.02333333333333; 6087600,2.22333333333333; 6091200,2.29; 6094800,3.15166666666667;
          6098400,2.505; 6102000,2.82166666666667; 6105600,2.88666666666667; 6109200,
          2.755; 6112800,2.14; 6116400,1.60666666666667; 6120000,1.475; 6123600,1.60666666666667;
          6127200,0.583333333333333; 6130800,0.45; 6134400,0.333333333333333; 6138000,
          0.166666666666667; 6141600,0.35; 6145200,0.233333333333333; 6148800,0.831666666666667;
          6152400,0.233333333333333; 6156000,0.55; 6159600,1.09333333333333; 6163200,
          1.39166666666667; 6166800,2.30666666666667; 6170400,1.97333333333333; 6174000,
          1.60666666666667; 6177600,2.34; 6181200,2.27166666666667; 6184800,2.80333333333333;
          6188400,2.305; 6192000,2.605; 6195600,2.88833333333333; 6199200,2.57333333333333;
          6202800,1.74166666666667; 6206400,1.87333333333333; 6210000,1.65833333333333;
          6213600,1.64; 6217200,1.79; 6220800,2.04; 6224400,2.605; 6228000,2.02333333333333;
          6231600,1.89; 6235200,1.34333333333333; 6238800,0.763333333333333; 6242400,
          0.713333333333333; 6246000,1.29333333333333; 6249600,2.04; 6253200,2.07333333333333;
          6256800,1.97333333333333; 6260400,1.75666666666667; 6264000,2.15666666666667;
          6267600,2.53833333333333; 6271200,3.74833333333333; 6274800,4.18; 6278400,
          3.435; 6282000,3.4; 6285600,4.46333333333333; 6289200,3.665; 6292800,3.31833333333333;
          6296400,2.37333333333333; 6300000,2.38833333333333; 6303600,1.34333333333333;
          6307200,1.65666666666667; 6310800,2.10666666666667; 6314400,1.72666666666667;
          6318000,0.75; 6321600,1.01166666666667; 6325200,2.37333333333333; 6328800,
          1.12833333333333; 6332400,1.50666666666667; 6336000,2.655; 6339600,2.24;
          6343200,1.97333333333333; 6346800,2.205; 6350400,2.95166666666667; 6354000,
          2.985; 6357600,2.985; 6361200,2.885; 6364800,2.30666666666667; 6368400,3.6;
          6372000,3.31833333333333; 6375600,2.57166666666667; 6379200,2.87; 6382800,
          2.88833333333333; 6386400,2.97166666666667; 6390000,2.47166666666667; 6393600,
          1.21; 6397200,1.51; 6400800,0.863333333333333; 6404400,0.45; 6408000,0.35;
          6411600,0.365; 6415200,0.283333333333333; 6418800,0.266666666666667; 6422400,
          0.681666666666667; 6426000,1.99; 6429600,1.325; 6433200,1.375; 6436800,1.425;
          6440400,1.75666666666667; 6444000,1.50666666666667; 6447600,0.765; 6451200,
          1.77333333333333; 6454800,2.05666666666667; 6458400,2.78666666666667; 6462000,
          2.73666666666667; 6465600,2.45666666666667; 6469200,2.17333333333333; 6472800,
          2.00666666666667; 6476400,3.08666666666667; 6480000,3.28666666666667; 6483600,
          4.46333333333333; 6487200,3.61666666666667; 6490800,3.06833333333333; 6494400,
          3.38333333333333; 6498000,3.01833333333333; 6501600,2.19; 6505200,2.78833333333333;
          6508800,2.54; 6512400,3.07; 6516000,2.40666666666667; 6519600,1.725; 6523200,
          1.85833333333333; 6526800,1.69333333333333; 6530400,2.50333333333333; 6534000,
          2.62333333333333; 6537600,2.57333333333333; 6541200,2.705; 6544800,2.98666666666667;
          6548400,2.15666666666667; 6552000,2.17333333333333; 6555600,0.861666666666667;
          6559200,0.283333333333333; 6562800,0.4; 6566400,0.366666666666667; 6570000,
          0.581666666666667; 6573600,0.681666666666667; 6577200,0.548333333333333;
          6580800,0.75; 6584400,0.616666666666667; 6588000,0.813333333333333; 6591600,
          0.2; 6595200,0.598333333333333; 6598800,0.815; 6602400,1.275; 6606000,0.8;
          6609600,1.12833333333333; 6613200,1.07833333333333; 6616800,1.74; 6620400,
          1.92333333333333; 6624000,1.85666666666667; 6627600,0.878333333333333; 6631200,
          0.848333333333333; 6634800,0.315; 6638400,0.35; 6642000,0.481666666666667;
          6645600,0.366666666666667; 6649200,0.466666666666667; 6652800,0.598333333333333;
          6656400,0.216666666666667; 6660000,0.166666666666667; 6663600,0.216666666666667;
          6667200,0.15; 6670800,0.166666666666667; 6674400,0.566666666666667; 6678000,
          0.5; 6681600,0.796666666666667; 6685200,0.748333333333333; 6688800,0.65;
          6692400,1.19166666666667; 6696000,1.225; 6699600,1.275; 6703200,1.275; 6706800,
          1.16; 6710400,0.865; 6714000,0.466666666666667; 6717600,0.6; 6721200,0.398333333333333;
          6724800,0.5; 6728400,0.333333333333333; 6732000,0.266666666666667; 6735600,
          0.3; 6739200,0.383333333333333; 6742800,0.266666666666667; 6746400,0.583333333333333;
          6750000,0.133333333333333; 6753600,0.533333333333333; 6757200,0.35; 6760800,
          0.266666666666667; 6764400,0.516666666666667; 6768000,0.516666666666667;
          6771600,0.733333333333333; 6775200,0.913333333333333; 6778800,1.30666666666667;
          6782400,1.04666666666667; 6786000,1.50666666666667; 6789600,1.49166666666667;
          6793200,1.12833333333333; 6796800,0.915; 6800400,0.616666666666667; 6804000,
          0.88; 6807600,0.6; 6811200,0.598333333333333; 6814800,0.266666666666667;
          6818400,0.533333333333333; 6822000,0.35; 6825600,0.133333333333333; 6829200,
          0.383333333333333; 6832800,0.466666666666667; 6836400,0.483333333333333;
          6840000,0.566666666666667; 6843600,0.25; 6847200,0.483333333333333; 6850800,
          0.516666666666667; 6854400,0.765; 6858000,0.533333333333333; 6861600,0.913333333333333;
          6865200,1.55833333333333; 6868800,1.27666666666667; 6872400,1.49166666666667;
          6876000,1.55833333333333; 6879600,0.598333333333333; 6883200,0.731666666666667;
          6886800,0.416666666666667; 6890400,0.2; 6894000,0.55; 6897600,0.416666666666667;
          6901200,0.73; 6904800,0.45; 6908400,0.73; 6912000,0.913333333333333; 6915600,
          0.698333333333333; 6919200,0.78; 6922800,0.683333333333333; 6926400,0.3;
          6930000,0.416666666666667; 6933600,0.813333333333333; 6937200,0.878333333333333;
          6940800,2.62; 6944400,3.285; 6948000,2.62166666666667; 6951600,2.88833333333333;
          6955200,3.93166666666667; 6958800,3.81666666666667; 6962400,4.24666666666667;
          6966000,3.4; 6969600,1.24666666666667; 6973200,1.07833333333333; 6976800,
          0.448333333333333; 6980400,1.90833333333333; 6984000,1.89; 6987600,2.655;
          6991200,2.63833333333333; 6994800,1.85666666666667; 6998400,1.425; 7002000,
          1.45833333333333; 7005600,1.30833333333333; 7009200,1.82333333333333; 7012800,
          2.02333333333333; 7016400,2.60333333333333; 7020000,3.07; 7023600,3.43166666666667;
          7027200,3.07; 7030800,3.43333333333333; 7034400,3.17; 7038000,3.10333333333333;
          7041600,3.00166666666667; 7045200,3.15333333333333; 7048800,2.62166666666667;
          7052400,3.27; 7056000,2.97; 7059600,3.42; 7063200,2.57333333333333; 7066800,
          2.885; 7070400,2.93666666666667; 7074000,3.45166666666667; 7077600,3.385;
          7081200,3.78333333333333; 7084800,3.71833333333333; 7088400,3.56666666666667;
          7092000,3.12; 7095600,2.75333333333333; 7099200,3.865; 7102800,3.88166666666667;
          7106400,2.80333333333333; 7110000,2.73833333333333; 7113600,2.58666666666667;
          7117200,4.23166666666667; 7120800,4.03; 7124400,5.79166666666667; 7128000,
          4.82833333333333; 7131600,5.37333333333333; 7135200,4.99333333333333; 7138800,
          5.09166666666667; 7142400,4.24833333333333; 7146000,5.575; 7149600,3.98166666666667;
          7153200,3.965; 7156800,3.31666666666667; 7160400,2.83833333333333; 7164000,
          3.17; 7167600,3.05333333333333; 7171200,3.03666666666667; 7174800,2.83666666666667;
          7178400,4.14666666666667; 7182000,3.26666666666667; 7185600,2.30666666666667;
          7189200,1.35833333333333; 7192800,2.14; 7196400,2.93666666666667; 7200000,
          2.72166666666667; 7203600,2.62166666666667; 7207200,2.63833333333333; 7210800,
          2.38666666666667; 7214400,2.35666666666667; 7218000,1.825; 7221600,1.69;
          7225200,2.20666666666667; 7228800,0.781666666666667; 7232400,2.05666666666667;
          7236000,0.73; 7239600,0.83; 7243200,0.631666666666667; 7246800,0.266666666666667;
          7250400,0.3; 7254000,0.2; 7257600,0.748333333333333; 7261200,0.4; 7264800,
          0.366666666666667; 7268400,0.615; 7272000,0.45; 7275600,0.233333333333333;
          7279200,0.166666666666667; 7282800,0.216666666666667; 7286400,0.716666666666667;
          7290000,0.781666666666667; 7293600,1.26; 7297200,0.416666666666667; 7300800,
          0.565; 7304400,0.863333333333333; 7308000,1.34166666666667; 7311600,0.78;
          7315200,1.17833333333333; 7318800,0.896666666666667; 7322400,0.6; 7326000,
          0.813333333333333; 7329600,0.831666666666667; 7333200,0.466666666666667;
          7336800,0.533333333333333; 7340400,0.433333333333333; 7344000,0.663333333333333;
          7347600,0.498333333333333; 7351200,0.795; 7354800,0.848333333333333; 7358400,
          0.5; 7362000,0.5; 7365600,0.4; 7369200,0.666666666666667; 7372800,0.946666666666667;
          7376400,1.24; 7380000,1.26; 7383600,0.995; 7387200,0.928333333333333; 7390800,
          1.19333333333333; 7394400,0.946666666666667; 7398000,1.44166666666667; 7401600,
          1.19166666666667; 7405200,0.5; 7408800,0.433333333333333; 7412400,0.55;
          7416000,0.466666666666667; 7419600,1.445; 7423200,1.72333333333333; 7426800,
          2.19; 7430400,1.275; 7434000,0.863333333333333; 7437600,0.533333333333333;
          7441200,0.598333333333333; 7444800,1.675; 7448400,1.59166666666667; 7452000,
          0.616666666666667; 7455600,0.631666666666667; 7459200,0.631666666666667;
          7462800,1.24666666666667; 7466400,1.625; 7470000,0.928333333333333; 7473600,
          1.47666666666667; 7477200,2.805; 7480800,1.875; 7484400,0.713333333333333;
          7488000,0.865; 7491600,0.848333333333333; 7495200,0.531666666666667; 7498800,
          0.648333333333333; 7502400,0.863333333333333; 7506000,1.54166666666667;
          7509600,2.19; 7513200,2.215; 7516800,1.80666666666667; 7520400,1.60666666666667;
          7524000,2.14; 7527600,2.17333333333333; 7531200,2.02333333333333; 7534800,
          3.17; 7538400,1.52833333333333; 7542000,2.07333333333333; 7545600,1.75666666666667;
          7549200,3.05166666666667; 7552800,4.37833333333333; 7556400,4.26333333333333;
          7560000,4.31333333333333; 7563600,5.40666666666667; 7567200,4.595; 7570800,
          4.38; 7574400,3.98; 7578000,3.815; 7581600,2.155; 7585200,2.17333333333333;
          7588800,2.39; 7592400,3.03666666666667; 7596000,3.17166666666667; 7599600,
          2.90916666666667; 7603200,2.86833333333333; 7606800,2.93833333333333; 7610400,
          2.98833333333333; 7614000,3.31833333333333; 7617600,3.30166666666667; 7621200,
          2.35666666666667; 7624800,3.58333333333333; 7628400,2.72166666666667; 7632000,
          2.53833333333333; 7635600,1.99; 7639200,2.04; 7642800,1.39166666666667;
          7646400,1.80833333333333; 7650000,1.07833333333333; 7653600,0.83; 7657200,
          0.763333333333333; 7660800,0.383333333333333; 7664400,0.35; 7668000,0.65;
          7671600,0.566666666666667; 7675200,0.565; 7678800,1.03; 7682400,1.77333333333333;
          7686000,1.69833333333333; 7689600,1.85666666666667; 7693200,1.75666666666667;
          7696800,2.04; 7700400,2.02333333333333; 7704000,2.32333333333333; 7707600,
          1.80666666666667; 7711200,2.67333333333333; 7714800,1.84; 7718400,1.54;
          7722000,1.74; 7725600,1.72333333333333; 7729200,2.44166666666667; 7732800,
          2.07333333333333; 7736400,1.57333333333333; 7740000,2.52166666666667; 7743600,
          2.20666666666667; 7747200,1.49166666666667; 7750800,1.39; 7754400,1.425;
          7758000,1.04666666666667; 7761600,1.72666666666667; 7765200,0.35; 7768800,
          0.828333333333333; 7772400,0.608333333333333; 7776000,0.633333333333333;
          7779600,0.4; 7783200,0.433333333333333; 7786800,0.216666666666667; 7790400,
          0.683333333333333; 7794000,0.731666666666667; 7797600,0.45; 7801200,0.398333333333333;
          7804800,0.583333333333333; 7808400,1.14333333333333; 7812000,2.73666666666667;
          7815600,2.28833333333333; 7819200,2.53833333333333; 7822800,1.82666666666667;
          7826400,0.813333333333333; 7830000,1.40833333333333; 7833600,1.23; 7837200,
          0.93; 7840800,0.715; 7844400,1.37666666666667; 7848000,1.54166666666667;
          7851600,2.075; 7855200,2.58833333333333; 7858800,1.75666666666667; 7862400,
          0.796666666666667; 7866000,1.54333333333333; 7869600,1.145; 7873200,1.57333333333333;
          7876800,0.615; 7880400,0.733333333333333; 7884000,0.516666666666667; 7887600,
          1.55666666666667; 7891200,2.02166666666667; 7894800,0.865; 7898400,1.525;
          7902000,1.34166666666667; 7905600,1.65666666666667; 7909200,2.155; 7912800,
          2.17333333333333; 7916400,1.54166666666667; 7920000,1.275; 7923600,1.87333333333333;
          7927200,0.75; 7930800,0.83; 7934400,0.316666666666667; 7938000,1.24333333333333;
          7941600,0.861666666666667; 7945200,0.391666666666667; 7948800,0.266666666666667;
          7952400,0.3; 7956000,0.4; 7959600,0.6; 7963200,0.366666666666667; 7966800,
          0.483333333333333; 7970400,1.54166666666667; 7974000,1.32833333333333; 7977600,
          0.666666666666667; 7981200,1.79166666666667; 7984800,1.70833333333333; 7988400,
          1.94; 7992000,1.84; 7995600,1.03; 7999200,0.5; 8002800,0.415; 8006400,0.183333333333333;
          8010000,0.0833333333333333; 8013600,0; 8017200,0.05; 8020800,0.0166666666666667;
          8024400,0.465; 8028000,0.0666666666666667; 8031600,0; 8035200,0; 8038800,
          0.116666666666667; 8042400,0; 8046000,0.0166666666666667; 8049600,0.0666666666666667;
          8053200,0; 8056800,0; 8060400,0; 8064000,0.0166666666666667; 8067600,0.53;
          8071200,0.15; 8074800,0.15; 8078400,1.11166666666667; 8082000,0.696666666666667;
          8085600,0.416666666666667; 8089200,0.231666666666667; 8092800,0.05; 8096400,
          0.266666666666667; 8100000,0.05; 8103600,0.615; 8107200,0; 8110800,0; 8114400,
          0.05; 8118000,0; 8121600,0.183333333333333; 8125200,0.333333333333333; 8128800,
          0; 8132400,0.266666666666667; 8136000,0.0166666666666667; 8139600,0; 8143200,
          0.0166666666666667; 8146800,0.25; 8150400,0.05; 8154000,0.0833333333333333;
          8157600,1.07833333333333; 8161200,1.345; 8164800,1.54166666666667; 8168400,
          1.01333333333333; 8172000,0.233333333333333; 8175600,0.233333333333333;
          8179200,0.913333333333333; 8182800,0.565; 8186400,0.1; 8190000,0.563333333333333;
          8193600,0.3; 8197200,0.515; 8200800,0.0666666666666667; 8204400,0.0416666666666667;
          8208000,0.116666666666667; 8211600,0.0333333333333333; 8215200,0.416666666666667;
          8218800,0.15; 8222400,0.233333333333333; 8226000,0.615; 8229600,0.1; 8233200,
          0.0166666666666667; 8236800,0; 8240400,0.1; 8244000,0.515; 8247600,0.763333333333333;
          8251200,0.333333333333333; 8254800,0.796666666666667; 8258400,0.45; 8262000,
          0.465; 8265600,0.695; 8269200,0.563333333333333; 8272800,0.481666666666667;
          8276400,0.5; 8280000,0.0833333333333333; 8283600,0.05; 8287200,0.911666666666667;
          8290800,0.391666666666667; 8294400,0.696666666666667; 8298000,0.815; 8301600,
          0.811666666666667; 8305200,0.515; 8308800,0; 8312400,0.1; 8316000,0.763333333333333;
          8319600,1.07833333333333; 8323200,0.35; 8326800,0.828333333333333; 8330400,
          1.34166666666667; 8334000,1.625; 8337600,1.27833333333333; 8341200,0.565;
          8344800,0.35; 8348400,0.183333333333333; 8352000,0.25; 8355600,0.483333333333333;
          8359200,0.183333333333333; 8362800,0.515; 8366400,0.116666666666667; 8370000,
          0.133333333333333; 8373600,0.183333333333333; 8377200,0.116666666666667;
          8380800,0.0833333333333333; 8384400,0.266666666666667; 8388000,0.383333333333333;
          8391600,0.465; 8395200,0.533333333333333; 8398800,0.4; 8402400,0.798333333333333;
          8406000,1.345; 8409600,0.895; 8413200,0.948333333333333; 8416800,3.005;
          8420400,1.29333333333333; 8424000,2.58833333333333; 8427600,2.72; 8431200,
          2.00666666666667; 8434800,1.54; 8438400,1.46; 8442000,1.39333333333333;
          8445600,1.27833333333333; 8449200,1.80666666666667; 8452800,1.27666666666667;
          8456400,1.01333333333333; 8460000,0.183333333333333; 8463600,0.879166666666667;
          8467200,0.83; 8470800,0.283333333333333; 8474400,0.615; 8478000,1.06166666666667;
          8481600,2.42333333333333; 8485200,1.99; 8488800,1.74; 8492400,1.94; 8496000,
          2.68666666666667; 8499600,3.03833333333333; 8503200,2.67166666666667; 8506800,
          2.52166666666667; 8510400,3.07166666666667; 8514000,3.22; 8517600,2.30666666666667;
          8521200,3.05333333333333; 8524800,3.535; 8528400,2.77166666666667; 8532000,
          2.39; 8535600,2.82333333333333; 8539200,2.32333333333333; 8542800,2.405;
          8546400,1.475; 8550000,2.90666666666667; 8553600,1.94166666666667; 8557200,
          2.10666666666667; 8560800,1.31; 8564400,1.775; 8568000,1.195; 8571600,0.993333333333333;
          8575200,0.763333333333333; 8578800,1.95666666666667; 8582400,1.19333333333333;
          8586000,1.16166666666667; 8589600,1.21; 8593200,1.39333333333333; 8596800,
          1.74166666666667; 8600400,1.26; 8604000,0.633333333333333; 8607600,1.19333333333333;
          8611200,1.06166666666667; 8614800,0.746666666666667; 8618400,0.4; 8622000,
          0.366666666666667; 8625600,0.283333333333333; 8629200,0.383333333333333;
          8632800,0.1; 8636400,0.25; 8640000,0.365; 8643600,0.6; 8647200,0.516666666666667;
          8650800,0.5; 8654400,0.316666666666667; 8658000,0.283333333333333; 8661600,
          0.516666666666667; 8665200,0.55; 8668800,1.14333333333333; 8672400,1.09333333333333;
          8676000,1.11166666666667; 8679600,1.07833333333333; 8683200,1.01166666666667;
          8686800,1.70666666666667; 8690400,1.425; 8694000,1.08; 8697600,0.73; 8701200,
          0.55; 8704800,0.683333333333333; 8708400,0.55; 8712000,0.748333333333333;
          8715600,0.616666666666667; 8719200,1.17833333333333; 8722800,1.34416666666667;
          8726400,0.831666666666667; 8730000,0.316666666666667; 8733600,0.683333333333333;
          8737200,0.433333333333333; 8740800,0.698333333333333; 8744400,0.548333333333333;
          8748000,0.55; 8751600,0.616666666666667; 8755200,0.65; 8758800,1.46; 8762400,
          1.27666666666667; 8766000,1.30666666666667; 8769600,1.295; 8773200,2.17333333333333;
          8776800,1.41; 8780400,1.725; 8784000,0.548333333333333; 8787600,1.04666666666667;
          8791200,1.19666666666667; 8794800,0.583333333333333; 8798400,0.83; 8802000,
          0.633333333333333; 8805600,0.713333333333333; 8809200,1.16916666666667;
          8812800,0.565; 8816400,0.896666666666667; 8820000,0.35; 8823600,0.566666666666667;
          8827200,0.516666666666667; 8830800,0.681666666666667; 8834400,0.683333333333333;
          8838000,1.55666666666667; 8841600,2.22333333333333; 8845200,2.00666666666667;
          8848800,2.17333333333333; 8852400,1.79; 8856000,1.95666666666667; 8859600,
          3.73166666666667; 8863200,3.335; 8866800,2.355; 8870400,1.08; 8874000,1.17833333333333;
          8877600,1.69; 8881200,1.41; 8884800,1.56; 8888400,1.095; 8892000,0.266666666666667;
          8895600,0.758333333333333; 8899200,0.416666666666667; 8902800,0.665; 8906400,
          0.3; 8910000,0.73; 8913600,0.993333333333333; 8917200,0.948333333333333;
          8920800,1.125; 8924400,1.57666666666667; 8928000,1.84166666666667; 8931600,
          0.781666666666667; 8935200,0.583333333333333; 8938800,1.35833333333333;
          8942400,2.04; 8946000,2.84; 8949600,2.52333333333333; 8953200,2.82166666666667;
          8956800,1.34333333333333; 8960400,1.32666666666667; 8964000,3.17; 8967600,
          2.20666666666667; 8971200,1.51; 8974800,1.26; 8978400,0.815; 8982000,0.741666666666667;
          8985600,1.14666666666667; 8989200,0.83; 8992800,0.733333333333333; 8996400,
          0.4; 9000000,0.183333333333333; 9003600,0.681666666666667; 9007200,1.01333333333333;
          9010800,1.06166666666667; 9014400,1.12666666666667; 9018000,1.21166666666667;
          9021600,1.99; 9025200,2.09; 9028800,1.99166666666667; 9032400,1.52333333333333;
          9036000,1.57333333333333; 9039600,1.54; 9043200,0.913333333333333; 9046800,
          0.648333333333333; 9050400,0.533333333333333; 9054000,0.911666666666667;
          9057600,0.731666666666667; 9061200,0.55; 9064800,0.766666666666667; 9068400,
          1.13166666666667; 9072000,1.145; 9075600,0.88; 9079200,0.515; 9082800,0.946666666666667;
          9086400,1.52666666666667; 9090000,1.92333333333333; 9093600,1.095; 9097200,
          0.898333333333333; 9100800,0.945; 9104400,1.46; 9108000,2.00666666666667;
          9111600,1.65666666666667; 9115200,1.44166666666667; 9118800,1.475; 9122400,
          0.466666666666667; 9126000,0.35; 9129600,0.665; 9133200,0.581666666666667;
          9136800,1.19666666666667; 9140400,1.16; 9144000,0.466666666666667; 9147600,
          0.848333333333333; 9151200,0.666666666666667; 9154800,1.47083383333333;
          9158400,2.405; 9162000,1.45833333333333; 9165600,1.66; 9169200,1.13; 9172800,
          1.41166666666667; 9176400,1.30666666666667; 9180000,1.70833333333333; 9183600,
          1.27833333333333; 9187200,1.40666666666667; 9190800,2.15666666666667; 9194400,
          1.95833333333333; 9198000,1.74166666666667; 9201600,1.90666666666667; 9205200,
          1.775; 9208800,1.01; 9212400,0.995; 9216000,0.78; 9219600,2.04166666666667;
          9223200,3.55333333333333; 9226800,4.56166666666667; 9230400,3.60166666666667;
          9234000,4.795; 9237600,4.36166666666667; 9241200,1.465; 9244800,1.17666666666667;
          9248400,1.69; 9252000,3.00333333333333; 9255600,3.28333333333333; 9259200,
          2.98833333333333; 9262800,3.08666666666667; 9266400,2.20666666666667; 9270000,
          1.77333333333333; 9273600,1.49; 9277200,1.60833333333333; 9280800,2.205;
          9284400,1.875; 9288000,1.64; 9291600,1.59; 9295200,1.74; 9298800,0.96; 9302400,
          0.65; 9306000,0.796666666666667; 9309600,0.83; 9313200,0.383333333333333;
          9316800,0.466666666666667; 9320400,0.648333333333333; 9324000,0.366666666666667;
          9327600,0.675; 9331200,0.698333333333333; 9334800,0.55; 9338400,1.145; 9342000,
          0.533333333333333; 9345600,0.748333333333333; 9349200,1.16166666666667;
          9352800,1.01166666666667; 9356400,0.833333333333333; 9360000,0.665; 9363600,
          1.16333333333333; 9367200,1.69; 9370800,1.775; 9374400,2.53833333333333;
          9378000,3.24833333333333; 9381600,1.875; 9385200,0.915; 9388800,1.245; 9392400,
          1.16166666666667; 9396000,1.34166666666667; 9399600,1.29166666666667; 9403200,
          0.98; 9406800,1.79; 9410400,0.78; 9414000,0.954166666666667; 9417600,1.26;
          9421200,1.92333333333333; 9424800,1.85666666666667; 9428400,1.525; 9432000,
          1.87333333333333; 9435600,2.39; 9439200,2.45666666666667; 9442800,2.00666666666667;
          9446400,2.655; 9450000,2.42166666666667; 9453600,2.72166666666667; 9457200,
          2.87; 9460800,2.35666666666667; 9464400,3.285; 9468000,3.715; 9471600,3.135;
          9475200,1.49166666666667; 9478800,1.57333333333333; 9482400,1.77333333333333;
          9486000,2.755; 9489600,1.625; 9493200,1.79; 9496800,1.89; 9500400,1.29;
          9504000,0.615; 9507600,0.466666666666667; 9511200,0.65; 9514800,0.663333333333333;
          9518400,0.648333333333333; 9522000,1.36; 9525600,2.57; 9529200,2.50666666666667;
          9532800,2.20666666666667; 9536400,1.79166666666667; 9540000,1.74; 9543600,
          2.12333333333333; 9547200,2.15666666666667; 9550800,2.24; 9554400,2.09166666666667;
          9558000,1.295; 9561600,1.875; 9565200,1.54166666666667; 9568800,2.09; 9572400,
          2.49; 9576000,1.26; 9579600,0.333333333333333; 9583200,0.55; 9586800,0.0583333333333333;
          9590400,0.333333333333333; 9594000,0.631666666666667; 9597600,0.55; 9601200,
          0.566666666666667; 9604800,0.566666666666667; 9608400,0.466666666666667;
          9612000,0.7; 9615600,0.898333333333333; 9619200,0.8; 9622800,0.683333333333333;
          9626400,1.17666666666667; 9630000,0.865; 9633600,0.65; 9637200,0.6; 9640800,
          0.515; 9644400,1.89166666666667; 9648000,0.978333333333333; 9651600,0.4;
          9655200,1.31166666666667; 9658800,1.36; 9662400,1.31166666666667; 9666000,
          0.946666666666667; 9669600,0.533333333333333; 9673200,0.125; 9676800,0.266666666666667;
          9680400,0.416666666666667; 9684000,0.25; 9687600,0.333333333333333; 9691200,
          0.483333333333333; 9694800,0.466666666666667; 9698400,0.696666666666667;
          9702000,0.583333333333333; 9705600,0.516666666666667; 9709200,1.01333333333333;
          9712800,1.70666666666667; 9716400,1.52333333333333; 9720000,1.34333333333333;
          9723600,0.715; 9727200,0.633333333333333; 9730800,0.4; 9734400,0.366666666666667;
          9738000,0.35; 9741600,0.183333333333333; 9745200,0.2; 9748800,0.433333333333333;
          9752400,0.765; 9756000,1.32833333333333; 9759600,0.810832833333333; 9763200,
          0.433333333333333; 9766800,0.88; 9770400,0.383333333333333; 9774000,0.1;
          9777600,0.183333333333333; 9781200,0.183333333333333; 9784800,0.166666666666667;
          9788400,0.316666666666667; 9792000,0.533333333333333; 9795600,1.21; 9799200,
          1.04333333333333; 9802800,0.713333333333333; 9806400,1.245; 9810000,0.6;
          9813600,0.616666666666667; 9817200,0.483333333333333; 9820800,0.3; 9824400,
          1.16; 9828000,1.79; 9831600,1.97333333333333; 9835200,2.30666666666667;
          9838800,1.22833333333333; 9842400,1.92333333333333; 9846000,1.74; 9849600,
          2.68833333333333; 9853200,2.055; 9856800,2.33833333333333; 9860400,2.67166666666667;
          9864000,2.72166666666667; 9867600,2.62333333333333; 9871200,3.10166666666667;
          9874800,4.32833333333333; 9878400,3.10333333333333; 9882000,3.2; 9885600,
          2.40666666666667; 9889200,4.015; 9892800,2.90333333333333; 9896400,3.69833333333333;
          9900000,4.18166666666667; 9903600,3.37; 9907200,2.05666666666667; 9910800,
          2.19; 9914400,2.325; 9918000,2.39; 9921600,2.20666666666667; 9925200,1.725;
          9928800,0.73; 9932400,1.2375; 9936000,1.59; 9939600,1.32666666666667; 9943200,
          1.51; 9946800,0.6; 9950400,2.15666666666667; 9954000,1.575; 9957600,2.19;
          9961200,2.53666666666667; 9964800,2.67166666666667; 9968400,3.00166666666667;
          9972000,2.24; 9975600,1.97333333333333; 9979200,2.40333333333333; 9982800,
          1.50833333333333; 9986400,1.875; 9990000,1.03; 9993600,1.06333333333333;
          9997200,0.715; 10000800,0.781666666666667; 10004400,0.863333333333333; 10008000,
          1.245; 10011600,1.90666666666667; 10015200,1.59; 10018800,2.19; 10022400,
          1.44333333333333; 10026000,1.09666666666667; 10029600,1.29166666666667;
          10033200,1.12666666666667; 10036800,1.21; 10040400,1.01333333333333; 10044000,
          1.17666666666667; 10047600,1.19166666666667; 10051200,1.75666666666667;
          10054800,1.50833333333333; 10058400,1.82333333333333; 10062000,1.775; 10065600,
          1.59166666666667; 10069200,1.60666666666667; 10072800,1.245; 10076400,0.98;
          10080000,1.74333333333333; 10083600,1.65666666666667; 10087200,1.045; 10090800,
          1.59166666666667; 10094400,1.71; 10098000,1.72333333333333; 10101600,1.18;
          10105200,0.558333333333333; 10108800,0.931666666666667; 10112400,0.863333333333333;
          10116000,0.796666666666667; 10119600,0.631666666666667; 10123200,0.615;
          10126800,0.815; 10130400,1.49333333333333; 10134000,1.70666666666667; 10137600,
          1.67333333333333; 10141200,1.30833333333333; 10144800,1.31; 10148400,1.24333333333333;
          10152000,1.79166666666667; 10155600,1.64; 10159200,1.84; 10162800,1.17666666666667;
          10166400,0.913333333333333; 10170000,0.748333333333333; 10173600,1.62666666666667;
          10177200,2.00666666666667; 10180800,1.17833333333333; 10184400,0.6; 10188000,
          0.3; 10191600,0.275; 10195200,0.316666666666667; 10198800,0.533333333333333;
          10202400,0.433333333333333; 10206000,0.5; 10209600,0.383333333333333; 10213200,
          0.548333333333333; 10216800,0.631666666666667; 10220400,1.75666666666667;
          10224000,1.60833333333333; 10227600,2.02333333333333; 10231200,2.12166666666667;
          10234800,2.75333333333333; 10238400,2.62333333333333; 10242000,2.72166666666667;
          10245600,2.22333333333333; 10249200,2.305; 10252800,1.85833333333333; 10256400,
          2.57; 10260000,2.04166666666667; 10263600,1.56; 10267200,0.995; 10270800,
          0.416666666666667; 10274400,0.333333333333333; 10278000,0.55; 10281600,0.5;
          10285200,0.283333333333333; 10288800,0.266666666666667; 10292400,0.266666666666667;
          10296000,0.316666666666667; 10299600,0.633333333333333; 10303200,0.683333333333333;
          10306800,1.25833333333333; 10310400,1.45833333333333; 10314000,1.40833333333333;
          10317600,1.57333333333333; 10321200,1.54166666666667; 10324800,1.70666666666667;
          10328400,1.80833333333333; 10332000,1.65666666666667; 10335600,1.29333333333333;
          10339200,1.30666666666667; 10342800,0.416666666666667; 10346400,0.333333333333333;
          10350000,0.266666666666667; 10353600,0.415; 10357200,0.233333333333333;
          10360800,0.55; 10364400,0.2; 10368000,0.25; 10371600,0.366666666666667;
          10375200,0.383333333333333; 10378800,0.35; 10382400,0.433333333333333; 10386000,
          0.4; 10389600,0.731666666666667; 10393200,0.963333333333333; 10396800,1.145;
          10400400,0.93; 10404000,1.80833333333333; 10407600,1.75833333333333; 10411200,
          1.145; 10414800,1.82333333333333; 10418400,1.16166666666667; 10422000,1.775;
          10425600,0.483333333333333; 10429200,0.745; 10432800,0.861666666666667;
          10436400,0.88; 10440000,0.813333333333333; 10443600,0.4; 10447200,0.566666666666667;
          10450800,0.5])
      annotation (Placement(transformation(extent={{-28,-2},{-22,4}})));
    Modelica.Blocks.Sources.TimeTable RelativeHumidity(table=[0,0.953566666666667;
          3600,0.954366666666667; 7200,0.954533333333333; 10800,0.953383333333333;
          14400,0.954316666666667; 18000,0.954533333333333; 21600,0.954583333333333;
          25200,0.9553; 28800,0.954533333333333; 32400,0.919983333333333; 36000,0.8864;
          39600,0.8526; 43200,0.753066666666667; 46800,0.739816666666667; 50400,0.748066666666667;
          54000,0.741483333333333; 57600,0.746416666666667; 61200,0.768133333333333;
          64800,0.798483333333333; 68400,0.902016666666667; 72000,0.911233333333333;
          75600,0.90685; 79200,0.897816666666667; 82800,0.92035; 86400,0.923933333333333;
          90000,0.92535; 93600,0.935533333333333; 97200,0.94185; 100800,0.946966666666667;
          104400,0.948516666666667; 108000,0.953266666666666; 111600,0.955116666666667;
          115200,0.956283333333333; 118800,0.958866666666667; 122400,0.96155; 126000,
          0.9614; 129600,0.960216666666667; 133200,0.9597; 136800,0.950633333333333;
          140400,0.93125; 144000,0.883616666666667; 147600,0.828116666666667; 151200,
          0.872016666666667; 154800,0.901583333333333; 158400,0.92565; 162000,0.92135;
          165600,0.918233333333333; 169200,0.9235; 172800,0.916766666666667; 176400,
          0.910766666666667; 180000,0.90845; 183600,0.914366666666667; 187200,0.9198;
          190800,0.928533333333333; 194400,0.935; 198000,0.9342; 201600,0.94175; 205200,
          0.946516666666667; 208800,0.9058; 212400,0.857183333333334; 216000,0.823283333333333;
          219600,0.805933333333334; 223200,0.750566666666667; 226800,0.711183333333333;
          230400,0.761033333333333; 234000,0.6983; 237600,0.662183333333333; 241200,
          0.727133333333333; 244800,0.84315; 248400,0.836; 252000,0.8804; 255600,0.885716666666667;
          259200,0.842766666666667; 262800,0.83595; 266400,0.825316666666667; 270000,
          0.820283333333333; 273600,0.7971; 277200,0.834066666666667; 280800,0.862133333333334;
          284400,0.836983333333333; 288000,0.721833333333333; 291600,0.58495; 295200,
          0.5749; 298800,0.57675; 302400,0.65035; 306000,0.70255; 309600,0.67965;
          313200,0.703716666666667; 316800,0.727816666666667; 320400,0.711666666666667;
          324000,0.73945; 327600,0.775083333333333; 331200,0.776866666666667; 334800,
          0.843166666666667; 338400,0.8495; 342000,0.8491; 345600,0.813183333333333;
          349200,0.813916666666667; 352800,0.889083333333333; 356400,0.911466666666667;
          360000,0.8498; 363600,0.81295; 367200,0.803366666666667; 370800,0.8065;
          374400,0.7817; 378000,0.773033333333333; 381600,0.749583333333333; 385200,
          0.7052; 388800,0.660466666666667; 392400,0.65315; 396000,0.64885; 399600,
          0.633733333333333; 403200,0.682566666666667; 406800,0.693716666666667; 410400,
          0.711333333333333; 414000,0.717583333333333; 417600,0.71635; 421200,0.78795;
          424800,0.76525; 428400,0.7687; 432000,0.751766666666667; 435600,0.76125;
          439200,0.7361; 442800,0.7587; 446400,0.759883333333333; 450000,0.757666666666667;
          453600,0.756133333333333; 457200,0.779583333333333; 460800,0.728716666666667;
          464400,0.6633; 468000,0.648083333333333; 471600,0.6433; 475200,0.700333333333333;
          478800,0.736666666666667; 482400,0.783183333333333; 486000,0.7866; 489600,
          0.821633333333333; 493200,0.85145; 496800,0.828883333333333; 500400,0.854166666666667;
          504000,0.86305; 507600,0.855233333333334; 511200,0.831483333333333; 514800,
          0.817566666666667; 518400,0.828733333333333; 522000,0.825433333333333; 525600,
          0.8013; 529200,0.7857; 532800,0.78585; 536400,0.753016666666667; 540000,
          0.785866666666667; 543600,0.797066666666667; 547200,0.82525; 550800,0.839866666666667;
          554400,0.838266666666667; 558000,0.853366666666667; 561600,0.8436; 565200,
          0.8693; 568800,0.88315; 572400,0.919983333333333; 576000,0.916383333333333;
          579600,0.888283333333333; 583200,0.876183333333333; 586800,0.867416666666667;
          590400,0.8876; 594000,0.89135; 597600,0.869816666666667; 601200,0.8836;
          604800,0.884216666666667; 608400,0.867283333333333; 612000,0.86775; 615600,
          0.8674; 619200,0.876683333333333; 622800,0.88005; 626400,0.845683333333333;
          630000,0.825966666666667; 633600,0.797766666666667; 637200,0.772666666666667;
          640800,0.7627; 644400,0.77055; 648000,0.772216666666667; 651600,0.77355;
          655200,0.788833333333333; 658800,0.810233333333333; 662400,0.773933333333333;
          666000,0.7696; 669600,0.744383333333333; 673200,0.720183333333333; 676800,
          0.766; 680400,0.7676; 684000,0.752266666666667; 687600,0.804433333333333;
          691200,0.84335; 694800,0.897733333333333; 698400,0.925166666666667; 702000,
          0.9306; 705600,0.935716666666667; 709200,0.928466666666667; 712800,0.935366666666667;
          716400,0.944716666666667; 720000,0.95095; 723600,0.9553; 727200,0.959566666666667;
          730800,0.962283333333333; 734400,0.954316666666667; 738000,0.85595; 741600,
          0.8246; 745200,0.771066666666667; 748800,0.790183333333333; 752400,0.7794;
          756000,0.825483333333333; 759600,0.783783333333333; 763200,0.782483333333333;
          766800,0.801283333333333; 770400,0.810316666666667; 774000,0.796266666666667;
          777600,0.78975; 781200,0.758466666666667; 784800,0.751566666666667; 788400,
          0.812583333333333; 792000,0.829333333333333; 795600,0.767783333333333; 799200,
          0.774183333333333; 802800,0.8439; 806400,0.908516666666666; 810000,0.9116;
          813600,0.90795; 817200,0.89155; 820800,0.857683333333333; 824400,0.857266666666667;
          828000,0.85035; 831600,0.807616666666667; 835200,0.777566666666667; 838800,
          0.762616666666667; 842400,0.727283333333333; 846000,0.664283333333333; 849600,
          0.620016666666667; 853200,0.744583333333333; 856800,0.780266666666667; 860400,
          0.792533333333333; 864000,0.76635; 867600,0.7349; 871200,0.685966666666667;
          874800,0.736916666666667; 878400,0.8435; 882000,0.8482; 885600,0.75825;
          889200,0.729583333333333; 892800,0.585383333333333; 896400,0.525283333333333;
          900000,0.501183333333333; 903600,0.5748; 907200,0.493583333333333; 910800,
          0.44635; 914400,0.403233333333333; 918000,0.465516666666667; 921600,0.435816666666667;
          925200,0.428383333333333; 928800,0.453183333333333; 932400,0.462016666666667;
          936000,0.453966666666667; 939600,0.4457; 943200,0.456083333333333; 946800,
          0.470966666666667; 950400,0.458066666666667; 954000,0.462183333333333; 957600,
          0.5834; 961200,0.7197; 964800,0.67965; 968400,0.66435; 972000,0.583033333333333;
          975600,0.57895; 979200,0.544316666666667; 982800,0.553316666666667; 986400,
          0.645433333333333; 990000,0.678066666666667; 993600,0.64605; 997200,0.612533333333333;
          1000800,0.6972; 1004400,0.7824; 1008000,0.616133333333333; 1011600,0.584683333333333;
          1015200,0.546666666666667; 1018800,0.504383333333333; 1022400,0.649416666666667;
          1026000,0.582016666666667; 1029600,0.596433333333333; 1033200,0.703116666666667;
          1036800,0.71695; 1040400,0.73665; 1044000,0.6979; 1047600,0.657616666666667;
          1051200,0.65845; 1054800,0.593266666666667; 1058400,0.68895; 1062000,0.781066666666667;
          1065600,0.835; 1069200,0.815983333333333; 1072800,0.67975; 1076400,0.5926;
          1080000,0.553916666666667; 1083600,0.528016666666667; 1087200,0.50175; 1090800,
          0.5547; 1094400,0.658916666666667; 1098000,0.7388; 1101600,0.764666666666666;
          1105200,0.797983333333333; 1108800,0.762316666666667; 1112400,0.716583333333333;
          1116000,0.6952; 1119600,0.680816666666667; 1123200,0.65585; 1126800,0.676383333333333;
          1130400,0.665616666666667; 1134000,0.647483333333333; 1137600,0.628183333333333;
          1141200,0.625666666666667; 1144800,0.692083333333333; 1148400,0.8573; 1152000,
          0.89375; 1155600,0.9087; 1159200,0.91335; 1162800,0.911983333333333; 1166400,
          0.909833333333333; 1170000,0.907183333333333; 1173600,0.91245; 1177200,0.915466666666667;
          1180800,0.91955; 1184400,0.9244; 1188000,0.925566666666667; 1191600,0.922416666666667;
          1195200,0.9147; 1198800,0.89605; 1202400,0.8779; 1206000,0.885366666666667;
          1209600,0.83485; 1213200,0.824883333333333; 1216800,0.824183333333333; 1220400,
          0.770466666666667; 1224000,0.834983333333333; 1227600,0.8399; 1231200,0.83525;
          1234800,0.862983333333333; 1238400,0.8578; 1242000,0.71255; 1245600,0.5926;
          1249200,0.5017; 1252800,0.441083333333333; 1256400,0.3919; 1260000,0.381933333333333;
          1263600,0.3987; 1267200,0.50125; 1270800,0.567766666666667; 1274400,0.5717;
          1278000,0.613833333333333; 1281600,0.737866666666667; 1285200,0.838216666666667;
          1288800,0.80485; 1292400,0.8254; 1296000,0.838483333333333; 1299600,0.838633333333333;
          1303200,0.884566666666667; 1306800,0.901366666666667; 1310400,0.905116666666667;
          1314000,0.90735; 1317600,0.912283333333333; 1321200,0.916316666666667; 1324800,
          0.916716666666667; 1328400,0.896233333333333; 1332000,0.856083333333334;
          1335600,0.781633333333333; 1339200,0.717233333333333; 1342800,0.590433333333333;
          1346400,0.5473; 1350000,0.70415; 1353600,0.739366666666667; 1357200,0.66475;
          1360800,0.633; 1364400,0.5979; 1368000,0.643683333333333; 1371600,0.698466666666667;
          1375200,0.745133333333333; 1378800,0.784716666666667; 1382400,0.86205; 1386000,
          0.871933333333333; 1389600,0.882283333333334; 1393200,0.887316666666667;
          1396800,0.889466666666667; 1400400,0.8969; 1404000,0.8942; 1407600,0.8952;
          1411200,0.886833333333333; 1414800,0.872233333333333; 1418400,0.814866666666667;
          1422000,0.782566666666667; 1425600,0.7434; 1429200,0.68345; 1432800,0.677916666666667;
          1436400,0.64705; 1440000,0.677666666666667; 1443600,0.72085; 1447200,0.73335;
          1450800,0.7649; 1454400,0.78345; 1458000,0.753433333333333; 1461600,0.763066666666667;
          1465200,0.753916666666667; 1468800,0.722766666666667; 1472400,0.694916666666667;
          1476000,0.7449; 1479600,0.771816666666667; 1483200,0.7504; 1486800,0.71415;
          1490400,0.788666666666667; 1494000,0.80285; 1497600,0.767683333333333; 1501200,
          0.667233333333333; 1504800,0.604916666666667; 1508400,0.5862; 1512000,0.591216666666667;
          1515600,0.59205; 1519200,0.594916666666667; 1522800,0.606983333333333; 1526400,
          0.618216666666667; 1530000,0.6314; 1533600,0.685933333333334; 1537200,0.812;
          1540800,0.845283333333333; 1544400,0.85335; 1548000,0.865566666666667; 1551600,
          0.877616666666667; 1555200,0.884866666666667; 1558800,0.883933333333333;
          1562400,0.882916666666667; 1566000,0.880116666666667; 1569600,0.886583333333334;
          1573200,0.890966666666666; 1576800,0.881683333333333; 1580400,0.8827; 1584000,
          0.865866666666667; 1587600,0.851033333333333; 1591200,0.8287; 1594800,0.76905;
          1598400,0.74295; 1602000,0.734466666666667; 1605600,0.725566666666667; 1609200,
          0.740283333333333; 1612800,0.774266666666667; 1616400,0.814366666666667;
          1620000,0.84135; 1623600,0.8538; 1627200,0.851016666666667; 1630800,0.878666666666667;
          1634400,0.876466666666667; 1638000,0.871466666666667; 1641600,0.862616666666667;
          1645200,0.8653; 1648800,0.880733333333333; 1652400,0.85645; 1656000,0.872533333333333;
          1659600,0.868683333333333; 1663200,0.874566666666667; 1666800,0.8839; 1670400,
          0.870033333333333; 1674000,0.804116666666667; 1677600,0.7483; 1681200,0.788416666666667;
          1684800,0.782; 1688400,0.78965; 1692000,0.778933333333333; 1695600,0.784016666666667;
          1699200,0.807816666666667; 1702800,0.8116; 1706400,0.781616666666667; 1710000,
          0.768866666666667; 1713600,0.7694; 1717200,0.7739; 1720800,0.776966666666667;
          1724400,0.776433333333333; 1728000,0.752533333333333; 1731600,0.744666666666667;
          1735200,0.75085; 1738800,0.768983333333333; 1742400,0.781033333333333; 1746000,
          0.785333333333333; 1749600,0.786716666666667; 1753200,0.785716666666667;
          1756800,0.7701; 1760400,0.753033333333333; 1764000,0.711916666666667; 1767600,
          0.664166666666667; 1771200,0.634766666666667; 1774800,0.592366666666667;
          1778400,0.567266666666667; 1782000,0.567233333333333; 1785600,0.56115; 1789200,
          0.58405; 1792800,0.59825; 1796400,0.619966666666667; 1800000,0.627133333333333;
          1803600,0.6424; 1807200,0.737733333333333; 1810800,0.775316666666667; 1814400,
          0.828466666666667; 1818000,0.855833333333333; 1821600,0.858883333333333;
          1825200,0.863033333333333; 1828800,0.851866666666667; 1832400,0.868216666666667;
          1836000,0.868916666666667; 1839600,0.8584; 1843200,0.80305; 1846800,0.672683333333333;
          1850400,0.602533333333333; 1854000,0.525866666666667; 1857600,0.46705; 1861200,
          0.446133333333333; 1864800,0.417666666666667; 1868400,0.4641; 1872000,0.600016666666667;
          1875600,0.657116666666667; 1879200,0.67025; 1882800,0.68285; 1886400,0.672316666666667;
          1890000,0.705433333333333; 1893600,0.715066666666667; 1897200,0.7284; 1900800,
          0.701783333333333; 1904400,0.734683333333333; 1908000,0.740033333333333;
          1911600,0.72725; 1915200,0.784916666666667; 1918800,0.761333333333333; 1922400,
          0.755; 1926000,0.76995; 1929600,0.7655; 1933200,0.736816666666667; 1936800,
          0.66885; 1940400,0.583283333333333; 1944000,0.5551; 1947600,0.565016666666667;
          1951200,0.559516666666667; 1954800,0.57555; 1958400,0.65615; 1962000,0.713516666666667;
          1965600,0.649383333333333; 1969200,0.673733333333333; 1972800,0.702633333333333;
          1976400,0.789066666666667; 1980000,0.8333; 1983600,0.85135; 1987200,0.869216666666667;
          1990800,0.884216666666667; 1994400,0.888216666666667; 1998000,0.8888; 2001600,
          0.890466666666667; 2005200,0.89605; 2008800,0.899483333333333; 2012400,0.89995;
          2016000,0.8581; 2019600,0.763216666666667; 2023200,0.627916666666667; 2026800,
          0.56165; 2030400,0.47385; 2034000,0.4746; 2037600,0.43425; 2041200,0.503616666666667;
          2044800,0.63425; 2048400,0.61795; 2052000,0.703483333333333; 2055600,0.744833333333333;
          2059200,0.777333333333333; 2062800,0.7486; 2066400,0.77185; 2070000,0.791333333333333;
          2073600,0.8162; 2077200,0.832983333333333; 2080800,0.844333333333333; 2084400,
          0.866933333333333; 2088000,0.87365; 2091600,0.876583333333333; 2095200,0.887716666666667;
          2098800,0.8812; 2102400,0.785433333333333; 2106000,0.709833333333333; 2109600,
          0.616166666666667; 2113200,0.525783333333333; 2116800,0.46685; 2120400,0.4906;
          2124000,0.481333333333333; 2127600,0.514983333333333; 2131200,0.614166666666667;
          2134800,0.66845; 2138400,0.727966666666667; 2142000,0.75075; 2145600,0.76015;
          2149200,0.76695; 2152800,0.80355; 2156400,0.8243; 2160000,0.842533333333333;
          2163600,0.850283333333333; 2167200,0.869833333333333; 2170800,0.87305; 2174400,
          0.8744; 2178000,0.878783333333333; 2181600,0.883033333333333; 2185200,0.882533333333333;
          2188800,0.83945; 2192400,0.76585; 2196000,0.677483333333333; 2199600,0.584666666666667;
          2203200,0.549; 2206800,0.57755; 2210400,0.567933333333333; 2214000,0.569766666666667;
          2217600,0.659366666666667; 2221200,0.73345; 2224800,0.78665; 2228400,0.80665;
          2232000,0.821583333333333; 2235600,0.8514; 2239200,0.831633333333333; 2242800,
          0.862583333333333; 2246400,0.86965; 2250000,0.868233333333333; 2253600,0.887216666666667;
          2257200,0.8929; 2260800,0.893483333333333; 2264400,0.895716666666667; 2268000,
          0.898633333333333; 2271600,0.906433333333333; 2275200,0.849316666666667;
          2278800,0.739716666666667; 2282400,0.674916666666667; 2286000,0.674183333333333;
          2289600,0.666366666666667; 2293200,0.60315; 2296800,0.592916666666667; 2300400,
          0.60245; 2304000,0.635066666666667; 2307600,0.702366666666667; 2311200,0.7352;
          2314800,0.794533333333333; 2318400,0.830816666666667; 2322000,0.84875; 2325600,
          0.86895; 2329200,0.88835; 2332800,0.89185; 2336400,0.8961; 2340000,0.9048;
          2343600,0.91255; 2347200,0.91235; 2350800,0.91475; 2354400,0.912833333333333;
          2358000,0.913933333333333; 2361600,0.892016666666667; 2365200,0.822583333333333;
          2368800,0.74205; 2372400,0.65815; 2376000,0.647316666666667; 2379600,0.6286;
          2383200,0.619983333333333; 2386800,0.6433; 2390400,0.657266666666667; 2394000,
          0.687; 2397600,0.724333333333333; 2401200,0.755133333333333; 2404800,0.699466666666667;
          2408400,0.675033333333333; 2412000,0.70425; 2415600,0.734333333333333; 2419200,
          0.738183333333333; 2422800,0.735; 2426400,0.728783333333333; 2430000,0.735183333333333;
          2433600,0.831216666666667; 2437200,0.876316666666667; 2440800,0.896383333333333;
          2444400,0.90395; 2448000,0.901866666666667; 2451600,0.896366666666667; 2455200,
          0.806066666666667; 2458800,0.73795; 2462400,0.7494; 2466000,0.7229; 2469600,
          0.733483333333333; 2473200,0.7269; 2476800,0.745166666666667; 2480400,0.7983;
          2484000,0.86015; 2487600,0.888516666666667; 2491200,0.897416666666667; 2494800,
          0.893266666666667; 2498400,0.88735; 2502000,0.8743; 2505600,0.88435; 2509200,
          0.891683333333333; 2512800,0.915433333333333; 2516400,0.92435; 2520000,0.927216666666667;
          2523600,0.92855; 2527200,0.933916666666667; 2530800,0.93775; 2534400,0.9544;
          2538000,0.939666666666667; 2541600,0.709; 2545200,0.602616666666667; 2548800,
          0.521466666666667; 2552400,0.429766666666667; 2556000,0.468833333333333;
          2559600,0.483566666666667; 2563200,0.466466666666667; 2566800,0.513966666666667;
          2570400,0.518883333333333; 2574000,0.592133333333333; 2577600,0.63925; 2581200,
          0.748383333333333; 2584800,0.84805; 2588400,0.86505; 2592000,0.844866666666667;
          2595600,0.851683333333333; 2599200,0.864933333333333; 2602800,0.879233333333333;
          2606400,0.8694; 2610000,0.87205; 2613600,0.880866666666667; 2617200,0.868033333333333;
          2620800,0.873716666666667; 2624400,0.876633333333333; 2628000,0.872616666666667;
          2631600,0.887366666666667; 2635200,0.8977; 2638800,0.892066666666667; 2642400,
          0.892466666666667; 2646000,0.901333333333333; 2649600,0.89795; 2653200,0.872383333333333;
          2656800,0.886933333333333; 2660400,0.875866666666667; 2664000,0.886516666666667;
          2667600,0.8965; 2671200,0.9005; 2674800,0.893033333333333; 2678400,0.890716666666667;
          2682000,0.9102; 2685600,0.917966666666667; 2689200,0.921033333333333; 2692800,
          0.922433333333333; 2696400,0.93165; 2700000,0.941883333333333; 2703600,0.9479;
          2707200,0.947983333333333; 2710800,0.915583333333333; 2714400,0.872666666666667;
          2718000,0.82785; 2721600,0.69625; 2725200,0.64555; 2728800,0.640866666666667;
          2732400,0.634483333333333; 2736000,0.67755; 2739600,0.728133333333333; 2743200,
          0.790866666666667; 2746800,0.865416666666667; 2750400,0.87805; 2754000,0.904083333333333;
          2757600,0.907466666666667; 2761200,0.903583333333333; 2764800,0.895133333333333;
          2768400,0.887466666666667; 2772000,0.893983333333333; 2775600,0.894183333333333;
          2779200,0.911583333333333; 2782800,0.914366666666667; 2786400,0.922816666666667;
          2790000,0.924466666666667; 2793600,0.9184; 2797200,0.855266666666667; 2800800,
          0.80005; 2804400,0.739866666666667; 2808000,0.699566666666667; 2811600,0.700416666666667;
          2815200,0.693583333333333; 2818800,0.697916666666667; 2822400,0.706; 2826000,
          0.74385; 2829600,0.773266666666667; 2833200,0.801483333333333; 2836800,0.811233333333333;
          2840400,0.8359; 2844000,0.806583333333333; 2847600,0.8408; 2851200,0.8493;
          2854800,0.880433333333333; 2858400,0.884583333333333; 2862000,0.897533333333333;
          2865600,0.860716666666667; 2869200,0.840633333333333; 2872800,0.88735; 2876400,
          0.911116666666667; 2880000,0.851416666666667; 2883600,0.639333333333333;
          2887200,0.675583333333333; 2890800,0.646383333333333; 2894400,0.69825; 2898000,
          0.569516666666667; 2901600,0.634233333333333; 2905200,0.7809; 2908800,0.784383333333333;
          2912400,0.8346; 2916000,0.831783333333333; 2919600,0.816016666666667; 2923200,
          0.78935; 2926800,0.809333333333333; 2930400,0.847316666666667; 2934000,0.871883333333333;
          2937600,0.878333333333333; 2941200,0.881716666666667; 2944800,0.8867; 2948400,
          0.8849; 2952000,0.8758; 2955600,0.874183333333333; 2959200,0.9002; 2962800,
          0.88995; 2966400,0.819583333333333; 2970000,0.738966666666667; 2973600,0.654966666666667;
          2977200,0.639133333333333; 2980800,0.56235; 2984400,0.534966666666667; 2988000,
          0.55805; 2991600,0.57545; 2995200,0.57; 2998800,0.5529; 3002400,0.600666666666667;
          3006000,0.6997; 3009600,0.751433333333333; 3013200,0.789833333333333; 3016800,
          0.800266666666667; 3020400,0.8006; 3024000,0.827366666666667; 3027600,0.8431;
          3031200,0.85575; 3034800,0.861916666666667; 3038400,0.870416666666667; 3042000,
          0.888616666666667; 3045600,0.903283333333333; 3049200,0.904866666666667;
          3052800,0.8793; 3056400,0.763533333333333; 3060000,0.686616666666667; 3063600,
          0.647433333333333; 3067200,0.602783333333333; 3070800,0.545833333333333;
          3074400,0.542216666666667; 3078000,0.576583333333333; 3081600,0.707016666666667;
          3085200,0.781316666666667; 3088800,0.797083333333333; 3092400,0.824466666666667;
          3096000,0.855866666666667; 3099600,0.872616666666667; 3103200,0.893266666666667;
          3106800,0.9038; 3110400,0.90885; 3114000,0.913133333333333; 3117600,0.917383333333333;
          3121200,0.920866666666667; 3124800,0.9266; 3128400,0.92995; 3132000,0.93665;
          3135600,0.941033333333333; 3139200,0.9459; 3142800,0.9521; 3146400,0.955183333333333;
          3150000,0.940166666666667; 3153600,0.784883333333333; 3157200,0.643616666666667;
          3160800,0.569466666666667; 3164400,0.572616666666667; 3168000,0.67585; 3171600,
          0.76315; 3175200,0.801666666666667; 3178800,0.8089; 3182400,0.848833333333333;
          3186000,0.830916666666667; 3189600,0.832766666666667; 3193200,0.797983333333333;
          3196800,0.771766666666667; 3200400,0.7377; 3204000,0.7751; 3207600,0.718933333333333;
          3211200,0.77665; 3214800,0.74855; 3218400,0.755266666666667; 3222000,0.71435;
          3225600,0.745316666666667; 3229200,0.736833333333333; 3232800,0.84635; 3236400,
          0.900133333333333; 3240000,0.923233333333333; 3243600,0.930383333333333;
          3247200,0.932583333333333; 3250800,0.921716666666667; 3254400,0.909066666666667;
          3258000,0.915733333333333; 3261600,0.924966666666667; 3265200,0.926366666666667;
          3268800,0.904983333333333; 3272400,0.88825; 3276000,0.860083333333333; 3279600,
          0.86095; 3283200,0.871533333333333; 3286800,0.8706; 3290400,0.87435; 3294000,
          0.830416666666667; 3297600,0.76775; 3301200,0.72885; 3304800,0.695816666666667;
          3308400,0.673066666666667; 3312000,0.662316666666667; 3315600,0.628866666666667;
          3319200,0.595033333333333; 3322800,0.589766666666667; 3326400,0.58375; 3330000,
          0.600466666666667; 3333600,0.578483333333333; 3337200,0.54645; 3340800,0.567383333333333;
          3344400,0.539566666666667; 3348000,0.540666666666667; 3351600,0.56225; 3355200,
          0.638316666666667; 3358800,0.6955; 3362400,0.606683333333333; 3366000,0.657416666666667;
          3369600,0.6716; 3373200,0.687583333333333; 3376800,0.66645; 3380400,0.683766666666667;
          3384000,0.649166666666667; 3387600,0.617466666666667; 3391200,0.619866666666667;
          3394800,0.6376; 3398400,0.56995; 3402000,0.541783333333333; 3405600,0.566866666666667;
          3409200,0.552816666666667; 3412800,0.518883333333333; 3416400,0.498733333333333;
          3420000,0.52575; 3423600,0.637766666666667; 3427200,0.704533333333333; 3430800,
          0.6944; 3434400,0.421666666666667; 3438000,0.477266666666667; 3441600,0.405166666666667;
          3445200,0.328833333333333; 3448800,0.417666666666667; 3452400,0.500133333333333;
          3456000,0.582183333333333; 3459600,0.576933333333333; 3463200,0.507833333333333;
          3466800,0.522333333333333; 3470400,0.47085; 3474000,0.46995; 3477600,0.462783333333333;
          3481200,0.491183333333333; 3484800,0.558683333333333; 3488400,0.688133333333333;
          3492000,0.644683333333333; 3495600,0.5082; 3499200,0.475233333333333; 3502800,
          0.486316666666667; 3506400,0.551983333333333; 3510000,0.519966666666667;
          3513600,0.518566666666667; 3517200,0.53605; 3520800,0.576466666666667; 3524400,
          0.58675; 3528000,0.672516666666667; 3531600,0.795333333333333; 3535200,0.839183333333333;
          3538800,0.871466666666667; 3542400,0.88055; 3546000,0.88215; 3549600,0.88495;
          3553200,0.89295; 3556800,0.898183333333333; 3560400,0.898033333333333; 3564000,
          0.8819; 3567600,0.82355; 3571200,0.800916666666667; 3574800,0.748666666666667;
          3578400,0.718633333333333; 3582000,0.652583333333333; 3585600,0.564683333333333;
          3589200,0.45845; 3592800,0.600716666666667; 3596400,0.644933333333333; 3600000,
          0.733283333333333; 3603600,0.825733333333333; 3607200,0.8562; 3610800,0.870916666666667;
          3614400,0.8784; 3618000,0.883183333333333; 3621600,0.886383333333333; 3625200,
          0.883866666666667; 3628800,0.865933333333333; 3632400,0.852233333333333;
          3636000,0.862366666666667; 3639600,0.839583333333333; 3643200,0.8275; 3646800,
          0.804833333333333; 3650400,0.79345; 3654000,0.76595; 3657600,0.72695; 3661200,
          0.7518; 3664800,0.790766666666667; 3668400,0.819266666666667; 3672000,0.809833333333333;
          3675600,0.790516666666667; 3679200,0.833283333333333; 3682800,0.7999; 3686400,
          0.7917; 3690000,0.76515; 3693600,0.701216666666667; 3697200,0.631133333333333;
          3700800,0.618366666666667; 3704400,0.608733333333333; 3708000,0.589766666666667;
          3711600,0.56485; 3715200,0.6566; 3718800,0.652383333333333; 3722400,0.6324;
          3726000,0.66065; 3729600,0.726733333333333; 3733200,0.747216666666667; 3736800,
          0.784916666666667; 3740400,0.7445; 3744000,0.7585; 3747600,0.8146; 3751200,
          0.787733333333333; 3754800,0.701583333333333; 3758400,0.651766666666667;
          3762000,0.628533333333333; 3765600,0.4943; 3769200,0.49715; 3772800,0.593016666666667;
          3776400,0.483366666666667; 3780000,0.488916666666667; 3783600,0.466983333333333;
          3787200,0.47035; 3790800,0.456966666666667; 3794400,0.455733333333333; 3798000,
          0.49775; 3801600,0.5366; 3805200,0.573783333333333; 3808800,0.661483333333333;
          3812400,0.699033333333333; 3816000,0.711116666666667; 3819600,0.679116666666667;
          3823200,0.720633333333333; 3826800,0.698566666666667; 3830400,0.699516666666667;
          3834000,0.676983333333333; 3837600,0.725433333333333; 3841200,0.689966666666667;
          3844800,0.65505; 3848400,0.7186; 3852000,0.6814; 3855600,0.652733333333333;
          3859200,0.675566666666667; 3862800,0.775833333333333; 3866400,0.817566666666667;
          3870000,0.835416666666667; 3873600,0.874983333333333; 3877200,0.888916666666667;
          3880800,0.89355; 3884400,0.897533333333333; 3888000,0.89485; 3891600,0.886283333333333;
          3895200,0.881283333333333; 3898800,0.86915; 3902400,0.880883333333333; 3906000,
          0.888183333333333; 3909600,0.875383333333333; 3913200,0.784166666666667;
          3916800,0.704266666666667; 3920400,0.694483333333333; 3924000,0.659766666666667;
          3927600,0.65805; 3931200,0.6263; 3934800,0.573; 3938400,0.534816666666667;
          3942000,0.499233333333333; 3945600,0.487216666666667; 3949200,0.530583333333333;
          3952800,0.521; 3956400,0.519683333333333; 3960000,0.534283333333333; 3963600,
          0.545816666666667; 3967200,0.5686; 3970800,0.5883; 3974400,0.577833333333333;
          3978000,0.587916666666667; 3981600,0.59625; 3985200,0.608683333333333; 3988800,
          0.639516666666667; 3992400,0.651383333333333; 3996000,0.632066666666667;
          3999600,0.624566666666667; 4003200,0.602016666666667; 4006800,0.575316666666667;
          4010400,0.577333333333333; 4014000,0.58355; 4017600,0.580333333333333; 4021200,
          0.582533333333333; 4024800,0.59475; 4028400,0.604283333333333; 4032000,0.617666666666667;
          4035600,0.622866666666667; 4039200,0.631866666666667; 4042800,0.634466666666667;
          4046400,0.6304; 4050000,0.629666666666667; 4053600,0.636066666666667; 4057200,
          0.631066666666667; 4060800,0.652366666666667; 4064400,0.666366666666667;
          4068000,0.675716666666667; 4071600,0.67995; 4075200,0.685833333333333; 4078800,
          0.695633333333333; 4082400,0.722883333333333; 4086000,0.73285; 4089600,0.729983333333333;
          4093200,0.718416666666667; 4096800,0.717616666666667; 4100400,0.694383333333333;
          4104000,0.66745; 4107600,0.6427; 4111200,0.628233333333333; 4114800,0.6145;
          4118400,0.614833333333333; 4122000,0.6459; 4125600,0.637933333333333; 4129200,
          0.658716666666667; 4132800,0.69775; 4136400,0.7421; 4140000,0.735383333333333;
          4143600,0.744683333333333; 4147200,0.743566666666667; 4150800,0.769; 4154400,
          0.746366666666667; 4158000,0.768366666666667; 4161600,0.800383333333333;
          4165200,0.805966666666667; 4168800,0.803133333333333; 4172400,0.80585; 4176000,
          0.781116666666667; 4179600,0.708383333333333; 4183200,0.639583333333333;
          4186800,0.59745; 4190400,0.5387; 4194000,0.4968; 4197600,0.5242; 4201200,
          0.549516666666667; 4204800,0.5433; 4208400,0.576733333333333; 4212000,0.591016666666667;
          4215600,0.61345; 4219200,0.608783333333333; 4222800,0.6464; 4226400,0.632166666666667;
          4230000,0.569783333333333; 4233600,0.591; 4237200,0.623166666666667; 4240800,
          0.6791; 4244400,0.737016666666667; 4248000,0.780866666666667; 4251600,0.788366666666667;
          4255200,0.820116666666667; 4258800,0.800166666666667; 4262400,0.760883333333333;
          4266000,0.740433333333333; 4269600,0.725766666666667; 4273200,0.640816666666667;
          4276800,0.57085; 4280400,0.49925; 4284000,0.46585; 4287600,0.517733333333333;
          4291200,0.564983333333333; 4294800,0.622333333333333; 4298400,0.64055; 4302000,
          0.690083333333333; 4305600,0.714933333333333; 4309200,0.752133333333333;
          4312800,0.772933333333333; 4316400,0.796516666666667; 4320000,0.80505; 4323600,
          0.801716666666667; 4327200,0.799816666666667; 4330800,0.814866666666667;
          4334400,0.8174; 4338000,0.814433333333333; 4341600,0.754816666666667; 4345200,
          0.7405; 4348800,0.620433333333333; 4352400,0.5301; 4356000,0.458033333333333;
          4359600,0.414283333333333; 4363200,0.379116666666667; 4366800,0.341583333333333;
          4370400,0.355316666666667; 4374000,0.3324; 4377600,0.340066666666667; 4381200,
          0.3552; 4384800,0.412983333333333; 4388400,0.47645; 4392000,0.5201; 4395600,
          0.557283333333333; 4399200,0.608883333333333; 4402800,0.684866666666667;
          4406400,0.7146; 4410000,0.775966666666667; 4413600,0.787316666666667; 4417200,
          0.817666666666667; 4420800,0.825766666666667; 4424400,0.831533333333333;
          4428000,0.835816666666667; 4431600,0.831116666666667; 4435200,0.70395; 4438800,
          0.609166666666667; 4442400,0.5166; 4446000,0.475533333333333; 4449600,0.445566666666667;
          4453200,0.505416666666667; 4456800,0.465983333333333; 4460400,0.47795; 4464000,
          0.54745; 4467600,0.635833333333333; 4471200,0.707633333333333; 4474800,0.7687;
          4478400,0.748333333333333; 4482000,0.7942; 4485600,0.81525; 4489200,0.814583333333333;
          4492800,0.80075; 4496400,0.839966666666667; 4500000,0.874433333333333; 4503600,
          0.87095; 4507200,0.878766666666667; 4510800,0.8906; 4514400,0.8995; 4518000,
          0.8869; 4521600,0.830333333333333; 4525200,0.802533333333333; 4528800,0.728616666666667;
          4532400,0.754166666666667; 4536000,0.7123; 4539600,0.70595; 4543200,0.691916666666667;
          4546800,0.705066666666667; 4550400,0.736816666666667; 4554000,0.804816666666667;
          4557600,0.836833333333333; 4561200,0.882666666666667; 4564800,0.869883333333333;
          4568400,0.894266666666667; 4572000,0.897783333333333; 4575600,0.913583333333334;
          4579200,0.9184; 4582800,0.924866666666667; 4586400,0.925133333333333; 4590000,
          0.90605; 4593600,0.885216666666667; 4597200,0.845283333333333; 4600800,0.823666666666667;
          4604400,0.878833333333333; 4608000,0.8916; 4611600,0.889883333333333; 4615200,
          0.858216666666667; 4618800,0.775766666666667; 4622400,0.773333333333333;
          4626000,0.77695; 4629600,0.796716666666667; 4633200,0.831233333333333; 4636800,
          0.827883333333333; 4640400,0.811516666666667; 4644000,0.84905; 4647600,0.867583333333333;
          4651200,0.852783333333333; 4654800,0.78945; 4658400,0.816316666666667; 4662000,
          0.786033333333333; 4665600,0.7426; 4669200,0.741016666666667; 4672800,0.729;
          4676400,0.738966666666667; 4680000,0.738783333333333; 4683600,0.72325; 4687200,
          0.71975; 4690800,0.69635; 4694400,0.664783333333333; 4698000,0.630916666666667;
          4701600,0.616266666666667; 4705200,0.650816666666667; 4708800,0.667516666666667;
          4712400,0.667183333333333; 4716000,0.681233333333333; 4719600,0.675716666666667;
          4723200,0.707733333333333; 4726800,0.733066666666667; 4730400,0.78585; 4734000,
          0.818766666666667; 4737600,0.790266666666667; 4741200,0.789133333333333;
          4744800,0.838983333333333; 4748400,0.845066666666667; 4752000,0.876416666666667;
          4755600,0.888283333333333; 4759200,0.896916666666667; 4762800,0.90495; 4766400,
          0.906366666666667; 4770000,0.914966666666667; 4773600,0.9264; 4777200,0.93565;
          4780800,0.932; 4784400,0.908933333333333; 4788000,0.865216666666667; 4791600,
          0.804616666666667; 4795200,0.827266666666667; 4798800,0.853916666666667;
          4802400,0.8611; 4806000,0.83535; 4809600,0.826983333333333; 4813200,0.819833333333333;
          4816800,0.84155; 4820400,0.837833333333333; 4824000,0.868133333333333; 4827600,
          0.8575; 4831200,0.839316666666667; 4834800,0.8353; 4838400,0.825933333333333;
          4842000,0.833733333333333; 4845600,0.809483333333333; 4849200,0.806133333333333;
          4852800,0.800633333333333; 4856400,0.79635; 4860000,0.7657; 4863600,0.759166666666667;
          4867200,0.76315; 4870800,0.725766666666667; 4874400,0.658983333333333; 4878000,
          0.6169; 4881600,0.551133333333333; 4885200,0.529666666666667; 4888800,0.504333333333333;
          4892400,0.529533333333333; 4896000,0.553783333333333; 4899600,0.657016666666667;
          4903200,0.73855; 4906800,0.783133333333333; 4910400,0.806216666666667; 4914000,
          0.8304; 4917600,0.852616666666667; 4921200,0.861516666666667; 4924800,0.856633333333333;
          4928400,0.753166666666667; 4932000,0.732483333333333; 4935600,0.7136; 4939200,
          0.721283333333333; 4942800,0.71835; 4946400,0.70415; 4950000,0.69365; 4953600,
          0.6751; 4957200,0.653666666666667; 4960800,0.60635; 4964400,0.574583333333333;
          4968000,0.55745; 4971600,0.532933333333333; 4975200,0.504766666666667; 4978800,
          0.488783333333333; 4982400,0.496133333333333; 4986000,0.525566666666667;
          4989600,0.537616666666667; 4993200,0.540466666666667; 4996800,0.575266666666667;
          5000400,0.59575; 5004000,0.613183333333333; 5007600,0.609883333333333; 5011200,
          0.610716666666667; 5014800,0.646166666666667; 5018400,0.643316666666667;
          5022000,0.694816666666667; 5025600,0.727233333333333; 5029200,0.732883333333333;
          5032800,0.740666666666667; 5036400,0.790983333333333; 5040000,0.72235; 5043600,
          0.650366666666667; 5047200,0.573383333333333; 5050800,0.550883333333333;
          5054400,0.548233333333333; 5058000,0.528333333333333; 5061600,0.528466666666667;
          5065200,0.5246; 5068800,0.573783333333333; 5072400,0.605766666666667; 5076000,
          0.6127; 5079600,0.604466666666667; 5083200,0.6346; 5086800,0.631833333333333;
          5090400,0.601466666666667; 5094000,0.620316666666667; 5097600,0.608116666666667;
          5101200,0.616116666666667; 5104800,0.622866666666667; 5108400,0.6315; 5112000,
          0.64535; 5115600,0.6556; 5119200,0.64665; 5122800,0.641616666666667; 5126400,
          0.637766666666667; 5130000,0.6414; 5133600,0.632233333333333; 5137200,0.615766666666667;
          5140800,0.601683333333333; 5144400,0.599816666666667; 5148000,0.585266666666667;
          5151600,0.580966666666667; 5155200,0.598; 5158800,0.631183333333333; 5162400,
          0.6647; 5166000,0.624716666666667; 5169600,0.60655; 5173200,0.595933333333333;
          5176800,0.611983333333333; 5180400,0.633; 5184000,0.645716666666667; 5187600,
          0.670216666666667; 5191200,0.648533333333333; 5194800,0.6117; 5198400,0.587283333333333;
          5202000,0.5805; 5205600,0.561583333333333; 5209200,0.558366666666667; 5212800,
          0.544516666666667; 5216400,0.50555; 5220000,0.47205; 5223600,0.430216666666667;
          5227200,0.415833333333333; 5230800,0.4063; 5234400,0.403083333333333; 5238000,
          0.422633333333333; 5241600,0.524616666666667; 5245200,0.540333333333333;
          5248800,0.57305; 5252400,0.553216666666667; 5256000,0.551016666666667; 5259600,
          0.591216666666667; 5263200,0.6661; 5266800,0.7387; 5270400,0.694933333333333;
          5274000,0.700933333333333; 5277600,0.81265; 5281200,0.852216666666667; 5284800,
          0.828966666666667; 5288400,0.825516666666667; 5292000,0.82935; 5295600,0.819183333333333;
          5299200,0.7914; 5302800,0.792983333333333; 5306400,0.793716666666667; 5310000,
          0.787883333333333; 5313600,0.782733333333333; 5317200,0.776033333333333;
          5320800,0.733533333333333; 5324400,0.808816666666667; 5328000,0.821383333333333;
          5331600,0.695716666666667; 5335200,0.504066666666667; 5338800,0.538633333333333;
          5342400,0.608583333333333; 5346000,0.690916666666667; 5349600,0.669183333333333;
          5353200,0.690183333333333; 5356800,0.684766666666667; 5360400,0.715183333333333;
          5364000,0.683933333333333; 5367600,0.772483333333333; 5371200,0.838433333333333;
          5374800,0.8675; 5378400,0.865633333333333; 5382000,0.853883333333333; 5385600,
          0.867016666666667; 5389200,0.855433333333333; 5392800,0.8057; 5396400,0.712383333333333;
          5400000,0.635183333333333; 5403600,0.673; 5407200,0.764966666666667; 5410800,
          0.811916666666667; 5414400,0.829016666666667; 5418000,0.834666666666667;
          5421600,0.815766666666667; 5425200,0.828666666666667; 5428800,0.851183333333333;
          5432400,0.8727; 5436000,0.879883333333333; 5439600,0.876066666666667; 5443200,
          0.8608; 5446800,0.840633333333333; 5450400,0.832666666666667; 5454000,0.83555;
          5457600,0.824633333333333; 5461200,0.745466666666667; 5464800,0.655766666666667;
          5468400,0.642583333333333; 5472000,0.625266666666667; 5475600,0.61885; 5479200,
          0.701216666666667; 5482800,0.660816666666667; 5486400,0.6313; 5490000,0.621683333333333;
          5493600,0.67345; 5497200,0.704583333333333; 5500800,0.683616666666667; 5504400,
          0.64205; 5508000,0.620483333333333; 5511600,0.616183333333333; 5515200,0.680533333333333;
          5518800,0.73815; 5522400,0.7717; 5526000,0.792833333333333; 5529600,0.848016666666667;
          5533200,0.884016666666667; 5536800,0.908033333333333; 5540400,0.9147; 5544000,
          0.915366666666666; 5547600,0.916766666666667; 5551200,0.913783333333333;
          5554800,0.914433333333333; 5558400,0.909716666666667; 5562000,0.888583333333333;
          5565600,0.836116666666667; 5569200,0.77055; 5572800,0.665983333333333; 5576400,
          0.613583333333333; 5580000,0.716083333333333; 5583600,0.681483333333333;
          5587200,0.6997; 5590800,0.789316666666667; 5594400,0.693716666666667; 5598000,
          0.580433333333333; 5601600,0.63655; 5605200,0.698083333333333; 5608800,0.6805;
          5612400,0.701433333333333; 5616000,0.7082; 5619600,0.697583333333333; 5623200,
          0.74155; 5626800,0.797266666666667; 5630400,0.811066666666667; 5634000,0.839683333333333;
          5637600,0.848566666666667; 5641200,0.8396; 5644800,0.789416666666667; 5648400,
          0.738733333333333; 5652000,0.611533333333333; 5655600,0.567; 5659200,0.58635;
          5662800,0.596983333333333; 5666400,0.583066666666667; 5670000,0.5627; 5673600,
          0.646316666666667; 5677200,0.675983333333333; 5680800,0.755066666666667;
          5684400,0.78175; 5688000,0.78015; 5691600,0.818916666666667; 5695200,0.821716666666667;
          5698800,0.83795; 5702400,0.863866666666667; 5706000,0.865883333333333; 5709600,
          0.859983333333333; 5713200,0.8531; 5716800,0.8375; 5720400,0.809633333333333;
          5724000,0.81025; 5727600,0.759633333333333; 5731200,0.653266666666667; 5734800,
          0.583816666666667; 5738400,0.51555; 5742000,0.529333333333333; 5745600,0.440333333333333;
          5749200,0.2995; 5752800,0.300566666666667; 5756400,0.357966666666667; 5760000,
          0.478833333333333; 5763600,0.6664; 5767200,0.823583333333333; 5770800,0.8362;
          5774400,0.820216666666667; 5778000,0.823966666666667; 5781600,0.790233333333333;
          5785200,0.777766666666667; 5788800,0.777616666666667; 5792400,0.85225; 5796000,
          0.8571; 5799600,0.8769; 5803200,0.878; 5806800,0.871283333333333; 5810400,
          0.861616666666667; 5814000,0.842816666666667; 5817600,0.805716666666667;
          5821200,0.704333333333333; 5824800,0.6655; 5828400,0.54925; 5832000,0.581516666666667;
          5835600,0.734083333333333; 5839200,0.744716666666667; 5842800,0.713883333333333;
          5846400,0.673666666666667; 5850000,0.6395; 5853600,0.598183333333333; 5857200,
          0.532483333333333; 5860800,0.557833333333333; 5864400,0.559233333333333;
          5868000,0.577733333333333; 5871600,0.636416666666667; 5875200,0.693866666666667;
          5878800,0.7283; 5882400,0.788483333333333; 5886000,0.81205; 5889600,0.827033333333333;
          5893200,0.8535; 5896800,0.84245; 5900400,0.781516666666667; 5904000,0.62885;
          5907600,0.53755; 5911200,0.4806; 5914800,0.422866666666667; 5918400,0.383833333333333;
          5922000,0.328333333333333; 5925600,0.313583333333333; 5929200,0.380716666666667;
          5932800,0.412716666666667; 5936400,0.49195; 5940000,0.518833333333333; 5943600,
          0.610683333333333; 5947200,0.72185; 5950800,0.7482; 5954400,0.776866666666667;
          5958000,0.802783333333333; 5961600,0.800983333333333; 5965200,0.8214; 5968800,
          0.855583333333333; 5972400,0.86265; 5976000,0.8791; 5979600,0.88205; 5983200,
          0.878316666666667; 5986800,0.818516666666667; 5990400,0.67645; 5994000,0.555466666666667;
          5997600,0.4899; 6001200,0.417016666666667; 6004800,0.36435; 6008400,0.3342;
          6012000,0.27755; 6015600,0.262416666666667; 6019200,0.355233333333333; 6022800,
          0.38885; 6026400,0.429666666666667; 6030000,0.499; 6033600,0.53595; 6037200,
          0.546633333333333; 6040800,0.628316666666667; 6044400,0.6977; 6048000,0.72985;
          6051600,0.760316666666667; 6055200,0.785383333333333; 6058800,0.786916666666667;
          6062400,0.811316666666667; 6066000,0.83185; 6069600,0.831616666666667; 6073200,
          0.771083333333333; 6076800,0.629816666666667; 6080400,0.558133333333333;
          6084000,0.5164; 6087600,0.49705; 6091200,0.461766666666667; 6094800,0.447116666666667;
          6098400,0.447433333333333; 6102000,0.447783333333333; 6105600,0.444933333333333;
          6109200,0.4633; 6112800,0.526916666666667; 6116400,0.543233333333333; 6120000,
          0.56155; 6123600,0.577033333333333; 6127200,0.6793; 6130800,0.726633333333333;
          6134400,0.755766666666667; 6138000,0.72165; 6141600,0.720466666666667; 6145200,
          0.718066666666667; 6148800,0.725533333333333; 6152400,0.736616666666667;
          6156000,0.734166666666667; 6159600,0.755333333333333; 6163200,0.752516666666667;
          6166800,0.69485; 6170400,0.662716666666667; 6174000,0.575483333333333; 6177600,
          0.536483333333333; 6181200,0.5255; 6184800,0.507316666666667; 6188400,0.558833333333333;
          6192000,0.6237; 6195600,0.66685; 6199200,0.687433333333333; 6202800,0.59565;
          6206400,0.558966666666667; 6210000,0.604483333333333; 6213600,0.62435; 6217200,
          0.626733333333333; 6220800,0.6321; 6224400,0.609883333333333; 6228000,0.641733333333333;
          6231600,0.647833333333333; 6235200,0.658383333333333; 6238800,0.669816666666667;
          6242400,0.666616666666667; 6246000,0.690716666666667; 6249600,0.709633333333333;
          6253200,0.696466666666667; 6256800,0.634433333333333; 6260400,0.593683333333333;
          6264000,0.51125; 6267600,0.479616666666667; 6271200,0.43475; 6274800,0.48215;
          6278400,0.542916666666667; 6282000,0.564316666666667; 6285600,0.586466666666667;
          6289200,0.58375; 6292800,0.578916666666667; 6296400,0.611233333333333; 6300000,
          0.616666666666667; 6303600,0.635216666666667; 6307200,0.6501; 6310800,0.66185;
          6314400,0.708683333333333; 6318000,0.7544; 6321600,0.7538; 6325200,0.727683333333333;
          6328800,0.730683333333333; 6332400,0.681116666666667; 6336000,0.6318; 6339600,
          0.5713; 6343200,0.525566666666667; 6346800,0.466683333333333; 6350400,0.431733333333333;
          6354000,0.410116666666667; 6357600,0.377216666666667; 6361200,0.368666666666667;
          6364800,0.4348; 6368400,0.522266666666667; 6372000,0.556883333333333; 6375600,
          0.56155; 6379200,0.596483333333333; 6382800,0.613616666666667; 6386400,0.6409;
          6390000,0.650566666666667; 6393600,0.672983333333333; 6397200,0.685866666666667;
          6400800,0.716566666666667; 6404400,0.79175; 6408000,0.824983333333333; 6411600,
          0.831166666666667; 6415200,0.856133333333333; 6418800,0.775883333333333;
          6422400,0.644783333333333; 6426000,0.562583333333333; 6429600,0.5314; 6433200,
          0.463033333333333; 6436800,0.423883333333333; 6440400,0.397183333333333;
          6444000,0.353633333333333; 6447600,0.387733333333333; 6451200,0.434; 6454800,
          0.488666666666667; 6458400,0.462683333333333; 6462000,0.646466666666667;
          6465600,0.737766666666667; 6469200,0.763333333333333; 6472800,0.728033333333333;
          6476400,0.666483333333333; 6480000,0.668916666666667; 6483600,0.67705; 6487200,
          0.672483333333333; 6490800,0.664833333333333; 6494400,0.655833333333333;
          6498000,0.7078; 6501600,0.79085; 6505200,0.797983333333333; 6508800,0.7972;
          6512400,0.737633333333333; 6516000,0.6948; 6519600,0.673933333333333; 6523200,
          0.659083333333333; 6526800,0.631383333333333; 6530400,0.60635; 6534000,0.59115;
          6537600,0.591133333333333; 6541200,0.5946; 6544800,0.615533333333333; 6548400,
          0.644733333333333; 6552000,0.656716666666667; 6555600,0.678016666666667;
          6559200,0.751966666666667; 6562800,0.8062; 6566400,0.834; 6570000,0.85755;
          6573600,0.861016666666667; 6577200,0.86875; 6580800,0.872133333333333; 6584400,
          0.873516666666667; 6588000,0.869166666666667; 6591600,0.840666666666667;
          6595200,0.716683333333333; 6598800,0.592383333333333; 6602400,0.59325; 6606000,
          0.543616666666667; 6609600,0.464866666666667; 6613200,0.421916666666667;
          6616800,0.414366666666667; 6620400,0.397633333333333; 6624000,0.455216666666667;
          6627600,0.5122; 6631200,0.5933; 6634800,0.650083333333333; 6638400,0.70345;
          6642000,0.750633333333333; 6645600,0.77305; 6649200,0.806166666666667; 6652800,
          0.820166666666667; 6656400,0.8457; 6660000,0.866133333333333; 6663600,0.87845;
          6667200,0.88735; 6670800,0.886766666666667; 6674400,0.8871; 6678000,0.820883333333333;
          6681600,0.668033333333333; 6685200,0.542883333333333; 6688800,0.423133333333333;
          6692400,0.391083333333333; 6696000,0.355983333333333; 6699600,0.310916666666667;
          6703200,0.2982; 6706800,0.33625; 6710400,0.367216666666667; 6714000,0.458216666666667;
          6717600,0.536183333333333; 6721200,0.624466666666667; 6724800,0.648266666666667;
          6728400,0.692183333333333; 6732000,0.745283333333333; 6735600,0.7737; 6739200,
          0.803966666666667; 6742800,0.835266666666667; 6746400,0.854283333333333;
          6750000,0.855466666666667; 6753600,0.862116666666667; 6757200,0.8673; 6760800,
          0.88045; 6764400,0.79185; 6768000,0.6253; 6771600,0.5116; 6775200,0.399733333333333;
          6778800,0.329533333333333; 6782400,0.278483333333333; 6786000,0.274766666666667;
          6789600,0.28305; 6793200,0.26955; 6796800,0.337683333333333; 6800400,0.464816666666667;
          6804000,0.498166666666667; 6807600,0.558883333333333; 6811200,0.601816666666667;
          6814800,0.677366666666667; 6818400,0.712416666666667; 6822000,0.711033333333333;
          6825600,0.741966666666667; 6829200,0.774566666666667; 6832800,0.799533333333333;
          6836400,0.815; 6840000,0.8278; 6843600,0.84285; 6847200,0.845783333333333;
          6850800,0.7528; 6854400,0.6209; 6858000,0.546816666666667; 6861600,0.4927;
          6865200,0.509566666666667; 6868800,0.505516666666667; 6872400,0.486666666666667;
          6876000,0.435383333333333; 6879600,0.42545; 6883200,0.457916666666667; 6886800,
          0.524666666666667; 6890400,0.572066666666667; 6894000,0.603383333333333;
          6897600,0.64885; 6901200,0.678816666666667; 6904800,0.724983333333333; 6908400,
          0.7475; 6912000,0.764766666666667; 6915600,0.800833333333333; 6919200,0.801683333333333;
          6922800,0.8295; 6926400,0.85025; 6930000,0.871133333333333; 6933600,0.862683333333333;
          6937200,0.830233333333333; 6940800,0.777066666666667; 6944400,0.735883333333333;
          6948000,0.646766666666667; 6951600,0.6324; 6955200,0.613066666666667; 6958800,
          0.592483333333333; 6962400,0.57505; 6966000,0.5707; 6969600,0.568466666666667;
          6973200,0.600883333333333; 6976800,0.6446; 6980400,0.700016666666667; 6984000,
          0.700633333333333; 6987600,0.656616666666667; 6991200,0.613266666666667;
          6994800,0.6309; 6998400,0.643416666666667; 7002000,0.6427; 7005600,0.651166666666667;
          7009200,0.675633333333333; 7012800,0.662566666666667; 7016400,0.647583333333333;
          7020000,0.66115; 7023600,0.6504; 7027200,0.6313; 7030800,0.599683333333333;
          7034400,0.567383333333333; 7038000,0.517283333333333; 7041600,0.471116666666667;
          7045200,0.41825; 7048800,0.357033333333333; 7052400,0.339816666666667; 7056000,
          0.3724; 7059600,0.4149; 7063200,0.424366666666667; 7066800,0.432766666666667;
          7070400,0.44805; 7074000,0.4666; 7077600,0.469566666666667; 7081200,0.467733333333333;
          7084800,0.483183333333333; 7088400,0.518316666666667; 7092000,0.497233333333333;
          7095600,0.518216666666667; 7099200,0.527866666666667; 7102800,0.530983333333333;
          7106400,0.534433333333333; 7110000,0.490316666666667; 7113600,0.4247; 7117200,
          0.350533333333333; 7120800,0.316333333333333; 7124400,0.340816666666667;
          7128000,0.32145; 7131600,0.349683333333333; 7135200,0.357966666666667; 7138800,
          0.360783333333333; 7142400,0.376683333333333; 7146000,0.40505; 7149600,0.432716666666667;
          7153200,0.466883333333333; 7156800,0.485083333333333; 7160400,0.500233333333333;
          7164000,0.521383333333333; 7167600,0.542483333333333; 7171200,0.559233333333333;
          7174800,0.57785; 7178400,0.585516666666667; 7182000,0.599783333333333; 7185600,
          0.634066666666667; 7189200,0.65245; 7192800,0.650933333333333; 7196400,0.566483333333333;
          7200000,0.530066666666667; 7203600,0.484583333333333; 7207200,0.419383333333333;
          7210800,0.345316666666667; 7214400,0.302416666666667; 7218000,0.260383333333333;
          7221600,0.26; 7225200,0.29085; 7228800,0.333933333333333; 7232400,0.399866666666667;
          7236000,0.437816666666667; 7239600,0.496466666666667; 7243200,0.54415; 7246800,
          0.6415; 7250400,0.664816666666667; 7254000,0.684483333333333; 7257600,0.68175;
          7261200,0.723433333333333; 7264800,0.720966666666667; 7268400,0.716983333333333;
          7272000,0.729066666666667; 7275600,0.724433333333333; 7279200,0.735266666666667;
          7282800,0.699616666666667; 7286400,0.6017; 7290000,0.519666666666667; 7293600,
          0.5227; 7297200,0.525233333333333; 7300800,0.625133333333333; 7304400,0.625683333333333;
          7308000,0.658033333333333; 7311600,0.5969; 7315200,0.65895; 7318800,0.706166666666667;
          7322400,0.74885; 7326000,0.768966666666667; 7329600,0.80975; 7333200,0.814216666666667;
          7336800,0.8382; 7340400,0.8473; 7344000,0.847066666666667; 7347600,0.88465;
          7351200,0.88925; 7354800,0.885816666666667; 7358400,0.8975; 7362000,0.903533333333333;
          7365600,0.908416666666667; 7369200,0.866066666666667; 7372800,0.712133333333333;
          7376400,0.58925; 7380000,0.5065; 7383600,0.445166666666667; 7387200,0.4001;
          7390800,0.3659; 7394400,0.331; 7398000,0.322283333333333; 7401600,0.385266666666667;
          7405200,0.488266666666667; 7408800,0.576433333333333; 7412400,0.637183333333333;
          7416000,0.664966666666667; 7419600,0.6217; 7423200,0.561833333333333; 7426800,
          0.5572; 7430400,0.583016666666667; 7434000,0.711916666666667; 7437600,0.729733333333333;
          7441200,0.724716666666667; 7444800,0.642816666666667; 7448400,0.71385; 7452000,
          0.8379; 7455600,0.8268; 7459200,0.796816666666667; 7462800,0.8173; 7466400,
          0.805416666666667; 7470000,0.800166666666667; 7473600,0.79625; 7477200,0.71315;
          7480800,0.674516666666667; 7484400,0.64715; 7488000,0.72035; 7491600,0.802666666666667;
          7495200,0.850466666666667; 7498800,0.877416666666667; 7502400,0.884916666666667;
          7506000,0.875266666666667; 7509600,0.84265; 7513200,0.823083333333333; 7516800,
          0.807133333333333; 7520400,0.803333333333333; 7524000,0.752516666666667;
          7527600,0.73755; 7531200,0.738883333333333; 7534800,0.681816666666667; 7538400,
          0.689166666666667; 7542000,0.692916666666667; 7545600,0.72045; 7549200,0.7114;
          7552800,0.69605; 7556400,0.669266666666667; 7560000,0.625766666666667; 7563600,
          0.602916666666667; 7567200,0.590316666666667; 7570800,0.587366666666667;
          7574400,0.581566666666667; 7578000,0.589716666666667; 7581600,0.643033333333333;
          7585200,0.67095; 7588800,0.66595; 7592400,0.6567; 7596000,0.670083333333333;
          7599600,0.684066666666666; 7603200,0.688316666666667; 7606800,0.720266666666667;
          7610400,0.7237; 7614000,0.742483333333333; 7617600,0.727333333333333; 7621200,
          0.740266666666667; 7624800,0.69055; 7628400,0.663283333333333; 7632000,0.576216666666667;
          7635600,0.50495; 7639200,0.449733333333333; 7642800,0.51325; 7646400,0.4788;
          7650000,0.587916666666667; 7653600,0.74695; 7657200,0.817433333333333; 7660800,
          0.875583333333333; 7664400,0.90835; 7668000,0.904183333333333; 7671600,0.879483333333333;
          7675200,0.8936; 7678800,0.8466; 7682400,0.809366666666667; 7686000,0.783141666666667;
          7689600,0.75655; 7693200,0.776866666666667; 7696800,0.767816666666666; 7700400,
          0.745466666666667; 7704000,0.742483333333333; 7707600,0.731133333333333;
          7711200,0.697833333333333; 7714800,0.660233333333333; 7718400,0.6034; 7722000,
          0.52855; 7725600,0.467933333333333; 7729200,0.5013; 7732800,0.46015; 7736400,
          0.4079; 7740000,0.375083333333333; 7743600,0.40525; 7747200,0.471033333333333;
          7750800,0.547166666666667; 7754400,0.564616666666667; 7758000,0.637016666666667;
          7761600,0.6481; 7765200,0.7428; 7768800,0.767433333333333; 7772400,0.773383333333333;
          7776000,0.822333333333333; 7779600,0.843866666666667; 7783200,0.8439; 7786800,
          0.861916666666667; 7790400,0.881933333333333; 7794000,0.862033333333333;
          7797600,0.8353; 7801200,0.778066666666667; 7804800,0.700783333333333; 7808400,
          0.6437; 7812000,0.6045; 7815600,0.495883333333333; 7819200,0.445366666666667;
          7822800,0.456966666666667; 7826400,0.4559; 7830000,0.50985; 7833600,0.5157;
          7837200,0.575516666666667; 7840800,0.61155; 7844400,0.586; 7848000,0.505616666666667;
          7851600,0.51225; 7855200,0.588516666666667; 7858800,0.672108333333333; 7862400,
          0.68955; 7866000,0.697083333333333; 7869600,0.718533333333333; 7873200,0.723866666666667;
          7876800,0.712033333333333; 7880400,0.722733333333333; 7884000,0.711033333333333;
          7887600,0.707116666666667; 7891200,0.6607; 7894800,0.628866666666667; 7898400,
          0.6002; 7902000,0.596266666666667; 7905600,0.595383333333333; 7909200,0.59345;
          7912800,0.621316666666667; 7916400,0.65845; 7920000,0.702433333333333; 7923600,
          0.751333333333333; 7927200,0.760266666666667; 7930800,0.760083333333333;
          7934400,0.779516666666667; 7938000,0.7892; 7941600,0.8058; 7945200,0.8082;
          7948800,0.820183333333333; 7952400,0.84315; 7956000,0.844516666666667; 7959600,
          0.833666666666667; 7963200,0.82375; 7966800,0.791616666666667; 7970400,0.80085;
          7974000,0.794566666666667; 7977600,0.720083333333333; 7981200,0.649316666666667;
          7984800,0.580783333333333; 7988400,0.5524; 7992000,0.529333333333333; 7995600,
          0.47895; 7999200,0.439316666666667; 8002800,0.464366666666667; 8006400,0.530833333333333;
          8010000,0.6327; 8013600,0.690533333333333; 8017200,0.749216666666667; 8020800,
          0.766983333333333; 8024400,0.771666666666667; 8028000,0.784366666666667;
          8031600,0.822891666666667; 8035200,0.845616666666667; 8038800,0.86905; 8042400,
          0.862183333333333; 8046000,0.855833333333333; 8049600,0.862633333333333;
          8053200,0.867633333333333; 8056800,0.824883333333333; 8060400,0.76865; 8064000,
          0.7238; 8067600,0.6958; 8071200,0.689966666666667; 8074800,0.666566666666667;
          8078400,0.683816666666667; 8082000,0.64505; 8085600,0.665216666666667; 8089200,
          0.7115; 8092800,0.733466666666667; 8096400,0.767866666666667; 8100000,0.8003;
          8103600,0.810866666666667; 8107200,0.837033333333333; 8110800,0.87495; 8114400,
          0.883866666666667; 8118000,0.898608333333333; 8121600,0.887883333333333;
          8125200,0.90145; 8128800,0.904966666666667; 8132400,0.910416666666667; 8136000,
          0.9081; 8139600,0.884083333333333; 8143200,0.855833333333333; 8146800,0.77955;
          8150400,0.7388; 8154000,0.722116666666667; 8157600,0.72055; 8161200,0.707233333333333;
          8164800,0.684883333333333; 8168400,0.620266666666667; 8172000,0.5974; 8175600,
          0.652283333333333; 8179200,0.705033333333333; 8182800,0.749583333333333;
          8186400,0.806483333333333; 8190000,0.819466666666667; 8193600,0.814883333333333;
          8197200,0.815083333333333; 8200800,0.830933333333334; 8204400,0.841141666666667;
          8208000,0.845416666666667; 8211600,0.856916666666667; 8215200,0.868983333333333;
          8218800,0.889566666666667; 8222400,0.86545; 8226000,0.862083333333333; 8229600,
          0.872816666666667; 8233200,0.862433333333333; 8236800,0.827266666666667;
          8240400,0.81385; 8244000,0.864766666666667; 8247600,0.87045; 8251200,0.844016666666667;
          8254800,0.854633333333333; 8258400,0.867033333333333; 8262000,0.882466666666667;
          8265600,0.906016666666667; 8269200,0.91705; 8272800,0.91155; 8276400,0.908383333333333;
          8280000,0.910433333333333; 8283600,0.90525; 8287200,0.8957; 8290800,0.9063;
          8294400,0.902833333333333; 8298000,0.90645; 8301600,0.92215; 8305200,0.928433333333333;
          8308800,0.9284; 8312400,0.927233333333333; 8316000,0.92415; 8319600,0.872133333333333;
          8323200,0.7535; 8326800,0.597183333333333; 8330400,0.4999; 8334000,0.5091;
          8337600,0.515316666666667; 8341200,0.4383; 8344800,0.39555; 8348400,0.52895;
          8352000,0.637483333333333; 8355600,0.671933333333333; 8359200,0.718183333333333;
          8362800,0.756516666666667; 8366400,0.762866666666667; 8370000,0.755383333333333;
          8373600,0.795566666666667; 8377200,0.817191666666667; 8380800,0.80735; 8384400,
          0.813816666666667; 8388000,0.815216666666667; 8391600,0.806266666666667;
          8395200,0.8304; 8398800,0.824883333333333; 8402400,0.745633333333333; 8406000,
          0.635266666666667; 8409600,0.62615; 8413200,0.534533333333333; 8416800,0.502;
          8420400,0.4593; 8424000,0.459583333333333; 8427600,0.513216666666667; 8431200,
          0.511183333333333; 8434800,0.4759; 8438400,0.488; 8442000,0.49925; 8445600,
          0.538733333333333; 8449200,0.579216666666667; 8452800,0.63455; 8456400,0.688766666666667;
          8460000,0.778033333333333; 8463600,0.776208333333333; 8467200,0.757983333333333;
          8470800,0.813266666666667; 8474400,0.807333333333333; 8478000,0.728583333333333;
          8481600,0.609166666666667; 8485200,0.597466666666667; 8488800,0.55725; 8492400,
          0.552316666666667; 8496000,0.534666666666667; 8499600,0.52985; 8503200,0.54075;
          8506800,0.533333333333333; 8510400,0.5618; 8514000,0.578566666666667; 8517600,
          0.623916666666667; 8521200,0.66955; 8524800,0.655566666666667; 8528400,0.65115;
          8532000,0.73695; 8535600,0.7451; 8539200,0.74505; 8542800,0.7329; 8546400,
          0.723366666666667; 8550000,0.691458333333333; 8553600,0.698466666666667;
          8557200,0.697433333333333; 8560800,0.688483333333333; 8564400,0.684783333333333;
          8568000,0.692116666666667; 8571600,0.6852; 8575200,0.678266666666667; 8578800,
          0.647216666666667; 8582400,0.64555; 8586000,0.63845; 8589600,0.607116666666667;
          8593200,0.545666666666667; 8596800,0.530166666666667; 8600400,0.559283333333333;
          8604000,0.5518; 8607600,0.53785; 8611200,0.600483333333333; 8614800,0.663916666666667;
          8618400,0.749; 8622000,0.8011; 8625600,0.835333333333333; 8629200,0.85465;
          8632800,0.8669; 8636400,0.881741666666667; 8640000,0.889266666666667; 8643600,
          0.89125; 8647200,0.892; 8650800,0.89355; 8654400,0.8971; 8658000,0.889366666666667;
          8661600,0.758483333333333; 8665200,0.647666666666667; 8668800,0.558116666666667;
          8672400,0.485783333333333; 8676000,0.422216666666667; 8679600,0.37225; 8683200,
          0.314066666666667; 8686800,0.32825; 8690400,0.269066666666667; 8694000,0.28155;
          8697600,0.454016666666667; 8701200,0.53405; 8704800,0.641233333333333; 8708400,
          0.6819; 8712000,0.729283333333333; 8715600,0.75255; 8719200,0.775116666666667;
          8722800,0.771066666666667; 8726400,0.8128; 8730000,0.835416666666667; 8733600,
          0.827066666666667; 8737200,0.852633333333333; 8740800,0.862783333333333;
          8744400,0.765966666666666; 8748000,0.682383333333333; 8751600,0.5103; 8755200,
          0.41115; 8758800,0.521983333333333; 8762400,0.376383333333333; 8766000,0.330383333333333;
          8769600,0.2887; 8773200,0.240816666666667; 8776800,0.23175; 8780400,0.270066666666667;
          8784000,0.344033333333333; 8787600,0.37; 8791200,0.4013; 8794800,0.464333333333333;
          8798400,0.507733333333333; 8802000,0.501166666666667; 8805600,0.523533333333333;
          8809200,0.56465; 8812800,0.66085; 8816400,0.7489; 8820000,0.757466666666667;
          8823600,0.78265; 8827200,0.7926; 8830800,0.72685; 8834400,0.587416666666667;
          8838000,0.564483333333333; 8841600,0.5201; 8845200,0.4376; 8848800,0.373683333333333;
          8852400,0.31175; 8856000,0.29055; 8859600,0.2616; 8863200,0.267366666666667;
          8866800,0.369883333333333; 8870400,0.451516666666667; 8874000,0.493383333333333;
          8877600,0.5049; 8881200,0.5448; 8884800,0.591733333333333; 8888400,0.624966666666667;
          8892000,0.6752; 8895600,0.721458333333333; 8899200,0.763566666666667; 8902800,
          0.7929; 8906400,0.811816666666667; 8910000,0.769283333333333; 8913600,0.768166666666667;
          8917200,0.774666666666667; 8920800,0.788833333333333; 8924400,0.793583333333333;
          8928000,0.819516666666667; 8931600,0.86955; 8935200,0.8018; 8938800,0.800166666666667;
          8942400,0.621916666666667; 8946000,0.608716666666667; 8949600,0.60765; 8953200,
          0.69665; 8956800,0.853683333333333; 8960400,0.865166666666667; 8964000,0.7765;
          8967600,0.791066666666667; 8971200,0.821283333333333; 8974800,0.8327; 8978400,
          0.8508; 8982000,0.83905; 8985600,0.835783333333333; 8989200,0.86585; 8992800,
          0.870366666666667; 8996400,0.86595; 9000000,0.886816666666667; 9003600,0.855766666666667;
          9007200,0.76185; 9010800,0.697316666666667; 9014400,0.59635; 9018000,0.52095;
          9021600,0.523916666666667; 9025200,0.4695; 9028800,0.4544; 9032400,0.404383333333333;
          9036000,0.37135; 9039600,0.368466666666667; 9043200,0.5005; 9046800,0.592616666666667;
          9050400,0.619966666666667; 9054000,0.637283333333333; 9057600,0.694183333333333;
          9061200,0.7607; 9064800,0.743083333333333; 9068400,0.68505; 9072000,0.7081;
          9075600,0.76105; 9079200,0.800266666666667; 9082800,0.776633333333333; 9086400,
          0.655133333333333; 9090000,0.583816666666667; 9093600,0.559666666666667;
          9097200,0.63575; 9100800,0.600266666666667; 9104400,0.502083333333333; 9108000,
          0.4348; 9111600,0.430233333333333; 9115200,0.412733333333333; 9118800,0.419633333333333;
          9122400,0.459683333333333; 9126000,0.3465; 9129600,0.504916666666667; 9133200,
          0.61965; 9136800,0.619133333333333; 9140400,0.603583333333333; 9144000,0.657016666666667;
          9147600,0.681516666666667; 9151200,0.711966666666667; 9154800,0.602233333333333;
          9158400,0.388066666666667; 9162000,0.34845; 9165600,0.36915; 9169200,0.392416666666667;
          9172800,0.399816666666667; 9176400,0.4038; 9180000,0.45285; 9183600,0.405816666666667;
          9187200,0.355233333333333; 9190800,0.364316666666667; 9194400,0.332516666666667;
          9198000,0.2797; 9201600,0.302816666666667; 9205200,0.32775; 9208800,0.353066666666667;
          9212400,0.4161; 9216000,0.47555; 9219600,0.480166666666667; 9223200,0.474683333333333;
          9226800,0.419183333333333; 9230400,0.409566666666667; 9234000,0.632066666666667;
          9237600,0.733866666666667; 9241200,0.799141666666667; 9244800,0.854583333333333;
          9248400,0.866883333333333; 9252000,0.841616666666667; 9255600,0.8139; 9259200,
          0.808566666666667; 9262800,0.79495; 9266400,0.7834; 9270000,0.734833333333333;
          9273600,0.823483333333333; 9277200,0.772833333333333; 9280800,0.765183333333333;
          9284400,0.72065; 9288000,0.694483333333333; 9291600,0.784566666666667; 9295200,
          0.7721; 9298800,0.801383333333333; 9302400,0.87125; 9306000,0.912066666666667;
          9309600,0.92075; 9313200,0.922116666666667; 9316800,0.911133333333333; 9320400,
          0.90315; 9324000,0.8783; 9327600,0.861625; 9331200,0.845233333333333; 9334800,
          0.8255; 9338400,0.813733333333333; 9342000,0.798183333333333; 9345600,0.809833333333333;
          9349200,0.786783333333333; 9352800,0.74875; 9356400,0.772516666666667; 9360000,
          0.745133333333333; 9363600,0.728116666666667; 9367200,0.66525; 9370800,0.61505;
          9374400,0.636083333333333; 9378000,0.7006; 9381600,0.743766666666667; 9385200,
          0.783966666666667; 9388800,0.779866666666667; 9392400,0.797316666666667;
          9396000,0.830816666666667; 9399600,0.8169; 9403200,0.848633333333333; 9406800,
          0.817666666666667; 9410400,0.832416666666667; 9414000,0.808675; 9417600,
          0.753333333333333; 9421200,0.752816666666667; 9424800,0.755; 9428400,0.76055;
          9432000,0.7578; 9435600,0.704466666666667; 9439200,0.672666666666667; 9442800,
          0.62095; 9446400,0.574733333333333; 9450000,0.506833333333333; 9453600,0.4624;
          9457200,0.423066666666667; 9460800,0.3821; 9464400,0.3531; 9468000,0.357483333333333;
          9471600,0.351383333333333; 9475200,0.405016666666667; 9478800,0.436983333333333;
          9482400,0.4905; 9486000,0.525383333333333; 9489600,0.545133333333333; 9493200,
          0.560766666666667; 9496800,0.564683333333333; 9500400,0.562975; 9504000,
          0.70415; 9507600,0.784666666666667; 9511200,0.817733333333333; 9514800,0.835716666666667;
          9518400,0.84485; 9522000,0.674466666666667; 9525600,0.59095; 9529200,0.5507;
          9532800,0.526416666666667; 9536400,0.463033333333333; 9540000,0.431366666666667;
          9543600,0.405566666666667; 9547200,0.371483333333333; 9550800,0.358633333333333;
          9554400,0.302666666666667; 9558000,0.367633333333333; 9561600,0.386283333333333;
          9565200,0.414583333333333; 9568800,0.487266666666667; 9572400,0.49995; 9576000,
          0.547133333333333; 9579600,0.708916666666667; 9583200,0.7552; 9586800,0.762908333333333;
          9590400,0.7977; 9594000,0.741366666666667; 9597600,0.787733333333333; 9601200,
          0.805416666666667; 9604800,0.800983333333333; 9608400,0.731683333333333;
          9612000,0.607316666666667; 9615600,0.47515; 9619200,0.4442; 9622800,0.426066666666667;
          9626400,0.388366666666667; 9630000,0.392016666666667; 9633600,0.433633333333333;
          9637200,0.467933333333333; 9640800,0.490083333333333; 9644400,0.4075; 9648000,
          0.43215; 9651600,0.5119; 9655200,0.542083333333333; 9658800,0.559366666666667;
          9662400,0.60675; 9666000,0.770683333333333; 9669600,0.899516666666667; 9673200,
          0.918416666666667; 9676800,0.928066666666667; 9680400,0.93255; 9684000,0.9323;
          9687600,0.934316666666667; 9691200,0.936116666666667; 9694800,0.929583333333333;
          9698400,0.907416666666667; 9702000,0.880083333333333; 9705600,0.859233333333334;
          9709200,0.804883333333333; 9712800,0.665883333333333; 9716400,0.515566666666667;
          9720000,0.5514; 9723600,0.512033333333333; 9727200,0.52095; 9730800,0.498783333333333;
          9734400,0.542383333333333; 9738000,0.682816666666667; 9741600,0.747783333333333;
          9745200,0.788016666666667; 9748800,0.807933333333333; 9752400,0.78095; 9756000,
          0.835633333333333; 9759600,0.868183333333333; 9763200,0.897233333333333;
          9766800,0.90715; 9770400,0.917216666666667; 9774000,0.925683333333333; 9777600,
          0.93325; 9781200,0.93505; 9784800,0.928016666666667; 9788400,0.895866666666667;
          9792000,0.905716666666667; 9795600,0.885333333333333; 9799200,0.8949; 9802800,
          0.9307; 9806400,0.9035; 9810000,0.845216666666667; 9813600,0.867666666666667;
          9817200,0.8696; 9820800,0.869716666666667; 9824400,0.837983333333333; 9828000,
          0.79545; 9831600,0.773966666666667; 9835200,0.73815; 9838800,0.708583333333333;
          9842400,0.743516666666667; 9846000,0.675725; 9849600,0.656466666666667;
          9853200,0.659083333333333; 9856800,0.63925; 9860400,0.6204; 9864000,0.590333333333333;
          9867600,0.588883333333333; 9871200,0.51645; 9874800,0.447; 9878400,0.444283333333333;
          9882000,0.417583333333333; 9885600,0.361216666666667; 9889200,0.37235; 9892800,
          0.36525; 9896400,0.3829; 9900000,0.382766666666667; 9903600,0.3838; 9907200,
          0.388516666666667; 9910800,0.388016666666667; 9914400,0.387133333333333;
          9918000,0.416816666666667; 9921600,0.455183333333333; 9925200,0.61115; 9928800,
          0.688866666666667; 9932400,0.683666666666667; 9936000,0.651766666666667;
          9939600,0.626333333333333; 9943200,0.676533333333334; 9946800,0.722666666666667;
          9950400,0.5918; 9954000,0.597066666666667; 9957600,0.504183333333333; 9961200,
          0.43945; 9964800,0.410766666666667; 9968400,0.355616666666667; 9972000,0.304833333333333;
          9975600,0.247416666666667; 9979200,0.22245; 9982800,0.240483333333333; 9986400,
          0.322933333333333; 9990000,0.3236; 9993600,0.358366666666667; 9997200,0.3965;
          10000800,0.484516666666667; 10004400,0.58705; 10008000,0.556433333333333;
          10011600,0.444366666666667; 10015200,0.5257; 10018800,0.489433333333333;
          10022400,0.520366666666667; 10026000,0.544183333333333; 10029600,0.5656;
          10033200,0.538983333333333; 10036800,0.539766666666667; 10040400,0.560983333333333;
          10044000,0.52335; 10047600,0.458483333333333; 10051200,0.415633333333333;
          10054800,0.428783333333333; 10058400,0.429316666666667; 10062000,0.39675;
          10065600,0.386616666666667; 10069200,0.388416666666667; 10072800,0.4076;
          10076400,0.4666; 10080000,0.53305; 10083600,0.686533333333333; 10087200,
          0.74; 10090800,0.7008; 10094400,0.7366; 10098000,0.770783333333333; 10101600,
          0.813533333333333; 10105200,0.809291666666667; 10108800,0.790583333333333;
          10112400,0.7794; 10116000,0.7689; 10119600,0.816466666666667; 10123200,0.860966666666667;
          10126800,0.718016666666667; 10130400,0.563616666666667; 10134000,0.491016666666667;
          10137600,0.394833333333333; 10141200,0.334633333333333; 10144800,0.303466666666667;
          10148400,0.265816666666667; 10152000,0.281883333333333; 10155600,0.322066666666667;
          10159200,0.340716666666667; 10162800,0.31915; 10166400,0.398; 10170000,0.507833333333333;
          10173600,0.43985; 10177200,0.474583333333333; 10180800,0.5637; 10184400,
          0.673783333333333; 10188000,0.7139; 10191600,0.761775; 10195200,0.766283333333333;
          10198800,0.771583333333333; 10202400,0.765233333333333; 10206000,0.811833333333333;
          10209600,0.784066666666667; 10213200,0.671866666666667; 10216800,0.490683333333333;
          10220400,0.38195; 10224000,0.330083333333333; 10227600,0.289883333333333;
          10231200,0.217866666666667; 10234800,0.209216666666667; 10238400,0.19595;
          10242000,0.205483333333333; 10245600,0.236783333333333; 10249200,0.2609;
          10252800,0.26665; 10256400,0.277616666666667; 10260000,0.323733333333333;
          10263600,0.388016666666667; 10267200,0.518816666666667; 10270800,0.6437;
          10274400,0.698516666666667; 10278000,0.766166666666667; 10281600,0.787883333333333;
          10285200,0.807533333333333; 10288800,0.8366; 10292400,0.852116666666667;
          10296000,0.849933333333333; 10299600,0.6996; 10303200,0.596266666666667;
          10306800,0.513783333333333; 10310400,0.438183333333333; 10314000,0.32195;
          10317600,0.270116666666667; 10321200,0.275416666666667; 10324800,0.27835;
          10328400,0.26495; 10332000,0.251266666666667; 10335600,0.261; 10339200,0.370666666666667;
          10342800,0.508616666666667; 10346400,0.6136; 10350000,0.65585; 10353600,
          0.697383333333333; 10357200,0.725733333333333; 10360800,0.748233333333333;
          10364400,0.797116666666667; 10368000,0.807766666666667; 10371600,0.83785;
          10375200,0.84715; 10378800,0.875083333333333; 10382400,0.86475; 10386000,
          0.7752; 10389600,0.609833333333333; 10393200,0.536883333333333; 10396800,
          0.581233333333333; 10400400,0.4648; 10404000,0.62955; 10407600,0.698433333333333;
          10411200,0.65415; 10414800,0.716916666666667; 10418400,0.7328; 10422000,
          0.8032; 10425600,0.828116666666667; 10429200,0.83515; 10432800,0.86775;
          10436400,0.8672; 10440000,0.823266666666667; 10443600,0.86255; 10447200,
          0.864733333333333; 10450800,0.8741])
      annotation (Placement(transformation(extent={{-20,6},{-14,12}})));
    Modelica.Blocks.Sources.TimeTable DewPointTemperature(table=[0,4.87133333333333;
          3600,4.67566666666667; 7200,4.66233333333333; 10800,4.76766666666667; 14400,
          4.988; 18000,4.91566666666667; 21600,4.85166666666667; 25200,4.786; 28800,
          4.94066666666666; 32400,5.11133333333333; 36000,5.08966666666667; 39600,
          5.122; 43200,5.363; 46800,5.38133333333333; 50400,4.30966666666667; 54000,
          3.12133333333333; 57600,2.58; 61200,2.74766666666667; 64800,2.36466666666667;
          68400,2.09533333333333; 72000,2.203; 75600,2.63033333333333; 79200,2.988;
          82800,3.36866666666667; 86400,3.322; 90000,3.10033333333334; 93600,3.27233333333333;
          97200,3.48866666666667; 100800,3.546; 104400,3.77866666666667; 108000,4.10033333333333;
          111600,4.28733333333333; 115200,4.684; 118800,4.73233333333333; 122400,5.55433333333333;
          126000,6.09133333333333; 129600,6.10766666666667; 133200,6.10066666666667;
          136800,5.74433333333333; 140400,5.15666666666667; 144000,3.779; 147600,2.83733333333333;
          151200,3.062; 154800,3.45333333333333; 158400,3.678; 162000,3.512; 165600,
          3.31466666666667; 169200,3.28166666666667; 172800,3.63533333333333; 176400,
          3.267; 180000,3.18733333333334; 183600,3.059; 187200,2.801; 190800,1.76733333333333;
          194400,0.496666666666667; 198000,0.769; 201600,1.34; 205200,2.37866666666667;
          208800,2.566; 212400,2.47866666666667; 216000,2.56233333333333; 219600,2.242;
          223200,1.25966666666667; 226800,0.597; 230400,0.967333333333331; 234000,
          0.0926666666666653; 237600,-0.239666666666666; 241200,0.67933333333333;
          244800,2.123; 248400,2.29333333333333; 252000,2.78966666666667; 255600,2.70766666666666;
          259200,2.20033333333333; 262800,2.22566666666667; 266400,1.98966666666667;
          270000,2.17733333333333; 273600,1.85533333333333; 277200,1.98633333333333;
          280800,2.42433333333334; 284400,2.11633333333334; 288000,1.16; 291600,0.934000000000003;
          295200,1.11133333333333; 298800,1.185; 302400,1.992; 306000,2.33766666666667;
          309600,1.798; 313200,1.66933333333333; 316800,1.848; 320400,1.57; 324000,
          1.58733333333333; 327600,1.92166666666667; 331200,1.869; 334800,2.705; 338400,
          2.655; 342000,2.90866666666667; 345600,2.072; 349200,2.15333333333333; 352800,
          3.01; 356400,3.266; 360000,2.356; 363600,1.53566666666667; 367200,1.33233333333333;
          370800,1.395; 374400,1.33733333333333; 378000,1.65066666666667; 381600,2.27166666666667;
          385200,2.64566666666667; 388800,3.47433333333333; 392400,3.16133333333333;
          396000,2.312; 399600,1.233; 403200,0.442999999999999; 406800,-0.055666666666669;
          410400,0.651666666666668; 414000,0.270000000000001; 417600,0.776999999999998;
          421200,1.65066666666667; 424800,1.08166666666667; 428400,0.564000000000001;
          432000,0.431999999999998; 435600,0.653333333333333; 439200,0.383666666666666;
          442800,0.382333333333331; 446400,0.107666666666666; 450000,-0.246666666666666;
          453600,-0.659000000000002; 457200,-1.26833333333333; 460800,-0.717333333333333;
          464400,-1.009; 468000,-0.406666666666665; 471600,-0.0506666666666673; 475200,
          0.334999999999996; 478800,0.535000000000001; 482400,1.382; 486000,1.33533333333333;
          489600,1.73433333333333; 493200,2.119; 496800,1.65266666666667; 500400,2.095;
          504000,2.01766666666667; 507600,1.873; 511200,1.39466666666666; 514800,0.956333333333331;
          518400,0.726333333333333; 522000,0.587000000000001; 525600,0.227666666666668;
          529200,-0.0809999999999977; 532800,-0.0213333333333336; 536400,-0.277999999999998;
          540000,0.142333333333331; 543600,0.451333333333332; 547200,0.823333333333331;
          550800,0.745666666666667; 554400,0.880333333333334; 558000,1.04233333333333;
          561600,1.14033333333334; 565200,1.86766666666666; 568800,2.523; 572400,3.13966666666667;
          576000,3.40266666666667; 579600,2.84066666666667; 583200,2.46366666666667;
          586800,2.59; 590400,2.377; 594000,2.28866666666667; 597600,2.49466666666667;
          601200,2.41866666666667; 604800,2.57433333333333; 608400,2.74233333333334;
          612000,2.72666666666667; 615600,2.71633333333333; 619200,2.727; 622800,2.60266666666667;
          626400,2.49033333333333; 630000,2.62933333333334; 633600,2.797; 637200,2.955;
          640800,3.39233333333333; 644400,3.69933333333333; 648000,3.88933333333333;
          651600,3.981; 655200,4.05833333333333; 658800,4.41133333333334; 662400,4.62533333333333;
          666000,4.817; 669600,4.631; 673200,4.832; 676800,5.11333333333333; 680400,
          5.49866666666667; 684000,5.422; 687600,5.84533333333333; 691200,6.062; 694800,
          6.15966666666667; 698400,6.23166666666667; 702000,6.45533333333333; 705600,
          6.531; 709200,6.57433333333334; 712800,6.63733333333334; 716400,6.85433333333333;
          720000,7.08066666666667; 723600,7.301; 727200,7.62633333333333; 730800,7.84733333333334;
          734400,7.91966666666667; 738000,6.55566666666666; 741600,5.95366666666667;
          745200,4.758; 748800,4.71533333333333; 752400,4.418; 756000,4.723; 759600,
          3.79066666666667; 763200,3.758; 766800,3.27566666666667; 770400,3.03466666666667;
          774000,2.93533333333333; 777600,2.85666666666667; 781200,3.021; 784800,2.818;
          788400,3.23166666666667; 792000,3.32833333333333; 795600,2.92733333333333;
          799200,3.17033333333333; 802800,3.88966666666667; 806400,4.817; 810000,5.03366666666667;
          813600,5.379; 817200,5.63933333333334; 820800,5.39533333333333; 824400,5.412;
          828000,5.25366666666667; 831600,5.03733333333333; 835200,4.41133333333333;
          838800,4.11566666666666; 842400,3.95233333333333; 846000,3.37566666666667;
          849600,4.317; 853200,4.535; 856800,5.047; 860400,4.89233333333333; 864000,
          4.63366666666667; 867600,4.23466666666667; 871200,3.69766666666667; 874800,
          4.27333333333333; 878400,5.08666666666667; 882000,5.79733333333334; 885600,
          5.39; 889200,5.68166666666667; 892800,5.16933333333333; 896400,4.14066666666667;
          900000,3.18033333333334; 903600,3.94266666666667; 907200,2.01; 910800,1.092;
          914400,0.149666666666667; 918000,0.355333333333334; 921600,-0.448666666666664;
          925200,-0.900666666666668; 928800,-0.854666666666667; 932400,-1.183; 936000,
          -1.54733333333333; 939600,-1.86266666666667; 943200,-1.43833333333333; 946800,
          -1.56733333333333; 950400,-1.53366666666667; 954000,-1.51133333333333; 957600,
          -0.625333333333332; 961200,0.553999999999999; 964800,-0.513666666666666;
          968400,-0.0679999999999996; 972000,-0.872666666666666; 975600,-0.795999999999999;
          979200,-1.092; 982800,-0.691999999999998; 986400,0.316999999999999; 990000,
          1.48633333333333; 993600,1.251; 997200,0.738999999999999; 1000800,0.819000000000002;
          1004400,1.17133333333333; 1008000,-0.369; 1011600,-0.596333333333333; 1015200,
          -1.24833333333333; 1018800,-2.03566666666667; 1022400,-0.396666666666668;
          1026000,-2.708; 1029600,-1.50133333333333; 1033200,-1.396; 1036800,-1.06766666666666;
          1040400,-1.53866666666667; 1044000,-1.477; 1047600,-3.06433333333334; 1051200,
          -2.931; 1054800,-3.468; 1058400,-2.34766666666667; 1062000,-1.28866666666667;
          1065600,-0.771666666666667; 1069200,-0.493666666666664; 1072800,-0.228333333333332;
          1076400,-1.153; 1080000,-1.98833333333333; 1083600,-2.27966666666667; 1087200,
          -3.1; 1090800,-3.38433333333333; 1094400,-3.715; 1098000,-3.60066666666667;
          1101600,-4.15333333333334; 1105200,-3.99866666666667; 1108800,-4.50533333333333;
          1112400,-4.83333333333333; 1116000,-5.18933333333333; 1119600,-6.21366666666667;
          1123200,-6.41966666666667; 1126800,-6.499; 1130400,-6.85433333333333; 1134000,
          -7.06533333333333; 1137600,-6.60633333333333; 1141200,-6.52166666666667;
          1144800,-5.24833333333333; 1148400,-2.709; 1152000,-2.25333333333333; 1155600,
          -1.676; 1159200,-1.363; 1162800,-1.062; 1166400,-0.93833333333333; 1170000,
          -0.504666666666664; 1173600,-0.460999999999999; 1177200,-0.542333333333333;
          1180800,-0.540666666666667; 1184400,-0.610333333333331; 1188000,-0.406999999999999;
          1191600,-0.233333333333332; 1195200,-0.236000000000003; 1198800,-0.424000000000005;
          1202400,-0.670333333333332; 1206000,-0.750999999999998; 1209600,-1.03466666666667;
          1213200,-1.244; 1216800,-1.348; 1220400,-2.544; 1224000,-2.292; 1227600,
          -2.427; 1231200,-2.23833333333333; 1234800,-2.73866666666667; 1238400,-2.659;
          1242000,-3.56233333333333; 1245600,-3.85133333333333; 1249200,-4.656; 1252800,
          -5.35; 1256400,-6.41533333333333; 1260000,-6.73466666666667; 1263600,-7.871;
          1267200,-7.05666666666667; 1270800,-6.68133333333333; 1274400,-6.33766666666667;
          1278000,-5.76666666666667; 1281600,-3.816; 1285200,-2.509; 1288800,-3.15633333333333;
          1292400,-3.13866666666667; 1296000,-3.34366666666666; 1299600,-3.02233333333333;
          1303200,-2.45033333333334; 1306800,-2.246; 1310400,-2.201; 1314000,-2.27966666666667;
          1317600,-2.08266666666667; 1321200,-1.92366666666667; 1324800,-1.71066666666667;
          1328400,-1.397; 1332000,-1.54833333333333; 1335600,-2.17566666666667; 1339200,
          -2.48366666666667; 1342800,-4.09633333333333; 1346400,-5.42066666666667;
          1350000,-3.46866666666667; 1353600,-3.116; 1357200,-4.62333333333333; 1360800,
          -5.23833333333334; 1364400,-5.54533333333333; 1368000,-4.86466666666667;
          1371600,-4.64066666666666; 1375200,-4.68233333333333; 1378800,-3.934; 1382400,
          -2.759; 1386000,-2.748; 1389600,-2.90266666666666; 1393200,-2.762; 1396800,
          -2.81733333333333; 1400400,-3.13533333333333; 1404000,-2.94433333333333;
          1407600,-3.091; 1411200,-2.72833333333333; 1414800,-2.23533333333333; 1418400,
          -2.70766666666666; 1422000,-2.60366666666666; 1425600,-2.87366666666667;
          1429200,-3.42766666666667; 1432800,-3.01666666666667; 1436400,-4.384; 1440000,
          -4.70166666666667; 1443600,-4.93466666666667; 1447200,-4.61966666666667;
          1450800,-4.40033333333333; 1454400,-4.55766666666667; 1458000,-5.368; 1461600,
          -6.20866666666667; 1465200,-6.66666666666667; 1468800,-7.03633333333333;
          1472400,-7.66666666666666; 1476000,-8.402; 1479600,-7.89533333333334; 1483200,
          -7.952; 1486800,-8.39033333333333; 1490400,-7.645; 1494000,-7.12966666666667;
          1497600,-7.13466666666667; 1501200,-8.29866666666667; 1504800,-8.82; 1508400,
          -8.671; 1512000,-8.679; 1515600,-8.27566666666667; 1519200,-8.07166666666667;
          1522800,-7.89366666666667; 1526400,-7.944; 1530000,-7.80866666666667; 1533600,
          -6.82466666666666; 1537200,-5.18666666666667; 1540800,-4.72766666666667;
          1544400,-4.558; 1548000,-4.31533333333333; 1551600,-3.99766666666667; 1555200,
          -3.791; 1558800,-3.76966666666667; 1562400,-3.73166666666667; 1566000,-3.60433333333334;
          1569600,-3.305; 1573200,-3.14733333333334; 1576800,-3.21133333333333; 1580400,
          -2.926; 1584000,-2.81266666666667; 1587600,-2.38933333333333; 1591200,-1.83266666666667;
          1594800,-1.98233333333333; 1598400,-1.64766666666667; 1602000,-1.819; 1605600,
          -1.632; 1609200,-1.60266666666667; 1612800,-1.238; 1616400,-0.969333333333334;
          1620000,-1.06966666666667; 1623600,-1.10566666666667; 1627200,-1.30633333333333;
          1630800,-0.926666666666665; 1634400,-0.957333333333338; 1638000,-1.184;
          1641600,-1.41766666666667; 1645200,-1.38066666666667; 1648800,-1.132; 1652400,
          -1.28766666666667; 1656000,-1.09933333333333; 1659600,-0.986333333333332;
          1663200,-0.810333333333334; 1666800,-0.747; 1670400,-0.274333333333334;
          1674000,-0.517666666666665; 1677600,-0.392333333333334; 1681200,0.348333333333334;
          1684800,1.18666666666666; 1688400,1.40966666666667; 1692000,1.35366666666667;
          1695600,1.202; 1699200,0.949666666666669; 1702800,0.718666666666669; 1706400,
          0.297333333333335; 1710000,0.0706666666666669; 1713600,0.151333333333333;
          1717200,0.266333333333333; 1720800,0.285999999999998; 1724400,0.253666666666667;
          1728000,-0.0443333333333342; 1731600,-0.221666666666666; 1735200,-0.331333333333334;
          1738800,-0.178666666666668; 1742400,-0.154333333333332; 1746000,-0.15; 1749600,
          -0.290666666666666; 1753200,0.191000000000001; 1756800,0.211999999999998;
          1760400,0.345666666666665; 1764000,0.170000000000003; 1767600,-0.639999999999999;
          1771200,-1.12966666666667; 1774800,-2.161; 1778400,-2.718; 1782000,-2.99366666666667;
          1785600,-3.46366666666666; 1789200,-3.189; 1792800,-3.06333333333333; 1796400,
          -3.12566666666667; 1800000,-3.39066666666667; 1803600,-3.33366666666667;
          1807200,-3.027; 1810800,-3.99866666666667; 1814400,-4.354; 1818000,-4.46;
          1821600,-4.82566666666667; 1825200,-5.016; 1828800,-5.43266666666667; 1832400,
          -5.569; 1836000,-5.61166666666667; 1839600,-5.672; 1843200,-5.09733333333333;
          1846800,-5.453; 1850400,-4.62266666666667; 1854000,-3.72433333333333; 1857600,
          -3.13233333333333; 1861200,-3.02066666666667; 1864800,-2.32666666666666;
          1868400,-3.31633333333333; 1872000,-3.27133333333333; 1875600,-3.54266666666667;
          1879200,-3.19; 1882800,-2.788; 1886400,-2.86533333333333; 1890000,-2.19466666666667;
          1893600,-1.97533333333333; 1897200,-1.85366666666667; 1900800,-2.10433333333333;
          1904400,-1.503; 1908000,-1.40933333333333; 1911600,-1.43833333333333; 1915200,
          -0.459999999999998; 1918800,-1.06666666666666; 1922400,-0.543333333333334;
          1926000,-0.134333333333332; 1929600,0.305; 1933200,1.06133333333333; 1936800,
          0.838666666666667; 1940400,2.24733333333333; 1944000,2.05033333333333; 1947600,
          2.36866666666667; 1951200,3.06366666666667; 1954800,1.92433333333333; 1958400,
          -0.643666666666665; 1962000,-1.49633333333333; 1965600,-0.867333333333336;
          1969200,-2.08366666666667; 1972800,-1.89733333333333; 1976400,-2.492; 1980000,
          -2.42566666666666; 1983600,-2.55633333333334; 1987200,-2.64066666666667;
          1990800,-3.03566666666667; 1994400,-3.114; 1998000,-3.38066666666667; 2001600,
          -3.52233333333333; 2005200,-3.519; 2008800,-3.337; 2012400,-3.351; 2016000,
          -2.90966666666667; 2019600,-2.369; 2023200,-0.750000000000001; 2026800,-0.0186666666666664;
          2030400,0.220333333333334; 2034000,0.982000000000001; 2037600,1.23833333333333;
          2041200,0.234000000000002; 2044800,-2.25166666666667; 2048400,-4.67433333333334;
          2052000,-4.30866666666667; 2055600,-4.37; 2059200,-3.87166666666667; 2062800,
          -4.86466666666667; 2066400,-4.60966666666667; 2070000,-3.95; 2073600,-4.16266666666667;
          2077200,-4.31866666666667; 2080800,-4.60833333333334; 2084400,-4.54466666666667;
          2088000,-4.88033333333333; 2091600,-4.75333333333334; 2095200,-4.74233333333333;
          2098800,-4.59766666666667; 2102400,-5.17633333333333; 2106000,-3.51333333333333;
          2109600,-1.56666666666667; 2113200,-0.595999999999998; 2116800,-0.894666666666666;
          2120400,0.352000000000002; 2124000,0.603333333333333; 2127600,-0.168666666666669;
          2131200,-2.44833333333333; 2134800,-3.496; 2138400,-3.37233333333333; 2142000,
          -3.775; 2145600,-3.85033333333333; 2149200,-4.04766666666667; 2152800,-3.694;
          2156400,-3.76733333333333; 2160000,-3.40266666666667; 2163600,-3.776; 2167200,
          -3.60166666666667; 2170800,-3.59066666666667; 2174400,-3.61366666666666;
          2178000,-3.471; 2181600,-3.60266666666667; 2185200,-3.19766666666667; 2188800,
          -2.471; 2192400,-1.548; 2196000,0.0696666666666665; 2199600,1.63166666666666;
          2203200,2.11333333333333; 2206800,1.50766666666666; 2210400,1.802; 2214000,
          0.110333333333335; 2217600,-0.339333333333333; 2221200,-1.20433333333334;
          2224800,-1.37366666666667; 2228400,-1.91533333333333; 2232000,-2.24333333333333;
          2235600,-2.21866666666667; 2239200,-3.05233333333333; 2242800,-2.67166666666667;
          2246400,-2.66533333333334; 2250000,-3.102; 2253600,-2.964; 2257200,-3.51866666666667;
          2260800,-3.33366666666667; 2264400,-3.30066666666667; 2268000,-3.56566666666667;
          2271600,-3.163; 2275200,-2.29533333333333; 2278800,-0.848999999999998; 2282400,
          1.46166666666667; 2286000,1.927; 2289600,2.30233333333333; 2293200,3.433;
          2296800,3.92833333333333; 2300400,2.634; 2304000,0.477999999999999; 2307600,
          -0.737666666666668; 2311200,-1.59766666666667; 2314800,-1.331; 2318400,-1.48366666666667;
          2322000,-1.94666666666667; 2325600,-1.78766666666667; 2329200,-1.82466666666667;
          2332800,-1.523; 2336400,-1.303; 2340000,-1.22233333333333; 2343600,-1.13066666666667;
          2347200,-1.098; 2350800,-1.865; 2354400,-1.49333333333334; 2358000,-1.23466666666667;
          2361600,-0.368; 2365200,0.850000000000001; 2368800,2.216; 2372400,2.518;
          2376000,3.068; 2379600,2.94033333333333; 2383200,2.51633333333333; 2386800,
          2.45433333333334; 2390400,1.772; 2394000,2.21833333333333; 2397600,2.38666666666667;
          2401200,2.841; 2404800,1.746; 2408400,1.39066666666667; 2412000,2.04; 2415600,
          2.32333333333334; 2419200,2.34033333333333; 2422800,2.11166666666667; 2426400,
          1.919; 2430000,2.44533333333333; 2433600,3.56266666666666; 2437200,4.14133333333333;
          2440800,4.57266666666667; 2444400,4.93233333333333; 2448000,4.924; 2451600,
          5.909; 2455200,7.04466666666667; 2458800,6.86733333333333; 2462400,5.988;
          2466000,6.04633333333333; 2469600,5.80633333333333; 2473200,5.74966666666667;
          2476800,5.20333333333334; 2480400,3.821; 2484000,2.99633333333333; 2487600,
          2.37366666666667; 2491200,1.83666666666667; 2494800,2.36866666666667; 2498400,
          1.987; 2502000,2.46433333333334; 2505600,2.507; 2509200,2.24033333333333;
          2512800,1.51033333333333; 2516400,1.07366666666667; 2520000,0.354333333333335;
          2523600,1.191; 2527200,1.01833333333333; 2530800,1.18666666666667; 2534400,
          2.048; 2538000,3.5; 2541600,2.41666666666666; 2545200,2.899; 2548800,3.84933333333334;
          2552400,3.787; 2556000,3.745; 2559600,3.37633333333333; 2563200,2.58433333333334;
          2566800,2.706; 2570400,1.83933333333333; 2574000,1.976; 2577600,2.38666666666667;
          2581200,3.896; 2584800,5.09266666666666; 2588400,5.37433333333333; 2592000,
          4.969; 2595600,5.06533333333333; 2599200,5.367; 2602800,5.558; 2606400,5.448;
          2610000,5.54933333333333; 2613600,5.719; 2617200,5.64733333333334; 2620800,
          5.85433333333333; 2624400,6.106; 2628000,6.129; 2631600,6.24733333333333;
          2635200,6.484; 2638800,6.43633333333333; 2642400,6.431; 2646000,6.52333333333333;
          2649600,6.384; 2653200,5.926; 2656800,6.19866666666667; 2660400,6.21066666666666;
          2664000,6.29366666666666; 2667600,6.55333333333333; 2671200,6.68333333333333;
          2674800,6.669; 2678400,6.64433333333333; 2682000,6.764; 2685600,6.841; 2689200,
          7.03066666666666; 2692800,7.057; 2696400,7.03466666666667; 2700000,7.13433333333333;
          2703600,7.198; 2707200,8.02133333333333; 2710800,8.30666666666667; 2714400,
          8.23333333333333; 2718000,7.61366666666666; 2721600,6.76166666666667; 2725200,
          6.37433333333333; 2728800,6.17733333333333; 2732400,6.603; 2736000,5.42266666666667;
          2739600,4.51266666666667; 2743200,4.22066666666667; 2746800,4.49166666666667;
          2750400,3.84933333333333; 2754000,3.80833333333334; 2757600,4.386; 2761200,
          4.63833333333333; 2764800,4.92933333333333; 2768400,4.94433333333333; 2772000,
          4.983; 2775600,4.77033333333333; 2779200,4.64666666666667; 2782800,4.75233333333333;
          2786400,4.26633333333334; 2790000,4.22933333333333; 2793600,4.91133333333333;
          2797200,4.82366666666667; 2800800,5.24766666666667; 2804400,5.69066666666667;
          2808000,5.683; 2811600,5.22333333333334; 2815200,5.52666666666667; 2818800,
          4.76; 2822400,4.31666666666667; 2826000,4.26533333333333; 2829600,4.03866666666667;
          2833200,3.86133333333333; 2836800,3.563; 2840400,3.978; 2844000,3.79666666666667;
          2847600,3.97933333333333; 2851200,3.626; 2854800,4.06533333333333; 2858400,
          3.8; 2862000,3.854; 2865600,3.29266666666666; 2869200,4.02266666666667;
          2872800,4.902; 2876400,5.669; 2880000,5.035; 2883600,1.54; 2887200,1.995;
          2890800,1.75266666666667; 2894400,0.605000000000001; 2898000,-1.41966666666667;
          2901600,-0.642; 2905200,-0.187; 2908800,-0.357333333333336; 2912400,-0.194666666666668;
          2916000,-0.297666666666668; 2919600,-0.484666666666668; 2923200,-0.991333333333337;
          2926800,-0.818333333333333; 2930400,-0.295333333333333; 2934000,0.0993333333333331;
          2937600,0.221666666666666; 2941200,0.292666666666667; 2944800,0.290666666666667;
          2948400,0.374666666666668; 2952000,0.127666666666666; 2955600,0.278666666666667;
          2959200,0.773999999999999; 2962800,0.654000000000001; 2966400,0.623333333333332;
          2970000,0.0759999999999987; 2973600,-0.0456666666666665; 2977200,0.289333333333334;
          2980800,-0.962999999999998; 2984400,-1.289; 2988000,-1.21733333333333; 2991600,
          -1.41433333333333; 2995200,-1.61666666666667; 2998800,-1.97033333333333;
          3002400,-1.42666666666667; 3006000,-0.251; 3009600,0.0836666666666659; 3013200,
          0.466666666666667; 3016800,0.600333333333334; 3020400,0.523666666666667;
          3024000,1.06233333333333; 3027600,1.392; 3031200,1.62833333333333; 3034800,
          1.65833333333333; 3038400,1.81666666666667; 3042000,1.26566666666667; 3045600,
          1.14066666666667; 3049200,0.874000000000003; 3052800,0.849333333333335;
          3056400,0.663999999999999; 3060000,1.17566666666667; 3063600,2.36033333333333;
          3067200,2.379; 3070800,2.605; 3074400,2.821; 3078000,2.95666666666667; 3081600,
          1.70533333333333; 3085200,1.14466666666667; 3088800,0.795000000000002; 3092400,
          0.304333333333334; 3096000,0.135666666666666; 3099600,-0.142666666666666;
          3103200,-0.261333333333333; 3106800,-0.410666666666667; 3110400,-0.924666666666666;
          3114000,-1.53566666666667; 3117600,-1.46733333333333; 3121200,-1.90933333333333;
          3124800,-1.808; 3128400,-1.376; 3132000,-0.386999999999999; 3135600,0.415666666666668;
          3139200,0.606333333333331; 3142800,1.00366666666667; 3146400,1.99866666666667;
          3150000,4.26166666666667; 3153600,3.97933333333333; 3157200,2.76733333333333;
          3160800,4.081; 3164400,3.66733333333333; 3168000,2.56866666666666; 3171600,
          1.85133333333333; 3175200,1.32; 3178800,0.569666666666667; 3182400,1.07333333333333;
          3186000,1.11333333333333; 3189600,1.202; 3193200,0.431333333333333; 3196800,
          -0.559666666666667; 3200400,-1.14266666666667; 3204000,-1.023; 3207600,-1.23466666666667;
          3211200,0.0163333333333346; 3214800,-0.283999999999999; 3218400,0.275333333333331;
          3222000,0.167000000000001; 3225600,1.83966666666667; 3229200,3.14; 3232800,
          2.88866666666666; 3236400,2.426; 3240000,1.988; 3243600,2.106; 3247200,2.45666666666666;
          3250800,2.75766666666667; 3254400,2.378; 3258000,1.83633333333333; 3261600,
          1.051; 3265200,1.249; 3268800,1.158; 3272400,0.751666666666667; 3276000,
          0.218333333333332; 3279600,-0.166000000000003; 3283200,-0.179333333333335;
          3286800,-0.252999999999999; 3290400,-0.196333333333333; 3294000,-0.366666666666666;
          3297600,-0.806666666666668; 3301200,-0.946333333333333; 3304800,-1.362;
          3308400,-1.342; 3312000,-1.077; 3315600,-0.962666666666664; 3319200,-0.834333333333333;
          3322800,-0.121333333333334; 3326400,0.111666666666666; 3330000,0.544333333333338;
          3333600,1.043; 3337200,1.47233333333333; 3340800,2.351; 3344400,2.21633333333334;
          3348000,3.095; 3351600,3.31166666666667; 3355200,3.39966666666667; 3358800,
          3.65833333333333; 3362400,2.84533333333333; 3366000,3.24; 3369600,3.48033333333333;
          3373200,3.27333333333333; 3376800,3.20066666666667; 3380400,3.37366666666667;
          3384000,2.95833333333334; 3387600,2.51933333333333; 3391200,2.46066666666667;
          3394800,2.60033333333333; 3398400,2.024; 3402000,2.09233333333333; 3405600,
          2.429; 3409200,2.40133333333334; 3412800,2.47933333333333; 3416400,2.48133333333334;
          3420000,2.625; 3423600,3.962; 3427200,4.64233333333333; 3430800,4.07133333333333;
          3434400,-1.30666666666667; 3438000,-1.08966666666667; 3441600,-2.15166666666667;
          3445200,-4.20166666666667; 3448800,-3.54666666666667; 3452400,-3.23733333333333;
          3456000,-2.608; 3459600,-2.79633333333333; 3463200,-3.87833333333333; 3466800,
          -4.05333333333333; 3470400,-5.128; 3474000,-5.32266666666667; 3477600,-5.566;
          3481200,-5.218; 3484800,-4.25966666666667; 3488400,-2.60733333333333; 3492000,
          -2.52133333333334; 3495600,-4.05933333333333; 3499200,-3.68033333333333;
          3502800,-3.80033333333333; 3506400,-3.34033333333333; 3510000,-4.25566666666667;
          3513600,-4.44866666666667; 3517200,-4.78733333333334; 3520800,-4.12233333333333;
          3524400,-3.86166666666667; 3528000,-2.62633333333333; 3531600,-1.39833333333333;
          3535200,-1.718; 3538800,-1.58066666666667; 3542400,-1.239; 3546000,-1.192;
          3549600,-1.22933333333333; 3553200,-1.336; 3556800,-1.528; 3560400,-1.031;
          3564000,-0.915333333333334; 3567600,-1.824; 3571200,-1.84833333333333; 3574800,
          -2.18; 3578400,-1.58066666666667; 3582000,-1.04; 3585600,-1.64466666666667;
          3589200,-2.12933333333333; 3592800,-1.454; 3596400,-1.46133333333333; 3600000,
          -0.634333333333334; 3603600,-0.178666666666666; 3607200,-0.154333333333332;
          3610800,-0.448333333333336; 3614400,-0.510333333333336; 3618000,-0.258000000000001;
          3621600,0.0726666666666667; 3625200,0.112333333333334; 3628800,-0.477999999999997;
          3632400,-1.18866666666666; 3636000,-1.18933333333333; 3639600,-1.24833333333333;
          3643200,-1.235; 3646800,-1.48833333333333; 3650400,-1.376; 3654000,-1.81433333333333;
          3657600,-1.901; 3661200,-1.48733333333333; 3664800,-1.06133333333334; 3668400,
          -0.994666666666668; 3672000,-0.865; 3675600,-0.414666666666665; 3679200,
          0.387333333333333; 3682800,0.456333333333332; 3686400,0.609; 3690000,0.374666666666666;
          3693600,1.291; 3697200,1.326; 3700800,0.808999999999999; 3704400,0.648000000000001;
          3708000,0.293666666666667; 3711600,-0.0879999999999992; 3715200,0.371999999999999;
          3718800,-0.229000000000001; 3722400,-0.185333333333332; 3726000,-0.793666666666668;
          3729600,-0.0953333333333308; 3733200,0.337666666666666; 3736800,0.645000000000001;
          3740400,0.331666666666667; 3744000,0.735000000000002; 3747600,1.64033333333333;
          3751200,1.463; 3754800,1.96666666666667; 3758400,2.182; 3762000,1.979; 3765600,
          1.921; 3769200,2.833; 3772800,2.49866666666667; 3776400,2.044; 3780000,1.95166666666667;
          3783600,1.55633333333333; 3787200,1.82866666666667; 3790800,1.39266666666667;
          3794400,1.173; 3798000,0.140000000000001; 3801600,0.525333333333334; 3805200,
          1.52233333333333; 3808800,2.033; 3812400,2.44566666666667; 3816000,2.62233333333333;
          3819600,2.07566666666667; 3823200,2.166; 3826800,2.323; 3830400,1.64033333333333;
          3834000,0.298000000000001; 3837600,0.948666666666668; 3841200,1.96933333333333;
          3844800,2.15766666666666; 3848400,1.80366666666667; 3852000,2.323; 3855600,
          1.693; 3859200,0.943000000000002; 3862800,0.794999999999999; 3866400,-0.0503333333333349;
          3870000,-0.734999999999999; 3873600,-0.817; 3877200,-1.16166666666666; 3880800,
          -1.58066666666667; 3884400,-1.08933333333333; 3888000,-1.06133333333333;
          3891600,-0.614333333333334; 3895200,-0.440999999999998; 3898800,-0.260333333333332;
          3902400,-0.380666666666668; 3906000,-0.303000000000001; 3909600,0.261000000000001;
          3913200,0.181666666666668; 3916800,-0.344666666666667; 3920400,-0.820333333333332;
          3924000,-1.46466666666667; 3927600,-1.63733333333333; 3931200,-2.20733333333333;
          3934800,-3.18333333333333; 3938400,-4.267; 3942000,-4.70866666666667; 3945600,
          -4.989; 3949200,-4.36833333333333; 3952800,-4.675; 3956400,-4.723; 3960000,
          -4.44433333333333; 3963600,-4.43366666666667; 3967200,-3.813; 3970800,-3.27733333333333;
          3974400,-3.515; 3978000,-3.44666666666667; 3981600,-3.47666666666667; 3985200,
          -3.103; 3988800,-2.97966666666666; 3992400,-2.894; 3996000,-2.902; 3999600,
          -2.68866666666667; 4003200,-2.193; 4006800,-1.752; 4010400,-2.02666666666666;
          4014000,-2.24566666666667; 4017600,-2.46; 4021200,-2.50266666666667; 4024800,
          -2.44166666666667; 4028400,-2.401; 4032000,-2.35833333333333; 4035600,-2.52933333333333;
          4039200,-2.45266666666667; 4042800,-2.48733333333333; 4046400,-2.70366666666667;
          4050000,-2.74333333333333; 4053600,-2.56866666666667; 4057200,-2.697; 4060800,
          -2.52766666666667; 4064400,-2.44266666666667; 4068000,-2.56233333333333;
          4071600,-2.491; 4075200,-2.57166666666667; 4078800,-2.56233333333334; 4082400,
          -1.894; 4086000,-1.843; 4089600,-1.89366666666667; 4093200,-2.005; 4096800,
          -1.711; 4100400,-1.63566666666667; 4104000,-1.931; 4107600,-2.021; 4111200,
          -1.97866666666667; 4114800,-2.38666666666666; 4118400,-2.48333333333333;
          4122000,-2.34366666666667; 4125600,-2.543; 4129200,-2.339; 4132800,-2.14333333333334;
          4136400,-1.783; 4140000,-1.97566666666667; 4143600,-1.858; 4147200,-1.92366666666667;
          4150800,-1.915; 4154400,-3.36433333333333; 4158000,-3.441; 4161600,-3.219;
          4165200,-2.47566666666666; 4168800,-2.91066666666667; 4172400,-3.133; 4176000,
          -2.46933333333333; 4179600,-1.89233333333334; 4183200,-1.545; 4186800,-1.146;
          4190400,-1.16433333333333; 4194000,-0.917333333333334; 4197600,-0.889333333333335;
          4201200,-1.07133333333333; 4204800,-1.59566666666667; 4208400,-1.327; 4212000,
          -1.51633333333333; 4215600,-1.261; 4219200,-1.511; 4222800,-0.882; 4226400,
          -1.19166666666666; 4230000,-1.72266666666667; 4233600,-1.83166666666667;
          4237200,-2.07333333333333; 4240800,-1.843; 4244400,-1.433; 4248000,-1.00766666666667;
          4251600,-1.09433333333333; 4255200,-1.021; 4258800,-1.15; 4262400,-1.279;
          4266000,-1.38466666666667; 4269600,-1.138; 4273200,-1.342; 4276800,-2.56133333333333;
          4280400,-1.83833333333333; 4284000,-3.733; 4287600,-3.73533333333333; 4291200,
          -3.63033333333333; 4294800,-3.815; 4298400,-4.46233333333334; 4302000,-4.70833333333333;
          4305600,-5.36966666666667; 4309200,-5.509; 4312800,-5.30633333333333; 4316400,
          -5.22633333333333; 4320000,-5.59733333333333; 4323600,-6.04066666666667;
          4327200,-6.40366666666667; 4330800,-6.02933333333333; 4334400,-6.452; 4338000,
          -5.55966666666666; 4341600,-6.747; 4345200,-6.38666666666667; 4348800,-6.363;
          4352400,-6.36133333333333; 4356000,-5.96766666666667; 4359600,-5.68266666666667;
          4363200,-4.95766666666667; 4366800,-4.95333333333333; 4370400,-4.30033333333333;
          4374000,-4.712; 4377600,-4.59033333333334; 4381200,-4.34433333333333; 4384800,
          -3.22366666666667; 4388400,-2.051; 4392000,-1.18466666666667; 4395600,-1.531;
          4399200,-1.714; 4402800,-0.709333333333333; 4406400,-1.20633333333334; 4410000,
          -1.74066666666667; 4413600,-2.12033333333333; 4417200,-1.95333333333333;
          4420800,-2.09966666666667; 4424400,-2.13266666666667; 4428000,-2.422; 4431600,
          -2.31766666666667; 4435200,-1.74266666666667; 4438800,0.248333333333332;
          4442400,2.38033333333333; 4446000,3.63566666666667; 4449600,5.24966666666667;
          4453200,5.17333333333333; 4456800,4.308; 4460400,5.939; 4464000,3.63733333333333;
          4467600,2.46666666666667; 4471200,2.341; 4474800,2.249; 4478400,1.12; 4482000,
          1.339; 4485600,1.34166666666666; 4489200,0.898333333333332; 4492800,0.916666666666668;
          4496400,1.71766666666666; 4500000,1.172; 4503600,0.91233333333333; 4507200,
          0.378666666666666; 4510800,-0.101333333333333; 4514400,-0.166666666666669;
          4518000,1.28133333333333; 4521600,2.52333333333333; 4525200,3.45233333333333;
          4528800,3.39733333333333; 4532400,3.12; 4536000,2.791; 4539600,3.06566666666667;
          4543200,2.85166666666667; 4546800,3.90466666666667; 4550400,4.06966666666667;
          4554000,4.91466666666667; 4557600,5.44166666666667; 4561200,6.08833333333333;
          4564800,5.97266666666667; 4568400,6.09533333333333; 4572000,6.064; 4575600,
          6.275; 4579200,6.263; 4582800,6.39066666666667; 4586400,6.301; 4590000,5.911;
          4593600,5.30766666666666; 4597200,4.66733333333334; 4600800,4.31166666666667;
          4604400,5.165; 4608000,5.78866666666667; 4611600,6.076; 4615200,6.08433333333333;
          4618800,5.257; 4622400,5.47; 4626000,5.55733333333333; 4629600,5.581; 4633200,
          5.85133333333334; 4636800,5.441; 4640400,4.83866666666666; 4644000,5.18266666666667;
          4647600,4.81166666666667; 4651200,3.529; 4654800,2.22733333333333; 4658400,
          2.498; 4662000,2.06733333333333; 4665600,1.16033333333333; 4669200,0.777000000000002;
          4672800,0.451666666666665; 4676400,0.231000000000003; 4680000,0.00733333333333608;
          4683600,-0.513333333333333; 4687200,-0.659999999999999; 4690800,-1.00133333333333;
          4694400,-1.031; 4698000,-1.18166666666667; 4701600,-1.02133333333333; 4705200,
          0.334666666666665; 4708800,1.187; 4712400,1.23033333333333; 4716000,1.88133333333333;
          4719600,2.00766666666667; 4723200,2.11466666666667; 4726800,1.818; 4730400,
          2.17366666666667; 4734000,2.362; 4737600,1.62033333333333; 4741200,1.756;
          4744800,2.43466666666667; 4748400,2.50633333333333; 4752000,2.71833333333333;
          4755600,2.899; 4759200,3.03333333333333; 4762800,3.259; 4766400,3.73233333333333;
          4770000,4.33266666666667; 4773600,4.578; 4777200,5.02133333333333; 4780800,
          5.62666666666667; 4784400,5.97866666666667; 4788000,5.52766666666667; 4791600,
          4.944; 4795200,5.24033333333333; 4798800,5.62666666666666; 4802400,4.90866666666667;
          4806000,4.102; 4809600,3.26133333333333; 4813200,2.48166666666667; 4816800,
          2.61433333333334; 4820400,2.11833333333333; 4824000,1.96766666666667; 4827600,
          1.51333333333333; 4831200,1.08133333333333; 4834800,0.961; 4838400,0.871999999999999;
          4842000,0.92633333333333; 4845600,0.331333333333334; 4849200,0.0143333333333331;
          4852800,-0.209; 4856400,-0.637999999999999; 4860000,-1.241; 4863600,-1.33166666666667;
          4867200,-1.18366666666667; 4870800,-1.32133333333333; 4874400,-1.807; 4878000,
          -1.01866666666667; 4881600,-0.430666666666665; 4885200,-2.07833333333333;
          4888800,-1.40666666666666; 4892400,-1.731; 4896000,-2.47266666666667; 4899600,
          -2.26966666666667; 4903200,-2.299; 4906800,-2.199; 4910400,-2.229; 4914000,
          -2.35033333333333; 4917600,-2.21433333333333; 4921200,-2.248; 4924800,-2.45733333333333;
          4928400,-3.06; 4932000,-3.13366666666667; 4935600,-3.23466666666667; 4939200,
          -2.68766666666667; 4942800,-2.92966666666667; 4946400,-3.167; 4950000,-3.022;
          4953600,-2.588; 4957200,-2.18166666666667; 4960800,-1.91133333333333; 4964400,
          -1.375; 4968000,-1.21766666666667; 4971600,-1.51966666666667; 4975200,-1.688;
          4978800,-1.671; 4982400,-1.59566666666666; 4986000,-1.33366666666667; 4989600,
          -1.356; 4993200,-1.409; 4996800,-1.35466666666667; 5000400,-1.30166666666666;
          5004000,-1.303; 5007600,-1.76233333333333; 5011200,-2.01566666666667; 5014800,
          -1.73; 5018400,-1.96033333333333; 5022000,-2.13033333333333; 5025600,-1.43033333333333;
          5029200,-1.66566666666667; 5032800,-1.87166666666667; 5036400,-0.966999999999999;
          5040000,-0.827999999999997; 5043600,-0.665999999999998; 5047200,-0.218999999999999;
          5050800,0.366; 5054400,0.542999999999999; 5058000,0.951666666666666; 5061600,
          0.924333333333333; 5065200,0.123666666666667; 5068800,0.155666666666665;
          5072400,0.327; 5076000,-0.182666666666666; 5079600,-0.630666666666664; 5083200,
          -0.516333333333332; 5086800,-0.343333333333332; 5090400,-0.928999999999999;
          5094000,-1.217; 5097600,-1.66766666666667; 5101200,-1.526; 5104800,-1.41933333333333;
          5108400,-1.21; 5112000,-0.992999999999999; 5115600,-0.938; 5119200,-1.19533333333333;
          5122800,-1.22433333333333; 5126400,-1.48633333333333; 5130000,-1.28366666666667;
          5133600,-1.072; 5137200,-1.24133333333334; 5140800,-1.243; 5144400,-1.32866666666667;
          5148000,-1.848; 5151600,-1.83233333333333; 5155200,-1.60333333333334; 5158800,
          -1.42966666666666; 5162400,-1.39766666666667; 5166000,-1.96566666666667;
          5169600,-2.119; 5173200,-2.328; 5176800,-2.18033333333333; 5180400,-1.91666666666667;
          5184000,-1.944; 5187600,-1.68733333333333; 5191200,-1.98933333333334; 5194800,
          -2.69433333333333; 5198400,-3.16933333333333; 5202000,-3.27166666666667;
          5205600,-3.715; 5209200,-3.561; 5212800,-3.373; 5216400,-2.81733333333333;
          5220000,-2.904; 5223600,-2.30566666666667; 5227200,-1.44; 5230800,-1.94566666666667;
          5234400,-2.12833333333333; 5238000,-2.204; 5241600,-1.34766666666666; 5245200,
          -1.75166666666667; 5248800,-1.80233333333333; 5252400,-2.339; 5256000,-2.69966666666667;
          5259600,-1.944; 5263200,-1.13466666666667; 5266800,-0.635999999999999; 5270400,
          -1.028; 5274000,-0.761333333333334; 5277600,0.491333333333334; 5281200,1.32766666666667;
          5284800,1.476; 5288400,1.49033333333333; 5292000,1.53533333333333; 5295600,
          1.52866666666667; 5299200,1.72466666666667; 5302800,2.06133333333333; 5306400,
          2.721; 5310000,3.12766666666667; 5313600,3.62133333333333; 5317200,4.49066666666667;
          5320800,3.46566666666667; 5324400,3.36633333333334; 5328000,3.07766666666666;
          5331600,0.362666666666668; 5335200,-2.562; 5338800,-2.329; 5342400,-1.73333333333334;
          5346000,-1.625; 5349600,-3.36133333333333; 5353200,-3.283; 5356800,-3.413;
          5360400,-2.91633333333333; 5364000,-3.418; 5367600,-2.58366666666667; 5371200,
          -1.94133333333333; 5374800,-1.42; 5378400,-1.43066666666667; 5382000,-1.30566666666667;
          5385600,-0.809666666666669; 5389200,-0.0596666666666628; 5392800,0.320666666666665;
          5396400,0.292666666666665; 5400000,0.190333333333331; 5403600,-1.175; 5407200,
          -0.27733333333333; 5410800,0.173333333333333; 5414400,0.0603333333333316;
          5418000,-0.194999999999997; 5421600,-0.391333333333333; 5425200,-0.0383333333333318;
          5428800,0.0653333333333346; 5432400,0.254; 5436000,-0.252333333333331; 5439600,
          -1.10033333333333; 5443200,-1.56066666666667; 5446800,-1.28233333333333;
          5450400,-1.47333333333333; 5454000,-2.09566666666667; 5457600,-2.25733333333334;
          5461200,-3.26066666666667; 5464800,-4.198; 5468400,-4.11666666666667; 5472000,
          -3.788; 5475600,-3.323; 5479200,-2.42733333333334; 5482800,-2.47533333333333;
          5486400,-1.63566666666667; 5490000,-1.423; 5493600,-0.497666666666665; 5497200,
          -0.210000000000001; 5500800,-0.0776666666666639; 5504400,0.0126666666666662;
          5508000,0.242999999999998; 5511600,0.536999999999999; 5515200,0.742333333333336;
          5518800,0.424666666666666; 5522400,0.682333333333334; 5526000,1.21333333333333;
          5529600,1.90533333333333; 5533200,1.33866666666666; 5536800,0.677333333333335;
          5540400,0.743999999999997; 5544000,0.86733333333333; 5547600,0.553666666666666;
          5551200,0.415666666666666; 5554800,0.555333333333332; 5558400,0.659333333333336;
          5562000,0.815; 5565600,0.555666666666666; 5569200,1.251; 5572800,2.023;
          5576400,1.35; 5580000,1.73833333333333; 5583600,1.08466666666667; 5587200,
          1.034; 5590800,0.0729999999999977; 5594400,-1.76066666666667; 5598000,-2.658;
          5601600,-2.364; 5605200,-2.075; 5608800,-2.845; 5612400,-2.46966666666667;
          5616000,-2.446; 5619600,-2.89666666666667; 5623200,-2.39566666666667; 5626800,
          -2.903; 5630400,-3.21366666666667; 5634000,-3.61133333333333; 5637600,-3.37366666666667;
          5641200,-2.58466666666667; 5644800,-2.06166666666666; 5648400,-1.667; 5652000,
          -2.556; 5655600,-2.56333333333333; 5659200,-2.84633333333333; 5662800,-2.787;
          5666400,-2.66866666666667; 5670000,-2.78933333333333; 5673600,-2.512; 5677200,
          -2.98033333333333; 5680800,-2.87033333333334; 5684400,-2.90166666666667;
          5688000,-3.212; 5691600,-2.69833333333333; 5695200,-3.489; 5698800,-3.19433333333333;
          5702400,-3.676; 5706000,-3.579; 5709600,-3.31033333333333; 5713200,-3.008;
          5716800,-3.265; 5720400,-3.804; 5724000,-3.33833333333334; 5727600,-3.469;
          5731200,-4.68633333333333; 5734800,-4.52866666666667; 5738400,-3.87566666666667;
          5742000,-2.995; 5745600,-3.63333333333333; 5749200,-5.91833333333333; 5752800,
          -5.13866666666667; 5756400,-4.60566666666667; 5760000,-3.50333333333333;
          5763600,-2.237; 5767200,-1.615; 5770800,-1.326; 5774400,-1.694; 5778000,
          -1.544; 5781600,-2.202; 5785200,-2.823; 5788800,-3.10933333333333; 5792400,
          -2.45833333333333; 5796000,-2.37633333333333; 5799600,-2.127; 5803200,-2.08;
          5806800,-2.16766666666667; 5810400,-2.11433333333333; 5814000,-1.887; 5817600,
          -1.95566666666667; 5821200,-2.60666666666667; 5824800,-2.39; 5828400,-3.38833333333333;
          5832000,-2.938; 5835600,-1.97; 5839200,-1.83233333333333; 5842800,-1.71566666666667;
          5846400,-2.2; 5850000,-3.585; 5853600,-4.48966666666667; 5857200,-5.657;
          5860800,-5.42666666666667; 5864400,-5.697; 5868000,-5.88366666666667; 5871600,
          -6.23166666666667; 5875200,-6.676; 5878800,-6.99233333333333; 5882400,-6.322;
          5886000,-6.41233333333333; 5889600,-6.65266666666667; 5893200,-6.19833333333333;
          5896800,-6.58766666666667; 5900400,-6.29133333333334; 5904000,-6.18466666666667;
          5907600,-5.954; 5911200,-4.948; 5914800,-4.55266666666667; 5918400,-4.565;
          5922000,-4.43166666666666; 5925600,-4.51; 5929200,-3.569; 5932800,-3.83066666666667;
          5936400,-3.21433333333333; 5940000,-3.32; 5943600,-2.313; 5947200,-1.183;
          5950800,-1.39266666666667; 5954400,-1.496; 5958000,-1.75433333333334; 5961600,
          -2.11866666666667; 5965200,-2.69866666666667; 5968800,-2.74166666666667;
          5972400,-3.43866666666667; 5976000,-3.80633333333333; 5979600,-3.85233333333334;
          5983200,-4.077; 5986800,-3.803; 5990400,-3.24433333333333; 5994000,-2.52566666666667;
          5997600,-1.44366666666667; 6001200,-0.976333333333336; 6004800,-0.696333333333332;
          6008400,-0.706000000000003; 6012000,-1.37566666666667; 6015600,-1.865; 6019200,
          -2.21366666666666; 6022800,-2.97466666666667; 6026400,-2.78; 6030000,-2.97;
          6033600,-3.361; 6037200,-3.28233333333333; 6040800,-4.08533333333334; 6044400,
          -4.286; 6048000,-4.25966666666667; 6051600,-4.707; 6055200,-4.68733333333333;
          6058800,-4.855; 6062400,-4.75033333333333; 6066000,-4.723; 6069600,-4.37433333333333;
          6073200,-2.53166666666667; 6076800,-2.01366666666667; 6080400,-2.044; 6084000,
          -1.82533333333333; 6087600,-0.620666666666665; 6091200,0.492000000000001;
          6094800,0.952333333333334; 6098400,0.687000000000001; 6102000,0.145666666666665;
          6105600,-0.872999999999999; 6109200,-1.66066666666667; 6112800,-0.988333333333335;
          6116400,-1.757; 6120000,-2.44733333333334; 6123600,-3.43266666666667; 6127200,
          -3.029; 6130800,-3.60066666666666; 6134400,-3.92633333333334; 6138000,-4.03866666666667;
          6141600,-3.89233333333333; 6145200,-4.06533333333333; 6148800,-3.16933333333333;
          6152400,-2.42266666666666; 6156000,-2.53333333333333; 6159600,-1.26833333333334;
          6163200,-0.781333333333336; 6166800,-0.457999999999999; 6170400,1.036; 6174000,
          0.816333333333331; 6177600,1.48966666666666; 6181200,0.780000000000003;
          6184800,0.253; 6188400,0.486666666666666; 6192000,0.724000000000001; 6195600,
          0.628666666666668; 6199200,0.653666666666666; 6202800,-0.822; 6206400,-2.25733333333333;
          6210000,-1.85533333333333; 6213600,-1.01966666666667; 6217200,-0.583666666666668;
          6220800,-0.462999999999999; 6224400,-0.940666666666665; 6228000,-0.798666666666667;
          6231600,-1.015; 6235200,-0.865666666666667; 6238800,-0.895333333333333;
          6242400,-1.016; 6246000,-0.427333333333334; 6249600,0.132666666666668; 6253200,
          0.142666666666666; 6256800,0.560333333333334; 6260400,1.34533333333333;
          6264000,1.81666666666667; 6267600,1.559; 6271200,1.19333333333333; 6274800,
          0.962999999999999; 6278400,0.0599999999999987; 6282000,-0.407; 6285600,-0.740666666666667;
          6289200,-1.38166666666667; 6292800,-1.835; 6296400,-1.57033333333333; 6300000,
          -1.845; 6303600,-2.18233333333333; 6307200,-2.353; 6310800,-2.63633333333333;
          6314400,-2.14466666666667; 6318000,-3.207; 6321600,-3.90733333333333; 6325200,
          -3.74966666666667; 6328800,-3.13466666666667; 6332400,-2.546; 6336000,-1.11233333333333;
          6339600,-0.749000000000001; 6343200,0.379666666666669; 6346800,1.03533333333333;
          6350400,1.40466666666667; 6354000,1.84733333333334; 6357600,1.346; 6361200,
          1.35; 6364800,0.609333333333334; 6368400,0.113666666666665; 6372000,-0.360666666666667;
          6375600,-1.11566666666667; 6379200,-1.182; 6382800,-1.651; 6386400,-1.837;
          6390000,-2.13533333333334; 6393600,-2.43533333333333; 6397200,-3.116; 6400800,
          -3.792; 6404400,-3.70333333333333; 6408000,-3.89033333333333; 6411600,-4.29666666666667;
          6415200,-4.16733333333333; 6418800,-3.50066666666667; 6422400,-2.63933333333333;
          6426000,-1.66333333333333; 6429600,0.43633333333333; 6433200,0.745666666666667;
          6436800,2.08433333333334; 6440400,1.947; 6444000,1.086; 6447600,0.996333333333334;
          6451200,1.26333333333333; 6454800,1.24; 6458400,0.432; 6462000,1.811; 6465600,
          2.00366666666667; 6469200,1.575; 6472800,0.845666666666666; 6476400,-0.520333333333335;
          6480000,-0.913333333333334; 6483600,-1.174; 6487200,-1.59533333333333; 6490800,
          -1.95166666666667; 6494400,-2.34; 6498000,-2.08066666666667; 6501600,-1.42466666666667;
          6505200,-1.16366666666667; 6508800,-1.36433333333333; 6512400,-1.964; 6516000,
          -1.939; 6519600,-2.04133333333333; 6523200,-1.94; 6526800,-1.719; 6530400,
          -1.59466666666667; 6534000,-1.362; 6537600,-1.65233333333334; 6541200,-2.14633333333333;
          6544800,-2.24433333333333; 6548400,-1.69366666666667; 6552000,-1.98066666666667;
          6555600,-2.67133333333333; 6559200,-3.469; 6562800,-3.59433333333334; 6566400,
          -3.75; 6570000,-3.814; 6573600,-3.97133333333333; 6577200,-3.99166666666667;
          6580800,-4.289; 6584400,-3.92633333333333; 6588000,-3.66166666666667; 6591600,
          -2.37833333333333; 6595200,-1.90633333333333; 6598800,-2.049; 6602400,-0.485000000000002;
          6606000,0.0356666666666658; 6609600,-0.0109999999999957; 6613200,2.265;
          6616800,2.68066666666667; 6620400,2.55266666666667; 6624000,1.77766666666666;
          6627600,0.699; 6631200,-0.502333333333331; 6634800,-1.59; 6638400,-1.896;
          6642000,-1.88733333333333; 6645600,-2.05733333333333; 6649200,-2.035; 6652800,
          -2.23666666666667; 6656400,-2.496; 6660000,-2.534; 6663600,-2.83433333333334;
          6667200,-3.218; 6670800,-3.27966666666666; 6674400,-3.10966666666667; 6678000,
          -2.24566666666667; 6681600,-2.141; 6685200,-1.55733333333333; 6688800,-0.693999999999999;
          6692400,1.22166666666667; 6696000,2.84466666666667; 6699600,3.01666666666667;
          6703200,3.21066666666666; 6706800,3.18333333333333; 6710400,1.85933333333333;
          6714000,0.0993333333333339; 6717600,-1.04966666666667; 6721200,-1.324; 6724800,
          -1.898; 6728400,-2.07466666666667; 6732000,-1.79433333333334; 6735600,-1.99266666666667;
          6739200,-1.93066666666667; 6742800,-2.04966666666667; 6746400,-2.31433333333333;
          6750000,-2.644; 6753600,-2.88766666666667; 6757200,-3.23733333333333; 6760800,
          -3.07766666666666; 6764400,-2.17466666666667; 6768000,-2.039; 6771600,-0.914666666666665;
          6775200,0.159666666666666; 6778800,0.942333333333334; 6782400,1.80466666666667;
          6786000,2.86533333333334; 6789600,4.04433333333333; 6793200,3.83766666666666;
          6796800,3.08866666666667; 6800400,0.809666666666667; 6804000,-1.28166666666667;
          6807600,-1.759; 6811200,-2.39866666666667; 6814800,-1.841; 6818400,-2.04833333333333;
          6822000,-2.88933333333333; 6825600,-2.94733333333333; 6829200,-2.87533333333333;
          6832800,-3.00433333333333; 6836400,-3.09666666666667; 6840000,-3.489; 6843600,
          -3.423; 6847200,-3.201; 6850800,-2.20733333333334; 6854400,-1.28533333333333;
          6858000,-0.298666666666666; 6861600,0.497333333333335; 6865200,0.946333333333335;
          6868800,1.882; 6872400,1.885; 6876000,2.66933333333333; 6879600,2.58733333333333;
          6883200,2.5; 6886800,1.97; 6890400,1.56966666666667; 6894000,1.52933333333333;
          6897600,1.77533333333333; 6901200,1.63133333333333; 6904800,2.083; 6908400,
          2.85333333333333; 6912000,2.63366666666667; 6915600,3.63333333333333; 6919200,
          2.957; 6922800,2.20333333333333; 6926400,0.948333333333331; 6930000,0.462666666666669;
          6933600,0.45533333333333; 6937200,2.24633333333333; 6940800,3.09466666666667;
          6944400,3.45933333333334; 6948000,3.147; 6951600,4.183; 6955200,4.34466666666667;
          6958800,4.20466666666667; 6962400,3.96433333333333; 6966000,3.209; 6969600,
          2.746; 6973200,2.351; 6976800,1.16533333333333; 6980400,1.52033333333333;
          6984000,1.17266666666667; 6987600,1.044; 6991200,0.0253333333333332; 6994800,
          -0.591999999999998; 6998400,-1.01833333333334; 7002000,-0.829333333333333;
          7005600,-1.02333333333333; 7009200,-1.37233333333333; 7012800,-1.547; 7016400,
          -1.13; 7020000,-0.747000000000003; 7023600,-0.431999999999999; 7027200,0.174333333333334;
          7030800,0.268666666666666; 7034400,0.331; 7038000,1.39066666666667; 7041600,
          1.68566666666667; 7045200,1.69; 7048800,1.08733333333333; 7052400,0.782999999999996;
          7056000,0.27466666666667; 7059600,-0.480333333333336; 7063200,-0.802666666666667;
          7066800,-0.986333333333333; 7070400,-1.474; 7074000,-1.66966666666667; 7077600,
          -2.27366666666667; 7081200,-2.752; 7084800,-3.208; 7088400,-2.867; 7092000,
          -3.432; 7095600,-3.62233333333333; 7099200,-3.62933333333333; 7102800,-3.742;
          7106400,-3.43633333333333; 7110000,-3.38033333333333; 7113600,-2.85433333333333;
          7117200,-2.20933333333333; 7120800,-1.48833333333333; 7124400,-1.43033333333333;
          7128000,-0.645999999999995; 7131600,-0.373000000000001; 7135200,-0.155666666666663;
          7138800,-1.06433333333334; 7142400,-1.17966666666667; 7146000,-1.75066666666667;
          7149600,-1.59733333333333; 7153200,-1.064; 7156800,-0.923333333333334; 7160400,
          -0.968666666666666; 7164000,-0.665666666666668; 7167600,-0.618666666666666;
          7171200,-0.716999999999997; 7174800,-0.963000000000002; 7178400,-1.12466666666667;
          7182000,-1.03933333333333; 7185600,-1.26366666666667; 7189200,-1.63766666666667;
          7192800,-1.403; 7196400,-0.982000000000001; 7200000,-0.835333333333333;
          7203600,0.00833333333333286; 7207200,0.846; 7210800,0.914666666666664; 7214400,
          0.236666666666668; 7218000,0.249333333333331; 7221600,1.04166666666667;
          7225200,1.23366666666667; 7228800,0.812000000000001; 7232400,-0.0226666666666677;
          7236000,-1.18366666666667; 7239600,-1.66233333333333; 7243200,-2.44533333333333;
          7246800,-2.175; 7250400,-2.427; 7254000,-2.77533333333333; 7257600,-2.78666666666666;
          7261200,-2.10133333333333; 7264800,-1.70566666666666; 7268400,-1.48866666666667;
          7272000,-0.726999999999999; 7275600,-0.893000000000001; 7279200,-0.321333333333333;
          7282800,0.227333333333332; 7286400,0.129; 7290000,-0.0449999999999982; 7293600,
          -0.064333333333332; 7297200,0.391333333333334; 7300800,1.65766666666666;
          7304400,1.977; 7308000,2.72566666666667; 7311600,2.05633333333333; 7315200,
          2.53066666666667; 7318800,2.75; 7322400,2.81366666666667; 7326000,3.25266666666666;
          7329600,3.94833333333333; 7333200,3.90433333333333; 7336800,4.034; 7340400,
          3.67266666666667; 7344000,3.58466666666667; 7347600,2.85633333333333; 7351200,
          1.94; 7354800,0.751333333333333; 7358400,0.301666666666667; 7362000,-0.285999999999999;
          7365600,0.0183333333333311; 7369200,1.868; 7372800,1.82766666666667; 7376400,
          2.11666666666667; 7380000,2.96166666666667; 7383600,4.315; 7387200,4.812;
          7390800,4.08133333333333; 7394400,5.23333333333333; 7398000,4.92066666666666;
          7401600,4.42033333333333; 7405200,2.94366666666667; 7408800,1.97033333333333;
          7412400,1.52033333333333; 7416000,1.001; 7419600,0.527333333333336; 7423200,
          1.225; 7426800,1.48233333333333; 7430400,0.962000000000002; 7434000,1.67333333333333;
          7437600,0.426333333333336; 7441200,0.446; 7444800,-1.05033333333333; 7448400,
          2.43033333333334; 7452000,6.01466666666667; 7455600,4.87766666666667; 7459200,
          4.65466666666667; 7462800,5.461; 7466400,5.02833333333333; 7470000,4.71333333333333;
          7473600,4.93666666666667; 7477200,3.793; 7480800,3.207; 7484400,3.50133333333333;
          7488000,5.25866666666667; 7491600,4.86666666666667; 7495200,3.24266666666667;
          7498800,2.34666666666667; 7502400,1.75166666666667; 7506000,0.960333333333331;
          7509600,0.354666666666667; 7513200,1.83166666666666; 7516800,1.95266666666666;
          7520400,1.86166666666667; 7524000,0.385333333333336; 7527600,0.500999999999999;
          7531200,0.947666666666668; 7534800,-0.493666666666669; 7538400,0.681666666666668;
          7542000,1.245; 7545600,2.23233333333333; 7549200,2.11966666666666; 7552800,
          2.24266666666667; 7556400,2.45533333333333; 7560000,2.342; 7563600,2.84;
          7567200,2.85466666666666; 7570800,3.27066666666667; 7574400,3.33633333333333;
          7578000,3.36266666666667; 7581600,4.16233333333333; 7585200,3.954; 7588800,
          3.24233333333333; 7592400,2.82566666666667; 7596000,3.46; 7599600,3.71633333333333;
          7603200,3.80133333333333; 7606800,4.237; 7610400,3.979; 7614000,4.30633333333333;
          7617600,3.82; 7621200,4.362; 7624800,3.20433333333333; 7628400,3.46733333333333;
          7632000,3.106; 7635600,3.68066666666667; 7639200,4.77633333333333; 7642800,
          7.365; 7646400,5.66933333333333; 7650000,8.26000000000001; 7653600,10.1706666666667;
          7657200,9.61366666666667; 7660800,10.0433333333333; 7664400,9.96366666666666;
          7668000,9.63366666666667; 7671600,8.75966666666667; 7675200,8.62033333333333;
          7678800,7.16866666666667; 7682400,6.814; 7686000,6.48783333333333; 7689600,
          6.036; 7693200,6.44233333333333; 7696800,6.193; 7700400,5.621; 7704000,5.698;
          7707600,5.571; 7711200,5.07833333333333; 7714800,4.958; 7718400,4.888; 7722000,
          4.916; 7725600,5.60866666666667; 7729200,7.781; 7732800,7.04466666666667;
          7736400,7.10133333333333; 7740000,8.15666666666667; 7743600,9.52666666666667;
          7747200,9.62233333333333; 7750800,9.65166666666667; 7754400,8.72233333333333;
          7758000,9.34366666666667; 7761600,6.79533333333334; 7765200,7.746; 7768800,
          6.33033333333333; 7772400,5.24433333333333; 7776000,5.76666666666667; 7779600,
          5.60066666666667; 7783200,5.273; 7786800,5.575; 7790400,5.39866666666667;
          7794000,4.779; 7797600,4.92266666666667; 7801200,5.02633333333333; 7804800,
          4.92566666666666; 7808400,5.39733333333333; 7812000,5.93333333333333; 7815600,
          4.56433333333333; 7819200,5.80566666666667; 7822800,6.09766666666667; 7826400,
          5.41966666666667; 7830000,6.57866666666666; 7833600,5.59733333333333; 7837200,
          6.427; 7840800,5.98766666666667; 7844400,4.90666666666667; 7848000,3.414;
          7851600,5.64166666666667; 7855200,8.627; 7858800,9.03883333333333; 7862400,
          6.71266666666667; 7866000,5.88166666666667; 7869600,5.15233333333333; 7873200,
          4.32733333333334; 7876800,3.39566666666667; 7880400,3.20133333333333; 7884000,
          3.13066666666667; 7887600,3.269; 7891200,2.07566666666666; 7894800,2.36566666666667;
          7898400,2.33233333333334; 7902000,2.77866666666667; 7905600,2.806; 7909200,
          2.83233333333333; 7912800,3.76966666666667; 7916400,4.104; 7920000,4.15366666666667;
          7923600,4.37666666666667; 7927200,3.72533333333333; 7930800,3.57333333333333;
          7934400,3.807; 7938000,3.90566666666667; 7941600,4.176; 7945200,3.98066666666667;
          7948800,4.14033333333333; 7952400,4.35966666666667; 7956000,3.952; 7959600,
          3.57; 7963200,3.74333333333333; 7966800,3.429; 7970400,4.40366666666666;
          7974000,4.498; 7977600,3.04; 7981200,3.433; 7984800,4.90066666666667; 7988400,
          6.453; 7992000,7.26166666666667; 7995600,6.98233333333333; 7999200,7.45466666666667;
          8002800,8.929; 8006400,9.02; 8010000,9.17733333333333; 8013600,7.749; 8017200,
          7.416; 8020800,7.20466666666666; 8024400,6.34; 8028000,6.594; 8031600,7.13783333333333;
          8035200,6.529; 8038800,6.31766666666666; 8042400,5.76533333333333; 8046000,
          5.845; 8049600,6.26266666666667; 8053200,6.341; 8056800,5.88766666666667;
          8060400,6.03133333333334; 8064000,6.31933333333334; 8067600,7.27266666666667;
          8071200,7.256; 8074800,6.93966666666667; 8078400,8.47633333333333; 8082000,
          6.701; 8085600,8.22933333333333; 8089200,8.69; 8092800,8.52933333333333;
          8096400,8.989; 8100000,8.71266666666667; 8103600,8.38566666666667; 8107200,
          8.67733333333333; 8110800,8.83566666666667; 8114400,7.25566666666666; 8118000,
          6.54383333333333; 8121600,5.38433333333333; 8125200,5.40066666666667; 8128800,
          5.261; 8132400,5.425; 8136000,5.592; 8139600,5.19; 8143200,6.41666666666666;
          8146800,5.68266666666667; 8150400,6.08933333333333; 8154000,6.489; 8157600,
          6.731; 8161200,6.703; 8164800,6.041; 8168400,5.24366666666667; 8172000,6.393;
          8175600,8.014; 8179200,7.654; 8182800,6.97333333333333; 8186400,6.60633333333333;
          8190000,5.44433333333333; 8193600,5.52766666666666; 8197200,6.03166666666667;
          8200800,6.29033333333334; 8204400,6.2045; 8208000,6.17; 8211600,6.46; 8215200,
          6.56633333333333; 8218800,6.978; 8222400,6.444; 8226000,6.67; 8229600,7.48633333333334;
          8233200,7.442; 8236800,7.187; 8240400,7.802; 8244000,9.59033333333333; 8247600,
          8.59066666666667; 8251200,8.52533333333333; 8254800,9.50266666666667; 8258400,
          9.399; 8262000,9.76433333333333; 8265600,10.347; 8269200,10.3576666666667;
          8272800,9.86266666666667; 8276400,9.48266666666667; 8280000,9.69866666666667;
          8283600,9.22833333333334; 8287200,8.614; 8290800,8.616; 8294400,8.41833333333333;
          8298000,8.24233333333333; 8301600,8.42133333333334; 8305200,8.14366666666667;
          8308800,8.053; 8312400,7.943; 8316000,8.208; 8319600,7.51933333333333; 8323200,
          6.32; 8326800,4.66366666666667; 8330400,4.93466666666667; 8334000,7.14533333333334;
          8337600,6.97133333333333; 8341200,5.11266666666667; 8344800,4.81266666666667;
          8348400,8.14066666666667; 8352000,8.34133333333333; 8355600,6.91033333333333;
          8359200,5.77366666666667; 8362800,4.94866666666666; 8366400,4.42233333333333;
          8370000,4.05933333333333; 8373600,4.31466666666667; 8377200,4.0055; 8380800,
          2.88033333333333; 8384400,2.57133333333333; 8388000,2.65766666666667; 8391600,
          1.677; 8395200,1.88466666666667; 8398800,2.391; 8402400,2.20433333333333;
          8406000,2.07866666666667; 8409600,3.86966666666667; 8413200,1.71233333333334;
          8416800,2.46666666666667; 8420400,2.05433333333333; 8424000,2.43333333333333;
          8427600,4.03933333333333; 8431200,2.06033333333333; 8434800,0.716333333333333;
          8438400,1.215; 8442000,1.18333333333333; 8445600,1.123; 8449200,0.417666666666669;
          8452800,1.15766666666667; 8456400,0.158666666666666; 8460000,1.01566666666667;
          8463600,-1.04583333333334; 8467200,-2.24033333333333; 8470800,-0.456333333333334;
          8474400,-1.99833333333333; 8478000,-3.27666666666667; 8481600,-4.155; 8485200,
          -2.07066666666667; 8488800,-2.12166666666667; 8492400,-1.78866666666667;
          8496000,-1.52; 8499600,-0.663000000000002; 8503200,-0.0166666666666675;
          8506800,-0.254999999999999; 8510400,0.200999999999999; 8514000,0.751333333333331;
          8517600,1.19833333333334; 8521200,1.71266666666667; 8524800,0.744666666666667;
          8528400,0.541333333333332; 8532000,2.27733333333333; 8535600,1.80866666666667;
          8539200,1.391; 8542800,1.35966666666667; 8546400,1.39733333333333; 8550000,
          0.879166666666666; 8553600,1.21766666666667; 8557200,1.03366666666667; 8560800,
          1.158; 8564400,1.039; 8568000,1.29066666666666; 8571600,1.01066666666667;
          8575200,0.901999999999999; 8578800,0.812666666666669; 8582400,1.576; 8586000,
          1.574; 8589600,1.31566666666667; 8593200,0.591666666666665; 8596800,1.45166666666667;
          8600400,2.97066666666667; 8604000,1.71933333333333; 8607600,1.54366666666667;
          8611200,3.388; 8614800,3.825; 8618400,3.7; 8622000,1.977; 8625600,1.25833333333334;
          8629200,0.526333333333331; 8632800,0.294666666666666; 8636400,-0.0101666666666671;
          8640000,-0.296333333333332; 8643600,-0.826666666666666; 8647200,-0.916666666666666;
          8650800,-1.29733333333333; 8654400,-1.44133333333333; 8658000,-1.47433333333333;
          8661600,-2.322; 8665200,-0.784999999999997; 8668800,-0.232666666666669;
          8672400,0.122333333333335; 8676000,0.786; 8679600,1.545; 8683200,2.423;
          8686800,5.135; 8690400,3.50466666666667; 8694000,4.15433333333334; 8697600,
          8.35033333333333; 8701200,5.771; 8704800,5.058; 8708400,3.878; 8712000,3.454;
          8715600,2.901; 8719200,2.41566666666667; 8722800,1.733; 8726400,2.03266666666667;
          8730000,1.75166666666667; 8733600,1.16133333333333; 8737200,1.63766666666667;
          8740800,1.259; 8744400,-1.15233333333334; 8748000,0.760999999999999; 8751600,
          0.109333333333332; 8755200,1.54633333333333; 8758800,5.86466666666667; 8762400,
          2.231; 8766000,3.82433333333333; 8769600,3.41733333333334; 8773200,3.64466666666667;
          8776800,6.1; 8780400,6.633; 8784000,6.63566666666667; 8787600,5.19; 8791200,
          4.67266666666667; 8794800,4.13166666666666; 8798400,3.36466666666667; 8802000,
          2.20833333333334; 8805600,2.55733333333334; 8809200,3.45466666666667; 8812800,
          3.812; 8816400,3.40966666666667; 8820000,2.48266666666667; 8823600,2.828;
          8827200,2.71033333333333; 8830800,0.896999999999997; 8834400,0.183333333333334;
          8838000,3.593; 8841600,3.43366666666666; 8845200,3.58366666666666; 8848800,
          4.76033333333334; 8852400,4.83; 8856000,7.14266666666667; 8859600,6.89866666666667;
          8863200,7.34733333333333; 8866800,8.936; 8870400,8.68366666666667; 8874000,
          8.05933333333333; 8877600,6.52133333333334; 8881200,6.94766666666666; 8884800,
          6.81133333333333; 8888400,6.306; 8892000,5.50566666666667; 8895600,5.46916666666666;
          8899200,5.36466666666667; 8902800,5.198; 8906400,4.47633333333333; 8910000,
          3.37566666666667; 8913600,4.42666666666666; 8917200,5.195; 8920800,6.035;
          8924400,6.61166666666667; 8928000,7.21533333333333; 8931600,7.91433333333333;
          8935200,6.756; 8938800,7.90666666666667; 8942400,4.80666666666666; 8946000,
          7.19433333333333; 8949600,6.343; 8953200,8.388; 8956800,9.067; 8960400,6.49;
          8964000,4.645; 8967600,5.663; 8971200,6.479; 8974800,6.259; 8978400,5.97266666666667;
          8982000,5.34933333333333; 8985600,5.424; 8989200,5.79866666666667; 8992800,
          4.979; 8996400,4.86566666666667; 9000000,5.598; 9003600,4.60533333333333;
          9007200,4.62033333333333; 9010800,5.21466666666667; 9014400,3.95866666666667;
          9018000,4.41566666666667; 9021600,6.41; 9025200,5.16; 9028800,6.338; 9032400,
          5.866; 9036000,6.302; 9039600,5.861; 9043200,9.80333333333333; 9046800,7.949;
          9050400,6.91766666666666; 9054000,5.74066666666667; 9057600,5.222; 9061200,
          5.15566666666667; 9064800,3.585; 9068400,2.47766666666666; 9072000,3.437;
          9075600,5.31266666666667; 9079200,6.367; 9082800,5.381; 9086400,2.91266666666667;
          9090000,2.22633333333333; 9093600,2.985; 9097200,5.53666666666666; 9100800,
          4.612; 9104400,4.04333333333333; 9108000,4.63766666666667; 9111600,6.05966666666666;
          9115200,5.76133333333333; 9118800,6.78433333333333; 9122400,7.97866666666667;
          9126000,4.385; 9129600,10.3433333333333; 9133200,9.63966666666667; 9136800,
          7.26933333333333; 9140400,6.135; 9144000,8.00866666666667; 9147600,6.55366666666666;
          9151200,5.91433333333333; 9154800,3.493; 9158400,-1.16533333333333; 9162000,
          2.464; 9165600,3.91466666666667; 9169200,2.70833333333333; 9172800,2.058;
          9176400,2.051; 9180000,3.19033333333333; 9183600,2.113; 9187200,2.613; 9190800,
          5.55966666666667; 9194400,4.347; 9198000,6.22733333333333; 9201600,9.16133333333333;
          9205200,8.55666666666667; 9208800,8.583; 9212400,11.032; 9216000,9.97266666666667;
          9219600,8.43; 9223200,7.902; 9226800,7.56866666666667; 9230400,7.44966666666666;
          9234000,11.753; 9237600,10.6456666666667; 9241200,9.89283333333334; 9244800,
          10.1883333333333; 9248400,9.98433333333334; 9252000,9.099; 9255600,8.273;
          9259200,8.433; 9262800,8.239; 9266400,8.318; 9270000,8.17333333333333; 9273600,
          10.648; 9277200,8.64666666666667; 9280800,8.04033333333333; 9284400,6.47966666666667;
          9288000,7.16966666666667; 9291600,9.623; 9295200,7.64866666666667; 9298800,
          8.041; 9302400,8.81666666666667; 9306000,8.91466666666667; 9309600,8.33166666666667;
          9313200,7.78733333333333; 9316800,7.516; 9320400,7.28133333333333; 9324000,
          6.79433333333333; 9327600,6.19916666666667; 9331200,5.693; 9334800,5.02;
          9338400,4.55966666666666; 9342000,4.007; 9345600,3.84666666666667; 9349200,
          3.139; 9352800,2.84666666666667; 9356400,3.58533333333333; 9360000,3.35933333333333;
          9363600,3.25733333333333; 9367200,1.9; 9370800,1.53766666666667; 9374400,
          3.22; 9378000,3.117; 9381600,2.73866666666667; 9385200,2.32933333333333;
          9388800,2.244; 9392400,2.86633333333333; 9396000,2.878; 9399600,1.913; 9403200,
          2.41766666666667; 9406800,1.965; 9410400,2.60666666666667; 9414000,2.0585;
          9417600,0.94; 9421200,1.578; 9424800,1.66666666666667; 9428400,1.726; 9432000,
          1.486; 9435600,0.459333333333334; 9439200,1.53666666666667; 9442800,1.559;
          9446400,1.733; 9450000,1.73166666666667; 9453600,2.733; 9457200,3.69133333333334;
          9460800,3.93033333333333; 9464400,4.432; 9468000,5.508; 9471600,5.44266666666667;
          9475200,6.50366666666667; 9478800,3.89466666666667; 9482400,2.89666666666667;
          9486000,1.76933333333333; 9489600,1.59433333333333; 9493200,2.64533333333333;
          9496800,2.35533333333333; 9500400,1.95783333333333; 9504000,4.458; 9507600,
          4.09166666666667; 9511200,2.69133333333333; 9514800,2.086; 9518400,1.76033333333333;
          9522000,-1.85566666666667; 9525600,2.08733333333333; 9529200,3.10566666666667;
          9532800,4.07333333333334; 9536400,3.99566666666667; 9540000,5.56233333333334;
          9543600,6.48633333333333; 9547200,6.728; 9550800,7.63266666666667; 9554400,
          5.59333333333334; 9558000,7.92766666666667; 9561600,6.46233333333333; 9565200,
          5.65666666666667; 9568800,6.14366666666666; 9572400,5.14566666666667; 9576000,
          5.251; 9579600,7.72666666666666; 9583200,6.15733333333333; 9586800,5.21816666666667;
          9590400,6.05066666666667; 9594000,4.724; 9597600,5.72966666666666; 9601200,
          5.355; 9604800,4.468; 9608400,3.197; 9612000,4.63466666666667; 9615600,3.29633333333333;
          9619200,4.82566666666667; 9622800,6.51466666666667; 9626400,6.824; 9630000,
          7.72366666666666; 9633600,9.40766666666667; 9637200,9.49533333333333; 9640800,
          8.66166666666667; 9644400,6.72; 9648000,8.16633333333334; 9651600,8.943;
          9655200,7.94833333333333; 9658800,7.64566666666667; 9662400,8.05166666666666;
          9666000,10.682; 9669600,11.7186666666667; 9673200,10.5316666666667; 9676800,
          10.4496666666667; 9680400,10.3576666666667; 9684000,10.2026666666667; 9687600,
          10.213; 9691200,10.1973333333333; 9694800,10.0916666666667; 9698400,10.0616666666667;
          9702000,9.93833333333333; 9705600,9.63466666666667; 9709200,8.57766666666667;
          9712800,7.13933333333333; 9716400,6.348; 9720000,8.09133333333333; 9723600,
          6.87066666666667; 9727200,7.46233333333333; 9730800,7.23233333333333; 9734400,
          8.256; 9738000,10.688; 9741600,9.83066666666667; 9745200,9.06866666666667;
          9748800,9.04033333333333; 9752400,8.43066666666667; 9756000,9.956; 9759600,
          9.71033333333333; 9763200,9.898; 9766800,9.723; 9770400,9.881; 9774000,9.91366666666667;
          9777600,9.955; 9781200,10.0743333333333; 9784800,10.102; 9788400,9.839;
          9792000,10.4943333333333; 9795600,10.0216666666667; 9799200,10.278; 9802800,
          10.7973333333333; 9806400,10.1066666666667; 9810000,9.02933333333333; 9813600,
          9.215; 9817200,8.74533333333334; 9820800,8.616; 9824400,7.59466666666667;
          9828000,6.264; 9831600,5.93433333333333; 9835200,4.90466666666667; 9838800,
          4.27166666666667; 9842400,4.53366666666667; 9846000,2.78783333333333; 9849600,
          1.871; 9853200,1.71333333333334; 9856800,1.025; 9860400,0.214666666666665;
          9864000,-0.848333333333334; 9867600,-1.079; 9871200,-2.446; 9874800,-2.78833333333333;
          9878400,-1.211; 9882000,-1.93833333333333; 9885600,-2.469; 9889200,-2.433;
          9892800,-1.87166666666667; 9896400,-2.17033333333333; 9900000,-2.838; 9903600,
          -2.59733333333333; 9907200,-2.728; 9910800,-3.54633333333333; 9914400,-3.859;
          9918000,-3.567; 9921600,-3.16466666666667; 9925200,-0.467; 9928800,-0.184333333333333;
          9932400,-0.916666666666667; 9936000,-2.01633333333333; 9939600,-2.43166666666667;
          9943200,-1.18433333333333; 9946800,-0.903333333333333; 9950400,-3.54233333333333;
          9954000,-3.01366666666667; 9957600,-4.258; 9961200,-4.12433333333334; 9964800,
          -3.28466666666666; 9968400,-3.42266666666666; 9972000,-3.385; 9975600,-3.44666666666667;
          9979200,-3.106; 9982800,-1.67033333333334; 9986400,-0.483000000000004; 9990000,
          -1.59633333333333; 9993600,-1.511; 9997200,-1.175; 10000800,-0.63466666666667;
          10004400,-0.390666666666665; 10008000,-1.25466666666667; 10011600,-3.19266666666667;
          10015200,-0.492666666666668; 10018800,-1.97133333333333; 10022400,-1.146;
          10026000,-0.939666666666668; 10029600,-0.749666666666665; 10033200,-1.472;
          10036800,-1.09966666666667; 10040400,-0.385333333333332; 10044000,-1.068;
          10047600,-1.55533333333333; 10051200,-0.91733333333333; 10054800,-0.0376666666666683;
          10058400,0.319666666666665; 10062000,-0.421666666666667; 10065600,0.380666666666666;
          10069200,0.656666666666668; 10072800,0.988666666666665; 10076400,1.85866666666667;
          10080000,2.98433333333333; 10083600,4.979; 10087200,4.01; 10090800,2.46933333333333;
          10094400,3.212; 10098000,3.384; 10101600,2.58233333333333; 10105200,2.33083333333333;
          10108800,1.65; 10112400,0.994666666666663; 10116000,0.551333333333334; 10119600,
          1.101; 10123200,1.196; 10126800,-1.73966666666667; 10130400,-1.75433333333333;
          10134000,-2.648; 10137600,-3.73; 10141200,-3.959; 10144800,-3.93566666666667;
          10148400,-4.512; 10152000,-3.27566666666667; 10155600,-1.74366666666666;
          10159200,-2.09566666666667; 10162800,-3.057; 10166400,-0.333333333333334;
          10170000,0.0233333333333352; 10173600,-4.14633333333333; 10177200,-4.25833333333333;
          10180800,-3.606; 10184400,-2.376; 10188000,-2.702; 10191600,-2.66116666666667;
          10195200,-2.656; 10198800,-2.86666666666667; 10202400,-3.09033333333333;
          10206000,-1.965; 10209600,-2.617; 10213200,-3.62266666666667; 10216800,-3.69633333333333;
          10220400,-3.881; 10224000,-3.12666666666667; 10227600,-2.51566666666667;
          10231200,-2.176; 10234800,-1.34233333333333; 10238400,-0.767666666666667;
          10242000,-0.323666666666666; 10245600,0.182333333333332; 10249200,-0.345333333333333;
          10252800,0.526333333333334; 10256400,-0.727666666666666; 10260000,-1.42033333333333;
          10263600,-1.22633333333333; 10267200,0.529666666666667; 10270800,0.802333333333332;
          10274400,-0.892999999999998; 10278000,-0.640000000000001; 10281600,-1.31233333333333;
          10285200,-1.32766666666666; 10288800,-1.35466666666666; 10292400,-1.636;
          10296000,-2.10133333333334; 10299600,-4.25633333333333; 10303200,-1.96966666666667;
          10306800,-1.30433333333333; 10310400,-1.553; 10314000,-2.45266666666667;
          10317600,-0.836; 10321200,0.483333333333334; 10324800,1.14366666666666;
          10328400,2.52233333333333; 10332000,2.45366666666666; 10335600,2.44; 10339200,
          5.21166666666667; 10342800,5.474; 10346400,3.842; 10350000,2.317; 10353600,
          1.79766666666667; 10357200,1.283; 10360800,0.868000000000001; 10364400,1.35233333333333;
          10368000,0.843666666666667; 10371600,0.933666666666669; 10375200,0.734666666666671;
          10378800,0.738333333333335; 10382400,0.119999999999996; 10386000,-0.909333333333334;
          10389600,-0.611666666666665; 10393200,0.881; 10396800,4.088; 10400400,1.241;
          10404000,6.111; 10407600,6.06366666666667; 10411200,3.583; 10414800,4.75;
          10418400,5.02266666666666; 10422000,5.399; 10425600,4.74566666666667; 10429200,
          4.22966666666667; 10432800,4.66833333333333; 10436400,4.299; 10440000,3.34866666666667;
          10443600,4.096; 10447200,3.88966666666666; 10450800,4.022])
      annotation (Placement(transformation(extent={{-10,20},{-2,28}})));
    Modelica.Blocks.Sources.TimeTable CeilHei(table=[0,143.014666666667; 3600,140.550666666667;
          7200,140.037333333333; 10800,143.579333333334; 14400,140.704666666667; 18000,
          140.037333333333; 21600,139.883333333333; 25200,137.675999999999; 28800,
          140.037333333334; 32400,246.451333333333; 36000,349.888; 39600,453.992;
          43200,760.554666666666; 46800,801.364666666667; 50400,775.954666666667;
          54000,796.231333333334; 57600,781.036666666667; 61200,714.149333333333;
          64800,620.671333333333; 68400,301.788666666667; 72000,273.401333333333;
          75600,286.902; 79200,314.724666666666; 82800,245.322; 86400,234.285333333333;
          90000,229.922; 93600,198.557333333333; 97200,179.102; 100800,163.342666666666;
          104400,158.568666666666; 108000,143.938666666667; 111600,138.240666666667;
          115200,134.647333333333; 118800,126.690666666667; 122400,118.426; 126000,
          118.888; 129600,122.532666666667; 133200,124.124; 136800,152.049333333333;
          140400,211.75; 144000,358.460666666666; 147600,529.400666666667; 151200,
          394.188666666667; 154800,303.123333333334; 158400,228.998; 162000,242.242;
          165600,251.841333333333; 169200,235.62; 172800,256.358666666667; 176400,
          274.838666666667; 180000,281.974; 183600,263.750666666667; 187200,247.016000000001;
          190800,220.117333333333; 194400,200.2; 198000,202.664; 201600,179.41; 205200,
          164.728666666666; 208800,290.136; 212400,439.875333333333; 216000,544.287333333333;
          219600,597.725333333333; 223200,768.254666666666; 226800,889.555333333333;
          230400,736.017333333334; 234000,929.236; 237600,1040.47533333333; 241200,
          840.429333333334; 244800,483.098; 248400,505.12; 252000,368.368; 255600,
          351.992666666667; 259200,484.278666666667; 262800,505.274; 266400,538.024666666666;
          270000,553.527333333333; 273600,624.932; 277200,511.074666666667; 280800,
          424.629333333333; 284400,502.091333333333; 288000,856.753333333334; 291600,
          1278.354; 295200,1309.308; 298800,1303.61; 302400,1076.922; 306000,916.146;
          309600,986.678; 313200,912.552666666667; 316800,838.324666666666; 320400,
          888.066666666666; 324000,802.494; 327600,692.743333333333; 331200,687.250666666667;
          334800,483.046666666667; 338400,463.54; 342000,464.772; 345600,575.395333333333;
          349200,573.136666666667; 352800,341.623333333333; 356400,272.682666666667;
          360000,462.616; 363600,576.114; 367200,605.630666666667; 370800,595.98;
          374400,672.364; 378000,699.057333333333; 381600,771.283333333334; 385200,
          907.984; 388800,1045.76266666667; 392400,1068.298; 396000,1081.542; 399600,
          1128.10133333333; 403200,977.694666666667; 406800,943.352666666667; 410400,
          889.093333333333; 414000,869.843333333333; 417600,873.642; 421200,653.114;
          424800,723.03; 428400,712.404; 432000,764.558666666667; 435600,735.35; 439200,
          812.812; 442800,743.204; 446400,739.559333333333; 450000,746.386666666667;
          453600,751.109333333334; 457200,678.883333333333; 460800,835.552666666667;
          464400,1037.036; 468000,1083.90333333333; 471600,1098.636; 475200,922.973333333334;
          478800,811.066666666666; 482400,667.795333333333; 486000,657.272000000001;
          489600,549.369333333333; 493200,457.534; 496800,527.039333333333; 500400,
          449.166666666667; 504000,421.806; 507600,445.881333333333; 511200,519.031333333334;
          514800,561.894666666667; 518400,527.501333333333; 522000,537.665333333333;
          525600,611.996; 529200,660.044; 532800,659.582; 536400,760.708666666666;
          540000,659.530666666667; 543600,625.034666666667; 547200,538.23; 550800,
          493.210666666667; 554400,498.138666666667; 558000,451.630666666667; 561600,
          481.712; 565200,402.556; 568800,359.898; 572400,246.451333333333; 576000,
          257.539333333333; 579600,344.087333333333; 583200,381.355333333333; 586800,
          408.356666666666; 590400,346.192; 594000,334.642; 597600,400.964666666667;
          601200,358.512; 604800,356.612666666667; 608400,408.767333333333; 612000,
          407.33; 615600,408.408; 619200,379.815333333333; 622800,369.446; 626400,
          475.295333333334; 630000,536.022666666666; 633600,622.878666666667; 637200,
          700.186666666667; 640800,730.884; 644400,706.706; 648000,701.572666666667;
          651600,697.466; 655200,650.393333333333; 658800,584.481333333333; 662400,
          696.285333333333; 666000,709.632; 669600,787.299333333333; 673200,861.835333333333;
          676800,720.72; 680400,715.792; 684000,763.018666666666; 687600,602.345333333333;
          691200,482.482; 694800,314.981333333334; 698400,230.486666666667; 702000,
          213.752; 705600,197.992666666666; 709200,220.322666666666; 712800,199.070666666666;
          716400,170.272666666667; 720000,151.074; 723600,137.676; 727200,124.534666666667;
          730800,116.167333333333; 734400,140.704666666667; 738000,443.674; 741600,
          540.232; 745200,705.114666666667; 748800,646.235333333333; 752400,679.448;
          756000,537.511333333333; 759600,665.947333333333; 763200,669.951333333333;
          766800,612.047333333333; 770400,584.224666666667; 774000,627.498666666667;
          777600,647.57; 781200,743.922666666666; 784800,765.174666666666; 788400,
          577.243333333333; 792000,525.653333333333; 795600,715.227333333333; 799200,
          695.515333333333; 802800,480.788; 806400,281.768666666667; 810000,272.272;
          813600,283.513999999999; 817200,334.025999999999; 820800,438.335333333334;
          824400,439.618666666666; 828000,460.922; 831600,592.540666666667; 835200,
          685.094666666667; 838800,731.140666666667; 842400,839.967333333333; 846000,
          1034.00733333333; 849600,1170.34866666667; 853200,786.683333333334; 856800,
          676.778666666667; 860400,638.997333333333; 864000,719.642; 867600,816.508;
          871200,967.222666666667; 874800,810.296666666667; 878400,482.02; 882000,
          467.544; 885600,744.59; 889200,832.883333333333; 892800,1277.01933333333;
          896400,1462.12733333333; 900000,1536.35533333333; 903600,1309.616; 907200,
          1559.76333333333; 910800,1705.242; 914400,1838.04133333333; 918000,1646.20866666667;
          921600,1737.68466666667; 925200,1760.57933333333; 928800,1684.19533333333;
          932400,1656.98866666667; 936000,1681.78266666667; 939600,1707.244; 943200,
          1675.26333333333; 946800,1629.42266666667; 950400,1669.15466666667; 954000,
          1656.47533333333; 957600,1283.128; 961200,863.324; 964800,986.678; 968400,
          1033.802; 972000,1284.25733333333; 975600,1296.834; 979200,1403.50466666667;
          982800,1375.78466666667; 986400,1092.06533333333; 990000,991.554666666666;
          993600,1090.166; 997200,1193.39733333333; 1000800,932.624; 1004400,670.208;
          1008000,1182.30933333333; 1011600,1279.17533333333; 1015200,1396.26666666667;
          1018800,1526.49933333333; 1022400,1079.79666666667; 1026000,1287.38866666667;
          1029600,1242.98533333333; 1033200,914.400666666667; 1036800,871.794; 1040400,
          811.118; 1044000,930.468; 1047600,1054.54066666667; 1051200,1051.974; 1054800,
          1252.73866666667; 1058400,958.034; 1062000,674.314666666667; 1065600,508.2;
          1069200,566.771333333333; 1072800,986.37; 1076400,1254.792; 1080000,1373.93666666667;
          1083600,1453.70866666667; 1087200,1534.61; 1090800,1371.524; 1094400,1050.53666666667;
          1098000,804.496; 1101600,724.826666666667; 1105200,622.211333333333; 1108800,
          732.064666666667; 1112400,872.923333333333; 1116000,938.784; 1119600,983.084666666667;
          1123200,1059.982; 1126800,996.739333333333; 1130400,1029.90066666667; 1134000,
          1085.75133333333; 1137600,1145.19533333333; 1141200,1152.94666666667; 1144800,
          948.383333333333; 1148400,439.516; 1152000,327.25; 1155600,281.204; 1159200,
          266.882; 1162800,271.091333333334; 1166400,277.713333333333; 1170000,285.875333333333;
          1173600,269.654; 1177200,260.362666666667; 1180800,247.786; 1184400,232.848;
          1188000,229.254666666667; 1191600,238.956666666666; 1195200,262.724000000001;
          1198800,320.166000000001; 1202400,376.068; 1206000,353.070666666666; 1209600,
          508.662; 1213200,539.359333333333; 1216800,541.515333333333; 1220400,706.962666666667;
          1224000,508.251333333333; 1227600,493.108; 1231200,507.429999999999; 1234800,
          422.011333333333; 1238400,437.976; 1242000,885.346; 1245600,1254.792; 1249200,
          1534.764; 1252800,1721.46333333333; 1256400,1872.948; 1260000,1903.64533333333;
          1263600,1852.004; 1267200,1536.15; 1270800,1331.27866666667; 1274400,1319.164;
          1278000,1189.39333333333; 1281600,807.370666666666; 1285200,498.292666666666;
          1288800,601.062; 1292400,537.768; 1296000,497.471333333333; 1299600,497.009333333333;
          1303200,355.534666666667; 1306800,303.790666666667; 1310400,292.240666666667;
          1314000,285.362; 1317600,270.167333333333; 1321200,257.744666666666; 1324800,
          256.512666666667; 1328400,319.601333333333; 1332000,443.263333333333; 1335600,
          672.569333333334; 1339200,870.921333333334; 1342800,1261.46533333333; 1346400,
          1394.316; 1350000,911.218; 1353600,802.750666666666; 1357200,1032.57; 1360800,
          1130.36; 1364400,1238.468; 1368000,1097.45533333333; 1371600,928.722666666666;
          1375200,784.989333333333; 1378800,663.072666666667; 1382400,424.886; 1386000,
          394.445333333334; 1389600,362.567333333333; 1393200,347.064666666667; 1396800,
          340.442666666667; 1400400,317.548; 1404000,325.864; 1407600,322.784; 1411200,
          348.553333333333; 1414800,393.521333333333; 1418400,570.210666666666; 1422000,
          669.694666666666; 1425600,790.328; 1429200,974.974; 1432800,992.016666666667;
          1436400,1087.086; 1440000,992.786666666667; 1443600,859.782; 1447200,821.282;
          1450800,724.108; 1454400,666.974000000001; 1458000,759.425333333333; 1461600,
          729.754666666666; 1465200,757.936666666667; 1468800,853.878666666667; 1472400,
          939.656666666666; 1476000,785.708; 1479600,702.804666666667; 1483200,768.768;
          1486800,880.418; 1490400,650.906666666667; 1494000,607.222; 1497600,715.535333333333;
          1501200,1024.92133333333; 1504800,1216.85666666667; 1508400,1274.504; 1512000,
          1259.05266666667; 1515600,1256.486; 1519200,1247.65666666667; 1522800,1210.49133333333;
          1526400,1175.89266666667; 1530000,1135.288; 1533600,967.325333333333; 1537200,
          579.04; 1540800,476.527333333333; 1544400,451.682; 1548000,414.054666666666;
          1551600,376.940666666667; 1555200,354.610666666667; 1558800,357.485333333333;
          1562400,360.616666666667; 1566000,369.240666666667; 1569600,349.323333333333;
          1573200,335.822666666667; 1576800,364.415333333333; 1580400,361.284; 1584000,
          413.130666666667; 1587600,458.817333333333; 1591200,527.604; 1594800,711.326;
          1598400,791.714; 1602000,817.842666666666; 1605600,845.254666666666; 1609200,
          799.927333333334; 1612800,695.258666666667; 1616400,571.750666666667; 1620000,
          488.642; 1623600,450.296; 1627200,458.868666666666; 1630800,373.706666666666;
          1634400,380.482666666667; 1638000,395.882666666666; 1641600,423.140666666667;
          1645200,414.876; 1648800,367.341333333334; 1652400,442.134; 1656000,392.597333333333;
          1659600,404.455333333333; 1663200,386.334666666667; 1666800,357.588; 1670400,
          400.297333333333; 1674000,603.320666666666; 1677600,775.236; 1681200,651.676666666667;
          1684800,671.44; 1688400,647.878; 1692000,680.885333333333; 1695600,665.228666666667;
          1699200,591.924666666666; 1702800,580.272; 1706400,672.620666666666; 1710000,
          711.890666666666; 1713600,710.248; 1717200,696.388; 1720800,686.942666666667;
          1724400,688.585333333333; 1728000,762.197333333333; 1731600,786.426666666667;
          1735200,767.382; 1738800,711.531333333334; 1742400,674.417333333333; 1746000,
          661.173333333333; 1749600,656.912666666667; 1753200,659.992666666667; 1756800,
          708.092; 1760400,760.657333333334; 1764000,887.296666666666; 1767600,1034.36666666667;
          1771200,1124.91866666667; 1774800,1255.51066666667; 1778400,1332.81866666667;
          1782000,1332.92133333333; 1785600,1351.658; 1789200,1281.126; 1792800,1237.39;
          1796400,1170.50266666667; 1800000,1148.42933333333; 1803600,1101.408; 1807200,
          807.781333333334; 1810800,692.024666666667; 1814400,528.322666666667; 1818000,
          444.033333333334; 1821600,434.639333333333; 1825200,421.857333333333; 1828800,
          456.250666666667; 1832400,405.892666666667; 1836000,403.736666666667; 1839600,
          436.128; 1843200,606.606; 1846800,1008.13533333333; 1850400,1224.19733333333;
          1854000,1460.33066666667; 1857600,1641.486; 1861200,1705.90933333333; 1864800,
          1793.58666666667; 1868400,1650.572; 1872000,1231.94866666667; 1875600,1056.08066666667;
          1879200,1015.63; 1882800,976.822; 1886400,1009.26466666667; 1890000,907.265333333333;
          1893600,877.594666666666; 1897200,836.528; 1900800,918.507333333333; 1904400,
          817.175333333333; 1908000,800.697333333333; 1911600,840.07; 1915200,662.456666666666;
          1918800,735.093333333333; 1922400,754.6; 1926000,708.554; 1929600,722.26;
          1933200,810.604666666667; 1936800,1019.942; 1940400,1283.48733333333; 1944000,
          1370.292; 1947600,1339.74866666667; 1951200,1356.68866666667; 1954800,1307.306;
          1958400,1059.058; 1962000,882.368666666666; 1965600,1079.89933333333; 1969200,
          1004.90133333333; 1972800,915.889333333333; 1976400,649.674666666667; 1980000,
          513.436; 1983600,457.842; 1987200,402.812666666667; 1990800,356.612666666667;
          1994400,344.292666666667; 1998000,342.496; 2001600,337.362666666667; 2005200,
          320.166; 2008800,309.591333333333; 2012400,308.154; 2016000,437.052; 2019600,
          729.292666666667; 2023200,1146.01666666667; 2026800,1350.118; 2030400,1620.542;
          2034000,1618.232; 2037600,1742.51; 2041200,1528.86066666667; 2044800,1126.51;
          2048400,1176.714; 2052000,913.271333333333; 2055600,785.913333333333; 2059200,
          685.813333333333; 2062800,774.312; 2066400,702.702; 2070000,642.693333333333;
          2073600,566.104; 2077200,514.411333333333; 2080800,479.453333333334; 2084400,
          409.845333333333; 2088000,389.158; 2091600,380.123333333334; 2095200,345.832666666667;
          2098800,365.904; 2102400,660.865333333333; 2106000,893.713333333333; 2109600,
          1182.20666666667; 2113200,1460.58733333333; 2116800,1642.102; 2120400,1568.952;
          2124000,1597.49333333333; 2127600,1493.85133333333; 2131200,1188.36666666667;
          2134800,1021.174; 2138400,837.862666666667; 2142000,767.69; 2145600,738.738;
          2149200,717.794; 2152800,605.066; 2156400,541.156; 2160000,484.997333333333;
          2163600,461.127333333334; 2167200,400.913333333333; 2170800,391.006; 2174400,
          386.848; 2178000,373.347333333333; 2181600,360.257333333334; 2185200,361.797333333333;
          2188800,494.494; 2192400,721.182; 2196000,993.351333333333; 2199600,1279.22666666667;
          2203200,1389.08; 2206800,1301.146; 2210400,1330.76533333333; 2214000,1325.11866666667;
          2217600,1049.15066666667; 2221200,820.974000000001; 2224800,657.118; 2228400,
          595.518; 2232000,549.523333333333; 2235600,457.688; 2239200,518.569333333333;
          2242800,423.243333333333; 2246400,401.478; 2250000,405.841333333334; 2253600,
          347.372666666667; 2257200,329.868; 2260800,328.071333333334; 2264400,321.192666666667;
          2268000,312.209333333333; 2271600,288.185333333334; 2275200,464.104666666667;
          2278800,801.672666666666; 2282400,1001.25666666667; 2286000,1003.51533333333;
          2289600,1027.59066666667; 2293200,1222.298; 2296800,1253.81666666667; 2300400,
          1224.454; 2304000,1123.99466666667; 2307600,916.710666666667; 2311200,815.584;
          2314800,632.837333333333; 2318400,521.084666666667; 2322000,465.85; 2325600,
          403.634; 2329200,343.882; 2332800,333.102; 2336400,320.012; 2340000,293.216;
          2343600,269.346; 2347200,269.962; 2350800,262.57; 2354400,268.473333333334;
          2358000,265.085333333333; 2361600,332.588666666667; 2365200,546.443333333333;
          2368800,794.486; 2372400,1052.898; 2376000,1086.26466666667; 2379600,1143.912;
          2383200,1170.45133333333; 2386800,1098.636; 2390400,1055.61866666667; 2394000,
          964.04; 2397600,849.053333333333; 2401200,754.189333333333; 2404800,925.642666666667;
          2408400,1000.89733333333; 2412000,910.91; 2415600,818.253333333333; 2419200,
          806.395333333333; 2422800,816.2; 2426400,835.347333333333; 2430000,815.635333333333;
          2433600,519.852666666667; 2437200,380.944666666667; 2440800,319.139333333333;
          2444400,295.834; 2448000,302.250666666667; 2451600,319.190666666667; 2455200,
          597.314666666667; 2458800,807.114; 2462400,771.848; 2466000,853.468; 2469600,
          820.871333333333; 2473200,841.148; 2476800,784.886666666667; 2480400,621.236;
          2484000,430.738; 2487600,343.368666666666; 2491200,315.956666666666; 2494800,
          328.738666666667; 2498400,346.962; 2502000,387.156; 2505600,356.202; 2509200,
          333.615333333333; 2512800,260.465333333333; 2516400,233.002; 2520000,224.172666666666;
          2523600,220.066; 2527200,203.536666666667; 2530800,191.73; 2534400,140.448;
          2538000,185.826666666667; 2541600,896.28; 2545200,1223.94066666667; 2548800,
          1473.88266666667; 2552400,1756.31866666667; 2556000,1635.99333333333; 2559600,
          1590.61466666667; 2563200,1643.28266666667; 2566800,1496.98266666667; 2570400,
          1481.83933333333; 2574000,1256.22933333333; 2577600,1111.11; 2581200,774.979333333334;
          2584800,468.006; 2588400,415.646; 2592000,477.810666666667; 2595600,456.815333333333;
          2599200,416.005333333333; 2602800,371.961333333333; 2606400,402.248; 2610000,
          394.086; 2613600,366.930666666666; 2617200,406.457333333333; 2620800,388.952666666667;
          2624400,379.969333333333; 2628000,392.340666666667; 2631600,346.910666666667;
          2635200,315.084; 2638800,332.434666666667; 2642400,331.202666666667; 2646000,
          303.893333333333; 2649600,314.314; 2653200,393.059333333333; 2656800,348.245333333333;
          2660400,382.330666666667; 2664000,349.528666666667; 2667600,318.78; 2671200,
          306.46; 2674800,329.457333333334; 2678400,336.592666666666; 2682000,276.584;
          2685600,252.662666666667; 2689200,243.217333333334; 2692800,238.905333333333;
          2696400,210.518; 2700000,178.999333333333; 2703600,160.468; 2707200,160.211333333333;
          2710800,260.003333333333; 2714400,392.186666666667; 2718000,530.222; 2721600,
          935.55; 2725200,1091.706; 2728800,1106.13066666667; 2732400,1125.79133333333;
          2736000,993.146; 2739600,837.349333333333; 2743200,644.130666666666; 2746800,
          414.516666666666; 2750400,375.606; 2754000,295.423333333333; 2757600,285.002666666667;
          2761200,296.963333333333; 2764800,322.989333333333; 2768400,346.602666666666;
          2772000,326.531333333334; 2775600,325.915333333333; 2779200,272.323333333333;
          2782800,263.750666666667; 2786400,237.724666666666; 2790000,232.642666666667;
          2793600,251.328; 2797200,445.778666666666; 2800800,615.846; 2804400,801.210666666667;
          2808000,925.334666666667; 2811600,922.716666666666; 2815200,943.763333333333;
          2818800,930.416666666667; 2822400,905.52; 2826000,788.942; 2829600,698.338666666667;
          2833200,611.431333333334; 2836800,581.401333333333; 2840400,505.428; 2844000,
          595.723333333333; 2847600,490.336; 2851200,464.156; 2854800,368.265333333333;
          2858400,355.483333333334; 2862000,315.597333333333; 2865600,428.992666666667;
          2869200,490.849333333333; 2872800,346.962; 2876400,273.760666666667; 2880000,
          457.636666666667; 2883600,1110.85333333333; 2887200,999.203333333334; 2890800,
          1089.13933333333; 2894400,929.39; 2898000,1325.88866666667; 2901600,1126.56133333333;
          2905200,674.828; 2908800,664.099333333334; 2912400,509.432; 2916000,518.107333333333;
          2919600,566.668666666667; 2923200,648.802; 2926800,587.253333333333; 2930400,
          470.264666666667; 2934000,394.599333333333; 2937600,374.733333333334; 2941200,
          364.312666666667; 2944800,348.964; 2948400,354.508; 2952000,382.536; 2955600,
          387.515333333333; 2959200,307.384; 2962800,338.954; 2966400,555.683333333334;
          2970000,803.982666666667; 2973600,1062.70266666667; 2977200,1111.46933333333;
          2980800,1347.962; 2984400,1432.30266666667; 2988000,1361.206; 2991600,1307.614;
          2995200,1324.4; 2998800,1377.068; 3002400,1229.94666666667; 3006000,924.924;
          3009600,765.585333333333; 3013200,647.313333333333; 3016800,615.178666666667;
          3020400,614.152; 3024000,531.710666666667; 3027600,483.252; 3031200,444.29;
          3034800,425.296666666667; 3038400,399.116666666667; 3042000,343.060666666666;
          3045600,297.887333333333; 3049200,293.010666666666; 3052800,371.756; 3056400,
          728.317333333334; 3060000,965.220666666666; 3063600,1085.90533333333; 3067200,
          1223.42733333333; 3070800,1398.83333333333; 3074400,1409.97266666667; 3078000,
          1304.12333333333; 3081600,902.388666666667; 3085200,673.544666666667; 3088800,
          624.983333333333; 3092400,540.642666666667; 3096000,443.930666666667; 3099600,
          392.340666666667; 3103200,328.738666666667; 3106800,296.296; 3110400,280.742;
          3114000,267.549333333333; 3117600,254.459333333333; 3121200,243.730666666667;
          3124800,226.072000000001; 3128400,215.754; 3132000,195.118; 3135600,181.617333333333;
          3139200,166.628; 3142800,147.532; 3146400,138.035333333333; 3150000,184.286666666667;
          3153600,662.559333333333; 3157200,1097.66066666667; 3160800,1326.04266666667;
          3164400,1316.34066666667; 3168000,998.382; 3171600,729.498; 3175200,610.866666666667;
          3178800,588.588; 3182400,465.593333333334; 3186000,520.776666666667; 3189600,
          515.078666666667; 3193200,622.211333333333; 3196800,702.958666666667; 3200400,
          807.884; 3204000,692.692; 3207600,865.685333333333; 3211200,687.918; 3214800,
          774.466; 3218400,753.778666666667; 3222000,879.802; 3225600,784.424666666667;
          3229200,810.553333333333; 3232800,473.242; 3236400,307.589333333333; 3240000,
          236.441333333333; 3243600,214.419333333333; 3247200,207.643333333334; 3250800,
          241.112666666667; 3254400,280.074666666666; 3258000,259.541333333333; 3261600,
          231.102666666667; 3265200,226.790666666667; 3268800,292.651333333333; 3272400,
          344.19; 3276000,430.943333333334; 3279600,428.274000000001; 3283200,395.677333333334;
          3286800,398.552; 3290400,387.002; 3294000,522.316666666666; 3297600,715.33;
          3301200,835.142; 3304800,936.884666666667; 3308400,1006.95466666667; 3312000,
          1040.06466666667; 3315600,1143.09066666667; 3319200,1247.29733333333; 3322800,
          1263.51866666667; 3326400,1282.05; 3330000,1230.56266666667; 3333600,1298.27133333333;
          3337200,1396.934; 3340800,1332.45933333333; 3344400,1418.13466666667; 3348000,
          1414.74666666667; 3351600,1348.27; 3355200,1113.98466666667; 3358800,937.86;
          3362400,1211.41533333333; 3366000,1055.15666666667; 3369600,1011.472; 3373200,
          962.243333333333; 3376800,1027.334; 3380400,973.998666666666; 3384000,1080.56666666667;
          3387600,1178.20266666667; 3391200,1170.81066666667; 3394800,1116.192; 3398400,
          1324.554; 3402000,1411.30733333333; 3405600,1334.05066666667; 3409200,1377.32466666667;
          3412800,1481.83933333333; 3416400,1543.90133333333; 3420000,1460.69; 3423600,
          1115.67866666667; 3427200,910.037333333333; 3430800,941.248; 3434400,1781.26666666667;
          3438000,1610.01866666667; 3441600,1832.08666666667; 3445200,2067.19333333333;
          3448800,1793.58666666667; 3452400,1539.58933333333; 3456000,1286.87533333333;
          3459600,1303.04533333333; 3463200,1515.87333333333; 3466800,1471.21333333333;
          3470400,1629.782; 3474000,1632.554; 3477600,1654.62733333333; 3481200,1567.15533333333;
          3484800,1359.25533333333; 3488400,960.549333333333; 3492000,1094.37533333333;
          3495600,1514.744; 3499200,1616.28133333333; 3502800,1582.14466666667; 3506400,
          1379.89133333333; 3510000,1478.50266666667; 3513600,1482.81466666667; 3517200,
          1428.966; 3520800,1304.48266666667; 3524400,1272.81; 3528000,1008.64866666667;
          3531600,630.373333333333; 3535200,495.315333333333; 3538800,395.882666666667;
          3542400,367.906; 3546000,362.977999999999; 3549600,354.354; 3553200,329.714;
          3556800,313.595333333333; 3560400,314.057333333333; 3564000,363.748; 3567600,
          543.466; 3571200,613.176666666667; 3574800,774.106666666666; 3578400,866.609333333334;
          3582000,1070.04333333333; 3585600,1340.77533333333; 3589200,1667.974; 3592800,
          1229.79266666667; 3596400,1093.60533333333; 3600000,821.487333333333; 3603600,
          536.741333333333; 3607200,442.904; 3610800,397.576666666667; 3614400,374.528;
          3618000,359.795333333334; 3621600,349.939333333333; 3625200,357.690666666667;
          3628800,412.925333333333; 3632400,455.121333333333; 3636000,423.910666666666;
          3639600,494.083333333333; 3643200,531.299999999999; 3646800,601.113333333333;
          3650400,636.174; 3654000,720.874; 3657600,840.994; 3661200,764.456; 3664800,
          644.438666666667; 3668400,556.658666666667; 3672000,585.713333333333; 3675600,
          645.208666666666; 3679200,513.487333333333; 3682800,616.308; 3686400,641.564;
          3690000,723.338; 3693600,920.252666666667; 3697200,1136.10933333333; 3700800,
          1175.43066666667; 3704400,1205.10133333333; 3708000,1263.51866666667; 3711600,
          1340.262; 3715200,1057.672; 3718800,1070.65933333333; 3722400,1132.208;
          3726000,1045.198; 3729600,841.661333333333; 3733200,778.572666666667; 3736800,
          662.456666666666; 3740400,786.94; 3744000,743.82; 3747600,571.032; 3751200,
          653.781333333334; 3754800,919.123333333333; 3758400,1072.55866666667; 3762000,
          1144.11733333333; 3765600,1557.556; 3769200,1548.778; 3772800,1253.50866666667;
          3776400,1591.23066666667; 3780000,1574.13666666667; 3783600,1641.69133333333;
          3787200,1631.322; 3790800,1672.54266666667; 3794400,1676.34133333333; 3798000,
          1546.93; 3801600,1427.272; 3805200,1312.74733333333; 3808800,1042.63133333333;
          3812400,926.977333333333; 3816000,889.760666666667; 3819600,988.320666666666;
          3823200,860.449333333333; 3826800,928.414666666667; 3830400,925.488666666667;
          3834000,994.891333333333; 3837600,845.665333333333; 3841200,954.902666666667;
          3844800,1062.446; 3848400,866.712; 3852000,981.288; 3855600,1069.58133333333;
          3859200,999.254666666666; 3862800,690.433333333334; 3866400,561.894666666667;
          3870000,506.916666666667; 3873600,385.051333333333; 3877200,342.136666666666;
          3880800,327.866; 3884400,315.597333333333; 3888000,323.862; 3891600,350.247333333333;
          3895200,365.647333333333; 3898800,403.018; 3902400,366.879333333334; 3906000,
          344.395333333333; 3909600,383.819333333333; 3913200,664.766666666667; 3916800,
          910.858666666667; 3920400,940.991333333333; 3924000,1047.91866666667; 3927600,
          1053.206; 3931200,1150.996; 3934800,1315.16; 3938400,1432.76466666667; 3942000,
          1542.36133333333; 3945600,1579.37266666667; 3949200,1445.80333333333; 3952800,
          1475.32; 3956400,1479.37533333333; 3960000,1434.40733333333; 3963600,1398.88466666667;
          3967200,1328.712; 3970800,1268.036; 3974400,1300.27333333333; 3978000,1269.21666666667;
          3981600,1243.55; 3985200,1205.25533333333; 3988800,1110.28866666667; 3992400,
          1073.73933333333; 3996000,1133.23466666667; 3999600,1156.33466666667; 4003200,
          1225.78866666667; 4006800,1308.02466666667; 4010400,1301.81333333333; 4014000,
          1282.666; 4017600,1292.57333333333; 4021200,1285.79733333333; 4024800,1248.17;
          4028400,1218.80733333333; 4032000,1177.58666666667; 4035600,1161.57066666667;
          4039200,1133.85066666667; 4042800,1125.84266666667; 4046400,1138.368; 4050000,
          1140.62666666667; 4053600,1120.91466666667; 4057200,1136.31466666667; 4060800,
          1070.71066666667; 4064400,1027.59066666667; 4068000,998.792666666666; 4071600,
          985.754; 4075200,967.633333333333; 4078800,937.449333333334; 4082400,853.519333333334;
          4086000,822.822; 4089600,831.651333333333; 4093200,867.276666666667; 4096800,
          869.740666666667; 4100400,941.299333333333; 4104000,1024.254; 4107600,1100.484;
          4111200,1145.04133333333; 4114800,1187.34; 4118400,1186.31333333333; 4122000,
          1090.628; 4125600,1115.16533333333; 4129200,1051.15266666667; 4132800,930.93;
          4136400,794.332; 4140000,815.019333333334; 4143600,786.375333333333; 4147200,
          789.814666666667; 4150800,711.48; 4154400,781.190666666667; 4158000,713.430666666667;
          4161600,614.819333333333; 4165200,597.622666666666; 4168800,606.349333333333;
          4172400,597.982; 4176000,674.160666666666; 4179600,898.179333333334; 4183200,
          1110.08333333333; 4186800,1239.854; 4190400,1420.804; 4194000,1549.856;
          4197600,1465.464; 4201200,1387.48866666667; 4204800,1406.636; 4208400,1303.66133333333;
          4212000,1259.66866666667; 4215600,1190.574; 4219200,1204.94733333333; 4222800,
          1089.088; 4226400,1132.92666666667; 4230000,1325.06733333333; 4233600,1259.72;
          4237200,1160.64666666667; 4240800,988.372; 4244400,809.988666666667; 4248000,
          674.930666666667; 4251600,651.830666666667; 4255200,554.040666666667; 4258800,
          615.486666666667; 4262400,736.479333333333; 4266000,799.465333333333; 4269600,
          844.638666666667; 4273200,1106.28466666667; 4276800,1321.782; 4280400,1542.31;
          4284000,1645.182; 4287600,1485.38133333333; 4291200,1339.85133333333; 4294800,
          1163.21333333333; 4298400,1107.106; 4302000,954.543333333333; 4305600,878.005333333334;
          4309200,763.429333333334; 4312800,699.365333333333; 4316400,626.728666666667;
          4320000,600.446; 4323600,610.712666666667; 4327200,616.564666666667; 4330800,
          570.210666666667; 4334400,562.408; 4338000,571.545333333333; 4341600,755.164666666667;
          4345200,799.26; 4348800,1169.06533333333; 4352400,1447.292; 4356000,1669.25733333333;
          4359600,1804.00733333333; 4363200,1912.32066666667; 4366800,2027.92333333333;
          4370400,1985.62466666667; 4374000,2056.208; 4377600,2032.59466666667; 4381200,
          1985.984; 4384800,1808.01133333333; 4388400,1612.534; 4392000,1478.092;
          4395600,1363.56733333333; 4399200,1204.63933333333; 4402800,970.610666666667;
          4406400,879.032; 4410000,690.022666666667; 4413600,655.064666666667; 4417200,
          561.586666666667; 4420800,536.638666666667; 4424400,518.877333333334; 4428000,
          505.684666666667; 4431600,520.160666666667; 4435200,911.834; 4438800,1203.76666666667;
          4442400,1488.872; 4446000,1615.35733333333; 4449600,1707.65466666667; 4453200,
          1523.31666666667; 4456800,1644.77133333333; 4460400,1607.914; 4464000,1393.854;
          4467600,1121.63333333333; 4471200,900.489333333334; 4474800,712.404; 4478400,
          775.133333333333; 4482000,633.864; 4485600,569.03; 4489200,571.083333333333;
          4492800,613.69; 4496400,492.902666666667; 4500000,386.745333333333; 4503600,
          397.474000000001; 4507200,373.398666666667; 4510800,336.952; 4514400,309.54;
          4518000,348.348; 4521600,522.573333333334; 4525200,608.197333333333; 4528800,
          835.860666666667; 4532400,757.166666666667; 4536000,886.116; 4539600,905.674;
          4543200,948.896666666667; 4546800,908.394666666667; 4550400,810.604666666667;
          4554000,601.164666666667; 4557600,502.553333333333; 4561200,361.386666666667;
          4564800,400.759333333333; 4568400,325.658666666667; 4572000,314.827333333333;
          4575600,266.163333333333; 4579200,251.327999999999; 4582800,231.410666666667;
          4586400,230.589333333333; 4590000,289.366; 4593600,353.532666666667; 4597200,
          476.527333333333; 4600800,543.106666666667; 4604400,373.193333333334; 4608000,
          333.872; 4611600,339.159333333333; 4615200,436.692666666667; 4618800,690.638666666667;
          4622400,698.133333333333; 4626000,686.994; 4629600,626.112666666667; 4633200,
          519.801333333333; 4636800,530.119333333334; 4640400,580.528666666667; 4644000,
          464.926; 4647600,407.843333333333; 4651200,453.427333333334; 4654800,648.494;
          4658400,565.744666666666; 4662000,659.017333333333; 4665600,792.792; 4669200,
          797.668666666666; 4672800,834.68; 4676400,803.982666666666; 4680000,804.547333333333;
          4683600,852.39; 4687200,863.17; 4690800,935.242; 4694400,1032.46733333333;
          4698000,1136.77666666667; 4701600,1181.89866666667; 4705200,1075.48466666667;
          4708800,1024.04866666667; 4712400,1025.07533333333; 4716000,981.801333333333;
          4719600,998.792666666667; 4723200,900.181333333333; 4726800,822.154666666667;
          4730400,659.582; 4734000,558.198666666667; 4737600,645.978666666667; 4741200,
          649.469333333333; 4744800,495.931333333333; 4748400,477.194666666667; 4752000,
          380.636666666667; 4755600,344.087333333333; 4759200,317.496666666667; 4762800,
          292.754; 4766400,288.390666666667; 4770000,261.902666666667; 4773600,226.688;
          4777200,198.198; 4780800,209.44; 4784400,280.485333333333; 4788000,415.132666666667;
          4791600,601.780666666667; 4795200,532.018666666667; 4798800,449.936666666667;
          4802400,427.812; 4806000,507.122; 4809600,532.891333333333; 4813200,554.913333333333;
          4816800,488.025999999999; 4820400,499.473333333333; 4824000,406.149333333333;
          4827600,438.9; 4831200,494.904666666667; 4834800,507.276; 4838400,536.125333333333;
          4842000,512.101333333334; 4845600,586.791333333333; 4849200,597.109333333333;
          4852800,614.049333333333; 4856400,627.242; 4860000,721.644; 4863600,741.766666666667;
          4867200,729.498; 4870800,844.638666666667; 4874400,1050.33133333333; 4878000,
          1179.948; 4881600,1382.50933333333; 4885200,1448.62666666667; 4888800,1526.65333333333;
          4892400,1449.03733333333; 4896000,1374.34733333333; 4899600,1056.38866666667;
          4903200,805.266; 4906800,667.949333333333; 4910400,596.852666666667; 4914000,
          522.368; 4917600,453.940666666667; 4921200,426.528666666666; 4924800,441.569333333333;
          4928400,760.246666666667; 4932000,823.951333333333; 4935600,882.112; 4939200,
          858.447333333333; 4942800,867.482; 4946400,911.218; 4950000,943.558; 4953600,
          1000.692; 4957200,1066.70666666667; 4960800,1212.442; 4964400,1310.28333333333;
          4968000,1363.054; 4971600,1438.56533333333; 4975200,1525.31866666667; 4978800,
          1574.54733333333; 4982400,1551.90933333333; 4986000,1461.25466666667; 4989600,
          1424.14066666667; 4993200,1415.36266666667; 4996800,1308.17866666667; 5000400,
          1245.09; 5004000,1191.39533333333; 5007600,1201.55933333333; 5011200,1198.99266666667;
          5014800,1089.80666666667; 5018400,1098.58466666667; 5022000,939.964666666667;
          5025600,840.121333333333; 5029200,822.719333333333; 5032800,798.746666666667;
          5036400,643.771333333333; 5040000,855.162; 5043600,1076.87066666667; 5047200,
          1313.97933333333; 5050800,1383.27933333333; 5054400,1391.44133333333; 5058000,
          1452.73333333333; 5061600,1452.32266666667; 5065200,1464.232; 5068800,1312.74733333333;
          5072400,1214.23866666667; 5076000,1192.884; 5079600,1218.24266666667; 5083200,
          1125.432; 5086800,1133.95333333333; 5090400,1227.48266666667; 5094000,1169.42466666667;
          5097600,1207.00066666667; 5101200,1182.36066666667; 5104800,1161.57066666667;
          5108400,1134.98; 5112000,1092.322; 5115600,1060.752; 5119200,1088.318; 5122800,
          1103.82066666667; 5126400,1115.67866666667; 5130000,1104.488; 5133600,1132.72133333333;
          5137200,1183.43866666667; 5140800,1226.81533333333; 5144400,1232.56466666667;
          5148000,1277.37866666667; 5151600,1290.62266666667; 5155200,1238.16; 5158800,
          1135.95533333333; 5162400,1032.724; 5166000,1155.87266666667; 5169600,1211.826;
          5173200,1244.52533333333; 5176800,1195.09133333333; 5180400,1130.36; 5184000,
          1091.19266666667; 5187600,1015.73266666667; 5191200,1082.51733333333; 5194800,
          1195.964; 5198400,1271.16733333333; 5202000,1292.06; 5205600,1350.32333333333;
          5209200,1360.23066666667; 5212800,1402.88866666667; 5216400,1522.906; 5220000,
          1626.086; 5223600,1754.93266666667; 5227200,1799.23333333333; 5230800,1828.596;
          5234400,1838.50333333333; 5238000,1778.28933333333; 5241600,1464.18066666667;
          5245200,1415.77333333333; 5248800,1315.006; 5252400,1376.09266666667; 5256000,
          1382.86866666667; 5259600,1259.05266666667; 5263200,1028.412; 5266800,804.804;
          5270400,939.605333333333; 5274000,921.125333333333; 5277600,577.038; 5281200,
          455.172666666667; 5284800,526.782666666667; 5288400,537.408666666667; 5292000,
          525.602; 5295600,556.915333333333; 5299200,642.488; 5302800,637.611333333333;
          5306400,635.352666666667; 5310000,653.319333333333; 5313600,669.181333333333;
          5317200,689.817333333333; 5320800,820.717333333333; 5324400,588.844666666666;
          5328000,550.139333333334; 5331600,937.192666666666; 5335200,1527.47466666667;
          5338800,1421.00933333333; 5342400,1205.56333333333; 5346000,951.976666666666;
          5349600,1018.91533333333; 5353200,954.235333333333; 5356800,970.918666666666;
          5360400,877.235333333333; 5364000,973.485333333333; 5367600,700.751333333333;
          5371200,497.625333333333; 5374800,408.1; 5378400,413.849333333333; 5382000,
          450.039333333333; 5385600,409.588666666667; 5389200,445.265333333333; 5392800,
          598.444; 5396400,885.859333333334; 5400000,1123.63533333333; 5403600,1007.16;
          5407200,723.902666666666; 5410800,579.296666666667; 5414400,526.628666666667;
          5418000,509.226666666666; 5421600,567.438666666667; 5425200,527.706666666666;
          5428800,458.355333333333; 5432400,392.084; 5436000,369.959333333333; 5439600,
          381.714666666667; 5443200,428.736; 5446800,490.849333333333; 5450400,515.386666666667;
          5454000,506.506; 5457600,540.129333333334; 5461200,783.962666666667; 5464800,
          1060.23866666667; 5468400,1100.84333333333; 5472000,1154.17866666667; 5475600,
          1173.942; 5479200,920.252666666667; 5482800,1044.68466666667; 5486400,1135.596;
          5490000,1165.21533333333; 5493600,1005.774; 5497200,909.883333333333; 5500800,
          974.460666666666; 5504400,1102.486; 5508000,1168.91133333333; 5511600,1182.15533333333;
          5515200,983.957333333333; 5518800,806.498; 5522400,703.164; 5526000,638.073333333333;
          5529600,468.108666666667; 5533200,357.228666666667; 5536800,283.257333333333;
          5540400,262.724000000001; 5544000,260.670666666667; 5547600,256.358666666667;
          5551200,265.547333333333; 5554800,263.545333333334; 5558400,278.072666666666;
          5562000,343.163333333333; 5565600,504.760666666667; 5569200,706.706; 5572800,
          1028.77133333333; 5576400,1190.16333333333; 5580000,874.463333333333; 5583600,
          981.031333333333; 5587200,924.924; 5590800,648.904666666667; 5594400,943.352666666667;
          5598000,1292.26533333333; 5601600,1119.426; 5605200,929.903333333333; 5608800,
          984.06; 5612400,919.585333333333; 5616000,898.744; 5619600,931.443333333333;
          5623200,796.026; 5626800,624.418666666667; 5630400,581.914666666667; 5634000,
          493.775333333333; 5637600,466.414666666667; 5641200,494.032; 5644800,648.596666666666;
          5648400,804.701333333333; 5652000,1196.47733333333; 5655600,1333.64; 5659200,
          1274.042; 5662800,1241.29133333333; 5666400,1284.15466666667; 5670000,1346.884;
          5673600,1089.34466666667; 5677200,997.971333333333; 5680800,754.394666666667;
          5684400,672.21; 5688000,677.138; 5691600,557.736666666667; 5695200,549.112666666667;
          5698800,499.114; 5702400,419.290666666667; 5706000,413.079333333334; 5709600,
          431.251333333333; 5713200,452.452; 5716800,500.5; 5720400,586.329333333334;
          5724000,584.43; 5727600,740.329333333334; 5731200,1067.93866666667; 5734800,
          1281.84466666667; 5738400,1492.106; 5742000,1449.65333333333; 5745600,1723.77333333333;
          5749200,2157.54; 5752800,2154.25466666667; 5756400,1977.46266666667; 5760000,
          1605.19333333333; 5763600,1027.488; 5767200,543.363333333333; 5770800,504.504;
          5774400,553.732666666666; 5778000,542.182666666667; 5781600,646.081333333334;
          5785200,684.478666666667; 5788800,684.940666666667; 5792400,455.07; 5796000,
          440.132; 5799600,379.148; 5803200,375.76; 5806800,396.447333333333; 5810400,
          426.220666666666; 5814000,484.124666666666; 5817600,598.392666666667; 5821200,
          910.653333333334; 5824800,1030.26; 5828400,1388.31; 5832000,1288.92866666667;
          5835600,819.023333333333; 5839200,786.272666666667; 5842800,881.239333333333;
          5846400,1005.10666666667; 5850000,1110.34; 5853600,1237.59533333333; 5857200,
          1439.95133333333; 5860800,1361.87333333333; 5864400,1357.56133333333; 5868000,
          1300.58133333333; 5871600,1119.83666666667; 5875200,942.890666666666; 5878800,
          836.836; 5882400,651.471333333333; 5886000,578.886; 5889600,532.737333333333;
          5893200,451.22; 5896800,485.254; 5900400,672.928666666667; 5904000,1143.142;
          5907600,1424.346; 5911200,1599.752; 5914800,1777.57066666667; 5918400,1897.79333333333;
          5922000,2068.73333333333; 5925600,2114.16333333333; 5929200,1907.39266666667;
          5932800,1808.83266666667; 5936400,1564.794; 5940000,1481.99333333333; 5943600,
          1199.09533333333; 5947200,856.702; 5950800,775.544; 5954400,687.250666666667;
          5958000,607.427333333334; 5961600,612.971333333333; 5965200,550.088; 5968800,
          444.803333333333; 5972400,423.038; 5976000,372.372; 5979600,363.286; 5983200,
          374.784666666667; 5986800,558.968666666667; 5990400,996.534; 5994000,1369.16266666667;
          5997600,1571.108; 6001200,1795.58866666667; 6004800,1957.802; 6008400,2050.664;
          6012000,2225.146; 6015600,2271.75666666667; 6019200,1985.88133333333; 6022800,
          1882.342; 6026400,1756.62666666667; 6030000,1543.08; 6033600,1429.274; 6037200,
          1396.36933333333; 6040800,1144.78466666667; 6044400,931.084; 6048000,832.062;
          6051600,738.224666666666; 6055200,661.019333333333; 6058800,656.296666666666;
          6062400,581.144666666666; 6066000,517.902; 6069600,518.620666666667; 6073200,
          705.063333333333; 6076800,1140.16466666667; 6080400,1360.94933333333; 6084000,
          1489.488; 6087600,1549.086; 6091200,1657.75866666667; 6094800,1702.88066666667;
          6098400,1701.90533333333; 6102000,1700.82733333333; 6105600,1709.60533333333;
          6109200,1653.036; 6112800,1457.09666666667; 6116400,1406.84133333333; 6120000,
          1350.426; 6123600,1302.73733333333; 6127200,987.756; 6130800,841.969333333333;
          6134400,752.238666666667; 6138000,857.318; 6141600,860.962666666667; 6145200,
          868.354666666667; 6148800,845.357333333333; 6152400,811.220666666666; 6156000,
          818.766666666667; 6159600,753.573333333334; 6163200,762.248666666667; 6166800,
          939.862; 6170400,1038.83266666667; 6174000,1307.51133333333; 6177600,1427.63133333333;
          6181200,1461.46; 6184800,1517.46466666667; 6188400,1358.79333333333; 6192000,
          1159.004; 6195600,1026.102; 6199200,962.705333333333; 6202800,1245.398;
          6206400,1358.38266666667; 6210000,1218.19133333333; 6213600,1157.002; 6217200,
          1149.66133333333; 6220800,1133.132; 6224400,1201.55933333333; 6228000,1103.46133333333;
          6231600,1084.67333333333; 6235200,1052.17933333333; 6238800,1016.96466666667;
          6242400,1026.82066666667; 6246000,952.592666666667; 6249600,894.329333333333;
          6253200,934.882666666667; 6256800,1125.94533333333; 6260400,1251.45533333333;
          6264000,1505.35; 6267600,1602.78066666667; 6271200,1740.97; 6274800,1594.978;
          6278400,1407.81666666667; 6282000,1341.90466666667; 6285600,1273.68266666667;
          6289200,1282.05; 6292800,1296.93666666667; 6296400,1197.40133333333; 6300000,
          1180.66666666667; 6303600,1123.53266666667; 6307200,1077.692; 6310800,1041.502;
          6314400,897.255333333333; 6318000,756.448; 6321600,758.296; 6325200,838.735333333333;
          6328800,829.495333333334; 6332400,982.160666666667; 6336000,1134.056; 6339600,
          1320.396; 6343200,1461.25466666667; 6346800,1642.61533333333; 6350400,1750.26133333333;
          6354000,1816.84066666667; 6357600,1918.17266666667; 6361200,1944.50666666667;
          6364800,1740.816; 6368400,1471.41866666667; 6372000,1364.79933333333; 6375600,
          1350.426; 6379200,1242.83133333333; 6382800,1190.06066666667; 6386400,1106.028;
          6390000,1076.25466666667; 6393600,1007.21133333333; 6397200,967.530666666667;
          6400800,872.974666666667; 6404400,641.41; 6408000,539.051333333333; 6411600,
          520.006666666666; 6415200,443.109333333333; 6418800,690.279333333333; 6422400,
          1094.06733333333; 6426000,1347.24333333333; 6429600,1443.288; 6433200,1653.85733333333;
          6436800,1774.43933333333; 6440400,1856.67533333333; 6444000,1990.80933333333;
          6447600,1885.78133333333; 6451200,1743.28; 6454800,1574.90666666667; 6458400,
          1654.93533333333; 6462000,1088.88266666667; 6465600,807.678666666666; 6469200,
          728.933333333334; 6472800,837.657333333334; 6476400,1027.23133333333; 6480000,
          1019.73666666667; 6483600,994.686; 6487200,1008.75133333333; 6490800,1032.31333333333;
          6494400,1060.03333333333; 6498000,899.976; 6501600,644.182; 6505200,622.211333333333;
          6508800,624.624; 6512400,808.089333333333; 6516000,940.016; 6519600,1004.28533333333;
          6523200,1050.02333333333; 6526800,1135.33933333333; 6530400,1212.442; 6534000,
          1259.258; 6537600,1259.30933333333; 6541200,1248.632; 6544800,1184.15733333333;
          6548400,1094.22133333333; 6552000,1057.31266666667; 6555600,991.708666666667;
          6559200,763.942666666667; 6562800,596.904; 6566400,511.28; 6570000,438.746;
          6573600,428.068666666667; 6577200,404.25; 6580800,393.829333333334; 6584400,
          389.568666666667; 6588000,402.966666666667; 6591600,490.746666666667; 6595200,
          872.615333333333; 6598800,1255.45933333333; 6602400,1252.79; 6606000,1405.66066666667;
          6609600,1648.21066666667; 6613200,1780.49666666667; 6616800,1803.75066666667;
          6620400,1855.28933333333; 6624000,1677.93266666667; 6627600,1502.424; 6631200,
          1252.636; 6634800,1077.74333333333; 6638400,913.374; 6642000,768.049333333333;
          6645600,699.006; 6649200,597.006666666666; 6652800,553.886666666667; 6656400,
          475.244; 6660000,412.309333333333; 6663600,374.374; 6667200,346.962; 6670800,
          348.758666666666; 6674400,347.732; 6678000,551.679333333334; 6681600,1022.45733333333;
          6685200,1407.91933333333; 6688800,1776.74933333333; 6692400,1875.46333333333;
          6696000,1983.57133333333; 6699600,2122.37666666667; 6703200,2161.544; 6706800,
          2044.35; 6710400,1948.97266666667; 6714000,1668.69266666667; 6717600,1428.55533333333;
          6721200,1156.64266666667; 6724800,1083.33866666667; 6728400,948.075333333333;
          6732000,784.527333333334; 6735600,697.004; 6739200,603.782666666667; 6742800,
          507.378666666667; 6746400,448.807333333333; 6750000,445.162666666667; 6753600,
          424.680666666667; 6757200,408.716; 6760800,368.214; 6764400,641.102; 6768000,
          1154.076; 6771600,1504.272; 6775200,1848.82133333333; 6778800,2065.03733333333;
          6782400,2222.27133333333; 6786000,2233.71866666667; 6789600,2208.206; 6793200,
          2249.786; 6796800,2039.93533333333; 6800400,1648.36466666667; 6804000,1545.64666666667;
          6807600,1358.63933333333; 6811200,1226.40466666667; 6814800,993.710666666667;
          6818400,885.756666666667; 6822000,890.017333333333; 6825600,794.742666666667;
          6829200,694.334666666667; 6832800,617.437333333333; 6836400,569.8; 6840000,
          530.376; 6843600,484.022000000001; 6847200,474.987333333333; 6850800,761.376;
          6854400,1167.628; 6858000,1395.80466666667; 6861600,1562.484; 6865200,1510.53466666667;
          6868800,1523.00866666667; 6872400,1581.06666666667; 6876000,1739.01933333333;
          6879600,1769.614; 6883200,1669.61666666667; 6886800,1464.02666666667; 6890400,
          1318.03466666667; 6894000,1221.57933333333; 6897600,1081.542; 6901200,989.244666666666;
          6904800,847.051333333333; 6908400,777.7; 6912000,724.518666666666; 6915600,
          613.433333333334; 6919200,610.815333333333; 6922800,525.14; 6926400,461.23;
          6930000,396.909333333333; 6933600,422.935333333334; 6937200,522.881333333333;
          6940800,686.634666666666; 6944400,813.479333333333; 6948000,1087.95866666667;
          6951600,1132.208; 6955200,1191.75466666667; 6958800,1255.15133333333; 6962400,
          1308.846; 6966000,1322.244; 6969600,1329.12266666667; 6973200,1229.27933333333;
          6976800,1094.632; 6980400,923.948666666667; 6984000,922.049333333333; 6987600,
          1057.62066666667; 6991200,1191.13866666667; 6994800,1136.828; 6998400,1098.27666666667;
          7002000,1100.484; 7005600,1074.40666666667; 7009200,999.049333333333; 7012800,
          1039.29466666667; 7016400,1085.44333333333; 7020000,1043.658; 7023600,1076.768;
          7027200,1135.596; 7030800,1232.97533333333; 7034400,1332.45933333333; 7038000,
          1486.76733333333; 7041600,1628.96066666667; 7045200,1791.79; 7048800,1980.33733333333;
          7052400,2033.36466666667; 7056000,1933.008; 7059600,1802.108; 7063200,1772.95066666667;
          7066800,1747.07866666667; 7070400,1700.006; 7074000,1642.872; 7077600,1633.73466666667;
          7081200,1639.38133333333; 7084800,1591.79533333333; 7088400,1483.58466666667;
          7092000,1548.52133333333; 7095600,1483.89266666667; 7099200,1454.17066666667;
          7102800,1444.57133333333; 7106400,1433.94533333333; 7110000,1569.82466666667;
          7113600,1771.924; 7117200,2000.35733333333; 7120800,2105.69333333333; 7124400,
          2030.28466666667; 7128000,2089.934; 7131600,2002.97533333333; 7135200,1977.46266666667;
          7138800,1968.78733333333; 7142400,1919.81533333333; 7146000,1832.446; 7149600,
          1747.23266666667; 7153200,1641.99933333333; 7156800,1585.94333333333; 7160400,
          1539.28133333333; 7164000,1474.13933333333; 7167600,1409.15133333333; 7171200,
          1357.56133333333; 7174800,1300.222; 7178400,1276.60866666667; 7182000,1232.66733333333;
          7185600,1127.07466666667; 7189200,1070.454; 7192800,1075.12533333333; 7196400,
          1335.23133333333; 7200000,1447.39466666667; 7203600,1587.48333333333; 7207200,
          1788.29933333333; 7210800,2016.42466666667; 7214400,2148.55666666667; 7218000,
          2278.01933333333; 7221600,2279.2; 7225200,2184.182; 7228800,2051.48533333333;
          7232400,1848.41066666667; 7236000,1731.52466666667; 7239600,1550.88266666667;
          7243200,1404.018; 7246800,1104.18; 7250400,1032.36466666667; 7254000,971.791333333333;
          7257600,980.21; 7261200,851.825333333333; 7264800,859.422666666666; 7268400,
          871.691333333333; 7272000,834.474666666667; 7275600,848.745333333334; 7279200,
          815.378666666667; 7282800,925.180666666667; 7286400,1226.764; 7290000,1479.42666666667;
          7293600,1470.084; 7297200,1462.28133333333; 7300800,1154.58933333333; 7304400,
          1152.89533333333; 7308000,1053.25733333333; 7311600,1241.548; 7315200,1050.434;
          7318800,905.006666666667; 7322400,773.542; 7326000,711.582666666667; 7329600,
          585.97; 7333200,572.212666666667; 7336800,498.344; 7340400,470.316; 7344000,
          471.034666666666; 7347600,355.278; 7351200,341.11; 7354800,351.684666666667;
          7358400,315.7; 7362000,297.117333333333; 7365600,282.076666666667; 7369200,
          412.514666666667; 7372800,886.629333333334; 7376400,1265.11; 7380000,1519.98;
          7383600,1708.88666666667; 7387200,1847.692; 7390800,1953.028; 7394400,2060.52;
          7398000,2087.36733333333; 7401600,1893.37866666667; 7405200,1576.13866666667;
          7408800,1304.58533333333; 7412400,1117.47533333333; 7416000,1031.90266666667;
          7419600,1165.164; 7423200,1349.55333333333; 7426800,1363.824; 7430400,1284.30866666667;
          7434000,887.296666666667; 7437600,832.421333333333; 7441200,847.872666666667;
          7444800,1100.12466666667; 7448400,881.342; 7452000,499.268; 7455600,533.456;
          7459200,625.804666666666; 7462800,562.716; 7466400,599.316666666666; 7470000,
          615.486666666667; 7473600,627.55; 7477200,883.498; 7480800,1002.48866666667;
          7484400,1086.778; 7488000,861.322; 7491600,607.786666666667; 7495200,460.562666666667;
          7498800,377.556666666666; 7502400,354.456666666666; 7506000,384.178666666667;
          7509600,484.638; 7513200,544.903333333334; 7516800,594.029333333334; 7520400,
          605.733333333333; 7524000,762.248666666666; 7527600,808.346; 7531200,804.239333333333;
          7534800,980.004666666667; 7538400,957.366666666667; 7542000,945.816666666666;
          7545600,861.014; 7549200,888.888; 7552800,936.166; 7556400,1018.65866666667;
          7560000,1152.63866666667; 7563600,1223.01666666667; 7567200,1261.82466666667;
          7570800,1270.91066666667; 7574400,1288.77466666667; 7578000,1263.67266666667;
          7581600,1099.45733333333; 7585200,1013.474; 7588800,1028.874; 7592400,1057.364;
          7596000,1016.14333333333; 7599600,973.074666666667; 7603200,959.984666666667;
          7606800,861.578666666667; 7610400,851.004; 7614000,793.151333333333; 7617600,
          839.813333333334; 7621200,799.978666666666; 7624800,953.106; 7628400,1037.08733333333;
          7632000,1305.25266666667; 7635600,1524.754; 7639200,1694.82133333333; 7642800,
          1499.19; 7646400,1605.296; 7650000,1269.21666666667; 7653600,779.394; 7657200,
          562.305333333333; 7660800,383.203333333333; 7664400,282.282; 7668000,295.115333333333;
          7671600,371.191333333334; 7675200,327.712; 7678800,472.472; 7682400,587.150666666667;
          7686000,667.923666666667; 7689600,749.826; 7693200,687.250666666667; 7696800,
          715.124666666667; 7700400,783.962666666667; 7704000,793.151333333333; 7707600,
          828.109333333333; 7711200,930.673333333333; 7714800,1046.48133333333; 7718400,
          1221.528; 7722000,1452.066; 7725600,1638.76533333333; 7729200,1535.996;
          7732800,1662.738; 7736400,1823.668; 7740000,1924.74333333333; 7743600,1831.83;
          7747200,1629.21733333333; 7750800,1394.72666666667; 7754400,1340.98066666667;
          7758000,1117.98866666667; 7761600,1083.852; 7765200,792.175999999999; 7768800,
          716.305333333334; 7772400,697.979333333334; 7776000,547.213333333333; 7779600,
          480.890666666667; 7783200,480.788; 7786800,425.296666666666; 7790400,363.645333333333;
          7794000,424.937333333333; 7797600,507.275999999999; 7801200,683.554666666666;
          7804800,921.587333333333; 7808400,1097.404; 7812000,1218.14; 7815600,1552.67933333333;
          7819200,1708.27066666667; 7822800,1672.54266666667; 7826400,1675.828; 7830000,
          1509.662; 7833600,1491.644; 7837200,1307.40866666667; 7840800,1196.426;
          7844400,1275.12; 7848000,1522.70066666667; 7851600,1502.27; 7855200,1267.36866666667;
          7858800,1009.90633333333; 7862400,956.186; 7866000,932.983333333333; 7869600,
          866.917333333333; 7873200,850.490666666667; 7876800,886.937333333333; 7880400,
          853.981333333334; 7884000,890.017333333333; 7887600,902.080666666667; 7891200,
          1045.044; 7894800,1143.09066666667; 7898400,1231.384; 7902000,1243.49866666667;
          7905600,1246.21933333333; 7909200,1252.174; 7912800,1166.34466666667; 7916400,
          1051.974; 7920000,916.505333333334; 7923600,765.893333333334; 7927200,738.378666666667;
          7930800,738.943333333333; 7934400,679.088666666667; 7938000,649.264; 7941600,
          598.136; 7945200,590.744; 7948800,553.835333333333; 7952400,483.098; 7956000,
          478.888666666667; 7959600,512.306666666667; 7963200,542.85; 7966800,641.820666666667;
          7970400,613.382; 7974000,632.734666666667; 7977600,862.143333333334; 7981200,
          1080.10466666667; 7984800,1291.18733333333; 7988400,1378.608; 7992000,1449.65333333333;
          7995600,1604.834; 7999200,1726.90466666667; 8002800,1649.75066666667; 8006400,
          1445.03333333333; 8010000,1131.284; 8013600,953.157333333333; 8017200,772.412666666667;
          8020800,717.691333333334; 8024400,703.266666666667; 8028000,664.150666666667;
          8031600,545.493666666666; 8035200,475.500666666667; 8038800,403.326; 8042400,
          424.475333333334; 8046000,444.033333333334; 8049600,423.089333333333; 8053200,
          407.689333333333; 8056800,539.359333333334; 8060400,712.558; 8064000,850.696;
          8067600,936.936; 8071200,954.902666666667; 8074800,1026.97466666667; 8078400,
          973.844666666667; 8082000,1093.246; 8085600,1031.13266666667; 8089200,888.58;
          8092800,820.922666666667; 8096400,714.970666666667; 8100000,615.076; 8103600,
          582.530666666667; 8107200,501.937333333333; 8110800,385.154; 8114400,357.690666666667;
          8118000,312.286333333333; 8121600,345.319333333333; 8125200,303.534; 8128800,
          292.702666666667; 8132400,275.916666666666; 8136000,283.051999999999; 8139600,
          357.023333333334; 8143200,444.033333333334; 8146800,678.986; 8150400,804.496;
          8154000,855.880666666667; 8157600,860.706; 8161200,901.721333333333; 8164800,
          970.559333333333; 8168400,1169.57866666667; 8172000,1240.008; 8175600,1070.96733333333;
          8179200,908.497333333333; 8182800,771.283333333334; 8186400,596.031333333334;
          8190000,556.042666666666; 8193600,570.159333333333; 8197200,569.543333333333;
          8200800,520.725333333333; 8204400,489.283666666667; 8208000,476.116666666667;
          8211600,440.696666666667; 8215200,403.531333333334; 8218800,340.134666666667;
          8222400,414.414; 8226000,424.783333333334; 8229600,391.724666666666; 8233200,
          423.705333333334; 8236800,532.018666666666; 8240400,573.342; 8244000,416.518666666667;
          8247600,399.014; 8251200,480.428666666667; 8254800,447.729333333334; 8258400,
          409.537333333333; 8262000,362.002666666667; 8265600,289.468666666666; 8269200,
          255.486; 8272800,272.425999999999; 8276400,282.179333333333; 8280000,275.865333333333;
          8283600,291.829999999999; 8287200,321.244; 8290800,288.596; 8294400,299.273333333333;
          8298000,288.134000000001; 8301600,239.778; 8305200,220.425333333333; 8308800,
          220.528; 8312400,224.121333333333; 8316000,233.618; 8319600,393.829333333334;
          8323200,759.22; 8326800,1240.67533333333; 8330400,1540.308; 8334000,1511.972;
          8337600,1492.82466666667; 8341200,1730.036; 8344800,1861.706; 8348400,1450.834;
          8352000,1116.55133333333; 8355600,1010.44533333333; 8359200,867.995333333333;
          8362800,749.928666666667; 8366400,730.370666666667; 8370000,753.419333333333;
          8373600,629.654666666667; 8377200,563.049666666666; 8380800,593.362; 8384400,
          573.444666666666; 8388000,569.132666666667; 8391600,596.698666666667; 8395200,
          522.368; 8398800,539.359333333333; 8402400,783.449333333333; 8406000,1123.37866666667;
          8409600,1151.458; 8413200,1433.63733333333; 8416800,1533.84; 8420400,1665.356;
          8424000,1664.48333333333; 8427600,1499.29266666667; 8431200,1505.55533333333;
          8434800,1614.228; 8438400,1576.96; 8442000,1542.31; 8445600,1420.70133333333;
          8449200,1296.01266666667; 8452800,1125.586; 8456400,958.598666666667; 8460000,
          683.657333333333; 8463600,689.278333333334; 8467200,745.411333333333; 8470800,
          575.138666666667; 8474400,593.413333333333; 8478000,835.963333333333; 8481600,
          1203.76666666667; 8485200,1239.80266666667; 8488800,1363.67; 8492400,1378.86466666667;
          8496000,1433.22666666667; 8499600,1448.062; 8503200,1414.49; 8506800,1437.33333333333;
          8510400,1349.656; 8514000,1298.01466666667; 8517600,1158.33666666667; 8521200,
          1017.786; 8524800,1060.85466666667; 8528400,1074.458; 8532000,810.194; 8535600,
          785.092; 8539200,785.246; 8542800,822.668; 8546400,852.030666666667; 8550000,
          950.308333333334; 8553600,928.722666666667; 8557200,931.905333333334; 8560800,
          959.471333333333; 8564400,970.867333333333; 8568000,948.280666666667; 8571600,
          969.584; 8575200,990.938666666667; 8578800,1086.57266666667; 8582400,1091.706;
          8586000,1113.574; 8589600,1210.08066666667; 8593200,1399.34666666667; 8596800,
          1447.08666666667; 8600400,1357.40733333333; 8604000,1380.456; 8607600,1423.422;
          8611200,1230.51133333333; 8614800,1035.13666666667; 8618400,773.08; 8622000,
          612.612; 8625600,507.173333333333; 8629200,447.678; 8632800,409.948; 8636400,
          364.235666666667; 8640000,341.058666666666; 8643600,334.95; 8647200,332.64;
          8650800,327.866; 8654400,316.932; 8658000,340.750666666667; 8661600,743.871333333333;
          8665200,1085.18666666667; 8668800,1361.00066666667; 8672400,1583.78733333333;
          8676000,1779.57266666667; 8679600,1933.47; 8683200,2112.67466666667; 8686800,
          2068.99; 8690400,2251.27466666667; 8694000,2212.826; 8697600,1681.62866666667;
          8701200,1435.126; 8704800,1105.00133333333; 8708400,979.748; 8712000,833.807333333333;
          8715600,762.146; 8719200,692.640666666666; 8722800,705.114666666667; 8726400,
          576.576; 8730000,506.916666666667; 8733600,532.634666666667; 8737200,453.889333333333;
          8740800,422.627333333334; 8744400,720.822666666667; 8748000,978.259333333333;
          8751600,1508.276; 8755200,1813.658; 8758800,1472.29133333333; 8762400,1920.73933333333;
          8766000,2062.41933333333; 8769600,2190.804; 8773200,2338.28466666667; 8776800,
          2366.21; 8780400,2248.19466666667; 8784000,2020.37733333333; 8787600,1940.4;
          8791200,1843.996; 8794800,1649.85333333333; 8798400,1516.18133333333; 8802000,
          1536.40666666667; 8805600,1467.51733333333; 8809200,1340.878; 8812800,1044.582;
          8816400,773.388; 8820000,747.002666666667; 8823600,669.438; 8827200,638.792;
          8830800,841.302; 8834400,1270.75666666667; 8838000,1341.39133333333; 8841600,
          1478.092; 8845200,1732.192; 8848800,1929.05533333333; 8852400,2119.81; 8856000,
          2185.106; 8859600,2274.272; 8863200,2256.51066666667; 8866800,1940.75933333333;
          8870400,1689.32866666667; 8874000,1560.37933333333; 8877600,1524.908; 8881200,
          1402.016; 8884800,1257.46133333333; 8888400,1155.10266666667; 8892000,1000.384;
          8895600,857.908333333334; 8899200,728.214666666667; 8902800,637.868; 8906400,
          579.604666666667; 8910000,710.607333333333; 8913600,714.046666666667; 8917200,
          694.026666666667; 8920800,650.393333333334; 8924400,635.763333333333; 8928000,
          555.888666666667; 8931600,401.786; 8935200,610.456; 8938800,615.486666666667;
          8942400,1164.49666666667; 8946000,1205.15266666667; 8949600,1208.438; 8953200,
          934.318; 8956800,450.655333333334; 8960400,415.286666666667; 8964000,688.38;
          8967600,643.514666666667; 8971200,550.447333333333; 8974800,515.284; 8978400,
          459.536; 8982000,495.726; 8985600,505.787333333333; 8989200,413.182; 8992800,
          399.270666666666; 8996400,412.874; 9000000,348.604666666667; 9003600,444.238666666667;
          9007200,733.502; 9010800,932.264666666667; 9014400,1243.242; 9018000,1475.474;
          9021600,1466.33666666667; 9025200,1633.94; 9028800,1680.448; 9032400,1834.49933333333;
          9036000,1936.242; 9039600,1945.12266666667; 9043200,1538.46; 9046800,1254.74066666667;
          9050400,1170.50266666667; 9054000,1117.16733333333; 9057600,941.915333333333;
          9061200,737.044; 9064800,791.303333333333; 9068400,970.046; 9072000,899.052;
          9075600,735.966; 9079200,615.178666666667; 9082800,687.969333333333; 9086400,
          1062.18933333333; 9090000,1281.84466666667; 9093600,1356.22666666667; 9097200,
          1121.89; 9100800,1231.17866666667; 9104400,1533.58333333333; 9108000,1740.816;
          9111600,1754.88133333333; 9115200,1808.78133333333; 9118800,1787.52933333333;
          9122400,1664.17533333333; 9126000,2012.78; 9129600,1524.85666666667; 9133200,
          1171.478; 9136800,1173.06933333333; 9140400,1220.96333333333; 9144000,1056.38866666667;
          9147600,980.928666666667; 9151200,887.142666666667; 9154800,1225.12133333333;
          9158400,1884.75466666667; 9162000,2006.774; 9165600,1943.018; 9169200,1871.35666666667;
          9172800,1848.56466666667; 9176400,1836.296; 9180000,1685.222; 9183600,1830.08466666667;
          9187200,1985.88133333333; 9190800,1957.90466666667; 9194400,2055.84866666667;
          9198000,2218.524; 9201600,2147.32466666667; 9205200,2070.53; 9208800,1992.55466666667;
          9212400,1798.412; 9216000,1615.306; 9219600,1601.08666666667; 9223200,1617.97533333333;
          9226800,1788.91533333333; 9230400,1818.53466666667; 9234000,1133.23466666667;
          9237600,819.690666666666; 9241200,618.643666666667; 9244800,447.883333333333;
          9248400,409.999333333333; 9252000,487.820666666667; 9255600,573.188; 9259200,
          589.614666666666; 9262800,631.554; 9266400,667.127999999999; 9270000,816.713333333333;
          9273600,543.671333333333; 9277200,699.673333333333; 9280800,723.235333333333;
          9284400,860.398; 9288000,940.991333333333; 9291600,663.534666666667; 9295200,
          701.932; 9298800,611.739333333333; 9302400,396.55; 9306000,270.834666666667;
          9309600,244.09; 9313200,239.880666666667; 9316800,273.709333333333; 9320400,
          298.298; 9324000,374.836; 9327600,426.195; 9331200,476.681333333333; 9334800,
          537.46; 9338400,573.701333333333; 9342000,621.595333333333; 9345600,585.713333333333;
          9349200,656.707333333334; 9352800,773.85; 9356400,700.648666666667; 9360000,
          784.989333333333; 9363600,837.400666666667; 9367200,1031.03; 9370800,1185.646;
          9374400,1120.86333333333; 9378000,922.152; 9381600,789.198666666667; 9385200,
          665.382666666667; 9388800,678.010666666666; 9392400,624.264666666667; 9396000,
          521.084666666667; 9399600,563.948; 9403200,466.209333333333; 9406800,561.586666666667;
          9410400,516.156666666666; 9414000,589.281; 9417600,759.733333333333; 9421200,
          761.324666666666; 9424800,754.6; 9428400,737.506; 9432000,745.976; 9435600,
          910.242666666667; 9439200,1008.18666666667; 9442800,1167.474; 9446400,1309.82133333333;
          9450000,1518.95333333333; 9453600,1655.808; 9457200,1776.95466666667; 9460800,
          1903.132; 9464400,1992.452; 9468000,1978.95133333333; 9471600,1997.73933333333;
          9475200,1832.54866666667; 9478800,1734.09133333333; 9482400,1569.26; 9486000,
          1461.81933333333; 9489600,1400.98933333333; 9493200,1352.83866666667; 9496800,
          1340.77533333333; 9500400,1346.037; 9504000,911.218; 9507600,663.226666666667;
          9511200,561.381333333333; 9514800,505.992666666667; 9518400,477.862; 9522000,
          1002.64266666667; 9525600,1259.874; 9529200,1383.844; 9532800,1458.63666666667;
          9536400,1653.85733333333; 9540000,1751.39066666667; 9543600,1830.85466666667;
          9547200,1935.83133333333; 9550800,1975.40933333333; 9554400,2147.78666666667;
          9558000,1947.68933333333; 9561600,1890.24733333333; 9565200,1803.08333333333;
          9568800,1579.21866666667; 9572400,1540.154; 9576000,1394.82933333333; 9579600,
          896.536666666667; 9583200,753.984; 9586800,730.242333333333; 9590400,623.084;
          9594000,796.590666666667; 9597600,653.781333333334; 9601200,599.316666666666;
          9604800,612.971333333333; 9608400,826.415333333333; 9612000,1209.46466666667;
          9615600,1616.538; 9619200,1711.864; 9622800,1767.71466666667; 9626400,1883.83066666667;
          9630000,1872.58866666667; 9633600,1744.40933333333; 9637200,1638.76533333333;
          9640800,1570.54333333333; 9644400,1824.9; 9648000,1748.978; 9651600,1503.348;
          9655200,1410.38333333333; 9658800,1357.15066666667; 9662400,1211.21; 9666000,
          706.295333333333; 9669600,309.488666666667; 9673200,251.276666666667; 9676800,
          221.554666666667; 9680400,207.746; 9684000,208.516; 9687600,202.304666666667;
          9691200,196.760666666666; 9694800,216.883333333334; 9698400,285.156666666666;
          9702000,369.343333333334; 9705600,433.561333333333; 9709200,600.959333333333;
          9712800,1029.07933333333; 9716400,1492.05466666667; 9720000,1381.688; 9723600,
          1502.93733333333; 9727200,1475.474; 9730800,1543.74733333333; 9734400,1409.45933333333;
          9738000,976.924666666667; 9741600,776.827333333333; 9745200,652.908666666667;
          9748800,591.565333333333; 9752400,674.674; 9756000,506.249333333334; 9759600,
          405.995333333334; 9763200,316.521333333334; 9766800,285.978; 9770400,254.972666666666;
          9774000,228.895333333333; 9777600,205.59; 9781200,200.046; 9784800,221.708666666666;
          9788400,320.730666666667; 9792000,290.392666666667; 9795600,353.173333333333;
          9799200,323.708; 9802800,213.444; 9806400,297.22; 9810000,476.732666666667;
          9813600,407.586666666667; 9817200,401.631999999999; 9820800,401.272666666666;
          9824400,499.011333333333; 9828000,630.014; 9831600,696.182666666666; 9835200,
          806.498; 9838800,897.563333333333; 9842400,789.968666666666; 9846000,998.767;
          9849600,1058.08266666667; 9853200,1050.02333333333; 9856800,1111.11; 9860400,
          1169.168; 9864000,1261.77333333333; 9867600,1266.23933333333; 9871200,1489.334;
          9874800,1703.24; 9878400,1711.60733333333; 9882000,1793.84333333333; 9885600,
          1967.45266666667; 9889200,1933.162; 9892800,1955.03; 9896400,1900.668; 9900000,
          1901.07866666667; 9903600,1897.896; 9907200,1883.36866666667; 9910800,1884.90866666667;
          9914400,1887.62933333333; 9918000,1796.20466666667; 9921600,1678.03533333333;
          9925200,1197.658; 9928800,958.290666666667; 9932400,974.306666666667; 9936000,
          1072.55866666667; 9939600,1150.89333333333; 9943200,996.277333333333; 9946800,
          854.186666666667; 9950400,1257.256; 9954000,1241.03466666667; 9957600,1527.11533333333;
          9961200,1726.494; 9964800,1814.83866666667; 9968400,1984.70066666667; 9972000,
          2141.11333333333; 9975600,2317.95666666667; 9979200,2394.854; 9982800,2339.31133333333;
          9986400,2085.36533333333; 9990000,2083.312; 9993600,1976.23066666667; 9997200,
          1858.78; 10000800,1587.68866666667; 10004400,1271.886; 10008000,1366.18533333333;
          10011600,1711.35066666667; 10015200,1460.844; 10018800,1572.54533333333;
          10022400,1477.27066666667; 10026000,1403.91533333333; 10029600,1337.952;
          10033200,1419.93133333333; 10036800,1417.51866666667; 10040400,1352.17133333333;
          10044000,1468.082; 10047600,1667.87133333333; 10051200,1799.84933333333;
          10054800,1759.34733333333; 10058400,1757.70466666667; 10062000,1858.01;
          10065600,1889.22066666667; 10069200,1883.67666666667; 10072800,1824.592;
          10076400,1642.872; 10080000,1438.206; 10083600,965.477333333334; 10087200,
          800.8; 10090800,921.536; 10094400,811.272; 10098000,705.987333333333; 10101600,
          574.317333333334; 10105200,587.381666666667; 10108800,645.003333333333;
          10112400,679.448000000001; 10116000,711.788; 10119600,565.282666666667;
          10123200,428.222666666666; 10126800,868.508666666667; 10130400,1344.06066666667;
          10134000,1567.66866666667; 10137600,1863.91333333333; 10141200,2049.32933333333;
          10144800,2145.32266666667; 10148400,2261.28466666667; 10152000,2211.79933333333;
          10155600,2088.03466666667; 10159200,2030.59266666667; 10162800,2097.018;
          10166400,1854.16; 10170000,1515.87333333333; 10173600,1725.262; 10177200,
          1618.28333333333; 10180800,1343.804; 10184400,1004.74733333333; 10188000,
          881.188; 10191600,733.733; 10195200,719.847333333333; 10198800,703.523333333333;
          10202400,723.081333333334; 10206000,579.553333333334; 10209600,665.074666666667;
          10213200,1010.65066666667; 10216800,1568.69533333333; 10220400,1903.594;
          10224000,2063.34333333333; 10227600,2187.15933333333; 10231200,2408.97066666667;
          10234800,2435.61266666667; 10238400,2476.474; 10242000,2447.11133333333;
          10245600,2350.70733333333; 10249200,2276.428; 10252800,2258.718; 10256400,
          2224.94066666667; 10260000,2082.90133333333; 10263600,1884.90866666667;
          10267200,1482.04466666667; 10270800,1097.404; 10274400,928.568666666667;
          10278000,720.206666666667; 10281600,653.319333333333; 10285200,592.797333333333;
          10288800,503.272; 10292400,455.480666666667; 10296000,462.205333333334;
          10299600,925.232; 10303200,1243.49866666667; 10306800,1497.54733333333;
          10310400,1730.39533333333; 10314000,2088.394; 10317600,2248.04066666667;
          10321200,2231.71666666667; 10324800,2222.682; 10328400,2263.954; 10332000,
          2306.09866666667; 10335600,2276.12; 10339200,1938.34666666667; 10342800,
          1513.46066666667; 10346400,1190.112; 10350000,1059.982; 10353600,932.059333333333;
          10357200,844.741333333333; 10360800,775.441333333333; 10364400,624.880666666666;
          10368000,592.078666666667; 10371600,499.422; 10375200,470.777999999999;
          10378800,384.743333333333; 10382400,416.570000000001; 10386000,692.384;
          10389600,1201.71333333333; 10393200,1426.39933333333; 10396800,1289.80133333333;
          10400400,1648.416; 10404000,1140.986; 10407600,928.825333333333; 10411200,
          1065.218; 10414800,871.896666666667; 10418400,822.976; 10422000,606.144;
          10425600,529.400666666667; 10429200,507.738; 10432800,407.33; 10436400,409.024;
          10440000,544.338666666667; 10443600,423.346; 10447200,416.621333333334;
          10450800,387.772000000001])
      annotation (Placement(transformation(extent={{-4,0},{2,6}})));
  protected
    Modelica.Blocks.Math.UnitConversions.From_deg conWinDir
      "Convert the wind direction unit from [deg] to [rad]"
      annotation (Placement(transformation(extent={{-22,-14},{-16,-8}})));
  public
    Modelica.Blocks.Sources.TimeTable IGH(table=[0,18.27; 3600,18.27; 7200,18.27;
          10800,18.27; 14400,18.27; 18000,18.27; 21600,18.27; 25200,19.1766666666667;
          28800,30.145; 32400,43.9233333333333; 36000,52.175; 39600,110.915; 43200,
          271.875; 46800,192.548333333333; 50400,87.0716666666667; 54000,34.8066666666667;
          57600,18.27; 61200,18.27; 64800,18.27; 68400,18.27; 72000,18.27; 75600,18.27;
          79200,18.27; 82800,18.27; 86400,18.27; 90000,18.27; 93600,18.27; 97200,18.27;
          100800,18.27; 104400,18.27; 108000,18.27; 111600,18.27; 115200,18.27; 118800,
          24.33; 122400,33.8583333333333; 126000,31.2983333333333; 129600,29.57; 133200,
          33.0333333333333; 136800,24.6583333333333; 140400,21.7716666666667; 144000,
          18.27; 147600,18.27; 151200,18.27; 154800,18.27; 158400,18.27; 162000,18.27;
          165600,18.27; 169200,18.27; 172800,18.27; 176400,18.27; 180000,18.27; 183600,
          18.27; 187200,18.27; 190800,18.27; 194400,18.27; 198000,26.1033333333333;
          201600,39.4266666666667; 205200,109.471666666667; 208800,90.865; 212400,
          157.443333333333; 216000,88.4333333333333; 219600,55.68; 223200,32.0866666666667;
          226800,21.9783333333333; 230400,18.27; 234000,18.27; 237600,18.27; 241200,
          18.27; 244800,18.27; 248400,18.27; 252000,18.27; 255600,18.27; 259200,18.27;
          262800,18.27; 266400,18.27; 270000,18.27; 273600,18.27; 277200,18.27; 280800,
          18.27; 284400,20.825; 288000,48.05; 291600,61.1666666666667; 295200,73.745;
          298800,141.025; 302400,48.995; 306000,59.8483333333333; 309600,40.13; 313200,
          21.2766666666667; 316800,18.27; 320400,18.27; 324000,18.27; 327600,18.27;
          331200,18.27; 334800,18.27; 338400,18.27; 342000,18.27; 345600,18.27; 349200,
          18.27; 352800,18.27; 356400,18.27; 360000,18.27; 363600,18.27; 367200,18.27;
          370800,19.5866666666667; 374400,43.015; 378000,158.393333333333; 381600,
          121.845; 385200,335.438333333333; 388800,392.486666666667; 392400,214.865;
          396000,57.4966666666667; 399600,30.5583333333333; 403200,18.27; 406800,18.27;
          410400,18.27; 414000,18.27; 417600,18.27; 421200,18.27; 424800,18.27; 428400,
          18.27; 432000,18.27; 435600,18.27; 439200,18.27; 442800,18.27; 446400,18.27;
          450000,18.27; 453600,18.27; 457200,44.2116666666667; 460800,245.143333333333;
          464400,90.9916666666667; 468000,101.758333333333; 471600,66.405; 475200,
          44.5433333333333; 478800,42.7283333333333; 482400,36.9116666666667; 486000,
          26.145; 489600,18.27; 493200,18.27; 496800,18.27; 500400,18.27; 504000,18.27;
          507600,18.27; 511200,18.27; 514800,18.27; 518400,18.27; 522000,18.27; 525600,
          18.27; 529200,18.27; 532800,18.27; 536400,18.27; 540000,18.27; 543600,18.6816666666667;
          547200,23.0083333333333; 550800,25.94; 554400,29.2383333333333; 558000,33.2383333333333;
          561600,38.15; 565200,52.835; 568800,26.3516666666667; 572400,19.0933333333333;
          576000,18.435; 579600,18.27; 583200,18.27; 586800,18.27; 590400,18.27; 594000,
          18.27; 597600,18.27; 601200,18.27; 604800,18.27; 608400,18.27; 612000,18.27;
          615600,18.27; 619200,18.27; 622800,18.27; 626400,18.27; 630000,20.33; 633600,
          29.8166666666667; 637200,38.1083333333333; 640800,36.415; 644400,30.1866666666667;
          648000,30.6816666666667; 651600,26.475; 655200,23.0483333333333; 658800,
          19.5883333333333; 662400,18.27; 666000,18.27; 669600,18.27; 673200,18.27;
          676800,18.27; 680400,18.27; 684000,18.27; 687600,18.27; 691200,18.27; 694800,
          18.27; 698400,18.27; 702000,18.27; 705600,18.27; 709200,18.27; 712800,18.27;
          716400,18.27; 720000,21.1116666666667; 723600,26.97; 727200,30.515; 730800,
          31.7133333333333; 734400,32.9933333333333; 738000,34.3933333333333; 741600,
          52.96; 745200,36.4166666666667; 748800,18.6816666666667; 752400,18.27; 756000,
          18.27; 759600,18.27; 763200,18.27; 766800,18.27; 770400,18.27; 774000,18.27;
          777600,18.27; 781200,18.27; 784800,18.27; 788400,18.27; 792000,18.27; 795600,
          18.27; 799200,18.27; 802800,18.6816666666667; 806400,23.0083333333333; 810000,
          35.2183333333333; 813600,51.1; 817200,50.3183333333333; 820800,52.0483333333333;
          824400,31.2183333333333; 828000,29.24; 831600,27.7133333333333; 835200,18.31;
          838800,18.27; 842400,18.27; 846000,18.27; 849600,18.27; 853200,18.27; 856800,
          18.27; 860400,18.27; 864000,18.27; 867600,18.27; 871200,18.27; 874800,18.27;
          878400,18.27; 882000,18.27; 885600,18.27; 889200,18.805; 892800,28; 896400,
          37.4483333333333; 900000,110.048333333333; 903600,77.0483333333333; 907200,
          36.7866666666667; 910800,58.2783333333333; 914400,30.9716666666667; 918000,
          21.61; 921600,18.27; 925200,18.27; 928800,18.27; 932400,18.27; 936000,18.27;
          939600,18.27; 943200,18.27; 946800,18.27; 950400,18.27; 954000,18.27; 957600,
          18.27; 961200,18.27; 964800,18.27; 968400,18.27; 972000,18.27; 975600,22.5166666666667;
          979200,40.5833333333333; 982800,65.9116666666667; 986400,103.696666666667;
          990000,127.25; 993600,85.9166666666667; 997200,53.37; 1000800,22.3083333333333;
          1004400,24.245; 1008000,18.27; 1011600,18.27; 1015200,18.27; 1018800,18.27;
          1022400,18.27; 1026000,18.27; 1029600,18.27; 1033200,18.27; 1036800,18.27;
          1040400,18.27; 1044000,18.27; 1047600,18.27; 1051200,18.27; 1054800,18.27;
          1058400,18.27; 1062000,19.5483333333333; 1065600,49.2866666666667; 1069200,
          196.715; 1072800,342.7; 1076400,267.831666666667; 1080000,149.61; 1083600,
          167.923333333333; 1087200,90.95; 1090800,39.015; 1094400,19.175; 1098000,
          18.27; 1101600,18.2283333333333; 1105200,18.27; 1108800,18.2283333333333;
          1112400,18.27; 1116000,18.27; 1119600,18.27; 1123200,18.27; 1126800,18.2283333333333;
          1130400,18.27; 1134000,18.27; 1137600,18.27; 1141200,18.27; 1144800,18.27;
          1148400,18.27; 1152000,19.2583333333333; 1155600,28.8266666666667; 1159200,
          30.0616666666667; 1162800,32.125; 1166400,36.7883333333333; 1170000,43.1016666666667;
          1173600,39.965; 1177200,24.9883333333333; 1180800,18.27; 1184400,18.27;
          1188000,18.27; 1191600,18.27; 1195200,18.27; 1198800,18.27; 1202400,18.27;
          1206000,18.27; 1209600,18.27; 1213200,18.27; 1216800,18.27; 1220400,18.27;
          1224000,18.27; 1227600,18.27; 1231200,18.27; 1234800,46.3183333333333; 1238400,
          260.776666666667; 1242000,410.348333333333; 1245600,482.906666666667; 1249200,
          500.976666666667; 1252800,398.716666666667; 1256400,309.781666666667; 1260000,
          145.976666666667; 1263600,33.8583333333333; 1267200,18.7233333333333; 1270800,
          18.27; 1274400,18.27; 1278000,18.27; 1281600,18.2283333333333; 1285200,18.27;
          1288800,18.27; 1292400,18.1033333333333; 1296000,18.27; 1299600,18.2283333333333;
          1303200,18.27; 1306800,18.2283333333333; 1310400,18.145; 1314000,18.2283333333333;
          1317600,18.27; 1321200,18.3516666666667; 1324800,23.7516666666667; 1328400,
          47.305; 1332000,75.3566666666667; 1335600,76.72; 1339200,105.346666666667;
          1342800,180.09; 1346400,31.3833333333333; 1350000,24.2883333333333; 1353600,
          18.7233333333333; 1357200,18.27; 1360800,18.27; 1364400,18.27; 1368000,18.27;
          1371600,18.27; 1375200,18.27; 1378800,18.27; 1382400,18.2283333333333; 1386000,
          18.27; 1389600,18.145; 1393200,18.2283333333333; 1396800,18.2283333333333;
          1400400,18.02; 1404000,18.2283333333333; 1407600,20.4116666666667; 1411200,
          32.58; 1414800,68.7983333333333; 1418400,76.8833333333333; 1422000,124.528333333333;
          1425600,144.08; 1429200,205.048333333333; 1432800,176.503333333333; 1436400,
          41.9016666666667; 1440000,19.5883333333333; 1443600,18.2283333333333; 1447200,
          18.2283333333333; 1450800,18.145; 1454400,18.145; 1458000,18.145; 1461600,
          18.1033333333333; 1465200,17.9366666666667; 1468800,18.0616666666667; 1472400,
          18.0616666666667; 1476000,17.69; 1479600,17.73; 1483200,17.8133333333333;
          1486800,17.895; 1490400,17.7733333333333; 1494000,23.34; 1497600,47.9666666666667;
          1501200,75.1083333333333; 1504800,123.908333333333; 1508400,114.01; 1512000,
          75.3983333333333; 1515600,76.43; 1519200,55.1433333333333; 1522800,34.3116666666667;
          1526400,19.465; 1530000,18.2283333333333; 1533600,18.27; 1537200,18.1866666666667;
          1540800,18.145; 1544400,18.1866666666667; 1548000,18.145; 1551600,18.145;
          1555200,18.1033333333333; 1558800,18.1866666666667; 1562400,18.145; 1566000,
          18.2283333333333; 1569600,18.27; 1573200,18.2283333333333; 1576800,18.1866666666667;
          1580400,19.5466666666667; 1584000,35.055; 1587600,57.37; 1591200,87.4833333333333;
          1594800,102.665; 1598400,98.4983333333333; 1602000,90.1233333333333; 1605600,
          70.86; 1609200,35.26; 1612800,20.4133333333333; 1616400,18.27; 1620000,18.27;
          1623600,18.27; 1627200,18.27; 1630800,18.27; 1634400,18.27; 1638000,18.27;
          1641600,18.27; 1645200,18.27; 1648800,18.27; 1652400,18.27; 1656000,18.27;
          1659600,18.27; 1663200,18.27; 1666800,25.0333333333333; 1670400,60.7966666666667;
          1674000,80.185; 1677600,142.801666666667; 1681200,87.6916666666667; 1684800,
          136.076666666667; 1688400,100.148333333333; 1692000,69.17; 1695600,42.975;
          1699200,19.5883333333333; 1702800,18.27; 1706400,18.27; 1710000,18.27; 1713600,
          18.27; 1717200,18.27; 1720800,18.27; 1724400,18.27; 1728000,18.27; 1731600,
          18.27; 1735200,18.27; 1738800,18.27; 1742400,18.27; 1746000,18.27; 1749600,
          18.27; 1753200,21.2783333333333; 1756800,41.0366666666667; 1760400,99.6566666666667;
          1764000,203.726666666667; 1767600,152.29; 1771200,92.64; 1774800,56.9183333333333;
          1778400,42.44; 1782000,29.1966666666667; 1785600,19.5883333333333; 1789200,
          18.27; 1792800,18.27; 1796400,18.27; 1800000,18.27; 1803600,18.27; 1807200,
          18.27; 1810800,18.27; 1814400,18.27; 1818000,18.0616666666667; 1821600,18.0616666666667;
          1825200,18.02; 1828800,17.9383333333333; 1832400,17.8966666666667; 1836000,
          18.02; 1839600,50.6466666666667; 1843200,212.346666666667; 1846800,332.838333333333;
          1850400,384.073333333333; 1854000,481.506666666667; 1857600,437.741666666667;
          1861200,288.496666666667; 1864800,220.351666666667; 1868400,55.68; 1872000,
          20.0016666666667; 1875600,18.27; 1879200,18.27; 1882800,18.27; 1886400,18.27;
          1890000,18.27; 1893600,18.27; 1897200,18.27; 1900800,18.27; 1904400,18.27;
          1908000,18.27; 1911600,18.27; 1915200,18.27; 1918800,18.27; 1922400,18.27;
          1926000,25.1566666666667; 1929600,50.1933333333333; 1933200,95.1583333333333;
          1936800,363.818333333333; 1940400,464.923333333333; 1944000,444.708333333333;
          1947600,373.925; 1951200,258.135; 1954800,78.2033333333333; 1958400,20.8666666666667;
          1962000,18.27; 1965600,18.27; 1969200,18.27; 1972800,18.27; 1976400,18.27;
          1980000,18.27; 1983600,18.27; 1987200,18.27; 1990800,18.2283333333333; 1994400,
          18.27; 1998000,18.27; 2001600,18.27; 2005200,18.27; 2008800,18.2283333333333;
          2012400,58.5266666666667; 2016000,221.875; 2019600,384.238333333333; 2023200,
          478.411666666667; 2026800,491.901666666667; 2030400,452.835; 2034000,375.656666666667;
          2037600,262.386666666667; 2041200,80.5966666666667; 2044800,20.8666666666667;
          2048400,18.27; 2052000,18.27; 2055600,18.27; 2059200,18.27; 2062800,18.27;
          2066400,18.27; 2070000,18.27; 2073600,18.27; 2077200,18.2283333333333; 2080800,
          18.27; 2084400,18.145; 2088000,18.0616666666667; 2091600,18.0616666666667;
          2095200,18.1866666666667; 2098800,49.1616666666667; 2102400,273.071666666667;
          2106000,400.658333333333; 2109600,469.088333333333; 2113200,486.661666666667;
          2116800,451.64; 2120400,374.296666666667; 2124000,258.961666666667; 2127600,
          79.1916666666667; 2131200,20.8666666666667; 2134800,18.27; 2138400,18.27;
          2142000,18.27; 2145600,18.27; 2149200,18.27; 2152800,18.27; 2156400,18.27;
          2160000,18.27; 2163600,18.2283333333333; 2167200,18.2283333333333; 2170800,
          18.1866666666667; 2174400,18.2283333333333; 2178000,18.145; 2181600,18.6816666666667;
          2185200,45.9033333333333; 2188800,143.956666666667; 2192400,272.698333333333;
          2196000,377.226666666667; 2199600,440.503333333333; 2203200,382.01; 2206800,
          320.545; 2210400,164.665; 2214000,56.3433333333333; 2217600,22.97; 2221200,
          18.27; 2224800,18.27; 2228400,18.27; 2232000,18.27; 2235600,18.27; 2239200,
          18.27; 2242800,18.2283333333333; 2246400,18.27; 2250000,18.27; 2253600,18.27;
          2257200,18.145; 2260800,18.1866666666667; 2264400,18.1033333333333; 2268000,
          18.27; 2271600,58.3616666666667; 2275200,243.783333333333; 2278800,372.646666666667;
          2282400,302.191666666667; 2286000,285.855; 2289600,308.421666666667; 2293200,
          322.771666666667; 2296800,259.498333333333; 2300400,82.7816666666667; 2304000,
          24.9516666666667; 2307600,18.27; 2311200,18.27; 2314800,18.27; 2318400,18.27;
          2322000,18.27; 2325600,18.27; 2329200,18.27; 2332800,18.27; 2336400,18.27;
          2340000,18.27; 2343600,18.2283333333333; 2347200,18.27; 2350800,18.27; 2354400,
          18.6816666666667; 2358000,35.1783333333333; 2361600,89.96; 2365200,230.293333333333;
          2368800,299.346666666667; 2372400,456.918333333333; 2376000,193.911666666667;
          2379600,144.988333333333; 2383200,88.68; 2386800,43.1816666666667; 2390400,
          20.865; 2394000,18.27; 2397600,18.27; 2401200,18.27; 2404800,18.27; 2408400,
          18.27; 2412000,18.27; 2415600,18.27; 2419200,18.27; 2422800,18.27; 2426400,
          18.27; 2430000,18.27; 2433600,18.27; 2437200,18.27; 2440800,18.27; 2444400,
          19.0516666666667; 2448000,29.7333333333333; 2451600,191.6; 2455200,456.876666666667;
          2458800,389.93; 2462400,114.463333333333; 2466000,65.0433333333333; 2469600,
          44.0916666666667; 2473200,35.1783333333333; 2476800,21.7733333333333; 2480400,
          18.27; 2484000,18.27; 2487600,18.27; 2491200,18.27; 2494800,18.27; 2498400,
          18.27; 2502000,18.27; 2505600,18.27; 2509200,18.27; 2512800,18.27; 2516400,
          18.27; 2520000,18.27; 2523600,18.27; 2527200,18.27; 2530800,29.4466666666667;
          2534400,211.483333333333; 2538000,387.865; 2541600,313.576666666667; 2545200,
          261.518333333333; 2548800,473.75; 2552400,314.278333333333; 2556000,137.19;
          2559600,34.105; 2563200,18.7233333333333; 2566800,18.27; 2570400,18.27;
          2574000,18.27; 2577600,18.27; 2581200,18.27; 2584800,18.27; 2588400,18.27;
          2592000,18.27; 2595600,18.27; 2599200,18.27; 2602800,18.27; 2606400,18.27;
          2610000,18.27; 2613600,18.27; 2617200,20.5766666666667; 2620800,28.0016666666667;
          2624400,46.0683333333333; 2628000,53.0416666666667; 2631600,41.4083333333333;
          2635200,43.9666666666667; 2638800,45.2033333333333; 2642400,38.8916666666667;
          2646000,26.3933333333333; 2649600,20; 2653200,18.27; 2656800,18.27; 2660400,
          18.27; 2664000,18.27; 2667600,18.27; 2671200,18.27; 2674800,18.27; 2678400,
          18.27; 2682000,18.27; 2685600,18.27; 2689200,18.27; 2692800,18.27; 2696400,
          18.27; 2700000,18.27; 2703600,23.63; 2707200,70.9016666666667; 2710800,69.2533333333333;
          2714400,102.17; 2718000,103.615; 2721600,92.3116666666667; 2725200,78.4516666666667;
          2728800,68.345; 2732400,55.7633333333333; 2736000,23.4216666666667; 2739600,
          18.27; 2743200,18.27; 2746800,18.27; 2750400,18.27; 2754000,18.27; 2757600,
          18.27; 2761200,18.27; 2764800,18.27; 2768400,18.27; 2772000,18.27; 2775600,
          18.27; 2779200,18.27; 2782800,18.27; 2786400,18.27; 2790000,25.6916666666667;
          2793600,54.0716666666667; 2797200,122.383333333333; 2800800,202.821666666667;
          2804400,355.651666666667; 2808000,308.38; 2811600,169.696666666667; 2815200,
          126.755; 2818800,51.9683333333333; 2822400,21.2783333333333; 2826000,18.27;
          2829600,18.27; 2833200,18.27; 2836800,18.27; 2840400,18.27; 2844000,18.27;
          2847600,18.27; 2851200,18.27; 2854800,18.27; 2858400,18.27; 2862000,18.27;
          2865600,18.27; 2869200,18.27; 2872800,18.27; 2876400,18.27; 2880000,30.1066666666667;
          2883600,42.7283333333333; 2887200,58.24; 2890800,61.0433333333333; 2894400,
          50.6483333333333; 2898000,85.09; 2901600,43.1816666666667; 2905200,32.9916666666667;
          2908800,19.5883333333333; 2912400,18.27; 2916000,18.27; 2919600,18.27; 2923200,
          18.27; 2926800,18.27; 2930400,18.27; 2934000,18.27; 2937600,18.27; 2941200,
          18.27; 2944800,18.27; 2948400,18.27; 2952000,18.27; 2955600,18.27; 2959200,
          18.27; 2962800,94.7033333333333; 2966400,223.691666666667; 2970000,189.128333333333;
          2973600,499.325; 2977200,377.101666666667; 2980800,186.443333333333; 2984400,
          113.801666666667; 2988000,60.6716666666667; 2991600,31.715; 2995200,20.4116666666667;
          2998800,18.27; 3002400,18.27; 3006000,18.27; 3009600,18.27; 3013200,18.27;
          3016800,18.27; 3020400,18.27; 3024000,18.27; 3027600,18.27; 3031200,18.27;
          3034800,18.27; 3038400,18.27; 3042000,18.27; 3045600,18.27; 3049200,31.5083333333333;
          3052800,175.14; 3056400,423.755; 3060000,505.39; 3063600,517.02; 3067200,
          477.38; 3070800,397.561666666667; 3074400,280.535; 3078000,109.553333333333;
          3081600,22.8866666666667; 3085200,18.27; 3088800,18.27; 3092400,18.27; 3096000,
          18.27; 3099600,18.27; 3103200,18.27; 3106800,18.27; 3110400,18.27; 3114000,
          18.27; 3117600,18.1866666666667; 3121200,18.27; 3124800,18.2283333333333;
          3128400,18.2283333333333; 3132000,18.27; 3135600,24.2466666666667; 3139200,
          46.2333333333333; 3142800,89.4216666666667; 3146400,116.566666666667; 3150000,
          391.208333333333; 3153600,397.77; 3157200,418.971666666667; 3160800,273.318333333333;
          3164400,107.12; 3168000,26.27; 3171600,18.27; 3175200,18.27; 3178800,18.27;
          3182400,18.27; 3186000,18.27; 3189600,18.27; 3193200,18.27; 3196800,18.27;
          3200400,18.27; 3204000,18.27; 3207600,18.27; 3211200,18.27; 3214800,18.27;
          3218400,18.27; 3222000,19.0533333333333; 3225600,22.225; 3229200,22.1416666666667;
          3232800,23.3783333333333; 3236400,26.475; 3240000,34.56; 3243600,45.3683333333333;
          3247200,50.1116666666667; 3250800,44.7883333333333; 3254400,23.3816666666667;
          3258000,18.27; 3261600,18.27; 3265200,18.27; 3268800,18.27; 3272400,18.27;
          3276000,18.27; 3279600,18.27; 3283200,18.27; 3286800,18.27; 3290400,18.27;
          3294000,18.27; 3297600,18.27; 3301200,18.27; 3304800,18.31; 3308400,35.3416666666667;
          3312000,76.9233333333333; 3315600,108.766666666667; 3319200,106.336666666667;
          3322800,122.341666666667; 3326400,52.34; 3330000,36.5; 3333600,36.2516666666667;
          3337200,27.5066666666667; 3340800,18.6816666666667; 3344400,18.27; 3348000,
          18.27; 3351600,18.27; 3355200,18.27; 3358800,18.27; 3362400,18.27; 3366000,
          18.27; 3369600,18.27; 3373200,18.27; 3376800,18.27; 3380400,18.27; 3384000,
          18.27; 3387600,18.27; 3391200,18.27; 3394800,20.4116666666667; 3398400,37.2416666666667;
          3402000,40.995; 3405600,34.5583333333333; 3409200,39.345; 3412800,35.4683333333333;
          3416400,37.1166666666667; 3420000,27.1316666666667; 3423600,20.2066666666667;
          3427200,19.135; 3430800,18.27; 3434400,18.27; 3438000,18.27; 3441600,18.27;
          3445200,18.27; 3448800,18.27; 3452400,18.27; 3456000,18.27; 3459600,18.27;
          3463200,18.27; 3466800,18.27; 3470400,18.27; 3474000,18.27; 3477600,18.27;
          3481200,30.6416666666667; 3484800,33.1983333333333; 3488400,59.0616666666667;
          3492000,71.11; 3495600,69.54; 3499200,187.968333333333; 3502800,86.0433333333333;
          3506400,49.9066666666667; 3510000,40.045; 3513600,25.65; 3517200,18.27;
          3520800,18.27; 3524400,18.27; 3528000,18.27; 3531600,18.27; 3535200,18.27;
          3538800,18.27; 3542400,18.27; 3546000,18.27; 3549600,18.27; 3553200,18.27;
          3556800,18.27; 3560400,18.27; 3564000,18.27; 3567600,26.02; 3571200,47.7583333333333;
          3574800,143.791666666667; 3578400,231.158333333333; 3582000,370.171666666667;
          3585600,413.483333333333; 3589200,366.128333333333; 3592800,52.0083333333333;
          3596400,31.385; 3600000,19.5883333333333; 3603600,18.27; 3607200,18.27;
          3610800,18.27; 3614400,18.27; 3618000,18.27; 3621600,18.27; 3625200,18.27;
          3628800,18.27; 3632400,18.2283333333333; 3636000,18.27; 3639600,18.27; 3643200,
          18.27; 3646800,18.27; 3650400,18.27; 3654000,45.5733333333333; 3657600,37.4883333333333;
          3661200,32.5783333333333; 3664800,30.8466666666667; 3668400,33.0333333333333;
          3672000,45.0383333333333; 3675600,33.0733333333333; 3679200,48.09; 3682800,
          38.89; 3686400,25.0733333333333; 3690000,18.27; 3693600,18.27; 3697200,18.27;
          3700800,18.27; 3704400,18.27; 3708000,18.27; 3711600,18.27; 3715200,18.27;
          3718800,18.27; 3722400,18.27; 3726000,18.27; 3729600,18.27; 3733200,18.27;
          3736800,18.8883333333333; 3740400,47.02; 3744000,29.7766666666667; 3747600,
          38.4383333333333; 3751200,79.4; 3754800,543.63; 3758400,506.46; 3762000,
          79.3166666666667; 3765600,46.5216666666667; 3769200,30.31; 3772800,21.69;
          3776400,18.27; 3780000,18.27; 3783600,18.27; 3787200,18.27; 3790800,18.27;
          3794400,18.27; 3798000,18.27; 3801600,18.27; 3805200,18.27; 3808800,18.27;
          3812400,18.27; 3816000,18.27; 3819600,18.27; 3823200,18.27; 3826800,24.33;
          3830400,45.2433333333333; 3834000,45.615; 3837600,62.8583333333333; 3841200,
          291.755; 3844800,157.691666666667; 3848400,95.4883333333333; 3852000,138.14;
          3855600,93.055; 3859200,30.065; 3862800,18.27; 3866400,18.27; 3870000,18.27;
          3873600,18.27; 3877200,18.27; 3880800,18.2283333333333; 3884400,18.27; 3888000,
          18.27; 3891600,18.27; 3895200,18.27; 3898800,18.27; 3902400,18.27; 3906000,
          18.27; 3909600,18.3933333333333; 3913200,30.1866666666667; 3916800,44.9533333333333;
          3920400,42.1533333333333; 3924000,48.915; 3927600,48.1316666666667; 3931200,
          46.8533333333333; 3934800,36.46; 3938400,29.6083333333333; 3942000,28.1233333333333;
          3945600,20.9466666666667; 3949200,18.27; 3952800,18.27; 3956400,18.27; 3960000,
          18.27; 3963600,18.27; 3967200,18.27; 3970800,18.27; 3974400,18.27; 3978000,
          18.27; 3981600,18.27; 3985200,18.27; 3988800,18.27; 3992400,18.27; 3996000,
          19.175; 3999600,129.808333333333; 4003200,337.335; 4006800,280.123333333333;
          4010400,129.19; 4014000,68.18; 4017600,52.2566666666667; 4021200,53.865;
          4024800,40.625; 4028400,31.4683333333333; 4032000,22.1033333333333; 4035600,
          18.27; 4039200,18.27; 4042800,18.27; 4046400,18.27; 4050000,18.27; 4053600,
          18.27; 4057200,18.27; 4060800,18.27; 4064400,18.27; 4068000,18.27; 4071600,
          18.27; 4075200,18.27; 4078800,18.27; 4082400,18.27; 4086000,22.6383333333333;
          4089600,33.1566666666667; 4093200,45.575; 4096800,67.4783333333333; 4100400,
          118.876666666667; 4104000,102.253333333333; 4107600,90.6183333333333; 4111200,
          94.4966666666667; 4114800,58.8983333333333; 4118400,30.1466666666667; 4122000,
          18.27; 4125600,18.27; 4129200,18.27; 4132800,18.27; 4136400,18.27; 4140000,
          18.27; 4143600,18.27; 4147200,18.27; 4150800,18.27; 4154400,18.27; 4158000,
          18.27; 4161600,18.27; 4165200,18.27; 4168800,20.29; 4172400,51.4333333333333;
          4176000,139.13; 4179600,166.15; 4183200,165.571666666667; 4186800,237.43;
          4190400,196.221666666667; 4194000,155.178333333333; 4197600,82.5766666666667;
          4201200,53.1633333333333; 4204800,29.94; 4208400,18.27; 4212000,18.27; 4215600,
          18.27; 4219200,18.27; 4222800,18.27; 4226400,18.27; 4230000,18.27; 4233600,
          18.27; 4237200,18.27; 4240800,18.27; 4244400,18.27; 4248000,18.27; 4251600,
          18.27; 4255200,18.6816666666667; 4258800,26.7216666666667; 4262400,40.9533333333333;
          4266000,45.7816666666667; 4269600,84.35; 4273200,217.343333333333; 4276800,
          265.105; 4280400,433.323333333333; 4284000,124.486666666667; 4287600,47.76;
          4291200,28.8266666666667; 4294800,18.3516666666667; 4298400,18.27; 4302000,
          18.27; 4305600,18.27; 4309200,18.27; 4312800,18.2283333333333; 4316400,18.1033333333333;
          4320000,18.02; 4323600,18.02; 4327200,17.855; 4330800,17.9366666666667;
          4334400,17.8966666666667; 4338000,17.9783333333333; 4341600,24.0833333333333;
          4345200,72.0566666666667; 4348800,67.395; 4352400,81.3366666666667; 4356000,
          142.8; 4359600,134.056666666667; 4363200,177.493333333333; 4366800,123.621666666667;
          4370400,58.0733333333333; 4374000,36.5816666666667; 4377600,27.3416666666667;
          4381200,18.27; 4384800,18.27; 4388400,18.27; 4392000,18.27; 4395600,18.27;
          4399200,18.27; 4402800,18.27; 4406400,18.27; 4410000,18.27; 4413600,18.27;
          4417200,18.27; 4420800,18.27; 4424400,18.27; 4428000,19.5466666666667; 4431600,
          134.633333333333; 4435200,350.413333333333; 4438800,463.19; 4442400,527.128333333333;
          4446000,540.698333333333; 4449600,501.8; 4453200,376.646666666667; 4456800,
          307.966666666667; 4460400,164.496666666667; 4464000,27.2583333333333; 4467600,
          18.805; 4471200,18.27; 4474800,18.27; 4478400,18.27; 4482000,18.27; 4485600,
          18.27; 4489200,18.27; 4492800,18.27; 4496400,18.27; 4500000,18.27; 4503600,
          18.27; 4507200,18.27; 4510800,18.27; 4514400,23.7533333333333; 4518000,131.17;
          4521600,66.94; 4525200,94.2083333333333; 4528800,80.965; 4532400,75.6466666666667;
          4536000,58.28; 4539600,57.9083333333333; 4543200,37.2833333333333; 4546800,
          43.51; 4550400,19.7116666666667; 4554000,18.27; 4557600,18.27; 4561200,18.27;
          4564800,18.27; 4568400,18.27; 4572000,18.27; 4575600,18.27; 4579200,18.27;
          4582800,18.27; 4586400,18.27; 4590000,18.27; 4593600,18.27; 4597200,18.27;
          4600800,19.795; 4604400,27.135; 4608000,43.5533333333333; 4611600,54.4033333333333;
          4615200,71.5633333333333; 4618800,74.8216666666667; 4622400,70.3666666666667;
          4626000,72.8816666666667; 4629600,56.0533333333333; 4633200,46.565; 4636800,
          24.8666666666667; 4640400,18.31; 4644000,18.27; 4647600,18.27; 4651200,18.27;
          4654800,18.27; 4658400,18.27; 4662000,18.27; 4665600,18.27; 4669200,18.27;
          4672800,18.27; 4676400,18.27; 4680000,18.27; 4683600,18.27; 4687200,18.6816666666667;
          4690800,30.6416666666667; 4694400,65.7033333333333; 4698000,77.0883333333333;
          4701600,102.251666666667; 4705200,162.806666666667; 4708800,117.311666666667;
          4712400,138.638333333333; 4716000,125.68; 4719600,75.0666666666667; 4723200,
          31.2183333333333; 4726800,18.3933333333333; 4730400,18.27; 4734000,18.27;
          4737600,18.27; 4741200,18.27; 4744800,18.27; 4748400,18.27; 4752000,18.27;
          4755600,18.27; 4759200,18.27; 4762800,18.27; 4766400,18.27; 4770000,18.27;
          4773600,19.5466666666667; 4777200,30.105; 4780800,43.5116666666667; 4784400,
          57.4533333333333; 4788000,69.9933333333333; 4791600,90.5366666666667; 4795200,
          64.26; 4798800,53; 4802400,47.3916666666667; 4806000,40.9533333333333; 4809600,
          23.7933333333333; 4813200,18.27; 4816800,18.27; 4820400,18.27; 4824000,18.27;
          4827600,18.27; 4831200,18.27; 4834800,18.27; 4838400,18.27; 4842000,18.27;
          4845600,18.27; 4849200,18.27; 4852800,18.27; 4856400,18.27; 4860000,19.135;
          4863600,34.6016666666667; 4867200,54.32; 4870800,123.083333333333; 4874400,
          263.953333333333; 4878000,474.451666666667; 4881600,393.683333333333; 4885200,
          288.58; 4888800,221.63; 4892400,111.943333333333; 4896000,40.1716666666667;
          4899600,19.175; 4903200,18.27; 4906800,18.27; 4910400,18.27; 4914000,18.27;
          4917600,18.27; 4921200,18.27; 4924800,18.2283333333333; 4928400,18.27; 4932000,
          18.27; 4935600,18.27; 4939200,18.27; 4942800,18.27; 4946400,25.1566666666667;
          4950000,84.64; 4953600,132.488333333333; 4957200,164.293333333333; 4960800,
          217.465; 4964400,162.148333333333; 4968000,88.6416666666667; 4971600,54.4833333333333;
          4975200,61.58; 4978800,54.65; 4982400,31.795; 4986000,18.27; 4989600,18.27;
          4993200,18.27; 4996800,18.27; 5000400,18.27; 5004000,18.27; 5007600,18.27;
          5011200,18.27; 5014800,18.27; 5018400,18.27; 5022000,18.27; 5025600,18.27;
          5029200,18.27; 5032800,19.5466666666667; 5036400,40.2116666666667; 5040000,
          51.4316666666667; 5043600,186.775; 5047200,422.681666666667; 5050800,181.576666666667;
          5054400,118.091666666667; 5058000,155.176666666667; 5061600,113.183333333333;
          5065200,48.8733333333333; 5068800,28.3716666666667; 5072400,18.5166666666667;
          5076000,18.27; 5079600,18.27; 5083200,18.27; 5086800,18.27; 5090400,18.27;
          5094000,18.27; 5097600,18.27; 5101200,18.27; 5104800,18.27; 5108400,18.27;
          5112000,18.27; 5115600,18.27; 5119200,18.27; 5122800,20.865; 5126400,26.3916666666667;
          5130000,30.97; 5133600,32.6216666666667; 5137200,30.845; 5140800,34.0266666666667;
          5144400,33.115; 5148000,28.2066666666667; 5151600,23.875; 5155200,19.9183333333333;
          5158800,18.27; 5162400,18.27; 5166000,18.27; 5169600,18.27; 5173200,18.27;
          5176800,18.27; 5180400,18.27; 5184000,18.27; 5187600,18.27; 5191200,18.27;
          5194800,18.27; 5198400,18.27; 5202000,18.27; 5205600,19.5866666666667; 5209200,
          38.4783333333333; 5212800,113.926666666667; 5216400,308.75; 5220000,428.788333333333;
          5223600,544.411666666667; 5227200,469.46; 5230800,335.768333333333; 5234400,
          260.611666666667; 5238000,122.588333333333; 5241600,42.85; 5245200,19.63;
          5248800,18.27; 5252400,18.27; 5256000,18.27; 5259600,18.27; 5263200,18.27;
          5266800,18.27; 5270400,18.27; 5274000,18.27; 5277600,18.27; 5281200,18.27;
          5284800,18.27; 5288400,18.27; 5292000,21.3216666666667; 5295600,47.1416666666667;
          5299200,59.8066666666667; 5302800,86.865; 5306400,125.806666666667; 5310000,
          136.078333333333; 5313600,179.473333333333; 5317200,138.096666666667; 5320800,
          41.5716666666667; 5324400,23.875; 5328000,19.5883333333333; 5331600,18.27;
          5335200,18.27; 5338800,18.27; 5342400,18.27; 5346000,18.27; 5349600,18.27;
          5353200,18.27; 5356800,18.27; 5360400,18.27; 5364000,18.27; 5367600,18.27;
          5371200,18.27; 5374800,18.27; 5378400,21.2366666666667; 5382000,31.92; 5385600,
          54.2383333333333; 5389200,73.42; 5392800,119.371666666667; 5396400,235.323333333333;
          5400000,258.63; 5403600,52.38; 5407200,42.0666666666667; 5410800,43.5116666666667;
          5414400,27.3433333333333; 5418000,19.2583333333333; 5421600,18.27; 5425200,
          18.27; 5428800,18.27; 5432400,18.27; 5436000,18.27; 5439600,18.27; 5443200,
          18.27; 5446800,18.27; 5450400,18.27; 5454000,18.27; 5457600,18.2283333333333;
          5461200,18.27; 5464800,25.4433333333333; 5468400,39.7166666666667; 5472000,
          67.4383333333333; 5475600,79.1933333333333; 5479200,54.7316666666667; 5482800,
          99.035; 5486400,104.478333333333; 5490000,67.3983333333333; 5493600,39.345;
          5497200,33.115; 5500800,24.2866666666667; 5504400,18.27; 5508000,18.27;
          5511600,18.27; 5515200,18.27; 5518800,18.27; 5522400,18.27; 5526000,18.27;
          5529600,18.27; 5533200,18.27; 5536800,18.27; 5540400,18.27; 5544000,18.27;
          5547600,18.27; 5551200,18.31; 5554800,26.7633333333333; 5558400,41.0783333333333;
          5562000,76.2216666666667; 5565600,151.505; 5569200,301.49; 5572800,541.151666666667;
          5576400,230.703333333333; 5580000,74.6133333333333; 5583600,61.33; 5587200,
          28.7866666666667; 5590800,18.27; 5594400,18.27; 5598000,18.27; 5601600,18.27;
          5605200,18.27; 5608800,18.27; 5612400,18.27; 5616000,18.27; 5619600,18.27;
          5623200,18.27; 5626800,18.27; 5630400,18.2283333333333; 5634000,18.145;
          5637600,22.9283333333333; 5641200,40.995; 5644800,71.2316666666667; 5648400,
          122.753333333333; 5652000,386.838333333333; 5655600,168.42; 5659200,85.0516666666667;
          5662800,120.445; 5666400,144.368333333333; 5670000,141.231666666667; 5673600,
          29.98; 5677200,19.63; 5680800,18.27; 5684400,18.27; 5688000,18.27; 5691600,
          18.27; 5695200,18.2283333333333; 5698800,18.27; 5702400,18.1033333333333;
          5706000,18.2283333333333; 5709600,18.2283333333333; 5713200,18.2283333333333;
          5716800,18.27; 5720400,18.2283333333333; 5724000,23.38; 5727600,95.6533333333333;
          5731200,322.61; 5734800,501.676666666667; 5738400,540.493333333333; 5742000,
          569.16; 5745600,498.046666666667; 5749200,315.845; 5752800,175.143333333333;
          5756400,109.635; 5760000,39.715; 5763600,18.27; 5767200,18.27; 5770800,18.27;
          5774400,18.27; 5778000,18.27; 5781600,18.27; 5785200,18.27; 5788800,18.27;
          5792400,18.1866666666667; 5796000,18.1866666666667; 5799600,18.2283333333333;
          5803200,18.1866666666667; 5806800,18.2283333333333; 5810400,23.3; 5814000,
          36.6633333333333; 5817600,100.273333333333; 5821200,113.265; 5824800,320.218333333333;
          5828400,291.675; 5832000,266.635; 5835600,134.881666666667; 5839200,87.0716666666667;
          5842800,78.33; 5846400,39.7166666666667; 5850000,20.33; 5853600,18.27; 5857200,
          18.27; 5860800,18.27; 5864400,18.27; 5868000,18.27; 5871600,18.2283333333333;
          5875200,18.1866666666667; 5878800,18.145; 5882400,17.9783333333333; 5886000,
          17.895; 5889600,17.65; 5893200,17.8983333333333; 5896800,31.7533333333333;
          5900400,239.575; 5904000,387.331666666667; 5907600,508.773333333333; 5911200,
          567.306666666667; 5914800,549.483333333333; 5918400,331.438333333333; 5922000,
          245.888333333333; 5925600,120.031666666667; 5929200,56.0933333333333; 5932800,
          32.7033333333333; 5936400,18.31; 5940000,18.27; 5943600,18.27; 5947200,18.27;
          5950800,18.27; 5954400,18.27; 5958000,18.27; 5961600,18.27; 5965200,18.27;
          5968800,18.27; 5972400,18.1866666666667; 5976000,18.1033333333333; 5979600,
          18.1866666666667; 5983200,29.6516666666667; 5986800,238.791666666667; 5990400,
          383.493333333333; 5994000,496.188333333333; 5997600,557.323333333333; 6001200,
          569.531666666667; 6004800,515.741666666667; 6008400,432.583333333333; 6012000,
          325.991666666667; 6015600,193.993333333333; 6019200,48.9983333333333; 6022800,
          22.515; 6026400,18.27; 6030000,18.27; 6033600,18.27; 6037200,18.27; 6040800,
          18.27; 6044400,18.27; 6048000,18.27; 6051600,18.27; 6055200,18.2283333333333;
          6058800,18.27; 6062400,18.145; 6066000,18.2283333333333; 6069600,35.88;
          6073200,145.523333333333; 6076800,280.246666666667; 6080400,239.203333333333;
          6084000,358.126666666667; 6087600,401.026666666667; 6091200,493.385; 6094800,
          331.851666666667; 6098400,243.206666666667; 6102000,123.206666666667; 6105600,
          55.4333333333333; 6109200,22.9283333333333; 6112800,18.27; 6116400,18.27;
          6120000,18.27; 6123600,18.27; 6127200,18.27; 6130800,18.27; 6134400,18.27;
          6138000,18.27; 6141600,18.27; 6145200,18.27; 6148800,18.27; 6152400,18.27;
          6156000,24.7433333333333; 6159600,49.7416666666667; 6163200,120.98; 6166800,
          363.611666666667; 6170400,484.021666666667; 6174000,464.633333333333; 6177600,
          398.263333333333; 6181200,127.415; 6184800,97.1766666666667; 6188400,58.1966666666667;
          6192000,36.005; 6195600,21.2783333333333; 6199200,18.27; 6202800,18.27;
          6206400,18.27; 6210000,18.27; 6213600,18.27; 6217200,18.27; 6220800,18.27;
          6224400,18.27; 6228000,18.27; 6231600,18.27; 6235200,18.27; 6238800,18.27;
          6242400,22.515; 6246000,38.52; 6249600,64.5066666666667; 6253200,163.715;
          6256800,438.936666666667; 6260400,384.403333333333; 6264000,353.795; 6267600,
          224.393333333333; 6271200,270.633333333333; 6274800,140.656666666667; 6278400,
          48.6283333333333; 6282000,23.3816666666667; 6285600,18.27; 6289200,18.27;
          6292800,18.27; 6296400,18.27; 6300000,18.27; 6303600,18.27; 6307200,18.27;
          6310800,18.27; 6314400,18.27; 6318000,18.27; 6321600,18.27; 6325200,18.5583333333333;
          6328800,40.17; 6332400,137.436666666667; 6336000,353.795; 6339600,463.683333333333;
          6343200,537.48; 6346800,548.288333333333; 6350400,487.031666666667; 6354000,
          338.821666666667; 6357600,305.201666666667; 6361200,179.763333333333; 6364800,
          55.805; 6368400,23.63; 6372000,18.27; 6375600,18.27; 6379200,18.27; 6382800,
          18.27; 6386400,18.27; 6390000,18.27; 6393600,18.27; 6397200,18.27; 6400800,
          18.27; 6404400,18.27; 6408000,18.1866666666667; 6411600,18.5983333333333;
          6415200,47.2633333333333; 6418800,192.59; 6422400,344.596666666667; 6426000,
          468.263333333333; 6429600,527.25; 6433200,504.895; 6436800,508.358333333333;
          6440400,377.636666666667; 6444000,265.971666666667; 6447600,100.355; 6451200,
          37.6533333333333; 6454800,19.7533333333333; 6458400,18.27; 6462000,18.27;
          6465600,18.27; 6469200,18.27; 6472800,18.27; 6476400,18.27; 6480000,18.27;
          6483600,18.27; 6487200,18.27; 6490800,18.27; 6494400,18.27; 6498000,18.27;
          6501600,22.9266666666667; 6505200,27.96; 6508800,50.895; 6512400,67.1083333333333;
          6516000,86.825; 6519600,68.4683333333333; 6523200,67.435; 6526800,77.3783333333333;
          6530400,84.97; 6534000,95.86; 6537600,50.73; 6541200,25.4433333333333; 6544800,
          18.27; 6548400,18.27; 6552000,18.27; 6555600,18.27; 6559200,18.27; 6562800,
          18.27; 6566400,18.2283333333333; 6570000,18.145; 6573600,17.9366666666667;
          6577200,18.1033333333333; 6580800,17.9783333333333; 6584400,18.1433333333333;
          6588000,32.6616666666667; 6591600,97.3416666666667; 6595200,341.213333333333;
          6598800,501.676666666667; 6602400,565.325; 6606000,564.418333333333; 6609600,
          500.643333333333; 6613200,432.005; 6616800,315.228333333333; 6620400,188.755;
          6624000,60.3416666666667; 6627600,24.3716666666667; 6631200,18.27; 6634800,
          18.27; 6638400,18.27; 6642000,18.27; 6645600,18.27; 6649200,18.27; 6652800,
          18.27; 6656400,18.2283333333333; 6660000,18.1866666666667; 6663600,18.2283333333333;
          6667200,17.9783333333333; 6670800,19.0116666666667; 6674400,54.32; 6678000,
          240.686666666667; 6681600,386.835; 6685200,498.171666666667; 6688800,557.16;
          6692400,560.003333333333; 6696000,508.358333333333; 6699600,401.233333333333;
          6703200,296.168333333333; 6706800,161.28; 6710400,53.205; 6714000,24.6183333333333;
          6717600,18.27; 6721200,18.27; 6724800,18.27; 6728400,18.27; 6732000,18.27;
          6735600,18.27; 6739200,18.27; 6742800,18.27; 6746400,18.145; 6750000,18.2283333333333;
          6753600,18.27; 6757200,19.3; 6760800,66.0766666666667; 6764400,244.813333333333;
          6768000,389.271666666667; 6771600,496.315; 6775200,557.693333333333; 6778800,
          565.531666666667; 6782400,525.683333333333; 6786000,431.138333333333; 6789600,
          313.163333333333; 6793200,184.958333333333; 6796800,59.1866666666667; 6800400,
          24.66; 6804000,18.27; 6807600,18.27; 6811200,18.27; 6814800,18.27; 6818400,
          18.27; 6822000,18.27; 6825600,18.27; 6829200,18.27; 6832800,18.27; 6836400,
          18.2283333333333; 6840000,18.27; 6843600,19.5466666666667; 6847200,71.975;
          6850800,242.503333333333; 6854400,316.958333333333; 6858000,149.896666666667;
          6861600,196.386666666667; 6865200,325.54; 6868800,179.265; 6872400,201.498333333333;
          6876000,210.49; 6879600,92.3116666666667; 6883200,69.91; 6886800,23.835;
          6890400,18.27; 6894000,18.27; 6897600,18.27; 6901200,18.27; 6904800,18.27;
          6908400,18.27; 6912000,18.27; 6915600,18.27; 6919200,18.27; 6922800,18.27;
          6926400,18.27; 6930000,19.5883333333333; 6933600,52.2983333333333; 6937200,
          153.031666666667; 6940800,299.343333333333; 6944400,426.478333333333; 6948000,
          506.751666666667; 6951600,516.981666666667; 6955200,474.986666666667; 6958800,
          394.961666666667; 6962400,282.225; 6966000,161.158333333333; 6969600,64.4683333333333;
          6973200,26.4333333333333; 6976800,18.27; 6980400,18.27; 6984000,18.27; 6987600,
          18.27; 6991200,18.27; 6994800,18.27; 6998400,18.27; 7002000,18.27; 7005600,
          18.27; 7009200,18.27; 7012800,18.27; 7016400,19.5466666666667; 7020000,37.7383333333333;
          7023600,54.8983333333333; 7027200,119.951666666667; 7030800,121.186666666667;
          7034400,211.646666666667; 7038000,469.625; 7041600,487.776666666667; 7045200,
          408.946666666667; 7048800,286.805; 7052400,182.898333333333; 7056000,65.21;
          7059600,25.8983333333333; 7063200,18.27; 7066800,18.27; 7070400,18.27; 7074000,
          18.27; 7077600,18.27; 7081200,18.27; 7084800,18.27; 7088400,18.27; 7092000,
          18.27; 7095600,18.27; 7099200,18.27; 7102800,20.0016666666667; 7106400,79.3166666666667;
          7110000,230.993333333333; 7113600,380.031666666667; 7117200,415.836666666667;
          7120800,591.108333333333; 7124400,315.35; 7128000,456.22; 7131600,393.396666666667;
          7135200,321.331666666667; 7138800,112.193333333333; 7142400,73.7883333333333;
          7146000,27.175; 7149600,18.27; 7153200,18.27; 7156800,18.27; 7160400,18.27;
          7164000,18.27; 7167600,18.27; 7171200,18.27; 7174800,18.27; 7178400,18.27;
          7182000,18.27; 7185600,18.27; 7189200,20.5783333333333; 7192800,93.1783333333333;
          7196400,299.511666666667; 7200000,403.335; 7203600,510.421666666667; 7207200,
          556.581666666667; 7210800,547.791666666667; 7214400,511.451666666667; 7218000,
          424.745; 7221600,282.475; 7225200,168.375; 7228800,72.5933333333333; 7232400,
          27.175; 7236000,18.27; 7239600,18.27; 7243200,18.27; 7246800,18.27; 7250400,
          18.27; 7254000,18.27; 7257600,18.27; 7261200,18.27; 7264800,18.27; 7268400,
          18.27; 7272000,18.27; 7275600,19.63; 7279200,35.9616666666667; 7282800,61.91;
          7286400,204.925; 7290000,219.363333333333; 7293600,118.338333333333; 7297200,
          85.1316666666667; 7300800,90.045; 7304400,114.793333333333; 7308000,113.06;
          7311600,88.845; 7315200,53.9883333333333; 7318800,23.7933333333333; 7322400,
          18.27; 7326000,18.27; 7329600,18.27; 7333200,18.27; 7336800,18.27; 7340400,
          18.27; 7344000,18.27; 7347600,18.27; 7351200,18.27; 7354800,18.27; 7358400,
          18.27; 7362000,20.4116666666667; 7365600,63.8066666666667; 7369200,274.8;
          7372800,420.248333333333; 7376400,524.818333333333; 7380000,578.403333333333;
          7383600,577.948333333333; 7387200,530.221666666667; 7390800,443.39; 7394400,
          280.371666666667; 7398000,193.826666666667; 7401600,67.5583333333333; 7405200,
          25.9383333333333; 7408800,18.27; 7412400,18.27; 7416000,18.27; 7419600,18.27;
          7423200,18.27; 7426800,18.27; 7430400,18.27; 7434000,18.27; 7437600,18.27;
          7441200,18.27; 7444800,18.27; 7448400,24.2066666666667; 7452000,38.8516666666667;
          7455600,63.6833333333333; 7459200,59.3916666666667; 7462800,64.26; 7466400,
          96.355; 7470000,71.4383333333333; 7473600,100.313333333333; 7477200,86.5383333333333;
          7480800,130.426666666667; 7484400,75.8516666666667; 7488000,26.515; 7491600,
          18.27; 7495200,18.27; 7498800,18.27; 7502400,18.27; 7506000,18.27; 7509600,
          18.27; 7513200,18.27; 7516800,18.27; 7520400,18.27; 7524000,18.27; 7527600,
          18.27; 7531200,20.865; 7534800,44.3383333333333; 7538400,51.9266666666667;
          7542000,70.82; 7545600,59.3516666666667; 7549200,65.375; 7552800,133.316666666667;
          7556400,95.9816666666667; 7560000,89.26; 7563600,81.6683333333333; 7567200,
          92.3933333333333; 7570800,64.3016666666667; 7574400,29.8183333333333; 7578000,
          18.27; 7581600,18.27; 7585200,18.27; 7588800,18.27; 7592400,18.27; 7596000,
          18.27; 7599600,18.27; 7603200,18.27; 7606800,18.27; 7610400,18.27; 7614000,
          18.27; 7617600,19.7533333333333; 7621200,30.105; 7624800,73.295; 7628400,
          226.578333333333; 7632000,333.376666666667; 7635600,503.283333333333; 7639200,
          396.323333333333; 7642800,124.981666666667; 7646400,126.84; 7650000,61.9516666666667;
          7653600,53.6166666666667; 7657200,40.3766666666667; 7660800,21.0716666666667;
          7664400,18.27; 7668000,18.27; 7671600,18.27; 7675200,18.27; 7678800,18.27;
          7682400,18.27; 7686000,18.27; 7689600,18.27; 7693200,18.27; 7696800,18.27;
          7700400,18.27; 7704000,21.2366666666667; 7707600,41.9466666666667; 7711200,
          61.165; 7714800,158.518333333333; 7718400,243.08; 7722000,309.738333333333;
          7725600,352.021666666667; 7729200,485.135; 7732800,443.965; 7736400,315.266666666667;
          7740000,151.836666666667; 7743600,55.8883333333333; 7747200,28.0416666666667;
          7750800,18.27; 7754400,18.27; 7758000,18.27; 7761600,18.27; 7765200,18.27;
          7768800,18.27; 7772400,18.27; 7776000,18.27; 7779600,18.27; 7783200,18.27;
          7786800,18.27; 7790400,19.9583333333333; 7794000,30.8466666666667; 7797600,
          56.5866666666667; 7801200,93.4266666666667; 7804800,140.328333333333; 7808400,
          193.333333333333; 7812000,291.92; 7815600,241.06; 7819200,176.048333333333;
          7822800,83.7316666666667; 7826400,56.5883333333333; 7830000,27.2183333333333;
          7833600,23.0483333333333; 7837200,18.27; 7840800,18.27; 7844400,18.27; 7848000,
          18.27; 7851600,18.27; 7855200,18.27; 7858800,18.27; 7862400,18.27; 7866000,
          18.27; 7869600,18.27; 7873200,18.27; 7876800,18.31; 7880400,36.0866666666667;
          7884000,47.06; 7887600,54.8166666666667; 7891200,193.745; 7894800,191.683333333333;
          7898400,209.668333333333; 7902000,168.13; 7905600,144.575; 7909200,193.745;
          7912800,108.605; 7916400,66.6116666666667; 7920000,30.9716666666667; 7923600,
          18.27; 7927200,18.27; 7930800,18.27; 7934400,18.27; 7938000,18.27; 7941600,
          18.27; 7945200,18.27; 7948800,18.27; 7952400,18.27; 7956000,18.27; 7959600,
          18.27; 7963200,19.5066666666667; 7966800,32.25; 7970400,45.615; 7974000,
          74.5333333333333; 7977600,158.476666666667; 7981200,233.591666666667; 7984800,
          300.541666666667; 7988400,235.943333333333; 7992000,166.438333333333; 7995600,
          244.936666666667; 7999200,195.436666666667; 8002800,70.7783333333333; 8006400,
          37.6966666666667; 8010000,18.27; 8013600,18.27; 8017200,18.27; 8020800,18.27;
          8024400,18.27; 8028000,18.27; 8031600,18.27; 8035200,18.27; 8038800,18.27;
          8042400,18.27; 8046000,18.27; 8049600,20.825; 8053200,38.975; 8056800,61.1666666666667;
          8060400,84.5583333333333; 8064000,109.265; 8067600,117.803333333333; 8071200,
          106.171666666667; 8074800,93.755; 8078400,108.025; 8082000,88.6816666666667;
          8085600,69.17; 8089200,43.9233333333333; 8092800,23.835; 8096400,18.27;
          8100000,18.27; 8103600,18.27; 8107200,18.27; 8110800,18.27; 8114400,18.27;
          8118000,18.27; 8121600,18.27; 8125200,18.27; 8128800,18.27; 8132400,18.27;
          8136000,31.3816666666667; 8139600,43.8016666666667; 8143200,53.205; 8146800,
          59.0633333333333; 8150400,70.0766666666667; 8154000,56.5433333333333; 8157600,
          78.37; 8161200,80.1833333333333; 8164800,103.611666666667; 8168400,111.946666666667;
          8172000,90.7016666666667; 8175600,47.265; 8179200,34.725; 8182800,18.31;
          8186400,18.27; 8190000,18.27; 8193600,18.27; 8197200,18.27; 8200800,18.27;
          8204400,18.27; 8208000,18.27; 8211600,18.27; 8215200,18.27; 8218800,18.27;
          8222400,20.2883333333333; 8226000,28.825; 8229600,35.9616666666667; 8233200,
          55.64; 8236800,54.815; 8240400,79.9366666666667; 8244000,54.9366666666667;
          8247600,85.8366666666667; 8251200,80.925; 8254800,60.8383333333333; 8258400,
          45.615; 8262000,26.185; 8265600,18.5166666666667; 8269200,18.27; 8272800,
          18.27; 8276400,18.27; 8280000,18.27; 8283600,18.27; 8287200,18.27; 8290800,
          18.27; 8294400,18.27; 8298000,18.27; 8301600,18.27; 8305200,18.27; 8308800,
          20.865; 8312400,35.1383333333333; 8316000,58.1966666666667; 8319600,172.541666666667;
          8323200,293.985; 8326800,478.905; 8330400,507.618333333333; 8334000,163.098333333333;
          8337600,169.571666666667; 8341200,117.886666666667; 8344800,118.133333333333;
          8348400,43.5966666666667; 8352000,28.6183333333333; 8355600,18.7233333333333;
          8359200,18.27; 8362800,18.27; 8366400,18.27; 8370000,18.27; 8373600,18.27;
          8377200,18.27; 8380800,18.27; 8384400,18.27; 8388000,18.27; 8391600,18.27;
          8395200,24.6583333333333; 8398800,45.3266666666667; 8402400,222.703333333333;
          8406000,291.301666666667; 8409600,95.0733333333333; 8413200,152.948333333333;
          8416800,95.61; 8420400,171.8; 8424000,149.608333333333; 8427600,49.04; 8431200,
          63.9716666666667; 8434800,61.2933333333333; 8438400,31.3833333333333; 8442000,
          19.135; 8445600,18.27; 8449200,18.27; 8452800,18.27; 8456400,18.27; 8460000,
          18.27; 8463600,18.27; 8467200,18.27; 8470800,18.27; 8474400,18.27; 8478000,
          18.27; 8481600,29.7766666666667; 8485200,52.3383333333333; 8488800,54.0283333333333;
          8492400,68.305; 8496000,60.755; 8499600,58.65; 8503200,57.455; 8506800,48.585;
          8510400,94.7866666666667; 8514000,48.1733333333333; 8517600,47.925; 8521200,
          44.42; 8524800,26.3516666666667; 8528400,18.27; 8532000,18.27; 8535600,18.27;
          8539200,18.27; 8542800,18.27; 8546400,18.27; 8550000,18.27; 8553600,18.27;
          8557200,18.27; 8560800,18.27; 8564400,18.27; 8568000,19.9583333333333; 8571600,
          31.3816666666667; 8575200,55.3916666666667; 8578800,76.1816666666667; 8582400,
          57.95; 8586000,54.4816666666667; 8589600,125.598333333333; 8593200,194.695;
          8596800,161.075; 8600400,52.34; 8604000,67.56; 8607600,71.645; 8611200,39.7966666666667;
          8614800,19.135; 8618400,18.27; 8622000,18.27; 8625600,18.27; 8629200,18.27;
          8632800,18.27; 8636400,18.27; 8640000,18.27; 8643600,18.2283333333333; 8647200,
          18.27; 8650800,18.27; 8654400,33.6933333333333; 8658000,126.751666666667;
          8661600,282.513333333333; 8665200,394.135; 8668800,500.438333333333; 8672400,
          568.996666666667; 8676000,580.998333333333; 8679600,529.191666666667; 8683200,
          294.271666666667; 8686800,278.431666666667; 8690400,191.516666666667; 8694000,
          72.305; 8697600,28.5783333333333; 8701200,19.5466666666667; 8704800,18.27;
          8708400,18.27; 8712000,18.27; 8715600,18.27; 8719200,18.27; 8722800,18.27;
          8726400,18.27; 8730000,18.27; 8733600,18.27; 8737200,18.27; 8740800,28.825;
          8744400,207.151666666667; 8748000,149.976666666667; 8751600,382.878333333333;
          8755200,419.465; 8758800,289.526666666667; 8762400,322.073333333333; 8766000,
          215.69; 8769600,196.013333333333; 8773200,232.396666666667; 8776800,129.765;
          8780400,92.9283333333333; 8784000,34.27; 8787600,19.465; 8791200,18.27;
          8794800,18.27; 8798400,18.27; 8802000,18.27; 8805600,18.27; 8809200,18.27;
          8812800,18.27; 8816400,18.27; 8820000,18.27; 8823600,18.27; 8827200,27.1333333333333;
          8830800,178.4; 8834400,318.155; 8838000,405.605; 8841600,464.636666666667;
          8845200,505.096666666667; 8848800,525.891666666667; 8852400,536.78; 8856000,
          237.141666666667; 8859600,283.668333333333; 8863200,129.603333333333; 8866800,
          54.0283333333333; 8870400,30.6416666666667; 8874000,19.2166666666667; 8877600,
          18.27; 8881200,18.27; 8884800,18.27; 8888400,18.27; 8892000,18.27; 8895600,
          18.27; 8899200,18.27; 8902800,18.27; 8906400,18.27; 8910000,18.27; 8913600,
          19.2166666666667; 8917200,29.815; 8920800,60.715; 8924400,55.0183333333333;
          8928000,50.1133333333333; 8931600,75.1083333333333; 8935200,62.4466666666667;
          8938800,301.821666666667; 8942400,233.548333333333; 8946000,113.015; 8949600,
          133.725; 8953200,27.3833333333333; 8956800,22.145; 8960400,18.27; 8964000,
          18.27; 8967600,18.27; 8971200,18.27; 8974800,18.27; 8978400,18.27; 8982000,
          18.27; 8985600,18.27; 8989200,18.27; 8992800,18.27; 8996400,18.6416666666667;
          9000000,32.3316666666667; 9003600,176.916666666667; 9007200,341.378333333333;
          9010800,433.78; 9014400,482.368333333333; 9018000,582.113333333333; 9021600,
          555.015; 9025200,514.01; 9028800,230.373333333333; 9032400,273.976666666667;
          9036000,162.806666666667; 9039600,77.9133333333333; 9043200,33.4866666666667;
          9046800,18.765; 9050400,18.27; 9054000,18.27; 9057600,18.27; 9061200,18.27;
          9064800,18.27; 9068400,18.27; 9072000,18.27; 9075600,18.27; 9079200,18.27;
          9082800,18.27; 9086400,23.8783333333333; 9090000,49.6983333333333; 9093600,
          56.795; 9097200,90.3316666666667; 9100800,264.696666666667; 9104400,361.508333333333;
          9108000,340.183333333333; 9111600,152.41; 9115200,177.781666666667; 9118800,
          128.24; 9122400,80.4716666666667; 9126000,76.885; 9129600,30.145; 9133200,
          19.3416666666667; 9136800,18.27; 9140400,18.27; 9144000,18.27; 9147600,18.27;
          9151200,18.27; 9154800,18.27; 9158400,18.27; 9162000,18.27; 9165600,18.27;
          9169200,18.27; 9172800,20.2066666666667; 9176400,26.885; 9180000,49.2466666666667;
          9183600,178.358333333333; 9187200,554.186666666667; 9190800,473.048333333333;
          9194400,558.311666666667; 9198000,502.335; 9201600,247.41; 9205200,182.403333333333;
          9208800,152.163333333333; 9212400,49.33; 9216000,35.2616666666667; 9219600,
          20.2083333333333; 9223200,18.27; 9226800,18.27; 9230400,18.27; 9234000,18.27;
          9237600,18.27; 9241200,18.27; 9244800,18.27; 9248400,18.27; 9252000,18.27;
          9255600,18.27; 9259200,24.95; 9262800,47.72; 9266400,78.3716666666667; 9270000,
          78.945; 9273600,63.475; 9277200,59.395; 9280800,67.8916666666667; 9284400,
          155.876666666667; 9288000,240.438333333333; 9291600,61.83; 9295200,94.0033333333333;
          9298800,38.9333333333333; 9302400,18.7216666666667; 9306000,18.27; 9309600,
          18.27; 9313200,18.27; 9316800,18.27; 9320400,18.27; 9324000,18.27; 9327600,
          18.27; 9331200,18.27; 9334800,18.27; 9338400,18.27; 9342000,18.27; 9345600,
          25.8166666666667; 9349200,37.615; 9352800,65.3333333333333; 9356400,81.215;
          9360000,84.1833333333333; 9363600,68.1783333333333; 9367200,174.11; 9370800,
          312.378333333333; 9374400,202.985; 9378000,110.666666666667; 9381600,64.425;
          9385200,59.4733333333333; 9388800,32.1666666666667; 9392400,18.7233333333333;
          9396000,18.27; 9399600,18.27; 9403200,18.27; 9406800,18.27; 9410400,18.27;
          9414000,18.27; 9417600,18.27; 9421200,18.27; 9424800,18.27; 9428400,18.6816666666667;
          9432000,47.72; 9435600,169.655; 9439200,234.873333333333; 9442800,353.38;
          9446400,451.431666666667; 9450000,456.876666666667; 9453600,581.868333333333;
          9457200,494.208333333333; 9460800,197.128333333333; 9464400,274.348333333333;
          9468000,191.681666666667; 9471600,75.48; 9475200,30.93; 9478800,19.5883333333333;
          9482400,18.27; 9486000,18.27; 9489600,18.27; 9493200,18.27; 9496800,18.27;
          9500400,18.27; 9504000,18.27; 9507600,18.27; 9511200,18.27; 9514800,18.7216666666667;
          9518400,43.4683333333333; 9522000,190.361666666667; 9525600,318.36; 9529200,
          443.018333333333; 9532800,384.03; 9536400,451.105; 9540000,354.415; 9543600,
          407.541666666667; 9547200,259.54; 9550800,194.528333333333; 9554400,147.628333333333;
          9558000,79.4833333333333; 9561600,39.5933333333333; 9565200,20.3733333333333;
          9568800,18.27; 9572400,18.27; 9576000,18.27; 9579600,18.27; 9583200,18.27;
          9586800,18.27; 9590400,18.27; 9594000,18.27; 9597600,18.27; 9601200,18.6816666666667;
          9604800,47.7183333333333; 9608400,166.395; 9612000,242.503333333333; 9615600,
          403.955; 9619200,412.66; 9622800,323.52; 9626400,250.133333333333; 9630000,
          163.591666666667; 9633600,99.53; 9637200,73.3366666666667; 9640800,79.4833333333333;
          9644400,75.1516666666667; 9648000,34.7266666666667; 9651600,19.5466666666667;
          9655200,18.27; 9658800,18.27; 9662400,18.27; 9666000,18.27; 9669600,18.27;
          9673200,18.27; 9676800,18.27; 9680400,18.27; 9684000,18.27; 9687600,18.27;
          9691200,27.715; 9694800,51.1416666666667; 9698400,57.66; 9702000,63.8466666666667;
          9705600,83.73; 9709200,225.92; 9712800,480.268333333333; 9716400,385.556666666667;
          9720000,143.833333333333; 9723600,138.635; 9727200,80.925; 9730800,74.86;
          9734400,46.3566666666667; 9738000,21.0316666666667; 9741600,18.27; 9745200,
          18.27; 9748800,18.27; 9752400,18.27; 9756000,18.27; 9759600,18.27; 9763200,
          18.27; 9766800,18.27; 9770400,18.27; 9774000,18.27; 9777600,25.1966666666667;
          9781200,34.2716666666667; 9784800,56.545; 9788400,63.6416666666667; 9792000,
          66.1566666666667; 9795600,63.0233333333333; 9799200,76.0566666666667; 9802800,
          69.54; 9806400,61.1666666666667; 9810000,50.9366666666667; 9813600,41.8616666666667;
          9817200,34.1883333333333; 9820800,25.7716666666667; 9824400,18.3933333333333;
          9828000,18.27; 9831600,18.27; 9835200,18.27; 9838800,18.27; 9842400,18.27;
          9846000,18.27; 9849600,18.27; 9853200,18.27; 9856800,18.27; 9860400,18.27;
          9864000,22.845; 9867600,51.8866666666667; 9871200,174.11; 9874800,359.611666666667;
          9878400,263.126666666667; 9882000,273.481666666667; 9885600,258.341666666667;
          9889200,222.496666666667; 9892800,101.181666666667; 9896400,72.5533333333333;
          9900000,115.906666666667; 9903600,86.205; 9907200,41.86; 9910800,20.8666666666667;
          9914400,18.27; 9918000,18.27; 9921600,18.27; 9925200,18.27; 9928800,18.27;
          9932400,18.27; 9936000,18.27; 9939600,18.27; 9943200,18.27; 9946800,18.6816666666667;
          9950400,34.2716666666667; 9954000,158.888333333333; 9957600,346.451666666667;
          9961200,464.468333333333; 9964800,553.57; 9968400,593.871666666667; 9972000,
          586.2; 9975600,473.008333333333; 9979200,219.403333333333; 9982800,311.886666666667;
          9986400,117.761666666667; 9990000,58.4833333333333; 9993600,47.7166666666667;
          9997200,22.1433333333333; 10000800,18.27; 10004400,18.27; 10008000,18.27;
          10011600,18.27; 10015200,18.27; 10018800,18.27; 10022400,18.27; 10026000,
          18.27; 10029600,18.27; 10033200,18.27; 10036800,23.835; 10040400,44.3366666666667;
          10044000,76.6766666666667; 10047600,127.87; 10051200,149.731666666667; 10054800,
          125.56; 10058400,106.788333333333; 10062000,163.426666666667; 10065600,109.511666666667;
          10069200,72.76; 10072800,77.5433333333333; 10076400,50.3166666666667; 10080000,
          28.7866666666667; 10083600,18.7233333333333; 10087200,18.27; 10090800,18.27;
          10094400,18.27; 10098000,18.27; 10101600,18.27; 10105200,18.27; 10108800,
          18.27; 10112400,18.27; 10116000,18.27; 10119600,20.4133333333333; 10123200,
          63.355; 10126800,210.946666666667; 10130400,360.723333333333; 10134000,486.083333333333;
          10137600,602.036666666667; 10141200,585.085; 10144800,470.575; 10148400,
          418.721666666667; 10152000,164.25; 10155600,99.9416666666667; 10159200,102.663333333333;
          10162800,71.355; 10166400,31.7533333333333; 10170000,21.98; 10173600,18.27;
          10177200,18.27; 10180800,18.27; 10184400,18.27; 10188000,18.27; 10191600,
          18.27; 10195200,18.2283333333333; 10198800,18.27; 10202400,18.27; 10206000,
          22.0633333333333; 10209600,75.1916666666667; 10213200,205.79; 10216800,340.678333333333;
          10220400,454.361666666667; 10224000,538.676666666667; 10227600,580.463333333333;
          10231200,574.481666666667; 10234800,452.383333333333; 10238400,203.933333333333;
          10242000,244.398333333333; 10245600,76.9233333333333; 10249200,76.305; 10252800,
          40.5833333333333; 10256400,22.5566666666667; 10260000,18.27; 10263600,18.27;
          10267200,18.27; 10270800,18.27; 10274400,18.27; 10278000,18.27; 10281600,
          18.27; 10285200,18.27; 10288800,18.27; 10292400,20.825; 10296000,67.435;
          10299600,200.676666666667; 10303200,332.841666666667; 10306800,446.896666666667;
          10310400,529.106666666667; 10314000,570.276666666667; 10317600,566.315;
          10321200,445.618333333333; 10324800,197.128333333333; 10328400,312.421666666667;
          10332000,187.185; 10335600,74.1216666666667; 10339200,33.9016666666667;
          10342800,22.5566666666667; 10346400,18.27; 10350000,18.27; 10353600,18.27;
          10357200,18.27; 10360800,18.27; 10364400,18.27; 10368000,18.27; 10371600,
          18.27; 10375200,18.27; 10378800,21.2366666666667; 10382400,54.32; 10386000,
          175.06; 10389600,303.098333333333; 10393200,254.218333333333; 10396800,189.126666666667;
          10400400,122.3; 10404000,61.5783333333333; 10407600,50.6483333333333; 10411200,
          60.8783333333333; 10414800,47.0583333333333; 10418400,38.275; 10422000,35.59;
          10425600,25.0716666666667; 10429200,18.6816666666667; 10432800,18.27; 10436400,
          18.27; 10440000,18.27; 10443600,18.27; 10447200,18.27; 10450800,18.27])
      annotation (Placement(transformation(extent={{0,-24},{6,-18}})));
    Modelica.Blocks.Sources.TimeTable IDifH(table=[0,18.27; 3600,18.27; 7200,18.27;
          10800,18.27; 14400,18.27; 18000,18.27; 21600,18.27; 25200,18.7633333333333;
          28800,24.4116666666667; 32400,33.1166666666667; 36000,39.345; 39600,48.0483333333333;
          43200,60.3; 46800,48.9133333333333; 50400,39.7583333333333; 54000,26.35;
          57600,18.27; 61200,18.27; 64800,18.27; 68400,18.27; 72000,18.27; 75600,18.27;
          79200,18.27; 82800,18.27; 86400,18.27; 90000,18.27; 93600,18.27; 97200,18.27;
          100800,18.27; 104400,18.27; 108000,18.27; 111600,18.27; 115200,18.27; 118800,
          22.2666666666667; 122400,27.5883333333333; 126000,25.9383333333333; 129600,
          26.3483333333333; 133200,27.5866666666667; 136800,22.555; 140400,20.3716666666667;
          144000,18.27; 147600,18.27; 151200,18.27; 154800,18.27; 158400,18.27; 162000,
          18.27; 165600,18.27; 169200,18.27; 172800,18.27; 176400,18.27; 180000,18.27;
          183600,18.27; 187200,18.27; 190800,18.27; 194400,18.27; 198000,21.9383333333333;
          201600,29.65; 205200,49.4933333333333; 208800,50.1533333333333; 212400,61.7433333333333;
          216000,51.1; 219600,41.12; 223200,26.7633333333333; 226800,20.865; 230400,
          18.27; 234000,18.27; 237600,18.27; 241200,18.27; 244800,18.27; 248400,18.27;
          252000,18.27; 255600,18.27; 259200,18.27; 262800,18.27; 266400,18.27; 270000,
          18.27; 273600,18.27; 277200,18.27; 280800,18.27; 284400,19.5066666666667;
          288000,33.4866666666667; 291600,40.005; 295200,45.9466666666667; 298800,
          45.2016666666667; 302400,35.1783333333333; 306000,38.89; 309600,27.2166666666667;
          313200,19.505; 316800,18.27; 320400,18.27; 324000,18.27; 327600,18.27; 331200,
          18.27; 334800,18.27; 338400,18.27; 342000,18.27; 345600,18.27; 349200,18.27;
          352800,18.27; 356400,18.27; 360000,18.27; 363600,18.27; 367200,18.27; 370800,
          19.0933333333333; 374400,30.0216666666667; 378000,44.79; 381600,44.4183333333333;
          385200,52.215; 388800,53.37; 392400,43.5116666666667; 396000,37.6533333333333;
          399600,24.7416666666667; 403200,18.27; 406800,18.27; 410400,18.27; 414000,
          18.27; 417600,18.27; 421200,18.27; 424800,18.27; 428400,18.27; 432000,18.27;
          435600,18.27; 439200,18.27; 442800,18.27; 446400,18.27; 450000,18.27; 453600,
          18.27; 457200,23.34; 460800,45.575; 464400,45.615; 468000,48.545; 471600,
          44.255; 475200,35.22; 478800,32.165; 482400,29.2366666666667; 486000,21.8983333333333;
          489600,18.27; 493200,18.27; 496800,18.27; 500400,18.27; 504000,18.27; 507600,
          18.27; 511200,18.27; 514800,18.27; 518400,18.27; 522000,18.27; 525600,18.27;
          529200,18.27; 532800,18.27; 536400,18.27; 540000,18.27; 543600,18.27; 547200,
          21.4833333333333; 550800,23.46; 554400,25.5266666666667; 558000,26.7633333333333;
          561600,27.795; 565200,31.135; 568800,21.9366666666667; 572400,18.27; 576000,
          18.27; 579600,18.27; 583200,18.27; 586800,18.27; 590400,18.27; 594000,18.27;
          597600,18.27; 601200,18.27; 604800,18.27; 608400,18.27; 612000,18.27; 615600,
          18.27; 619200,18.27; 622800,18.27; 626400,18.27; 630000,19.3416666666667;
          633600,25.1133333333333; 637200,31.3816666666667; 640800,28.95; 644400,25.5233333333333;
          648000,26.3516666666667; 651600,24.2866666666667; 655200,21.03; 658800,18.6816666666667;
          662400,18.27; 666000,18.27; 669600,18.27; 673200,18.27; 676800,18.27; 680400,
          18.27; 684000,18.27; 687600,18.27; 691200,18.27; 694800,18.27; 698400,18.27;
          702000,18.27; 705600,18.27; 709200,18.27; 712800,18.27; 716400,18.27; 720000,
          19.505; 723600,24.2883333333333; 727200,25.2366666666667; 730800,26.2266666666667;
          734400,28.4116666666667; 738000,31.2583333333333; 741600,39.7983333333333;
          745200,27.01; 748800,18.5166666666667; 752400,18.27; 756000,18.27; 759600,
          18.27; 763200,18.27; 766800,18.27; 770400,18.27; 774000,18.27; 777600,18.27;
          781200,18.27; 784800,18.27; 788400,18.27; 792000,18.27; 795600,18.27; 799200,
          18.27; 802800,18.435; 806400,20.4116666666667; 810000,27.5883333333333;
          813600,35.5066666666667; 817200,41.78; 820800,41.5733333333333; 824400,28.0033333333333;
          828000,25.525; 831600,22.9716666666667; 835200,18.27; 838800,18.27; 842400,
          18.27; 846000,18.27; 849600,18.27; 853200,18.27; 856800,18.27; 860400,18.27;
          864000,18.27; 867600,18.27; 871200,18.27; 874800,18.27; 878400,18.27; 882000,
          18.27; 885600,18.27; 889200,18.6816666666667; 892800,22.5133333333333; 896400,
          28.4533333333333; 900000,42.11; 903600,41.4083333333333; 907200,27.2166666666667;
          910800,37.6533333333333; 914400,24.4133333333333; 918000,20.455; 921600,
          18.27; 925200,18.27; 928800,18.27; 932400,18.27; 936000,18.27; 939600,18.27;
          943200,18.27; 946800,18.27; 950400,18.27; 954000,18.27; 957600,18.27; 961200,
          18.27; 964800,18.27; 968400,18.27; 972000,18.27; 975600,19.7533333333333;
          979200,26.6366666666667; 982800,36.005; 986400,46.07; 990000,50.6466666666667;
          993600,47.305; 997200,34.23; 1000800,21.195; 1004400,21.1533333333333; 1008000,
          18.27; 1011600,18.27; 1015200,18.27; 1018800,18.27; 1022400,18.27; 1026000,
          18.27; 1029600,18.27; 1033200,18.27; 1036800,18.27; 1040400,18.27; 1044000,
          18.27; 1047600,18.27; 1051200,18.27; 1054800,18.27; 1058400,18.27; 1062000,
          19.63; 1065600,31.795; 1069200,43.8833333333333; 1072800,58.9383333333333;
          1076400,56.875; 1080000,51.885; 1083600,49.575; 1087200,40.3766666666667;
          1090800,27.2166666666667; 1094400,18.7233333333333; 1098000,18.27; 1101600,
          18.27; 1105200,18.27; 1108800,18.27; 1112400,18.27; 1116000,18.27; 1119600,
          18.27; 1123200,18.27; 1126800,18.27; 1130400,18.27; 1134000,18.27; 1137600,
          18.27; 1141200,18.27; 1144800,18.27; 1148400,18.6816666666667; 1152000,22.5133333333333;
          1155600,41.45; 1159200,42.6883333333333; 1162800,42.36; 1166400,44.3366666666667;
          1170000,40.6666666666667; 1173600,35.2616666666667; 1177200,23.8766666666667;
          1180800,18.27; 1184400,18.27; 1188000,18.27; 1191600,18.27; 1195200,18.27;
          1198800,18.27; 1202400,18.27; 1206000,18.27; 1209600,18.27; 1213200,18.27;
          1216800,18.27; 1220400,18.27; 1224000,18.27; 1227600,18.27; 1231200,18.27;
          1234800,24.125; 1238400,50.2766666666667; 1242000,62.8983333333333; 1245600,
          57.4533333333333; 1249200,57.535; 1252800,53.6166666666667; 1256400,48.9566666666667;
          1260000,47.305; 1263600,28.455; 1267200,18.6816666666667; 1270800,18.27;
          1274400,18.27; 1278000,18.27; 1281600,18.27; 1285200,18.27; 1288800,18.27;
          1292400,18.27; 1296000,18.27; 1299600,18.27; 1303200,18.27; 1306800,18.27;
          1310400,18.27; 1314000,18.27; 1317600,18.27; 1321200,19.135; 1324800,26.7633333333333;
          1328400,47.5533333333333; 1332000,56.0933333333333; 1335600,58.1566666666667;
          1339200,66.53; 1342800,63.1466666666667; 1346400,32.9916666666667; 1350000,
          23.7933333333333; 1353600,18.7233333333333; 1357200,18.27; 1360800,18.27;
          1364400,18.27; 1368000,18.27; 1371600,18.27; 1375200,18.27; 1378800,18.27;
          1382400,18.27; 1386000,18.27; 1389600,18.27; 1393200,18.27; 1396800,18.27;
          1400400,18.27; 1404000,18.27; 1407600,20.4516666666667; 1411200,32.6216666666667;
          1414800,51.4716666666667; 1418400,57.825; 1422000,78.1216666666667; 1425600,
          74.0783333333333; 1429200,60.7533333333333; 1432800,53.5366666666667; 1436400,
          30.9716666666667; 1440000,19.3816666666667; 1443600,18.27; 1447200,18.27;
          1450800,18.27; 1454400,18.27; 1458000,18.27; 1461600,18.27; 1465200,18.27;
          1468800,18.27; 1472400,18.27; 1476000,18.27; 1479600,18.27; 1483200,18.27;
          1486800,18.27; 1490400,18.27; 1494000,22.4333333333333; 1497600,37.4483333333333;
          1501200,54.2766666666667; 1504800,69.79; 1508400,73.6683333333333; 1512000,
          60.5066666666667; 1515600,56.9166666666667; 1519200,43.7166666666667; 1522800,
          29.2366666666667; 1526400,18.7233333333333; 1530000,18.27; 1533600,18.27;
          1537200,18.27; 1540800,18.27; 1544400,18.27; 1548000,18.27; 1551600,18.27;
          1555200,18.27; 1558800,18.27; 1562400,18.27; 1566000,18.27; 1569600,18.27;
          1573200,18.27; 1576800,18.27; 1580400,20.1233333333333; 1584000,34.56; 1587600,
          50.6466666666667; 1591200,69.1283333333333; 1594800,75.5233333333333; 1598400,
          70.2033333333333; 1602000,62.57; 1605600,50.6466666666667; 1609200,30.5583333333333;
          1612800,19.6716666666667; 1616400,18.27; 1620000,18.27; 1623600,18.27; 1627200,
          18.27; 1630800,18.27; 1634400,18.27; 1638000,18.27; 1641600,18.27; 1645200,
          18.27; 1648800,18.27; 1652400,18.27; 1656000,18.27; 1659600,18.27; 1663200,
          18.27; 1666800,22.0216666666667; 1670400,39.3033333333333; 1674000,48.1733333333333;
          1677600,65.3733333333333; 1681200,58.32; 1684800,69.5816666666667; 1688400,
          58.6933333333333; 1692000,43.925; 1695600,31.3416666666667; 1699200,19.5466666666667;
          1702800,18.27; 1706400,18.27; 1710000,18.27; 1713600,18.27; 1717200,18.27;
          1720800,18.27; 1724400,18.27; 1728000,18.27; 1731600,18.27; 1735200,18.27;
          1738800,18.27; 1742400,18.27; 1746000,18.27; 1749600,18.27; 1753200,19.9583333333333;
          1756800,28.455; 1760400,38.065; 1764000,55.2666666666667; 1767600,60.63;
          1771200,52.6266666666667; 1774800,40.7883333333333; 1778400,32.2916666666667;
          1782000,24.5783333333333; 1785600,18.7633333333333; 1789200,18.27; 1792800,
          18.27; 1796400,18.27; 1800000,18.27; 1803600,18.27; 1807200,18.27; 1810800,
          18.27; 1814400,18.27; 1818000,18.27; 1821600,18.27; 1825200,18.27; 1828800,
          18.27; 1832400,18.27; 1836000,18.27; 1839600,25.9383333333333; 1843200,44.7516666666667;
          1846800,55.97; 1850400,54.4833333333333; 1854000,56.545; 1857600,52.1733333333333;
          1861200,47.3883333333333; 1864800,42.975; 1868400,33.0333333333333; 1872000,
          19.4666666666667; 1875600,18.27; 1879200,18.27; 1882800,18.27; 1886400,18.27;
          1890000,18.27; 1893600,18.27; 1897200,18.27; 1900800,18.27; 1904400,18.27;
          1908000,18.27; 1911600,18.27; 1915200,18.27; 1918800,18.27; 1922400,18.27;
          1926000,21.4866666666667; 1929600,33.445; 1933200,44.5033333333333; 1936800,
          49.04; 1940400,51.1; 1944000,48.0483333333333; 1947600,43.5133333333333;
          1951200,37.7766666666667; 1954800,28.8666666666667; 1958400,20.1233333333333;
          1962000,18.27; 1965600,18.27; 1969200,18.27; 1972800,18.27; 1976400,18.27;
          1980000,18.27; 1983600,18.27; 1987200,18.27; 1990800,18.27; 1994400,18.27;
          1998000,18.27; 2001600,18.27; 2005200,18.27; 2008800,18.27; 2012400,26.27;
          2016000,42.895; 2019600,49.1216666666667; 2023200,52.42; 2026800,51.18;
          2030400,48.38; 2034000,42.44; 2037600,37.695; 2041200,29.1983333333333;
          2044800,20.4533333333333; 2048400,18.27; 2052000,18.27; 2055600,18.27; 2059200,
          18.27; 2062800,18.27; 2066400,18.27; 2070000,18.27; 2073600,18.27; 2077200,
          18.27; 2080800,18.27; 2084400,18.27; 2088000,18.27; 2091600,18.27; 2095200,
          18.27; 2098800,24.66; 2102400,44.3766666666667; 2106000,50.1133333333333;
          2109600,52.42; 2113200,51.1; 2116800,48.05; 2120400,41.945; 2124000,37.7366666666667;
          2127600,28.825; 2131200,20.4116666666667; 2134800,18.27; 2138400,18.27;
          2142000,18.27; 2145600,18.27; 2149200,18.27; 2152800,18.27; 2156400,18.27;
          2160000,18.27; 2163600,18.27; 2167200,18.27; 2170800,18.27; 2174400,18.27;
          2178000,18.27; 2181600,18.27; 2185200,25.4433333333333; 2188800,44.295;
          2192400,56.4233333333333; 2196000,58.69; 2199600,56.9583333333333; 2203200,
          49.825; 2206800,43.6366666666667; 2210400,36.46; 2214000,31.8383333333333;
          2217600,20.4133333333333; 2221200,18.27; 2224800,18.27; 2228400,18.27; 2232000,
          18.27; 2235600,18.27; 2239200,18.27; 2242800,18.27; 2246400,18.27; 2250000,
          18.27; 2253600,18.27; 2257200,18.27; 2260800,18.27; 2264400,18.27; 2268000,
          18.27; 2271600,27.63; 2275200,52.67; 2278800,71.4383333333333; 2282400,72.8816666666667;
          2286000,75.9333333333333; 2289600,76.4716666666666; 2293200,62.6516666666667;
          2296800,55.145; 2300400,36.7866666666667; 2304000,21.0316666666667; 2307600,
          18.27; 2311200,18.27; 2314800,18.27; 2318400,18.27; 2322000,18.27; 2325600,
          18.27; 2329200,18.27; 2332800,18.27; 2336400,18.27; 2340000,18.27; 2343600,
          18.27; 2347200,18.27; 2350800,18.27; 2354400,18.27; 2358000,23.7933333333333;
          2361600,38.6033333333333; 2365200,61.9916666666667; 2368800,63.31; 2372400,
          71.3566666666667; 2376000,68.76; 2379600,60.5483333333333; 2383200,49.41;
          2386800,32.2083333333333; 2390400,20; 2394000,18.27; 2397600,18.27; 2401200,
          18.27; 2404800,18.27; 2408400,18.27; 2412000,18.27; 2415600,18.27; 2419200,
          18.27; 2422800,18.27; 2426400,18.27; 2430000,18.27; 2433600,18.27; 2437200,
          18.27; 2440800,18.27; 2444400,18.6816666666667; 2448000,24.245; 2451600,
          44.7083333333333; 2455200,58.6083333333333; 2458800,56.05; 2462400,53.99;
          2466000,43.9233333333333; 2469600,31.5083333333333; 2473200,27.9983333333333;
          2476800,20.9083333333333; 2480400,18.27; 2484000,18.27; 2487600,18.27; 2491200,
          18.27; 2494800,18.27; 2498400,18.27; 2502000,18.27; 2505600,18.27; 2509200,
          18.27; 2512800,18.27; 2516400,18.27; 2520000,18.27; 2523600,18.27; 2527200,
          18.27; 2530800,23.38; 2534400,43.925; 2538000,59.475; 2541600,72.7166666666667;
          2545200,72.9233333333333; 2548800,59.9716666666667; 2552400,50.9783333333333;
          2556000,53.1633333333333; 2559600,25.9383333333333; 2563200,18.31; 2566800,
          18.27; 2570400,18.27; 2574000,18.27; 2577600,18.27; 2581200,18.27; 2584800,
          18.27; 2588400,18.27; 2592000,18.27; 2595600,18.27; 2599200,18.27; 2602800,
          18.27; 2606400,18.27; 2610000,18.27; 2613600,18.27; 2617200,19.0933333333333;
          2620800,23.01; 2624400,31.2183333333333; 2628000,34.23; 2631600,28.8233333333333;
          2635200,31.7133333333333; 2638800,30.475; 2642400,29.2383333333333; 2646000,
          23.505; 2649600,18.93; 2653200,18.27; 2656800,18.27; 2660400,18.27; 2664000,
          18.27; 2667600,18.27; 2671200,18.27; 2674800,18.27; 2678400,18.27; 2682000,
          18.27; 2685600,18.27; 2689200,18.27; 2692800,18.27; 2696400,18.27; 2700000,
          18.27; 2703600,22.3933333333333; 2707200,35.8383333333333; 2710800,45.9883333333333;
          2714400,53.9883333333333; 2718000,59.5183333333333; 2721600,58.1966666666667;
          2725200,53.865; 2728800,49.0816666666667; 2732400,40.0483333333333; 2736000,
          20.66; 2739600,18.27; 2743200,18.27; 2746800,18.27; 2750400,18.27; 2754000,
          18.27; 2757600,18.27; 2761200,18.27; 2764800,18.27; 2768400,18.27; 2772000,
          18.27; 2775600,18.27; 2779200,18.27; 2782800,18.27; 2786400,18.27; 2790000,
          22.97; 2793600,35.22; 2797200,56.0516666666667; 2800800,68.22; 2804400,68.3866666666667;
          2808000,70.4066666666667; 2811600,67.52; 2815200,56.5866666666667; 2818800,
          35.2183333333333; 2822400,19.8766666666667; 2826000,18.27; 2829600,18.27;
          2833200,18.27; 2836800,18.27; 2840400,18.27; 2844000,18.27; 2847600,18.27;
          2851200,18.27; 2854800,18.27; 2858400,18.27; 2862000,18.27; 2865600,18.27;
          2869200,18.27; 2872800,18.27; 2876400,18.27; 2880000,24.4116666666667; 2883600,
          43.8416666666667; 2887200,45.1633333333333; 2890800,41.82; 2894400,35.9183333333333;
          2898000,51.1016666666667; 2901600,33.8583333333333; 2905200,28.8283333333333;
          2908800,18.97; 2912400,18.27; 2916000,18.27; 2919600,18.27; 2923200,18.27;
          2926800,18.27; 2930400,18.27; 2934000,18.27; 2937600,18.27; 2941200,18.27;
          2944800,18.27; 2948400,18.27; 2952000,18.27; 2955600,18.27; 2959200,18.27;
          2962800,28.9083333333333; 2966400,51.8433333333333; 2970000,60.5483333333333;
          2973600,69.0883333333333; 2977200,72.8833333333333; 2980800,75.7266666666667;
          2984400,63.805; 2988000,43.5516666666667; 2991600,26.6383333333333; 2995200,
          19.1766666666667; 2998800,18.27; 3002400,18.27; 3006000,18.27; 3009600,18.27;
          3013200,18.27; 3016800,18.27; 3020400,18.27; 3024000,18.27; 3027600,18.27;
          3031200,18.27; 3034800,18.27; 3038400,18.27; 3042000,18.27; 3045600,18.27;
          3049200,24.5783333333333; 3052800,42.235; 3056400,59.02; 3060000,62.7333333333333;
          3063600,59.4333333333333; 3067200,52.875; 3070800,46.6466666666667; 3074400,
          40.2116666666667; 3078000,32.6216666666667; 3081600,21.7316666666667; 3085200,
          18.27; 3088800,18.27; 3092400,18.27; 3096000,18.27; 3099600,18.27; 3103200,
          18.27; 3106800,18.27; 3110400,18.27; 3114000,18.27; 3117600,18.27; 3121200,
          18.27; 3124800,18.27; 3128400,18.27; 3132000,18.27; 3135600,22.1016666666667;
          3139200,35.755; 3142800,57.0433333333333; 3146400,68.59; 3150000,73.2533333333333;
          3153600,60.8766666666667; 3157200,63.27; 3160800,63.0233333333333; 3164400,
          42.3566666666667; 3168000,23.67; 3171600,18.27; 3175200,18.27; 3178800,18.27;
          3182400,18.27; 3186000,18.27; 3189600,18.27; 3193200,18.27; 3196800,18.27;
          3200400,18.27; 3204000,18.27; 3207600,18.27; 3211200,18.27; 3214800,18.27;
          3218400,18.27; 3222000,18.31; 3225600,20.3283333333333; 3229200,20.74; 3232800,
          20.99; 3236400,24.205; 3240000,28.3733333333333; 3243600,35.4666666666667;
          3247200,39.1383333333333; 3250800,35.5483333333333; 3254400,21.7316666666667;
          3258000,18.27; 3261600,18.27; 3265200,18.27; 3268800,18.27; 3272400,18.27;
          3276000,18.27; 3279600,18.27; 3283200,18.27; 3286800,18.27; 3290400,18.27;
          3294000,18.27; 3297600,18.27; 3301200,18.27; 3304800,18.27; 3308400,26.5983333333333;
          3312000,42.9333333333333; 3315600,57.66; 3319200,57.0833333333333; 3322800,
          56.4633333333333; 3326400,38.5616666666667; 3330000,30.0616666666667; 3333600,
          28.25; 3337200,23.0083333333333; 3340800,18.6816666666667; 3344400,18.27;
          3348000,18.27; 3351600,18.27; 3355200,18.27; 3358800,18.27; 3362400,18.27;
          3366000,18.27; 3369600,18.27; 3373200,18.27; 3376800,18.27; 3380400,18.27;
          3384000,18.27; 3387600,18.27; 3391200,18.27; 3394800,19.0933333333333; 3398400,
          27.465; 3402000,32.66; 3405600,28.2883333333333; 3409200,31.22; 3412800,
          28.4533333333333; 3416400,30.27; 3420000,24.535; 3423600,19.095; 3427200,
          18.3516666666667; 3430800,18.27; 3434400,18.27; 3438000,18.27; 3441600,18.27;
          3445200,18.27; 3448800,18.27; 3452400,18.27; 3456000,18.27; 3459600,18.27;
          3463200,18.27; 3466800,18.27; 3470400,18.27; 3474000,18.27; 3477600,18.27;
          3481200,22.5166666666667; 3484800,27.5866666666667; 3488400,43.8833333333333;
          3492000,54.0283333333333; 3495600,50.6466666666667; 3499200,62.6916666666667;
          3502800,53.1616666666667; 3506400,34.2716666666667; 3510000,30.475; 3513600,
          24.6183333333333; 3517200,18.27; 3520800,18.27; 3524400,18.27; 3528000,18.27;
          3531600,18.27; 3535200,18.27; 3538800,18.27; 3542400,18.27; 3546000,18.27;
          3549600,18.27; 3553200,18.27; 3556800,18.27; 3560400,18.27; 3564000,18.27;
          3567600,23.38; 3571200,34.6416666666667; 3574800,53.205; 3578400,68.51;
          3582000,84.43; 3585600,72.4683333333333; 3589200,64.4266666666667; 3592800,
          39.0566666666667; 3596400,26.2666666666667; 3600000,18.8466666666667; 3603600,
          18.27; 3607200,18.27; 3610800,18.27; 3614400,18.27; 3618000,18.27; 3621600,
          18.27; 3625200,18.27; 3628800,18.27; 3632400,18.27; 3636000,18.27; 3639600,
          18.27; 3643200,18.27; 3646800,18.27; 3650400,18.27; 3654000,30.9283333333333;
          3657600,30.3933333333333; 3661200,27.755; 3664800,26.7616666666667; 3668400,
          28; 3672000,36.3316666666667; 3675600,26.3516666666667; 3679200,32.125;
          3682800,30.1033333333333; 3686400,21.155; 3690000,18.27; 3693600,18.27;
          3697200,18.27; 3700800,18.27; 3704400,18.27; 3708000,18.27; 3711600,18.27;
          3715200,18.27; 3718800,18.27; 3722400,18.27; 3726000,18.27; 3729600,18.27;
          3733200,18.27; 3736800,18.6816666666667; 3740400,29.32; 3744000,25.525;
          3747600,29.6516666666667; 3751200,46.3166666666667; 3754800,68.3033333333333;
          3758400,63.3933333333333; 3762000,52.34; 3765600,35.4266666666667; 3769200,
          26.1033333333333; 3772800,19.135; 3776400,18.27; 3780000,18.27; 3783600,
          18.27; 3787200,18.27; 3790800,18.27; 3794400,18.27; 3798000,18.27; 3801600,
          18.27; 3805200,18.27; 3808800,18.27; 3812400,18.27; 3816000,18.27; 3819600,
          18.27; 3823200,18.27; 3826800,22.1; 3830400,31.425; 3834000,31.755; 3837600,
          44.3383333333333; 3841200,63.3933333333333; 3844800,54.36; 3848400,55.72;
          3852000,59.8466666666667; 3855600,40.7483333333333; 3859200,25.4433333333333;
          3862800,18.27; 3866400,18.27; 3870000,18.27; 3873600,18.27; 3877200,18.27;
          3880800,18.27; 3884400,18.27; 3888000,18.27; 3891600,18.27; 3895200,18.27;
          3898800,18.27; 3902400,18.27; 3906000,18.27; 3909600,18.6; 3913200,27.2166666666667;
          3916800,36.7883333333333; 3920400,33.61; 3924000,37.1583333333333; 3927600,
          37.2; 3931200,36.1283333333333; 3934800,28.825; 3938400,24.6583333333333;
          3942000,23.8333333333333; 3945600,19.175; 3949200,18.27; 3952800,18.27;
          3956400,18.27; 3960000,18.27; 3963600,18.27; 3967200,18.27; 3970800,18.27;
          3974400,18.27; 3978000,18.27; 3981600,18.27; 3985200,18.27; 3988800,18.27;
          3992400,18.27; 3996000,18.27; 3999600,37.6533333333333; 4003200,68.2233333333333;
          4006800,75.1933333333333; 4010400,51.8433333333333; 4014000,49.5783333333333;
          4017600,41.0366666666667; 4021200,39.4683333333333; 4024800,32.62; 4028400,
          26.7616666666667; 4032000,20.4533333333333; 4035600,18.27; 4039200,18.27;
          4042800,18.27; 4046400,18.27; 4050000,18.27; 4053600,18.27; 4057200,18.27;
          4060800,18.27; 4064400,18.27; 4068000,18.27; 4071600,18.27; 4075200,18.27;
          4078800,18.27; 4082400,18.27; 4086000,21.36; 4089600,28.4133333333333; 4093200,
          35.095; 4096800,50.65; 4100400,72.9233333333333; 4104000,72.0583333333333;
          4107600,61.4966666666667; 4111200,53.1633333333333; 4114800,41.5733333333333;
          4118400,25.115; 4122000,18.27; 4125600,18.27; 4129200,18.27; 4132800,18.27;
          4136400,18.27; 4140000,18.27; 4143600,18.27; 4147200,18.27; 4150800,18.27;
          4154400,18.27; 4158000,18.27; 4161600,18.27; 4165200,18.27; 4168800,19.2583333333333;
          4172400,30.3933333333333; 4176000,50.2366666666667; 4179600,66.1583333333333;
          4183200,78.3666666666667; 4186800,89.0533333333333; 4190400,85.215; 4194000,
          75.8516666666667; 4197600,57.4133333333333; 4201200,38.81; 4204800,25.1533333333333;
          4208400,18.27; 4212000,18.27; 4215600,18.27; 4219200,18.27; 4222800,18.27;
          4226400,18.27; 4230000,18.27; 4233600,18.27; 4237200,18.27; 4240800,18.27;
          4244400,18.27; 4248000,18.27; 4251600,18.27; 4255200,18.435; 4258800,24.04;
          4262400,33.075; 4266000,34.27; 4269600,55.27; 4273200,69.3366666666667;
          4276800,70.035; 4280400,60.3416666666667; 4284000,47.6366666666667; 4287600,
          33.6133333333333; 4291200,25.485; 4294800,18.435; 4298400,18.27; 4302000,
          18.27; 4305600,18.27; 4309200,18.27; 4312800,18.27; 4316400,18.27; 4320000,
          18.27; 4323600,18.27; 4327200,18.27; 4330800,18.27; 4334400,18.27; 4338000,
          18.27; 4341600,21.2366666666667; 4345200,34.6833333333333; 4348800,46.4816666666667;
          4352400,54.8133333333333; 4356000,72.965; 4359600,75.0266666666667; 4363200,
          79.1516666666667; 4366800,67.3966666666667; 4370400,41.82; 4374000,31.2183333333333;
          4377600,23.0916666666667; 4381200,18.27; 4384800,18.27; 4388400,18.27; 4392000,
          18.27; 4395600,18.27; 4399200,18.27; 4402800,18.27; 4406400,18.27; 4410000,
          18.27; 4413600,18.27; 4417200,18.27; 4420800,18.27; 4424400,18.27; 4428000,
          19.5466666666667; 4431600,36.9933333333333; 4435200,57.33; 4438800,68.305;
          4442400,73.3383333333333; 4446000,70.4083333333333; 4449600,63.27; 4453200,
          52.1733333333333; 4456800,43.1; 4460400,35.0966666666667; 4464000,25.7716666666667;
          4467600,18.7233333333333; 4471200,18.27; 4474800,18.27; 4478400,18.27; 4482000,
          18.27; 4485600,18.27; 4489200,18.27; 4492800,18.27; 4496400,18.27; 4500000,
          18.27; 4503600,18.27; 4507200,18.27; 4510800,18.27; 4514400,20.62; 4518000,
          44.7483333333333; 4521600,42.5633333333333; 4525200,57.2083333333333; 4528800,
          57.5366666666667; 4532400,54.4416666666667; 4536000,48.7083333333333; 4539600,
          46.4816666666667; 4543200,29.6916666666667; 4546800,33.3233333333333; 4550400,
          19.175; 4554000,18.27; 4557600,18.27; 4561200,18.27; 4564800,18.27; 4568400,
          18.27; 4572000,18.27; 4575600,18.27; 4579200,18.27; 4582800,18.27; 4586400,
          18.27; 4590000,18.27; 4593600,18.27; 4597200,18.27; 4600800,18.7633333333333;
          4604400,24.7833333333333; 4608000,33.075; 4611600,40.2533333333333; 4615200,
          45.41; 4618800,56.38; 4622400,55.6783333333333; 4626000,45.7816666666667;
          4629600,37.78; 4633200,32.1666666666667; 4636800,20.865; 4640400,18.27;
          4644000,18.27; 4647600,18.27; 4651200,18.27; 4654800,18.27; 4658400,18.27;
          4662000,18.27; 4665600,18.27; 4669200,18.27; 4672800,18.27; 4676400,18.27;
          4680000,18.27; 4683600,18.27; 4687200,18.435; 4690800,25.4833333333333;
          4694400,40.5816666666667; 4698000,51.9683333333333; 4701600,68.385; 4705200,
          82.3683333333333; 4708800,73.3366666666667; 4712400,78.1633333333333; 4716000,
          66.115; 4719600,47.1816666666667; 4723200,27.3; 4726800,18.27; 4730400,18.27;
          4734000,18.27; 4737600,18.27; 4741200,18.27; 4744800,18.27; 4748400,18.27;
          4752000,18.27; 4755600,18.27; 4759200,18.27; 4762800,18.27; 4766400,18.27;
          4770000,18.27; 4773600,19.0933333333333; 4777200,24.125; 4780800,33.3233333333333;
          4784400,42.0683333333333; 4788000,45.4916666666667; 4791600,56.1366666666667;
          4795200,51.8833333333333; 4798800,43.8833333333333; 4802400,36.4166666666667;
          4806000,32.21; 4809600,22.185; 4813200,18.27; 4816800,18.27; 4820400,18.27;
          4824000,18.27; 4827600,18.27; 4831200,18.27; 4834800,18.27; 4838400,18.27;
          4842000,18.27; 4845600,18.27; 4849200,18.27; 4852800,18.27; 4856400,18.27;
          4860000,18.7216666666667; 4863600,28.2066666666667; 4867200,40.2116666666667;
          4870800,62.3216666666667; 4874400,82.7; 4878000,94.58; 4881600,86.8666666666667;
          4885200,82.9083333333333; 4888800,70.3666666666667; 4892400,54.0316666666667;
          4896000,31.755; 4899600,18.765; 4903200,18.27; 4906800,18.27; 4910400,18.27;
          4914000,18.27; 4917600,18.27; 4921200,18.27; 4924800,18.27; 4928400,18.27;
          4932000,18.27; 4935600,18.27; 4939200,18.27; 4942800,18.27; 4946400,20.825;
          4950000,37.6533333333333; 4953600,56.9183333333333; 4957200,77.1716666666667;
          4960800,88.6816666666667; 4964400,87.9816666666667; 4968000,69.9916666666667;
          4971600,47.265; 4975200,45.575; 4978800,42.9766666666667; 4982400,27.175;
          4986000,18.27; 4989600,18.27; 4993200,18.27; 4996800,18.27; 5000400,18.27;
          5004000,18.27; 5007600,18.27; 5011200,18.27; 5014800,18.27; 5018400,18.27;
          5022000,18.27; 5025600,18.27; 5029200,18.27; 5032800,18.7216666666667; 5036400,
          29.65; 5040000,38.1483333333333; 5043600,71.81; 5047200,77.5016666666667;
          5050800,87.5266666666667; 5054400,77.5016666666667; 5058000,82.3716666666667;
          5061600,68.755; 5065200,38.0666666666667; 5068800,25.1116666666667; 5072400,
          18.27; 5076000,18.27; 5079600,18.27; 5083200,18.27; 5086800,18.27; 5090400,
          18.27; 5094000,18.27; 5097600,18.27; 5101200,18.27; 5104800,18.27; 5108400,
          18.27; 5112000,18.27; 5115600,18.27; 5119200,18.27; 5122800,20.5783333333333;
          5126400,24.1633333333333; 5130000,26.0216666666667; 5133600,28; 5137200,
          26.7616666666667; 5140800,29.2366666666667; 5144400,30.6416666666667; 5148000,
          25.9366666666667; 5151600,22.225; 5155200,19.175; 5158800,18.27; 5162400,
          18.27; 5166000,18.27; 5169600,18.27; 5173200,18.27; 5176800,18.27; 5180400,
          18.27; 5184000,18.27; 5187600,18.27; 5191200,18.27; 5194800,18.27; 5198400,
          18.27; 5202000,18.27; 5205600,19.425; 5209200,30.89; 5212800,53.0816666666667;
          5216400,82.575; 5220000,80.76; 5223600,78.9; 5227200,73.295; 5230800,69.7066666666667;
          5234400,61.1666666666667; 5238000,57.7416666666667; 5241600,35.1366666666667;
          5245200,19.5066666666667; 5248800,18.27; 5252400,18.27; 5256000,18.27; 5259600,
          18.27; 5263200,18.27; 5266800,18.27; 5270400,18.27; 5274000,18.27; 5277600,
          18.27; 5281200,18.27; 5284800,18.27; 5288400,18.27; 5292000,20.33; 5295600,
          32.2066666666667; 5299200,43.0983333333333; 5302800,57.95; 5306400,74.53;
          5310000,67.065; 5313600,83.7733333333333; 5317200,58.0316666666667; 5320800,
          26.805; 5324400,21.5233333333333; 5328000,18.6816666666667; 5331600,18.27;
          5335200,18.27; 5338800,18.27; 5342400,18.27; 5346000,18.27; 5349600,18.27;
          5353200,18.27; 5356800,18.27; 5360400,18.27; 5364000,18.27; 5367600,18.27;
          5371200,18.27; 5374800,18.27; 5378400,19.8766666666667; 5382000,26.68; 5385600,
          38.025; 5389200,43.8833333333333; 5392800,59.06; 5396400,79.525; 5400000,
          78.8633333333333; 5403600,33.735; 5407200,28.9066666666667; 5410800,31.3416666666667;
          5414400,23.0116666666667; 5418000,18.7233333333333; 5421600,18.27; 5425200,
          18.27; 5428800,18.27; 5432400,18.27; 5436000,18.27; 5439600,18.27; 5443200,
          18.27; 5446800,18.27; 5450400,18.27; 5454000,18.27; 5457600,18.27; 5461200,
          18.27; 5464800,21.8966666666667; 5468400,29.2383333333333; 5472000,44.3766666666667;
          5475600,50.195; 5479200,42.0683333333333; 5482800,72.2233333333333; 5486400,
          69.665; 5490000,42.7283333333333; 5493600,30.515; 5497200,28; 5500800,22.1833333333333;
          5504400,18.27; 5508000,18.27; 5511600,18.27; 5515200,18.27; 5518800,18.27;
          5522400,18.27; 5526000,18.27; 5529600,18.27; 5533200,18.27; 5536800,18.27;
          5540400,18.27; 5544000,18.27; 5547600,18.27; 5551200,18.27; 5554800,24.245;
          5558400,33.8183333333333; 5562000,56.9166666666667; 5565600,69.955; 5569200,
          93.6733333333333; 5572800,84.3483333333333; 5576400,62.075; 5580000,49.3683333333333;
          5583600,41.9433333333333; 5587200,25.075; 5590800,18.27; 5594400,18.27;
          5598000,18.27; 5601600,18.27; 5605200,18.27; 5608800,18.27; 5612400,18.27;
          5616000,18.27; 5619600,18.27; 5623200,18.27; 5626800,18.27; 5630400,18.27;
          5634000,18.27; 5637600,22.2266666666667; 5641200,32.5783333333333; 5644800,
          46.275; 5648400,64.1383333333333; 5652000,99.6966666666667; 5655600,85.5066666666667;
          5659200,54.6916666666667; 5662800,70.3666666666667; 5666400,66.53; 5670000,
          53.7; 5673600,28.3733333333333; 5677200,20.5766666666667; 5680800,18.27;
          5684400,18.27; 5688000,18.27; 5691600,18.27; 5695200,18.27; 5698800,18.27;
          5702400,18.27; 5706000,18.27; 5709600,18.27; 5713200,18.27; 5716800,18.27;
          5720400,18.27; 5724000,20.4116666666667; 5727600,40.09; 5731200,63.725;
          5734800,78.9866666666667; 5738400,82.1616666666667; 5742000,81.0483333333333;
          5745600,80.8416666666667; 5749200,79.6066666666667; 5752800,76.715; 5756400,
          56.8783333333333; 5760000,30.27; 5763600,18.27; 5767200,18.27; 5770800,18.27;
          5774400,18.27; 5778000,18.27; 5781600,18.27; 5785200,18.27; 5788800,18.27;
          5792400,18.27; 5796000,18.27; 5799600,18.27; 5803200,18.27; 5806800,18.27;
          5810400,21.69; 5814000,29.2366666666667; 5817600,52.1333333333333; 5821200,
          65.2083333333333; 5824800,80.35; 5828400,80.4716666666667; 5832000,100.643333333333;
          5835600,72.51; 5839200,52.75; 5842800,49.41; 5846400,33.815; 5850000,19.8766666666667;
          5853600,18.27; 5857200,18.27; 5860800,18.27; 5864400,18.27; 5868000,18.27;
          5871600,18.27; 5875200,18.27; 5878800,18.27; 5882400,18.27; 5886000,18.27;
          5889600,18.27; 5893200,18.27; 5896800,26.8866666666667; 5900400,50.1933333333333;
          5904000,63.685; 5907600,76.635; 5911200,85.5033333333333; 5914800,95.12;
          5918400,108.645; 5922000,94.9916666666667; 5925600,69.415; 5929200,42.025;
          5932800,27.96; 5936400,18.27; 5940000,18.27; 5943600,18.27; 5947200,18.27;
          5950800,18.27; 5954400,18.27; 5958000,18.27; 5961600,18.27; 5965200,18.27;
          5968800,18.27; 5972400,18.27; 5976000,18.27; 5979600,18.27; 5983200,25.4433333333333;
          5986800,49.7816666666667; 5990400,63.4783333333333; 5994000,74.12; 5997600,
          79.9783333333333; 6001200,79.2716666666667; 6004800,75.6883333333333; 6008400,
          67.9333333333333; 6012000,55.4733333333333; 6015600,43.305; 6019200,32.455;
          6022800,21.6916666666667; 6026400,18.27; 6030000,18.27; 6033600,18.27; 6037200,
          18.27; 6040800,18.27; 6044400,18.27; 6048000,18.27; 6051600,18.27; 6055200,
          18.27; 6058800,18.27; 6062400,18.27; 6066000,18.27; 6069600,25.03; 6073200,
          52.585; 6076800,76.5533333333333; 6080400,81.01; 6084000,102.046666666667;
          6087600,93.88; 6091200,93.5083333333333; 6094800,92.6016666666667; 6098400,
          72.51; 6102000,55.6383333333333; 6105600,39.595; 6109200,22.515; 6112800,
          18.27; 6116400,18.27; 6120000,18.27; 6123600,18.27; 6127200,18.27; 6130800,
          18.27; 6134400,18.27; 6138000,18.27; 6141600,18.27; 6145200,18.27; 6148800,
          18.27; 6152400,18.27; 6156000,23.34; 6159600,38.85; 6163200,60.5916666666667;
          6166800,84.1433333333333; 6170400,94.705; 6174000,86.6616666666667; 6177600,
          97.0533333333333; 6181200,76.2233333333333; 6184800,60.7533333333333; 6188400,
          43.4716666666667; 6192000,35.4266666666667; 6195600,20.8666666666667; 6199200,
          18.27; 6202800,18.27; 6206400,18.27; 6210000,18.27; 6213600,18.27; 6217200,
          18.27; 6220800,18.27; 6224400,18.27; 6228000,18.27; 6231600,18.27; 6235200,
          18.27; 6238800,18.27; 6242400,21.32; 6246000,30.93; 6249600,48.09; 6253200,
          77.8766666666667; 6256800,98.9116666666667; 6260400,92.9733333333333; 6264000,
          100.023333333333; 6267600,89.7116666666667; 6271200,70.3666666666667; 6274800,
          56.9566666666667; 6278400,40.5; 6282000,22.8466666666667; 6285600,18.27;
          6289200,18.27; 6292800,18.27; 6296400,18.27; 6300000,18.27; 6303600,18.27;
          6307200,18.27; 6310800,18.27; 6314400,18.27; 6318000,18.27; 6321600,18.27;
          6325200,18.27; 6328800,28.3716666666667; 6332400,51.8866666666667; 6336000,
          71.8916666666667; 6339600,78.575; 6343200,83.3566666666667; 6346800,82.5733333333333;
          6350400,77.995; 6354000,72.8416666666667; 6357600,63.725; 6361200,51.9666666666667;
          6364800,37.655; 6368400,22.5566666666667; 6372000,18.27; 6375600,18.27;
          6379200,18.27; 6382800,18.27; 6386400,18.27; 6390000,18.27; 6393600,18.27;
          6397200,18.27; 6400800,18.27; 6404400,18.27; 6408000,18.27; 6411600,18.3516666666667;
          6415200,28.495; 6418800,50.7716666666667; 6422400,66.7766666666667; 6426000,
          77.5016666666667; 6429600,86.5783333333333; 6433200,85.1333333333333; 6436800,
          87.0333333333333; 6440400,87.1566666666667; 6444000,82.495; 6447600,57.6183333333333;
          6451200,32.62; 6454800,19.135; 6458400,18.27; 6462000,18.27; 6465600,18.27;
          6469200,18.27; 6472800,18.27; 6476400,18.27; 6480000,18.27; 6483600,18.27;
          6487200,18.27; 6490800,18.27; 6494400,18.27; 6498000,18.27; 6501600,20.04;
          6505200,24.6183333333333; 6508800,37.6533333333333; 6512400,48.0066666666667;
          6516000,69.5016666666667; 6519600,49.7816666666667; 6523200,48.0483333333333;
          6526800,50.7316666666667; 6530400,53.5766666666667; 6534000,57.29; 6537600,
          38.19; 6541200,22.145; 6544800,18.27; 6548400,18.27; 6552000,18.27; 6555600,
          18.27; 6559200,18.27; 6562800,18.27; 6566400,18.27; 6570000,18.27; 6573600,
          18.27; 6577200,18.27; 6580800,18.27; 6584400,18.6; 6588000,28.4533333333333;
          6591600,51.3083333333333; 6595200,68.2233333333333; 6598800,75.1516666666667;
          6602400,81.1316666666667; 6606000,80.3866666666667; 6609600,76.6766666666667;
          6613200,71.1516666666667; 6616800,62.3216666666667; 6620400,50.4; 6624000,
          35.8816666666667; 6627600,23.3816666666667; 6631200,18.27; 6634800,18.27;
          6638400,18.27; 6642000,18.27; 6645600,18.27; 6649200,18.27; 6652800,18.27;
          6656400,18.27; 6660000,18.27; 6663600,18.27; 6667200,18.27; 6670800,18.6816666666667;
          6674400,30.02; 6678000,50.275; 6681600,65.005; 6685200,75.935; 6688800,82.615;
          6692400,81.3366666666667; 6696000,77.5816666666667; 6699600,73.3766666666667;
          6703200,65.6633333333333; 6706800,49.0366666666667; 6710400,35.2616666666667;
          6714000,24.04; 6717600,18.27; 6721200,18.27; 6724800,18.27; 6728400,18.27;
          6732000,18.27; 6735600,18.27; 6739200,18.27; 6742800,18.27; 6746400,18.27;
          6750000,18.27; 6753600,18.27; 6757200,18.7233333333333; 6760800,31.795;
          6764400,52.2983333333333; 6768000,67.1066666666667; 6771600,77.0916666666667;
          6775200,83.315; 6778800,82.5733333333333; 6782400,77.8283333333333; 6786000,
          71.645; 6789600,64.5916666666667; 6793200,52.2566666666667; 6796800,35.5916666666667;
          6800400,23.4633333333333; 6804000,18.27; 6807600,18.27; 6811200,18.27; 6814800,
          18.27; 6818400,18.27; 6822000,18.27; 6825600,18.27; 6829200,18.27; 6832800,
          18.27; 6836400,18.27; 6840000,18.27; 6843600,18.97; 6847200,32.1683333333333;
          6850800,58.1966666666667; 6854400,67.1066666666667; 6858000,74.5733333333333;
          6861600,94.0866666666667; 6865200,116.485; 6868800,97.2216666666667; 6872400,
          97.715; 6876000,90.2533333333333; 6879600,57.4116666666667; 6883200,50.4816666666667;
          6886800,24.2066666666667; 6890400,18.27; 6894000,18.27; 6897600,18.27; 6901200,
          18.27; 6904800,18.27; 6908400,18.27; 6912000,18.27; 6915600,18.27; 6919200,
          18.27; 6922800,18.27; 6926400,18.27; 6930000,18.805; 6933600,31.465; 6937200,
          53.2466666666667; 6940800,71.6866666666667; 6944400,81.75; 6948000,88.025;
          6951600,88.81; 6955200,86.33; 6958800,80.2666666666667; 6962400,72.8833333333333;
          6966000,66.53; 6969600,48.1316666666667; 6973200,25.5266666666667; 6976800,
          18.27; 6980400,18.27; 6984000,18.27; 6987600,18.27; 6991200,18.27; 6994800,
          18.27; 6998400,18.27; 7002000,18.27; 7005600,18.27; 7009200,18.27; 7012800,
          18.27; 7016400,18.6816666666667; 7020000,28.33; 7023600,40.2966666666667;
          7027200,64.5083333333333; 7030800,69.5416666666667; 7034400,89.755; 7038000,
          102.706666666667; 7041600,84.9266666666667; 7045200,77.5433333333333; 7048800,
          69.3766666666667; 7052400,59.805; 7056000,46.11; 7059600,24.4133333333333;
          7063200,18.27; 7066800,18.27; 7070400,18.27; 7074000,18.27; 7077600,18.27;
          7081200,18.27; 7084800,18.27; 7088400,18.27; 7092000,18.27; 7095600,18.27;
          7099200,18.27; 7102800,19.5466666666667; 7106400,36.58; 7110000,58.0733333333333;
          7113600,74.5766666666667; 7117200,78.3716666666667; 7120800,94.1683333333333;
          7124400,65.785; 7128000,85.5866666666667; 7131600,84.3516666666667; 7135200,
          77.6683333333333; 7138800,48.7933333333333; 7142400,45.8616666666667; 7146000,
          25.9383333333333; 7149600,18.27; 7153200,18.27; 7156800,18.27; 7160400,18.27;
          7164000,18.27; 7167600,18.27; 7171200,18.27; 7174800,18.27; 7178400,18.27;
          7182000,18.27; 7185600,18.27; 7189200,19.7533333333333; 7192800,44.7883333333333;
          7196400,78.4916666666667; 7200000,76.925; 7203600,82.6166666666667; 7207200,
          90.9516666666667; 7210800,86.3733333333333; 7214400,80.5516666666667; 7218000,
          77.13; 7221600,70.8616666666667; 7225200,61.5383333333333; 7228800,50.6883333333333;
          7232400,25.0716666666667; 7236000,18.27; 7239600,18.27; 7243200,18.27; 7246800,
          18.27; 7250400,18.27; 7254000,18.27; 7257600,18.27; 7261200,18.27; 7264800,
          18.27; 7268400,18.27; 7272000,18.27; 7275600,19.4233333333333; 7279200,28.95;
          7282800,44.46; 7286400,79.1516666666667; 7290000,94.665; 7293600,79.565;
          7297200,56.05; 7300800,60.2983333333333; 7304400,80.1433333333333; 7308000,
          75.0666666666667; 7311600,59.93; 7315200,42.685; 7318800,22.515; 7322400,
          18.27; 7326000,18.27; 7329600,18.27; 7333200,18.27; 7336800,18.27; 7340400,
          18.27; 7344000,18.27; 7347600,18.27; 7351200,18.27; 7354800,18.27; 7358400,
          18.27; 7362000,19.96; 7365600,34.52; 7369200,57.29; 7372800,70.78; 7376400,
          79.4; 7380000,84.305; 7383600,82.78; 7387200,77.9533333333333; 7390800,72.47;
          7394400,65.54; 7398000,54.4416666666667; 7401600,38.5633333333333; 7405200,
          25.3183333333333; 7408800,18.27; 7412400,18.27; 7416000,18.27; 7419600,18.27;
          7423200,18.27; 7426800,18.27; 7430400,18.27; 7434000,18.27; 7437600,18.27;
          7441200,18.27; 7444800,18.27; 7448400,21.69; 7452000,28.62; 7455600,42.1516666666667;
          7459200,42.4383333333333; 7462800,46.1116666666667; 7466400,64.96; 7470000,
          49.8216666666667; 7473600,69.5816666666667; 7477200,62.1983333333333; 7480800,
          69.1283333333333; 7484400,42.1916666666667; 7488000,25.525; 7491600,18.27;
          7495200,18.27; 7498800,18.27; 7502400,18.27; 7506000,18.27; 7509600,18.27;
          7513200,18.27; 7516800,18.27; 7520400,18.27; 7524000,18.27; 7527600,18.27;
          7531200,19.5466666666667; 7534800,30.7633333333333; 7538400,40.4166666666667;
          7542000,47.8016666666667; 7545600,40.995; 7549200,48.4216666666667; 7552800,
          79.275; 7556400,70.2416666666667; 7560000,66.6516666666667; 7563600,65.25;
          7567200,72.4283333333333; 7570800,49.0383333333333; 7574400,27.135; 7578000,
          18.27; 7581600,18.27; 7585200,18.27; 7588800,18.27; 7592400,18.27; 7596000,
          18.27; 7599600,18.27; 7603200,18.27; 7606800,18.27; 7610400,18.27; 7614000,
          18.27; 7617600,18.7216666666667; 7621200,25.815; 7624800,45.3266666666667;
          7628400,85.2983333333333; 7632000,93.8783333333333; 7635600,123.291666666667;
          7639200,118.711666666667; 7642800,87.525; 7646400,76.6366666666667; 7650000,
          41.5733333333333; 7653600,36.8283333333333; 7657200,30.5166666666667; 7660800,
          20.33; 7664400,18.27; 7668000,18.27; 7671600,18.27; 7675200,18.27; 7678800,
          18.27; 7682400,18.27; 7686000,18.27; 7689600,18.27; 7693200,18.27; 7696800,
          18.27; 7700400,18.27; 7704000,19.5466666666667; 7707600,30.8066666666667;
          7711200,40.83; 7714800,66.9016666666667; 7718400,88.64; 7722000,98.8716666666667;
          7725600,91.855; 7729200,89.4216666666667; 7732800,78.325; 7736400,87.195;
          7740000,60.465; 7743600,45.3266666666667; 7747200,28; 7750800,18.27; 7754400,
          18.27; 7758000,18.27; 7761600,18.27; 7765200,18.27; 7768800,18.27; 7772400,
          18.27; 7776000,18.27; 7779600,18.27; 7783200,18.27; 7786800,18.27; 7790400,
          19.175; 7794000,26.35; 7797600,41.82; 7801200,59.1866666666667; 7804800,
          83.7733333333333; 7808400,98.4583333333333; 7812000,110.171666666667; 7815600,
          105.718333333333; 7819200,89.465; 7822800,61.1666666666667; 7826400,40.5416666666667;
          7830000,24.205; 7833600,21.1966666666667; 7837200,18.27; 7840800,18.27;
          7844400,18.27; 7848000,18.27; 7851600,18.27; 7855200,18.27; 7858800,18.27;
          7862400,18.27; 7866000,18.27; 7869600,18.27; 7873200,18.27; 7876800,18.27;
          7880400,26.3933333333333; 7884000,33.8166666666667; 7887600,44.1733333333333;
          7891200,104.52; 7894800,102.583333333333; 7898400,112.565; 7902000,95.6933333333333;
          7905600,94.87; 7909200,83.07; 7912800,73.9116666666667; 7916400,52.7516666666667;
          7920000,27.0933333333333; 7923600,18.27; 7927200,18.27; 7930800,18.27; 7934400,
          18.27; 7938000,18.27; 7941600,18.27; 7945200,18.27; 7948800,18.27; 7952400,
          18.27; 7956000,18.27; 7959600,18.27; 7963200,18.6816666666667; 7966800,26.72;
          7970400,35.55; 7974000,48.17; 7977600,81.2983333333333; 7981200,110.503333333333;
          7984800,117.598333333333; 7988400,111.493333333333; 7992000,101.056666666667;
          7995600,99.7783333333334; 7999200,100.19; 8002800,55.475; 8006400,31.095;
          8010000,18.27; 8013600,18.27; 8017200,18.27; 8020800,18.27; 8024400,18.27;
          8028000,18.27; 8031600,18.27; 8035200,18.27; 8038800,18.27; 8042400,18.27;
          8046000,18.27; 8049600,19.9183333333333; 8053200,30.9283333333333; 8056800,
          45.2033333333333; 8060400,59.0216666666667; 8064000,71.315; 8067600,76.225;
          8071200,70.3666666666667; 8074800,63.1466666666667; 8078400,63.6433333333333;
          8082000,58.2366666666667; 8085600,51.0183333333333; 8089200,32.9116666666667;
          8092800,21.195; 8096400,18.27; 8100000,18.27; 8103600,18.27; 8107200,18.27;
          8110800,18.27; 8114400,18.27; 8118000,18.27; 8121600,18.27; 8125200,18.27;
          8128800,18.27; 8132400,18.27; 8136000,24.62; 8139600,30.5166666666667; 8143200,
          38.4383333333333; 8146800,40.625; 8150400,50.155; 8154000,41.4483333333333;
          8157600,49.245; 8161200,51.9266666666667; 8164800,60.8766666666667; 8168400,
          72.0983333333333; 8172000,65.2066666666667; 8175600,36.375; 8179200,30.3116666666667;
          8182800,18.31; 8186400,18.27; 8190000,18.27; 8193600,18.27; 8197200,18.27;
          8200800,18.27; 8204400,18.27; 8208000,18.27; 8211600,18.27; 8215200,18.27;
          8218800,18.27; 8222400,19.0116666666667; 8226000,25.9383333333333; 8229600,
          28.41; 8233200,38.2333333333333; 8236800,42.9333333333333; 8240400,61.415;
          8244000,42.15; 8247600,51.225; 8251200,50.6066666666667; 8254800,44.0066666666667;
          8258400,31.6733333333333; 8262000,22.885; 8265600,18.27; 8269200,18.27;
          8272800,18.27; 8276400,18.27; 8280000,18.27; 8283600,18.27; 8287200,18.27;
          8290800,18.27; 8294400,18.27; 8298000,18.27; 8301600,18.27; 8305200,18.27;
          8308800,20.2466666666667; 8312400,29.5283333333333; 8316000,47.72; 8319600,
          51.9666666666667; 8323200,60.5466666666667; 8326800,88.3933333333333; 8330400,
          103.45; 8334000,87.155; 8337600,75.8516666666667; 8341200,54.935; 8344800,
          52.7116666666667; 8348400,38.19; 8352000,28; 8355600,18.7233333333333; 8359200,
          18.27; 8362800,18.27; 8366400,18.27; 8370000,18.27; 8373600,18.27; 8377200,
          18.27; 8380800,18.27; 8384400,18.27; 8388000,18.27; 8391600,18.27; 8395200,
          21.69; 8398800,35.095; 8402400,59.8483333333333; 8406000,81.4616666666667;
          8409600,63.1466666666667; 8413200,81.4183333333333; 8416800,76.925; 8420400,
          103.53; 8424000,82.08; 8427600,41.8616666666667; 8431200,43.8016666666667;
          8434800,50.1533333333333; 8438400,30.5166666666667; 8442000,19.3816666666667;
          8445600,18.27; 8449200,18.27; 8452800,18.27; 8456400,18.27; 8460000,18.27;
          8463600,18.27; 8467200,18.27; 8470800,18.27; 8474400,18.27; 8478000,18.27;
          8481600,24.6183333333333; 8485200,38.9316666666667; 8488800,42.275; 8492400,
          53.6583333333333; 8496000,50.4416666666667; 8499600,51.6366666666667; 8503200,
          43.1; 8506800,36.5833333333333; 8510400,65.7033333333333; 8514000,39.8;
          8517600,38.355; 8521200,38.85; 8524800,23.7116666666667; 8528400,18.27;
          8532000,18.27; 8535600,18.27; 8539200,18.27; 8542800,18.27; 8546400,18.27;
          8550000,18.27; 8553600,18.27; 8557200,18.27; 8560800,18.27; 8564400,18.27;
          8568000,18.27; 8571600,24.825; 8575200,43.51; 8578800,44.9133333333333;
          8582400,51.885; 8586000,51.3516666666667; 8589600,84.6366666666667; 8593200,
          94.4983333333333; 8596800,66.8166666666667; 8600400,38.1516666666667; 8604000,
          55.64; 8607600,65.7866666666667; 8611200,37.6533333333333; 8614800,19.175;
          8618400,18.27; 8622000,18.27; 8625600,18.27; 8629200,18.27; 8632800,18.27;
          8636400,18.27; 8640000,18.27; 8643600,18.27; 8647200,18.27; 8650800,18.27;
          8654400,28.825; 8658000,52.7116666666667; 8661600,68.2216666666667; 8665200,
          76.47; 8668800,84.6783333333333; 8672400,87.6516666666667; 8676000,83.9766666666667;
          8679600,79.9333333333333; 8683200,75.8516666666667; 8686800,69.17; 8690400,
          67.0266666666667; 8694000,92.7666666666667; 8697600,28.29; 8701200,19.5883333333333;
          8704800,18.27; 8708400,18.27; 8712000,18.27; 8715600,18.27; 8719200,18.27;
          8722800,18.27; 8726400,18.27; 8730000,18.27; 8733600,18.27; 8737200,18.27;
          8740800,25.4016666666667; 8744400,67.2716666666667; 8748000,70.9416666666667;
          8751600,88.9683333333333; 8755200,107.325; 8758800,97.6716666666667; 8762400,
          116.608333333333; 8766000,93.5083333333333; 8769600,95.7766666666667; 8773200,
          84.3916666666667; 8776800,77.255; 8780400,108.481666666667; 8784000,33.2;
          8787600,19.425; 8791200,18.27; 8794800,18.27; 8798400,18.27; 8802000,18.27;
          8805600,18.27; 8809200,18.27; 8812800,18.27; 8816400,18.27; 8820000,18.27;
          8823600,18.27; 8827200,25.855; 8830800,49.7816666666667; 8834400,64.5483333333333;
          8838000,79.98; 8841600,81.1316666666667; 8845200,81.545; 8848800,88.4333333333333;
          8852400,89.55; 8856000,98.415; 8859600,93.385; 8863200,75.9333333333333;
          8866800,56.2583333333333; 8870400,31.3433333333333; 8874000,19.4233333333333;
          8877600,18.27; 8881200,18.27; 8884800,18.27; 8888400,18.27; 8892000,18.27;
          8895600,18.27; 8899200,18.27; 8902800,18.27; 8906400,18.27; 8910000,18.27;
          8913600,18.6816666666667; 8917200,25.525; 8920800,35.2616666666667; 8924400,
          34.6833333333333; 8928000,37.2; 8931600,65.085; 8935200,57.0416666666667;
          8938800,78.7816666666667; 8942400,96.395; 8946000,75.4383333333333; 8949600,
          73.955; 8953200,21.6916666666667; 8956800,20.7833333333333; 8960400,18.27;
          8964000,18.27; 8967600,18.27; 8971200,18.27; 8974800,18.27; 8978400,18.27;
          8982000,18.27; 8985600,18.27; 8989200,18.27; 8992800,18.27; 8996400,18.27;
          9000000,26.3083333333333; 9003600,52.5433333333333; 9007200,67.025; 9010800,
          85.7516666666667; 9014400,84.1416666666667; 9018000,86.33; 9021600,87.57;
          9025200,90.9516666666667; 9028800,79.8533333333333; 9032400,71.2333333333333;
          9036000,67.105; 9039600,100.065; 9043200,31.2183333333333; 9046800,18.7233333333333;
          9050400,18.27; 9054000,18.27; 9057600,18.27; 9061200,18.27; 9064800,18.27;
          9068400,18.27; 9072000,18.27; 9075600,18.27; 9079200,18.27; 9082800,18.27;
          9086400,21.7316666666667; 9090000,37.1583333333333; 9093600,41.4466666666667;
          9097200,56.5066666666667; 9100800,98.4983333333333; 9104400,126.426666666667;
          9108000,114.918333333333; 9111600,95.9433333333333; 9115200,98.625; 9118800,
          82.9466666666667; 9122400,55.2666666666667; 9126000,103.985; 9129600,29.6916666666667;
          9133200,18.7233333333333; 9136800,18.27; 9140400,18.27; 9144000,18.27; 9147600,
          18.27; 9151200,18.27; 9154800,18.27; 9158400,18.27; 9162000,18.27; 9165600,
          18.27; 9169200,18.27; 9172800,19.4216666666667; 9176400,22.1016666666667;
          9180000,36.0033333333333; 9183600,69.83; 9187200,103.573333333333; 9190800,
          114.71; 9194400,117.061666666667; 9198000,104.851666666667; 9201600,82.3283333333333;
          9205200,88.7233333333333; 9208800,84.9733333333333; 9212400,49.7; 9216000,
          35.6316666666667; 9219600,20.3733333333333; 9223200,18.27; 9226800,18.27;
          9230400,18.27; 9234000,18.27; 9237600,18.27; 9241200,18.27; 9244800,18.27;
          9248400,18.27; 9252000,18.27; 9255600,18.27; 9259200,24.0833333333333; 9262800,
          36.3733333333333; 9266400,49.41; 9270000,59.8883333333333; 9273600,42.275;
          9277200,39.965; 9280800,42.5633333333333; 9284400,78; 9288000,97.755; 9291600,
          46.69; 9295200,54.6066666666667; 9298800,30.2716666666667; 9302400,18.6;
          9306000,18.27; 9309600,18.27; 9313200,18.27; 9316800,18.27; 9320400,18.27;
          9324000,18.27; 9327600,18.27; 9331200,18.27; 9334800,18.27; 9338400,18.27;
          9342000,18.27; 9345600,21.3183333333333; 9349200,32.125; 9352800,41.8616666666667;
          9356400,52.3383333333333; 9360000,51.5133333333333; 9363600,54.4; 9367200,
          86.9483333333333; 9370800,88.6416666666667; 9374400,116.855; 9378000,70.2016666666667;
          9381600,42.1916666666667; 9385200,49.4533333333333; 9388800,27.215; 9392400,
          18.27; 9396000,18.27; 9399600,18.27; 9403200,18.27; 9406800,18.27; 9410400,
          18.27; 9414000,18.27; 9417600,18.27; 9421200,18.27; 9424800,18.27; 9428400,
          18.6816666666667; 9432000,33.445; 9435600,62.4866666666667; 9439200,77.255;
          9442800,98.4133333333333; 9446400,86.3716666666667; 9450000,87.65; 9453600,
          85.0083333333333; 9457200,80.3866666666667; 9460800,76.6333333333333; 9464400,
          71.315; 9468000,80.4733333333333; 9471600,132.408333333333; 9475200,30.0633333333333;
          9478800,20.33; 9482400,18.27; 9486000,18.27; 9489600,18.27; 9493200,18.27;
          9496800,18.27; 9500400,18.27; 9504000,18.27; 9507600,18.27; 9511200,18.27;
          9514800,18.7216666666667; 9518400,31.0933333333333; 9522000,54.4016666666667;
          9525600,67.4783333333333; 9529200,86.8666666666667; 9532800,106.418333333333;
          9536400,117.886666666667; 9540000,119.453333333333; 9543600,127.458333333333;
          9547200,104.85; 9550800,97.7983333333333; 9554400,98.7483333333333; 9558000,
          71.685; 9561600,36.5383333333333; 9565200,19.5883333333333; 9568800,18.27;
          9572400,18.27; 9576000,18.27; 9579600,18.27; 9583200,18.27; 9586800,18.27;
          9590400,18.27; 9594000,18.27; 9597600,18.27; 9601200,18.6816666666667; 9604800,
          34.6016666666667; 9608400,63.6833333333333; 9612000,72.9633333333333; 9615600,
          87.4866666666667; 9619200,93.0966666666667; 9622800,109.761666666667; 9626400,
          124.941666666667; 9630000,103.16; 9633600,76.5966666666667; 9637200,56.7516666666667;
          9640800,56.7933333333333; 9644400,64.1783333333333; 9648000,29.4033333333333;
          9651600,18.7233333333333; 9655200,18.27; 9658800,18.27; 9662400,18.27; 9666000,
          18.27; 9669600,18.27; 9673200,18.27; 9676800,18.27; 9680400,18.27; 9684000,
          18.27; 9687600,18.27; 9691200,22.1033333333333; 9694800,33.445; 9698400,
          42.81; 9702000,45.6983333333333; 9705600,51.885; 9709200,96.2316666666667;
          9712800,136.78; 9716400,139.503333333333; 9720000,88.3516666666667; 9723600,
          90.9083333333333; 9727200,70.3666666666667; 9730800,65.1283333333333; 9734400,
          46.6883333333333; 9738000,21.65; 9741600,18.27; 9745200,18.27; 9748800,18.27;
          9752400,18.27; 9756000,18.27; 9759600,18.27; 9763200,18.27; 9766800,18.27;
          9770400,18.27; 9774000,18.27; 9777600,21.9366666666667; 9781200,28.3733333333333;
          9784800,41.5316666666667; 9788400,45.1633333333333; 9792000,51.8433333333333;
          9795600,44.3383333333333; 9799200,54.1133333333333; 9802800,48.255; 9806400,
          55.8466666666667; 9810000,43.9233333333333; 9813600,39.5933333333333; 9817200,
          28.95; 9820800,22.64; 9824400,18.27; 9828000,18.27; 9831600,18.27; 9835200,
          18.27; 9838800,18.27; 9842400,18.27; 9846000,18.27; 9849600,18.27; 9853200,
          18.27; 9856800,18.27; 9860400,18.27; 9864000,21.0716666666667; 9867600,38.44;
          9871200,78.945; 9874800,101.345; 9878400,92.4766666666667; 9882000,96.3516666666666;
          9885600,114.545; 9889200,81.7916666666667; 9892800,75.8933333333333; 9896400,
          63.7666666666667; 9900000,81.8333333333333; 9903600,71.275; 9907200,41.365;
          9910800,20.8666666666667; 9914400,18.27; 9918000,18.27; 9921600,18.27; 9925200,
          18.27; 9928800,18.27; 9932400,18.27; 9936000,18.27; 9939600,18.27; 9943200,
          18.27; 9946800,18.6816666666667; 9950400,29.1966666666667; 9954000,52.9183333333333;
          9957600,76.5966666666666; 9961200,85.8766666666667; 9964800,98.5833333333333;
          9968400,100.19; 9972000,97.26; 9975600,96.1066666666667; 9979200,99.16;
          9982800,97.0516666666667; 9986400,57.3316666666667; 9990000,109.718333333333;
          9993600,47.0583333333333; 9997200,23.34; 10000800,18.27; 10004400,18.27;
          10008000,18.27; 10011600,18.27; 10015200,18.27; 10018800,18.27; 10022400,
          18.27; 10026000,18.27; 10029600,18.27; 10033200,18.27; 10036800,21.69; 10040400,
          33.8166666666667; 10044000,56.135; 10047600,81.295; 10051200,84.68; 10054800,
          64.7966666666667; 10058400,77.75; 10062000,84.1416666666667; 10065600,64.385;
          10069200,43.4316666666667; 10072800,49.1616666666667; 10076400,39.305; 10080000,
          24.25; 10083600,18.27; 10087200,18.27; 10090800,18.27; 10094400,18.27; 10098000,
          18.27; 10101600,18.27; 10105200,18.27; 10108800,18.27; 10112400,18.27; 10116000,
          18.27; 10119600,19.67; 10123200,35.7966666666667; 10126800,65.7033333333333;
          10130400,81.0083333333333; 10134000,92.025; 10137600,115.371666666667; 10141200,
          109.47; 10144800,87.28; 10148400,101.096666666667; 10152000,84.885; 10155600,
          54.36; 10159200,65.6633333333333; 10162800,148.288333333333; 10166400,49.3683333333333;
          10170000,22.2283333333333; 10173600,18.27; 10177200,18.27; 10180800,18.27;
          10184400,18.27; 10188000,18.27; 10191600,18.27; 10195200,18.27; 10198800,
          18.27; 10202400,18.27; 10206000,20.4133333333333; 10209600,41.5316666666667;
          10213200,56.7916666666667; 10216800,67.0666666666667; 10220400,76.4716666666666;
          10224000,83.8533333333333; 10227600,88.685; 10231200,87.9833333333333; 10234800,
          84.3466666666667; 10238400,81.4616666666667; 10242000,68.8383333333333;
          10245600,61.29; 10249200,145.568333333333; 10252800,65.0033333333333; 10256400,
          23.5066666666667; 10260000,18.27; 10263600,18.27; 10267200,18.27; 10270800,
          18.27; 10274400,18.27; 10278000,18.27; 10281600,18.27; 10285200,18.27; 10288800,
          18.27; 10292400,20.825; 10296000,37.325; 10299600,56.2166666666667; 10303200,
          68.3033333333333; 10306800,77.5866666666667; 10310400,84.3066666666667;
          10314000,88.065; 10317600,86.66; 10321200,82.5333333333333; 10324800,78.4066666666667;
          10328400,73.9133333333333; 10332000,95.0366666666667; 10335600,156.083333333333;
          10339200,58.0333333333333; 10342800,22.5566666666667; 10346400,18.27; 10350000,
          18.27; 10353600,18.27; 10357200,18.27; 10360800,18.27; 10364400,18.27; 10368000,
          18.27; 10371600,18.27; 10375200,18.27; 10378800,20.825; 10382400,37.8183333333333;
          10386000,68.26; 10389600,92.1466666666667; 10393200,103.736666666667; 10396800,
          107.326666666667; 10400400,83.0316666666667; 10404000,47.6383333333333;
          10407600,38.4766666666667; 10411200,38.85; 10414800,36.21; 10418400,33.53;
          10422000,28.0416666666667; 10425600,22.6366666666667; 10429200,18.27; 10432800,
          18.27; 10436400,18.27; 10440000,18.27; 10443600,18.27; 10447200,18.27; 10450800,
          18.27])
      annotation (Placement(transformation(extent={{-8,-18},{-2,-12}})));
    Modelica.Blocks.Math.UnitConversions.From_degC from_degC
      annotation (Placement(transformation(extent={{2,20},{10,28}})));
    Modelica.Blocks.Math.UnitConversions.From_degC from_degC1
      annotation (Placement(transformation(extent={{2,10},{8,16}})));
    Buildings.BoundaryConditions.WeatherData.Bus weaBus annotation (Placement(
          transformation(extent={{52,48},{92,88}}), iconTransformation(extent={
              {50,40},{70,60}})));
  equation
    connect(WindSpeed.y,weaDat. winSpe_in) annotation (Line(points={{-21.7,1},{
            -6,1},{-6,-4.95},{17.5,-4.95}},       color={0,0,127}));
    connect(RelativeHumidity.y,weaDat. relHum_in) annotation (Line(points={{-13.7,9},
            {12,9},{12,-0.5},{17.5,-0.5}},          color={0,0,127}));
    connect(CeilHei.y,weaDat. ceiHei_in) annotation (Line(points={{2.3,3},{8,3},
            {8,0},{12,0},{12,-2.85},{17.45,-2.85}},
                                               color={0,0,127}));
    connect(WindDir.y,conWinDir. u)
      annotation (Line(points={{-25.7,-11},{-25.7,-11},{-22.6,-11}},
                                                   color={0,0,127}));
    connect(conWinDir.y,weaDat. winDir_in) annotation (Line(points={{-15.7,-11},
            {-12,-11},{-12,-6},{17.5,-6}},color={0,0,127}));
    connect(IDifH.y,weaDat. HDifHor_in) annotation (Line(points={{-1.7,-15},{10,
            -15},{10,-6.8},{17.5,-6.8}},           color={0,0,127}));
    connect(DewPointTemperature.y,from_degC. u)
      annotation (Line(points={{-1.6,24},{-1.6,24},{1.2,24}},
                                                         color={0,0,127}));
    connect(from_degC.y,weaDat. TDewPoi_in) annotation (Line(points={{10.4,24},
            {14,24},{14,2.6},{17.5,2.6}},                color={0,0,127}));
    connect(TDryBulb.y,from_degC1. u) annotation (Line(points={{-1.7,13},{0,13},
            {0,14},{0,13},{1.4,13}},
                               color={0,0,127}));
    connect(from_degC1.y,weaDat. TDryBul_in) annotation (Line(points={{8.3,13},
            {14,13},{14,1.5},{17.5,1.5}},               color={0,0,127}));
    connect(IGH.y,weaDat. HDirNor_in) annotation (Line(points={{6.3,-21},{12,
            -21},{12,-8.5},{17.5,-8.5}},         color={0,0,127}));
    connect(weaDat.weaBus, weaBus) annotation (Line(
        points={{28,-3},{72,-3},{72,68}},
        color={255,204,51},
        thickness=0.5), Text(
        string="%second",
        index=1,
        extent={{6,3},{6,3}}));
    annotation (Icon(coordinateSystem(preserveAspectRatio=false), graphics={
          Rectangle(
            extent={{-100,100},{100,-100}},
            lineColor={255,85,85},
            fillColor={255,255,0},
            fillPattern=FillPattern.Solid,
            lineThickness=1),
          Ellipse(
            extent={{44,70},{78,30}},
            lineColor={255,85,85},
            lineThickness=1,
            fillColor={255,85,85},
            fillPattern=FillPattern.Solid),
          Line(
            points={{60,30},{60,10}},
            color={255,85,85},
            thickness=1),
          Line(
            points={{60,92},{60,72}},
            color={255,85,85},
            thickness=1),
          Line(
            points={{0,10},{0,-10}},
            color={255,85,85},
            thickness=1,
            origin={32,50},
            rotation=90),
          Line(
            points={{0,10},{0,-10}},
            color={255,85,85},
            thickness=1,
            origin={88,50},
            rotation=90),
          Line(
            points={{30,80},{50,64}},
            color={255,85,85},
            thickness=1),
          Line(
            points={{74,36},{94,20}},
            color={255,85,85},
            thickness=1),
          Line(
            points={{-10,8},{10,-8}},
            color={255,85,85},
            thickness=1,
            origin={82,74},
            rotation=90),
          Line(
            points={{-10,8},{10,-8}},
            color={255,85,85},
            thickness=1,
            origin={40,30},
            rotation=90)}), Diagram(coordinateSystem(preserveAspectRatio=false)));
  end Weather;

  model PrimPump
    parameter Modelica.SIunits.MassFlowRate m0RECFlow= 4.55*(2/3)
      "Nominal mass flow rate for the hot water network";
    Modelica.Blocks.Sources.Constant pumOn(k=1) "Pump off signal"
      annotation (Placement(transformation(extent={{-46,46},{-26,66}})));
    Modelica.Blocks.Logical.Switch swiPum4 "Pump switch"
      annotation (Placement(transformation(extent={{-2,6},{8,16}})));
    Modelica.Blocks.Sources.Constant pumOff(k=0) "Pump off signal"
      annotation (Placement(transformation(extent={{-38,-40},{-20,-22}})));
    Modelica.Blocks.Math.Gain gain4(k=m0RECFlow)
      "Gain used to normalize pressure measurement signal"
      annotation (Placement(transformation(extent={{-5,-5},{5,5}},
          rotation=0,
          origin={61,11})));
    FBM.Components.WorkingDayOrWeekEnd
                        workingDayOrWeekEnd3
      annotation (Placement(transformation(extent={{-44,0},{-22,22}})));
    Modelica.Blocks.Interfaces.RealOutput y
      annotation (Placement(transformation(extent={{100,-10},{120,10}})));
    Modelica.Blocks.Logical.Switch swiPum1 "Pump switch"
      annotation (Placement(transformation(extent={{34,2},{44,12}})));
    Modelica.Blocks.Interfaces.BooleanInput OnOff
      annotation (Placement(transformation(extent={{-120,-100},{-80,-60}})));
  equation
    connect(pumOff.y, swiPum4.u3)
      annotation (Line(points={{-19.1,-31},{-3,-31},{-3,7}}, color={0,0,127}));
    connect(pumOn.y, swiPum4.u1) annotation (Line(points={{-25,56},{-25,56},{
            -5.5,56},{-5.5,15},{-3,15}}, color={0,0,127}));
    connect(workingDayOrWeekEnd3.y,swiPum4. u2) annotation (Line(points={{-20.9,
            11},{-20.9,11},{-3,11}},      color={255,0,255}));
    connect(gain4.y, y) annotation (Line(points={{66.5,11},{84.25,11},{84.25,0},
            {110,0}}, color={0,0,127}));
    connect(swiPum4.y, swiPum1.u1)
      annotation (Line(points={{8.5,11},{33,11}}, color={0,0,127}));
    connect(swiPum1.y, gain4.u)
      annotation (Line(points={{44.5,7},{55,7},{55,11}}, color={0,0,127}));
    connect(OnOff, swiPum1.u2) annotation (Line(points={{-100,-80},{18,-80},{18,
            7},{33,7}}, color={255,0,255}));
    connect(pumOff.y, swiPum1.u3) annotation (Line(points={{-19.1,-31},{28.45,
            -31},{28.45,3},{33,3}}, color={0,0,127}));
    annotation (Icon(coordinateSystem(preserveAspectRatio=false), graphics={
            Rectangle(
            extent={{-100,100},{100,-100}},
            lineColor={135,135,135},
            lineThickness=1,
            fillColor={135,135,135},
            fillPattern=FillPattern.Solid)}), Diagram(coordinateSystem(
            preserveAspectRatio=false)));
  end PrimPump;

  model CTA_Controler
    Buildings.Controls.SetPoints.Table
                             TSetSup(table=[273.15 - 100,273.15 + 70; 273.15 -
          10,273.15 + 70; 273.15,273.15 + 65; 273.15 + 20,273.15 + 45; 273.15
           + 100,273.15 + 45])
      "Setpoint for supply water temperature"
      annotation (Placement(transformation(extent={{-46,16},{-28,34}})));
    Buildings.BoundaryConditions.WeatherData.Bus weaBus annotation (Placement(
          transformation(extent={{-74,52},{-34,92}}), iconTransformation(extent=
             {{-84,64},{-64,84}})));
    Modelica.Blocks.Interfaces.RealOutput TCurve
      annotation (Placement(transformation(extent={{100,-10},{120,10}})));
    Modelica.Blocks.Logical.Switch switch1
      annotation (Placement(transformation(extent={{26,-10},{46,10}})));
    Modelica.Blocks.Sources.Constant const(k=0)
      annotation (Placement(transformation(extent={{-34,-34},{-14,-14}})));
    Modelica.Blocks.Interfaces.BooleanInput OnOff
      annotation (Placement(transformation(extent={{-120,-62},{-80,-22}})));
  equation
    connect(weaBus.TDryBul, TSetSup.u) annotation (Line(
        points={{-54,72},{-54,24},{-47.8,24},{-47.8,25}},
        color={255,204,51},
        thickness=0.5), Text(
        string="%first",
        index=-1,
        extent={{-6,3},{-6,3}}));
    connect(TSetSup.y, switch1.u1) annotation (Line(points={{-27.1,25},{-18.55,
            25},{-18.55,8},{24,8}},
                                color={0,0,127}));
    connect(const.y, switch1.u3) annotation (Line(points={{-13,-24},{4,-24},{4,
            -8},{24,-8}}, color={0,0,127}));
    connect(OnOff, switch1.u2) annotation (Line(points={{-100,-42},{-48,-42},{
            -48,0},{24,0}},
                        color={255,0,255}));
    connect(switch1.y, TCurve)
      annotation (Line(points={{47,0},{110,0}}, color={0,0,127}));
    annotation (Icon(coordinateSystem(preserveAspectRatio=false), graphics={
            Rectangle(
            extent={{-100,100},{100,-100}},
            lineColor={135,135,135},
            pattern=LinePattern.Dash,
            fillColor={135,135,135},
            fillPattern=FillPattern.Solid)}), Diagram(coordinateSystem(
            preserveAspectRatio=false)));
  end CTA_Controler;

  package BaseClassesVentilation "base classes element for HVAC system"
    model BranchVAV
      import Buildings;
      replaceable package MediumA = Modelica.Media.Interfaces.PartialMedium
        "Medium model for air" annotation (choicesAllMatching=true);
    Buildings.Fluid.Actuators.Dampers.VAVBoxExponential vav(
      redeclare package Medium = MediumA,
      m_flow_nominal=m_flow_nominal,
      dp_nominal(displayUnit="Pa") = 220) "VAV box for room" annotation (
        Placement(transformation(
          extent={{-10,-10},{10,10}},
          rotation=90,
          origin={50,104})));
      Modelica.Fluid.Interfaces.FluidPort_a port_a(redeclare package Medium =
            MediumA)
        "Fluid connector a1 (positive design flow direction is from port_a1 to port_b1)"
        annotation (Placement(transformation(extent={{40,-36},{60,-16}}),
            iconTransformation(extent={{40,-36},{60,-16}})));
      Modelica.Fluid.Interfaces.FluidPort_a port_b(redeclare package Medium =
            MediumA)
        "Fluid connector b (positive design flow direction is from port_a1 to port_b1)"
        annotation (Placement(transformation(extent={{40,190},{60,210}}),
            iconTransformation(extent={{40,190},{60,210}})));
      parameter Modelica.SIunits.MassFlowRate m_flow_nominal
        "Air mass flow rate of this thermal zone";
      Buildings.Fluid.Sensors.TemperatureTwoPort TSup(
        redeclare package Medium = MediumA,
        initType=Modelica.Blocks.Types.Init.InitialState,
        m_flow_nominal=m_flow_nominal) "Supply air temperature"
        annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=90,
            origin={50,74})));
      Modelica.Blocks.Interfaces.RealOutput yDam "Signal for VAV damper"
        annotation (Placement(transformation(extent={{200,-10},{220,10}})));
      Modelica.Blocks.Interfaces.RealInput TRoo(unit="K", displayUnit="degC")
        "Measured room temperature"
        annotation (Placement(transformation(extent={{-140,80},{-100,120}})));
      Buildings.Examples.VAVReheat.Controls.ControlBus controlBus annotation (
          Placement(transformation(extent={{-108,-38},{-68,2}}), iconTransformation(
              extent={{-48,-60},{-28,-40}})));
      VAVRoom vAVRoom
        annotation (Placement(transformation(extent={{-40,38},{-20,58}})));
    equation
      connect(TSup.port_b, vav.port_a) annotation (Line(
          points={{50,84},{50,94}},
          color={85,255,85},
          thickness=0.5));
      connect(port_b, vav.port_b) annotation (Line(
          points={{50,200},{50,200},{50,114}},
          color={85,255,85},
          thickness=0.5));
      connect(TRoo, vAVRoom.TRoo) annotation (Line(points={{-120,100},{-82,100},{-82,
              52},{-42,52}}, color={0,0,127}));
      connect(TSup.T, vAVRoom.TSup) annotation (Line(points={{39,74},{-66,74},{-66,44},
              {-42,44}}, color={0,0,127}));
      connect(controlBus, vAVRoom.controlBus) annotation (Line(
          points={{-88,-18},{-68,-18},{-68,55},{-46,55}},
          color={255,204,51},
          thickness=0.5), Text(
          string="%first",
          index=-1,
          extent={{-6,3},{-6,3}}));
      connect(TSup.port_a, port_a)
        annotation (Line(points={{50,64},{50,19},{50,-26}}, color={0,127,255}));
      connect(vAVRoom.yDam, vav.y) annotation (Line(points={{-19,48.2},{9.5,48.2},{9.5,
              104},{38,104}}, color={0,0,127}));
      connect(vAVRoom.yDam, yDam) annotation (Line(points={{-19,48.2},{9.5,48.2},{9.5,
              0},{210,0}}, color={0,0,127}));
      annotation (Diagram(coordinateSystem(preserveAspectRatio=true, extent={{-100,
                -100},{200,200}})), Icon(coordinateSystem(
              preserveAspectRatio=true, extent={{-100,-100},{200,200}}), graphics={
            Rectangle(
              extent={{-100,200},{200,-100}},
              lineColor={0,0,0},
              fillColor={255,255,255},
              fillPattern=FillPattern.Solid),
            Rectangle(
              extent={{-160.5,-16.1286},{139.5,-20.1286}},
              lineColor={0,0,0},
              fillPattern=FillPattern.HorizontalCylinder,
              fillColor={0,127,255},
              origin={31.8714,60.5},
              rotation=90),
            Rectangle(
              extent={{72,-20},{92,-40}},
              lineColor={0,0,0},
              fillPattern=FillPattern.HorizontalCylinder,
              fillColor={192,192,192},
              origin={20,52},
              rotation=90),
            Rectangle(
              extent={{73,-10},{93,-22}},
              lineColor={0,0,0},
              fillPattern=FillPattern.HorizontalCylinder,
              fillColor={0,127,255},
              origin={34,51},
              rotation=90),
            Polygon(
              points={{36,128},{64,144},{64,142},{36,126},{36,128}},
              pattern=LinePattern.None,
              smooth=Smooth.None,
              fillColor={0,0,0},
              fillPattern=FillPattern.Solid,
              lineColor={0,0,0}),
            Text(
              extent={{-78,198},{24,156}},
              lineColor={0,0,255},
              textString="%name"),
            Text(
              extent={{126,24},{194,-20}},
              lineColor={0,0,0},
              fillColor={255,255,255},
              fillPattern=FillPattern.Solid,
              textString="yDam"),
            Text(
              extent={{144,194},{184,168}},
              lineColor={0,0,0},
              fillColor={255,255,255},
              fillPattern=FillPattern.Solid,
              textString="p_rel"),
            Text(
              extent={{144,154},{192,122}},
              lineColor={0,0,0},
              fillColor={255,255,255},
              fillPattern=FillPattern.Solid,
              textString="TRooAir")}));
    end BranchVAV;

    block VAVRoom "Controller for room VAV box"
      extends Modelica.Blocks.Icons.Block;
      parameter Real kPDamHea = 0.5
        "Proportional gain for VAV damper in heating mode";
      Buildings.Controls.Continuous.LimPID conCoo(
        yMax=1,
        Td=60,
        Ti=120,
        controllerType=Modelica.Blocks.Types.SimpleController.PI,
        initType=Modelica.Blocks.Types.InitPID.InitialState,
        xi_start=1,
        k=0.01,
        reverseAction=true)
                "Controller for cooling (acts on damper)"
        annotation (Placement(transformation(extent={{-18,-34},{2,-14}})));

      Modelica.Blocks.Interfaces.RealInput TRoo(final quantity="ThermodynamicTemperature",
                                              final unit = "K", displayUnit = "degC", min=0)
        "Measured room temperature"
        annotation (Placement(transformation(extent={{-140,20},{-100,60}})));
      Modelica.Blocks.Interfaces.RealOutput yDam "Signal for VAV damper"
        annotation (Placement(transformation(extent={{100,-8},{120,12}})));
      Modelica.Blocks.Interfaces.RealInput TSup(displayUnit="degC")
        "Measured supply air temperature after heating coil"
        annotation (Placement(transformation(extent={{-140,-60},{-100,-20}})));
    Buildings.Utilities.Math.SmoothMax smoothMax2(deltaX=0.1)
      annotation (Placement(transformation(extent={{14,12},{34,32}})));
      Modelica.Blocks.Sources.Constant one(k=1)
        annotation (Placement(transformation(extent={{-58,-50},{-38,-30}})));
      Modelica.Blocks.Math.Add3 yDamHea(k2=kPDamHea, k3=-kPDamHea)
        "Outputs (unlimited) damper signal for heating."
        annotation (Placement(transformation(extent={{-18,6},{2,26}})));
      Modelica.Blocks.Math.Add add
        annotation (Placement(transformation(extent={{42,-14},{62,6}})));
      Modelica.Blocks.Sources.Constant zero(k=0.1)
        annotation (Placement(transformation(extent={{-18,36},{2,56}})));
    Buildings.Utilities.Math.SmoothMin smoothMin(deltaX=0.1)
      annotation (Placement(transformation(extent={{72,-20},{92,0}})));
      Buildings.Examples.VAVReheat.Controls.ControlBus controlBus annotation (
          Placement(transformation(extent={{-90,62},{-50,102}}),
            iconTransformation(extent={{-170,60},{-150,80}})));
    equation
      connect(conCoo.u_m, TRoo) annotation (Line(
          points={{-8,-36},{-8,-54},{-78,-54},{-78,40},{-120,40}},
          color={0,0,127},
          smooth=Smooth.None));
      connect(TRoo, yDamHea.u3) annotation (Line(
          points={{-120,40},{-78,40},{-78,8},{-20,8}},
          color={0,0,127},
          smooth=Smooth.None));
      connect(yDamHea.u2, TSup) annotation (Line(
          points={{-20,16},{-88,16},{-88,-40},{-120,-40}},
          color={0,0,127},
          smooth=Smooth.None));
      connect(one.y, yDamHea.u1) annotation (Line(
          points={{-37,-40},{-30,-40},{-30,24},{-20,24}},
          color={0,0,127},
          smooth=Smooth.None));
      connect(conCoo.y, add.u2) annotation (Line(
          points={{3,-24},{10,-24},{10,-10},{40,-10}},
          color={0,0,127},
          smooth=Smooth.None));
      connect(yDamHea.y, smoothMax2.u2) annotation (Line(
          points={{3,16},{12,16}},
          color={0,0,127},
          smooth=Smooth.None));
      connect(smoothMax2.y, add.u1) annotation (Line(
          points={{35,22},{36,22},{36,2},{40,2}},
          color={0,0,127},
          smooth=Smooth.None));
      connect(zero.y, smoothMax2.u1) annotation (Line(
          points={{3,46},{6,46},{6,28},{12,28}},
          color={0,0,127},
          smooth=Smooth.None));
      connect(smoothMin.u1, add.y) annotation (Line(
          points={{70,-4},{63,-4}},
          color={0,0,127},
          smooth=Smooth.None));
      connect(one.y, smoothMin.u2) annotation (Line(
          points={{-37,-40},{50,-40},{50,-16},{70,-16}},
          color={0,0,127},
          smooth=Smooth.None));
      connect(smoothMin.y, yDam) annotation (Line(
          points={{93,-10},{96,-10},{96,2},{110,2}},
          color={0,0,127},
          smooth=Smooth.None));
      connect(controlBus.TRooSetCoo, conCoo.u_s) annotation (Line(
          points={{-70,82},{-68,82},{-68,-24},{-20,-24}},
          color={255,204,51},
          thickness=0.5), Text(
          string="%first",
          index=-1,
          extent={{-6,3},{-6,3}}));
      annotation ( Icon(graphics={
            Text(
              extent={{-92,48},{-44,24}},
              lineColor={0,0,127},
              textString="TRoo"),
            Text(
              extent={{-92,-30},{-44,-54}},
              lineColor={0,0,127},
              textString="TSup"),
            Text(
              extent={{42,52},{90,28}},
              lineColor={0,0,127},
              textString="yHea"),
            Text(
              extent={{46,-36},{94,-60}},
              lineColor={0,0,127},
              textString="yCoo")}));
    end VAVRoom;

    model RoomLeakageAtrium "Room leakage model atrium/laboratory"
      extends Buildings.BaseClasses.BaseIcon;
      replaceable package Medium = Modelica.Media.Interfaces.PartialMedium
        "Medium in the component" annotation (choicesAllMatching=true);
      parameter Modelica.SIunits.Volume VRoo "Room volume";
    Buildings.Fluid.FixedResistances.PressureDrop res(
      redeclare package Medium = Medium,
      m_flow_nominal=VRoo*1.2/3600,
      dp_nominal=20) "Resistance model"
      annotation (Placement(transformation(extent={{20,-10},{40,10}})));
      Modelica.Fluid.Interfaces.FluidPort_b port_b(redeclare package Medium =
            Medium) annotation (Placement(transformation(extent={{90,-10},{110,10}})));
      Buildings.Fluid.Sensors.MassFlowRate senMasFlo1(redeclare package Medium = Medium,
          allowFlowReversal=true) "Sensor for mass flow rate" annotation (Placement(
            transformation(
            extent={{10,10},{-10,-10}},
            rotation=180,
            origin={-10,0})));
      Modelica.Blocks.Math.Gain ACHInf(k=1/VRoo/1.2*3600, y(unit="1/h"))
        "Air change per hour due to infiltration"
        annotation (Placement(transformation(extent={{12,30},{32,50}})));
      parameter Real s
        "Side ratio, s=length of this wall/length of adjacent wall";
      parameter Modelica.SIunits.Angle azi
        "Surface azimuth (South:0, West:pi/2)";
      Modelica.Fluid.Interfaces.FluidPort_a port_a(redeclare package Medium =
            Medium)                                annotation (Placement(
            transformation(extent={{-110,-10},{-90,10}}),iconTransformation(extent={{-110,
                -10},{-90,10}})));
    equation
      connect(res.port_b, port_b) annotation (Line(points={{40,6.10623e-16},{55,
              6.10623e-16},{55,1.16573e-15},{70,1.16573e-15},{70,5.55112e-16},{100,
              5.55112e-16}},                                   color={0,127,255}));
      connect(senMasFlo1.port_b, res.port_a) annotation (Line(
          points={{5.55112e-16,-1.72421e-15},{10,-1.72421e-15},{10,6.10623e-16},{20,
              6.10623e-16}},
          color={0,127,255},
          smooth=Smooth.None));
      connect(senMasFlo1.m_flow, ACHInf.u) annotation (Line(
          points={{-10,11},{-10,40},{10,40}},
          color={0,0,127},
          smooth=Smooth.None));
      connect(port_a, senMasFlo1.port_a) annotation (Line(points={{-100,0},{-60,
              0},{-20,0}}, color={0,127,255}));
      annotation (
        Icon(coordinateSystem(preserveAspectRatio=false, extent={{-100,-100},{100,
                100}}), graphics={
            Ellipse(
              extent={{-80,40},{0,-40}},
              lineColor={0,0,0},
              fillPattern=FillPattern.Sphere,
              fillColor={0,127,255}),
            Rectangle(
              extent={{20,12},{80,-12}},
              lineColor={0,0,0},
              fillPattern=FillPattern.HorizontalCylinder,
              fillColor={192,192,192}),
            Rectangle(
              extent={{20,6},{80,-6}},
              lineColor={0,0,0},
              fillPattern=FillPattern.HorizontalCylinder,
              fillColor={0,127,255}),
            Line(points={{-100,0},{-80,0}}, color={0,0,255}),
            Line(points={{0,0},{20,0}}, color={0,0,255}),
            Line(points={{80,0},{90,0}}, color={0,0,255})}),
        Documentation(info="<html>
<p>
Room leakage.
</p></html>",     revisions="<html>
<ul>
<li>
July 20, 2007 by Michael Wetter:<br/>
First implementation.
</li>
</ul>
</html>"));
    end RoomLeakageAtrium;

    model AtriumVentilation "Opening on the roof of the Atrium"
      package MediumA =Buildings.Media.Air "Medium model for Air";
       parameter Modelica.SIunits.Duration  dT_On_Off=600
        "Minimum time lapse between a switch";
        parameter Real start = 8;
        parameter Real off = 20;
        parameter Real LClo = 13*150e-04;
      Modelica.Blocks.Logical.Switch swi16
        "Selectionne ouverture porte selon temperature "
        annotation (Placement(transformation(extent={{8,38},{28,58}})));
      Modelica.Blocks.Sources.Constant CloseAreation1(k=0)
        "La nuit fermeture"
        annotation (Placement(transformation(extent={{-26,16},{-6,36}})));
      Buildings.Controls.SetPoints.OccupancySchedule occSchShading(occupancy=3600*{
            start,off})
        "Start the automat of the roof aeration between 8 and 20"
        annotation (Placement(transformation(extent={{14,4},{34,24}})));
      Modelica.Blocks.Logical.Switch swi17
        "Selectionne ouverture porte selon temperature "
        annotation (Placement(transformation(extent={{64,38},{84,58}})));
      Modelica.Blocks.Sources.Constant CloseAreation2(k=0)
        "La nuit fermeture"
        annotation (Placement(transformation(extent={{14,-32},{34,-12}})));
    public
      Buildings.Controls.Continuous.OffTimer
               offHys3
        annotation (Placement(transformation(extent={{-162,-34},{-142,-14}})));
    protected
      Modelica.Blocks.Logical.And and7
        annotation (Placement(transformation(extent={{-86,2},{-66,22}})));
      Modelica.Blocks.Logical.GreaterEqualThreshold greaterEqualThreshold3(threshold=
           dT_On_Off)
        annotation (Placement(transformation(extent={{-124,-34},{-104,-14}})));
    public
      Buildings.Controls.SetPoints.Table tab(table=[298.15,0.1; 299.14,0.1; 299.15,
            0.2; 300.14,0.2; 300.15,0.3; 301.14,0.3; 301.15,0.4; 302.14,0.4; 302.15,
            0.5; 303.14,0.5; 303.15,0.6; 304.14,0.6; 304.15,0.7; 305.14,0.7; 305.15,
            0.8; 306.14,0.8; 306.15,0.9; 307.14,0.9; 307.15,1])
        annotation (Placement(transformation(extent={{-234,32},{-214,52}})));
      Modelica.Blocks.Math.Gain gain5(
                                     k=0.5)
        annotation (Placement(transformation(extent={{-132,38},{-112,58}})));
      Buildings.Airflow.Multizone.DoorDiscretizedOperable ouverture(
      CD=0.61,
      CDOpe=0.61,
      CDClo=0.61,
      mClo=0.61,
      redeclare package Medium = MediumA,
      hOpe=1.7,
      dp_turbulent(displayUnit="Pa"),
      wOpe=(10*20) + (2*16) + 8,
      nCom=1,
      LClo=abs(LClo))
      annotation (Placement(transformation(extent={{120,70},{140,90}})));
      Modelica.Blocks.Logical.Hysteresis hysteresis(uLow=13.9 - 2, uHigh=13.9
             + 2)
        annotation (Placement(transformation(extent={{-234,-34},{-214,-14}})));
      Modelica.Blocks.Logical.Not not3
        annotation (Placement(transformation(extent={{-200,-34},{-180,-14}})));
      Modelica.Blocks.Logical.Switch swi15
        "Selectionne ouverture porte selon temperature "
        annotation (Placement(transformation(extent={{-52,46},{-32,66}})));
    protected
      Modelica.Blocks.Logical.GreaterEqualThreshold greaterEqualThreshold(threshold=
           dT_On_Off)
        annotation (Placement(transformation(extent={{-128,82},{-108,102}})));
      Modelica.Blocks.Logical.And and2
        annotation (Placement(transformation(extent={{-96,64},{-76,84}})));
    public
      Buildings.Controls.Continuous.OffTimer
               offHys
        annotation (Placement(transformation(extent={{-172,82},{-152,102}})));
      Modelica.Blocks.Logical.Hysteresis hysteresis4(uLow=298.15 - 1, uHigh=298.15 +
            1)
        annotation (Placement(transformation(extent={{-234,60},{-214,80}})));
      Modelica.Blocks.Logical.Not not4
        annotation (Placement(transformation(extent={{-206,60},{-186,80}})));
      Modelica.Blocks.Sources.Constant CloseAreation(k=0) "La nuit fermeture"
        annotation (Placement(transformation(extent={{-100,100},{-80,120}})));
      Modelica.Blocks.Interfaces.RealInput TAtrium "Temperature atrium"
        annotation (Placement(transformation(extent={{-112,20},{-90,42}})));
      Buildings.BoundaryConditions.WeatherData.Bus weaBus
        "Bus with weather data"
        annotation (Placement(transformation(extent={{-100,-102},{-80,-82}})));
      Modelica.Fluid.Interfaces.FluidPort_a port_a1(redeclare package Medium =
            MediumA)
        annotation (Placement(transformation(extent={{-70,90},{-50,110}})));
      Modelica.Fluid.Interfaces.FluidPort_b port_b(redeclare package Medium =
            MediumA)
        annotation (Placement(transformation(extent={{10,90},{30,110}})));
      Modelica.Fluid.Interfaces.FluidPort_b port_b3(redeclare package Medium =
            MediumA)
        annotation (Placement(transformation(extent={{10,-110},{30,-90}})));
      Modelica.Fluid.Interfaces.FluidPort_a port_a4(redeclare package Medium =
            MediumA)
        annotation (Placement(transformation(extent={{-70,-110},{-50,-90}})));
    equation
      connect(swi15.y,swi16. u1) annotation (Line(
          points={{-31,56},{4,56},{6,56}},
          color={0,0,127},
          pattern=LinePattern.Dash));
      connect(CloseAreation1.y,swi16. u3) annotation (Line(
          points={{-5,26},{-5,41},{6,41},{6,40}},
          color={0,0,127},
          pattern=LinePattern.Dash));
      connect(occSchShading.occupied, swi17.u2) annotation (Line(
          points={{35,8},{48,8},{48,48},{62,48}},
          color={255,0,255},
          pattern=LinePattern.Dash));
      connect(swi16.y,swi17. u1) annotation (Line(
          points={{29,48},{44.5,48},{44.5,56},{62,56}},
          color={0,0,127},
          pattern=LinePattern.Dash));
      connect(CloseAreation2.y,swi17. u3) annotation (Line(
          points={{35,-22},{48,-22},{48,40},{62,40}},
          color={0,0,127},
          pattern=LinePattern.Dash));
      connect(offHys3.y,greaterEqualThreshold3. u) annotation (Line(
          points={{-141,-24},{-141,-24},{-126,-24}},
          color={0,0,127},
          pattern=LinePattern.Dash));
      connect(greaterEqualThreshold3.y,and7. u2) annotation (Line(
          points={{-103,-24},{-88,-24},{-88,4}},
          color={255,0,255},
          pattern=LinePattern.Dash));
      connect(and7.y,swi16. u2) annotation (Line(
          points={{-65,12},{-28,12},{-28,48},{6,48}},
          color={255,0,255},
          pattern=LinePattern.Dash));
      connect(tab.y,gain5. u) annotation (Line(points={{-213,42},{-213,48},{-134,48}},
                      color={0,0,127},
          pattern=LinePattern.Dash));
      connect(gain5.y, swi15.u3) annotation (Line(points={{-111,48},{-111,48},{-54,48}},
                                  color={0,0,127},
          pattern=LinePattern.Dash));
    connect(swi17.y, ouverture.y) annotation (Line(points={{85,48},{98,48},{
            98,80},{119,80}}, color={0,0,127}));
      connect(hysteresis.y, not3.u) annotation (Line(points={{-213,-24},{-208,-24},
              {-202,-24}}, color={255,0,255}));
      connect(not3.y,offHys3. u) annotation (Line(points={{-179,-24},{-164,-24}},
                      color={255,0,255}));
      connect(not3.y,and7. u1) annotation (Line(points={{-179,-24},{-168,-24},{-168,
              12},{-88,12}},      color={255,0,255}));
      connect(CloseAreation.y,swi15. u1) annotation (Line(
          points={{-79,110},{-60,110},{-60,64},{-54,64}},
          color={0,0,127},
          pattern=LinePattern.Dash));
      connect(greaterEqualThreshold.y,and2. u1) annotation (Line(
          points={{-107,92},{-106,92},{-106,74},{-98,74}},
          color={255,0,255},
          pattern=LinePattern.Dash));
      connect(and2.y,swi15. u2) annotation (Line(
          points={{-75,74},{-64,74},{-64,56},{-54,56}},
          color={255,0,255},
          pattern=LinePattern.Dash));
      connect(not4.y,offHys. u) annotation (Line(points={{-185,70},{-184,70},{-184,92},
              {-174,92}},         color={255,0,255}));
      connect(not4.y,and2. u2) annotation (Line(points={{-185,70},{-158,70},{-158,66},
              {-98,66}},          color={255,0,255}));
      connect(hysteresis4.y,not4. u) annotation (Line(points={{-213,70},{-213,70},{-208,
              70}},        color={255,0,255}));
      connect(offHys.y, greaterEqualThreshold.u)
        annotation (Line(points={{-151,92},{-140,92},{-130,92}}, color={0,0,127}));
      connect(tab.u, TAtrium) annotation (Line(points={{-236,42},{-240,42},{-240,31},
              {-101,31}}, color={0,0,127}));
      connect(TAtrium, hysteresis4.u) annotation (Line(points={{-101,31},{-239.5,31},
              {-239.5,70},{-236,70}}, color={0,0,127}));
      connect(weaBus.winSpe, hysteresis.u) annotation (Line(
          points={{-90,-92},{-252,-92},{-252,-24},{-236,-24}},
          color={255,204,51},
          thickness=0.5), Text(
          string="%first",
          index=-1,
          extent={{-6,3},{-6,3}}));
    connect(port_a1, ouverture.port_a1) annotation (Line(points={{-60,100},{-60,
            100},{-60,86},{120,86}}, color={0,127,255}));
    connect(port_b, ouverture.port_b2) annotation (Line(points={{20,100},{20,
            100},{20,74},{120,74}}, color={0,127,255}));
    connect(port_a4, ouverture.port_a2) annotation (Line(points={{-60,-100},{
            146,-100},{146,14},{146,74},{140,74}}, color={0,127,255}));
    connect(port_b3, ouverture.port_b1) annotation (Line(points={{20,-100},{
            154,-100},{154,86},{140,86}}, color={0,127,255}));
      annotation (Icon(graphics={
            Rectangle(
              extent={{-100,60},{100,-62}},
              lineColor={0,0,127},
              pattern=LinePattern.Dash,
              fillColor={95,95,95},
              fillPattern=FillPattern.Solid),
            Rectangle(
              extent={{-96,56},{-92,-58}},
              lineColor={0,0,127},
              pattern=LinePattern.Dash,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid),
            Rectangle(
              extent={{94,56},{98,-58}},
              lineColor={0,0,127},
              pattern=LinePattern.Dash,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid),
            Rectangle(
              extent={{-92,54},{94,-56}},
              lineColor={0,0,127},
              pattern=LinePattern.Dash,
              fillColor={170,213,255},
              fillPattern=FillPattern.Solid),
            Rectangle(
              extent={{-92,2},{94,-2}},
              lineColor={0,0,127},
              pattern=LinePattern.Dash,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid),
            Rectangle(
              extent={{-2,54},{2,-56}},
              lineColor={0,0,127},
              pattern=LinePattern.Dash,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid),
            Rectangle(
              extent={{-92,-54},{94,-58}},
              lineColor={0,0,127},
              pattern=LinePattern.Dash,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid),
            Rectangle(
              extent={{-92,56},{94,52}},
              lineColor={0,0,127},
              pattern=LinePattern.Dash,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid)}),
              Documentation(info="<html>
          <p> Ce composant simule les ouvertures automatisé présentes sur le toit (en verre) de l'atrium du bâtiment hélios. Ce systèmes se composent de 17 ouvertures de trois longueurs différentes. Afin de diminuer l'impact sur le temps de calcul de ce composant, ils ont tous étaient réunis celon leur longeur.
          La position par défaut (ou éteint) du système est fermé (aucune aération)<br> Les différents paramètres à renseigner sont :<br></p>
          <p>- dT_On_Off :Delta temps entre deux switchs d'etat du système</p>
          <br><p> Afin d'éviter les switchs intempestifs du système deux temporisations sont intégrées au système. Un hystéresis de 1m/s autour de la vitesse de vent limite et une différence de temps mimimum entre deux switchs d'état (dT_On_Off).
          Comme convenu dans le DOE du bâtiment Hélios en dessous de 25°C, les aérations restent fermés puis s'ouvre progressivement (un pas d'ouverture par degès) jusqu'à 35°C. L'ouverture maximum est de 0.5 car la course maximum du verrin entraine une ouverture de 45° des aérations
          En cas de fort vent ou la nuit les aérations se ferment automatiquement (à partir de 50km/h) et en cas de tempête (90km/h) un legère ouverture (au pas minimum) se fait pour éviter les phénomènes de sur/sous préssion entre l'atrium et l'environnement extérieur qui pourrais arracher des vitres du toît
          <br>Pour mieux comprendre le mécanisme d'aération voir les photos ci-dessous</p> 
     <p align=\"center\">
<img alt=\"image\" src=\"modelica://Buildings/Resources/Images/Comis/ouv.png\" border=\"1\"/>
</p> 
<p align=\"center\">
<img alt=\"image\" src=\"modelica://Buildings/Resources/Images/Comis/ouv1.jpg\" border=\"1\"/>
</p> 
        </html>"));
    end AtriumVentilation;

    model FumeHood
      "Fume hood for laboratory controlled by the mass flo extract "
      import Buildings;
         extends Buildings.Fluid.Interfaces.PartialTwoPortInterface(
        m_flow_nominal = 0,
        redeclare replaceable package Medium =
          Buildings.Media.Air "Liquid Medium in the component");
        parameter Modelica.SIunits.Diameter DiamConduit( min = 0) = 0.1
        "Fume hood conduit diameter in meter, we assume that conduit have a constant diameter and is cylindrical";
      parameter Modelica.SIunits.Height hConduit( min= 0) = 3
        "Fume hood conduit lenght, we assume that the total lenght is strictilly vertical";
      parameter Modelica.SIunits.Pressure  pDropConduit( min= 0) = 50;
      Buildings.Fluid.Movers.FlowControlled_m_flow fan(
                                                    redeclare package Medium =
            Medium,
        m_flow_nominal=m_flow_nominal,
        energyDynamics=Modelica.Fluid.Types.Dynamics.DynamicFreeInitial,
        massDynamics=Modelica.Fluid.Types.Dynamics.DynamicFreeInitial,
        tau=60,
        nominalValuesDefineDefaultPressureCurve=true)
                                          annotation (Placement(transformation(
              extent={{4,-10},{24,10}})));
      Buildings.Fluid.Sensors.MassFlowRate senMasFlo(redeclare package Medium =
            Medium)  annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=0,
            origin={40,0})));
      Buildings.Controls.Continuous.LimPID conPID1(
        Td=60,
        controllerType=Modelica.Blocks.Types.SimpleController.PI,
        k=0.01,
        Ti=120)
               annotation (Placement(transformation(extent={{42,70},{22,90}})));
      Modelica.Blocks.Math.Gain gain1(k=m_flow_nominal)
        annotation (Placement(transformation(extent={{72,70},{52,90}})));
      Modelica.Blocks.Interfaces.RealInput u
        annotation (Placement(transformation(extent={{120,60},{80,100}})));
      Modelica.Blocks.Math.RealToBoolean realToBoolean(threshold=0.05)
        annotation (Placement(transformation(extent={{68,34},{48,54}})));
      Modelica.Blocks.Math.BooleanToReal booleanToReal
        annotation (Placement(transformation(extent={{38,34},{18,54}})));
      Buildings.Fluid.Actuators.Dampers.VAVBoxExponential vavDam(
        redeclare package Medium = Medium,
        m_flow_nominal=m_flow_nominal,
        dp_nominal=pDropConduit)
        annotation (Placement(transformation(extent={{-36,-10},{-16,10}})));
    equation
      connect(fan.port_b,senMasFlo. port_a) annotation (Line(points={{24,0},{30,0}},
                                        color={0,127,255}));
      connect(conPID1.y,fan. m_flow_in) annotation (Line(points={{21,80},{14,80},{14,
              12},{13.8,12}},                        color={0,0,127}));
      connect(senMasFlo.m_flow,conPID1. u_m) annotation (Line(points={{40,11},{40,56},
              {32,56},{32,68}},                           color={0,0,127}));
      connect(conPID1.u_s,gain1. y) annotation (Line(points={{44,80},{51,80}},
                                  color={0,0,127}));
      connect(u, gain1.u)
        annotation (Line(points={{100,80},{88,80},{74,80}}, color={0,0,127}));
      connect(u, realToBoolean.u)
        annotation (Line(points={{100,80},{100,44},{70,44}}, color={0,0,127}));
      connect(booleanToReal.u, realToBoolean.y)
        annotation (Line(points={{40,44},{40,44},{47,44}},  color={255,0,255}));
      connect(senMasFlo.port_b, port_b)
        annotation (Line(points={{50,0},{100,0}},         color={0,127,255}));
      connect(fan.port_a, vavDam.port_b)
        annotation (Line(points={{4,0},{-6,0},{-16,0}}, color={0,127,255}));
      connect(port_a, vavDam.port_a)
        annotation (Line(points={{-100,0},{-36,0}}, color={0,127,255}));
      connect(vavDam.y, booleanToReal.y) annotation (Line(points={{-26,12},{-26,12},
              {-26,44},{17,44}}, color={0,0,127}));
      annotation (Icon(coordinateSystem(preserveAspectRatio=false), graphics={
            Polygon(
              points={{-32,64},{-16,66},{38,66},{28,64},{-32,64}},
              lineColor={0,0,0},
              lineThickness=0.5,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid),
            Rectangle(
              extent={{-6,64},{6,100}},
              lineColor={0,0,0},
              lineThickness=0.5,
              fillColor={95,95,95},
              fillPattern=FillPattern.Solid),
            Rectangle(
              extent={{-42,-24},{-2,-64}},
              lineColor={0,0,0},
              lineThickness=0.5,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid),
            Rectangle(
              extent={{-2,-24},{38,-64}},
              lineColor={0,0,0},
              lineThickness=0.5,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid),
            Rectangle(
              extent={{-48,-20},{42,-24}},
              lineColor={0,0,0},
              lineThickness=0.5,
              fillColor={0,0,0},
              fillPattern=FillPattern.Solid),
            Rectangle(
              extent={{-23,2},{23,-2}},
              lineColor={0,0,0},
              lineThickness=0.5,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid,
              origin={-42,3},
              rotation=90),
            Rectangle(
              extent={{-23,2},{23,-2}},
              lineColor={0,0,0},
              lineThickness=0.5,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid,
              origin={38,3},
              rotation=90),
            Rectangle(
              extent={{-48,30},{42,26}},
              lineColor={0,0,0},
              lineThickness=0.5,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid),
            Rectangle(
              extent={{-40,26},{36,-20}},
              lineColor={0,0,0},
              lineThickness=0.5,
              fillColor={170,255,255},
              fillPattern=FillPattern.Solid),
            Line(
              points={{-40,4},{36,4}},
              color={0,0,0},
              thickness=0.5),
            Polygon(
              points={{-44,30},{-32,64},{28,64},{42,30},{-44,30}},
              lineColor={0,0,0},
              lineThickness=0.5,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid),
            Polygon(
              points={{40,-20},{50,-4},{52,-4},{42,-20},{40,-20}},
              lineColor={0,0,0},
              lineThickness=0.5,
              fillColor={0,0,0},
              fillPattern=FillPattern.Solid),
            Polygon(
              points={{42,-20},{52,-4},{52,-8},{42,-24},{42,-20}},
              lineColor={0,0,0},
              lineThickness=0.5,
              fillColor={0,0,0},
              fillPattern=FillPattern.Solid),
            Polygon(
              points={{38,-24},{42,-24},{50,-10},{50,-44},{38,-64},{38,-24}},
              lineColor={0,0,0},
              lineThickness=0.5,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid),
            Polygon(
              points={{40,-20},{40,26},{42,26},{50,36},{50,-4},{40,-20}},
              lineColor={0,0,0},
              lineThickness=0.5,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid),
            Polygon(
              points={{42,26},{52,38},{52,42},{42,30},{42,26}},
              lineColor={0,0,0},
              lineThickness=0.5,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid),
            Polygon(
              points={{28,64},{38,66},{50,40},{42,30},{28,64}},
              lineColor={0,0,0},
              lineThickness=0.5,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid),
            Line(points={{-40,-20},{-22,-2}}, color={0,0,0}),
            Line(points={{-22,-2},{36,-2}}, color={0,0,0}),
            Line(points={{-22,-2},{-22,26}}, color={0,0,0}),
            Text(
              extent={{-34,-50},{30,-62}},
              lineColor={0,0,0},
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid,
              textString="Fume Hood"),
            Ellipse(
              extent={{-6,66},{6,64}},
              lineColor={0,0,0},
              fillColor={95,95,95},
              fillPattern=FillPattern.Solid,
              lineThickness=0.5),
            Ellipse(
              extent={{-6,100},{6,98}},
              lineColor={0,0,0},
              fillColor={95,95,95},
              fillPattern=FillPattern.Solid,
              lineThickness=0.5),
            Ellipse(
              extent={{-6,94},{6,92}},
              lineColor={0,0,0},
              fillColor={95,95,95},
              fillPattern=FillPattern.Solid,
              lineThickness=0.5),
            Ellipse(
              extent={{-6,86},{6,84}},
              lineColor={0,0,0},
              fillColor={95,95,95},
              fillPattern=FillPattern.Solid,
              lineThickness=0.5),
            Ellipse(
              extent={{-6,78},{6,76}},
              lineColor={0,0,0},
              fillColor={95,95,95},
              fillPattern=FillPattern.Solid,
              lineThickness=0.5),
            Ellipse(
              extent={{-6,72},{6,70}},
              lineColor={0,0,0},
              fillColor={95,95,95},
              fillPattern=FillPattern.Solid,
              lineThickness=0.5),
            Polygon(
              points={{12,-12},{28,-12},{22,-4},{22,0},{24,0},{24,2},{16,2},{16,0},{
                  18,0},{18,-4},{12,-12}},
              lineColor={0,0,0},
              fillColor={255,255,255},
              fillPattern=FillPattern.Solid),
            Polygon(
              points={{18,-4},{22,-4},{28,-12},{12,-12},{18,-4}},
              lineColor={0,0,0},
              fillColor={0,255,0},
              fillPattern=FillPattern.Solid),
            Polygon(
              points={{-8,-12},{8,-12},{2,-4},{2,0},{4,0},{4,2},{-4,2},{-4,0},{-2,0},
                  {-2,-4},{-8,-12}},
              lineColor={0,0,0},
              fillColor={255,255,255},
              fillPattern=FillPattern.Solid),
            Polygon(
              points={{-2,-4},{2,-4},{8,-12},{-8,-12},{-2,-4}},
              lineColor={0,0,0},
              fillColor={255,0,255},
              fillPattern=FillPattern.Solid),
            Polygon(
              points={{-26,-12},{-12,-12},{-12,-4},{-12,0},{-12,0},{-12,2},{-26,2},{
                  -26,0},{-26,0},{-26,-4},{-26,-12}},
              lineColor={0,0,0},
              fillColor={255,255,255},
              fillPattern=FillPattern.Solid),
            Polygon(
              points={{-26,-4},{-12,-4},{-12,-12},{-26,-12},{-26,-4}},
              lineColor={0,0,0},
              fillColor={170,85,255},
              fillPattern=FillPattern.Solid)}),                      Diagram(
            coordinateSystem(preserveAspectRatio=false)),
            Documentation(info="<html>
        <p> This compenent consist of Fume hood system (a laboratory equipment). It allows to take into account thermal 
        loose in a building due to the extraction in bypass with HVAC systems</p> 
        <p> The component is based mainly on 2 Buildings library components, a mass flow controlled fan and a VAV box for the air extractor located on the roof of the building. <br><br>
        The choice of the fan allows to controle the mass flow rate extract despite the variation of temperature and pression into the building. A extraction based on the mass flow
        rate couple  with a HVAC system controlled on the duct static pressure are fully compatible.<br>
        The VAV box simulate the non-return valve when the fan is stopped. The valve can be open or close and doesn't participate to the regulation
        of the mass flow rate (Assume only by the fan). The VAV box is also used to compute the pressure drop into the conduit of the fume hood, a default value of 50 Pa is defined ( parameter pDropConduit)<br>
        <br><br>
        The connector (u) controlled the non return-valve and the fan. Set the signal between [0,1] to fix the mass flow rate of the fan between u*mass_flow_nominal
       </p>
        
        </html>"));
    end FumeHood;

    model EastFumeHood
      "Fume hood located into the east thermal zone of the helios building"
      package MediumA =Buildings.Media.Air "Medium model for Air";
      Modelica.Blocks.Sources.CombiTimeTable testSorbone(extrapolation=Modelica.Blocks.Types.Extrapolation.Periodic, table=[0,
            0.1; 3600*9,0.1; (3600*9) + 1,0.5; 3600*16,0.5; (3600*16) + 1,0.1; 3600*
            24,0.1]) "Fraction of internal heat gain"
        annotation (Placement(transformation(extent={{-10,10},{10,-10}},
            rotation=180,
            origin={132,172})));
      FumeHood LMO12_201_Sensors(m_flow_nominal=0.1, hConduit=7)
        "4 sensors for air quality"
        annotation (Placement(transformation(extent={{-10,-76},{10,-56}})));
      Modelica.Blocks.Sources.Constant TRooSet(k=1)
        annotation (Placement(transformation(extent={{48,-26},{28,-6}})));
      Modelica.Fluid.Interfaces.FluidPort_a port_a(redeclare package Medium =
            MediumA) annotation (Placement(transformation(extent={{-210,70},{
                -190,90}}), iconTransformation(extent={{-210,70},{-190,90}})));
      Modelica.Fluid.Interfaces.FluidPort_a port_a6(redeclare package Medium =
            MediumA) annotation (Placement(transformation(extent={{-212,-134},{
                -192,-114}}), iconTransformation(extent={{-212,-134},{-192,-114}})));
      Modelica.Fluid.Interfaces.FluidPort_b port_b(redeclare package Medium =
            MediumA) annotation (Placement(transformation(extent={{190,68},{210,
                88}}), iconTransformation(extent={{190,68},{210,88}})));
      Modelica.Fluid.Interfaces.FluidPort_b port_b6(redeclare package Medium =
            MediumA) annotation (Placement(transformation(extent={{190,-130},{
                210,-110}}), iconTransformation(extent={{190,-130},{210,-110}})));
      FumeHood fumeHood(
        m_flow_nominal=5*0.44,
        hConduit=7,
        DiamConduit=5*0.1,
        pDropConduit(displayUnit="Pa") = 5*50)
        annotation (Placement(transformation(extent={{-10,70},{10,90}})));
      FBM.Components.WorkingDayOrWeekEnd workingDayOrWeekEnd
        annotation (Placement(transformation(extent={{144,134},{124,154}})));
      Modelica.Blocks.Logical.Switch switch1
        annotation (Placement(transformation(extent={{102,124},{82,144}})));
      Modelica.Blocks.Sources.Constant TRooSet1(k=0.1)
        annotation (Placement(transformation(extent={{142,110},{122,130}})));
    equation
      connect(port_a6, LMO12_201_Sensors.port_a) annotation (Line(points={{-202,
              -124},{-106,-124},{-106,-66},{-10,-66}}, color={0,127,255}));
      connect(LMO12_201_Sensors.port_b, port_b6) annotation (Line(points={{10,
              -66},{102,-66},{102,-120},{200,-120}}, color={0,127,255}));
      connect(port_a, fumeHood.port_a) annotation (Line(points={{-200,80},{-10,
              80}},          color={0,127,255}));
      connect(fumeHood.port_b, port_b) annotation (Line(points={{10,80},{200,80},
              {200,78}}, color={0,127,255}));
      connect(TRooSet.y, LMO12_201_Sensors.u) annotation (Line(points={{27,-16},
              {18,-16},{18,-58},{10,-58}}, color={0,0,127}));
      connect(switch1.u2, workingDayOrWeekEnd.y) annotation (Line(points={{104,134},
              {112,134},{112,144},{123,144}}, color={255,0,255}));
      connect(switch1.u3, TRooSet1.y) annotation (Line(points={{104,126},{110,126},
              {110,120},{116,120},{122,120},{121,120}}, color={0,0,127}));
      connect(switch1.u1, testSorbone.y[1]) annotation (Line(points={{104,142},{112,
              142},{112,172},{121,172}}, color={0,0,127}));
      connect(fumeHood.u, switch1.y) annotation (Line(points={{10,88},{48,88},{48,
              134},{81,134}}, color={0,0,127}));
      annotation (Icon(coordinateSystem(preserveAspectRatio=false, extent={{
                -200,-200},{200,200}}), graphics={
            Rectangle(
              extent={{-200,200},{200,-200}},
              lineColor={0,0,0},
              fillColor={0,255,255},
              fillPattern=FillPattern.Solid),
            Polygon(
              points={{-136,132},{-120,134},{-66,134},{-76,132},{-136,132}},
              lineColor={0,0,0},
              lineThickness=0.5,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid),
            Rectangle(
              extent={{-110,132},{-98,168}},
              lineColor={0,0,0},
              lineThickness=0.5,
              fillColor={95,95,95},
              fillPattern=FillPattern.Solid),
            Rectangle(
              extent={{-146,44},{-106,4}},
              lineColor={0,0,0},
              lineThickness=0.5,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid),
            Rectangle(
              extent={{-106,44},{-66,4}},
              lineColor={0,0,0},
              lineThickness=0.5,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid),
            Rectangle(
              extent={{-152,48},{-62,44}},
              lineColor={0,0,0},
              lineThickness=0.5,
              fillColor={0,0,0},
              fillPattern=FillPattern.Solid),
            Rectangle(
              extent={{-23,2},{23,-2}},
              lineColor={0,0,0},
              lineThickness=0.5,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid,
              origin={-146,71},
              rotation=90),
            Rectangle(
              extent={{-23,2},{23,-2}},
              lineColor={0,0,0},
              lineThickness=0.5,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid,
              origin={-66,71},
              rotation=90),
            Rectangle(
              extent={{-152,98},{-62,94}},
              lineColor={0,0,0},
              lineThickness=0.5,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid),
            Rectangle(
              extent={{-144,94},{-68,48}},
              lineColor={0,0,0},
              lineThickness=0.5,
              fillColor={170,255,255},
              fillPattern=FillPattern.Solid),
            Line(
              points={{-144,72},{-68,72}},
              color={0,0,0},
              thickness=0.5),
            Polygon(
              points={{-148,98},{-136,132},{-76,132},{-62,98},{-148,98}},
              lineColor={0,0,0},
              lineThickness=0.5,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid),
            Polygon(
              points={{-64,48},{-54,64},{-52,64},{-62,48},{-64,48}},
              lineColor={0,0,0},
              lineThickness=0.5,
              fillColor={0,0,0},
              fillPattern=FillPattern.Solid),
            Polygon(
              points={{-62,48},{-52,64},{-52,60},{-62,44},{-62,48}},
              lineColor={0,0,0},
              lineThickness=0.5,
              fillColor={0,0,0},
              fillPattern=FillPattern.Solid),
            Polygon(
              points={{-66,44},{-62,44},{-54,58},{-54,24},{-66,4},{-66,44}},
              lineColor={0,0,0},
              lineThickness=0.5,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid),
            Polygon(
              points={{-64,48},{-64,94},{-62,94},{-54,104},{-54,64},{-64,48}},
              lineColor={0,0,0},
              lineThickness=0.5,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid),
            Polygon(
              points={{-62,94},{-52,106},{-52,110},{-62,98},{-62,94}},
              lineColor={0,0,0},
              lineThickness=0.5,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid),
            Polygon(
              points={{-76,132},{-66,134},{-54,108},{-62,98},{-76,132}},
              lineColor={0,0,0},
              lineThickness=0.5,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid),
            Line(points={{-144,48},{-126,66}},color={0,0,0}),
            Line(points={{-126,66},{-68,66}},
                                            color={0,0,0}),
            Line(points={{-126,66},{-126,94}},
                                             color={0,0,0}),
            Text(
              extent={{-138,18},{-74,6}},
              lineColor={0,0,0},
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid,
              textString="Fume Hood"),
            Ellipse(
              extent={{-110,134},{-98,132}},
              lineColor={0,0,0},
              fillColor={95,95,95},
              fillPattern=FillPattern.Solid,
              lineThickness=0.5),
            Ellipse(
              extent={{-110,168},{-98,166}},
              lineColor={0,0,0},
              fillColor={95,95,95},
              fillPattern=FillPattern.Solid,
              lineThickness=0.5),
            Ellipse(
              extent={{-110,162},{-98,160}},
              lineColor={0,0,0},
              fillColor={95,95,95},
              fillPattern=FillPattern.Solid,
              lineThickness=0.5),
            Ellipse(
              extent={{-110,154},{-98,152}},
              lineColor={0,0,0},
              fillColor={95,95,95},
              fillPattern=FillPattern.Solid,
              lineThickness=0.5),
            Ellipse(
              extent={{-110,146},{-98,144}},
              lineColor={0,0,0},
              fillColor={95,95,95},
              fillPattern=FillPattern.Solid,
              lineThickness=0.5),
            Ellipse(
              extent={{-110,140},{-98,138}},
              lineColor={0,0,0},
              fillColor={95,95,95},
              fillPattern=FillPattern.Solid,
              lineThickness=0.5),
            Polygon(
              points={{-92,56},{-76,56},{-82,64},{-82,68},{-80,68},{-80,70},{
                  -88,70},{-88,68},{-86,68},{-86,64},{-92,56}},
              lineColor={0,0,0},
              fillColor={255,255,255},
              fillPattern=FillPattern.Solid),
            Polygon(
              points={{-86,64},{-82,64},{-76,56},{-92,56},{-86,64}},
              lineColor={0,0,0},
              fillColor={0,255,0},
              fillPattern=FillPattern.Solid),
            Polygon(
              points={{-112,56},{-96,56},{-102,64},{-102,68},{-100,68},{-100,70},
                  {-108,70},{-108,68},{-106,68},{-106,64},{-112,56}},
              lineColor={0,0,0},
              fillColor={255,255,255},
              fillPattern=FillPattern.Solid),
            Polygon(
              points={{-106,64},{-102,64},{-96,56},{-112,56},{-106,64}},
              lineColor={0,0,0},
              fillColor={255,0,255},
              fillPattern=FillPattern.Solid),
            Polygon(
              points={{-130,56},{-116,56},{-116,64},{-116,68},{-116,68},{-116,
                  70},{-130,70},{-130,68},{-130,68},{-130,64},{-130,56}},
              lineColor={0,0,0},
              fillColor={255,255,255},
              fillPattern=FillPattern.Solid),
            Polygon(
              points={{-130,64},{-116,64},{-116,56},{-130,56},{-130,64}},
              lineColor={0,0,0},
              fillColor={170,85,255},
              fillPattern=FillPattern.Solid),
            Polygon(
              points={{96,132},{112,134},{166,134},{156,132},{96,132}},
              lineColor={0,0,0},
              lineThickness=0.5,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid),
            Rectangle(
              extent={{122,132},{134,168}},
              lineColor={0,0,0},
              lineThickness=0.5,
              fillColor={95,95,95},
              fillPattern=FillPattern.Solid),
            Rectangle(
              extent={{86,44},{126,4}},
              lineColor={0,0,0},
              lineThickness=0.5,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid),
            Rectangle(
              extent={{126,44},{166,4}},
              lineColor={0,0,0},
              lineThickness=0.5,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid),
            Rectangle(
              extent={{80,48},{170,44}},
              lineColor={0,0,0},
              lineThickness=0.5,
              fillColor={0,0,0},
              fillPattern=FillPattern.Solid),
            Rectangle(
              extent={{-23,2},{23,-2}},
              lineColor={0,0,0},
              lineThickness=0.5,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid,
              origin={86,71},
              rotation=90),
            Rectangle(
              extent={{-23,2},{23,-2}},
              lineColor={0,0,0},
              lineThickness=0.5,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid,
              origin={166,71},
              rotation=90),
            Rectangle(
              extent={{80,98},{170,94}},
              lineColor={0,0,0},
              lineThickness=0.5,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid),
            Rectangle(
              extent={{88,94},{164,48}},
              lineColor={0,0,0},
              lineThickness=0.5,
              fillColor={170,255,255},
              fillPattern=FillPattern.Solid),
            Line(
              points={{88,72},{164,72}},
              color={0,0,0},
              thickness=0.5),
            Polygon(
              points={{84,98},{96,132},{156,132},{170,98},{84,98}},
              lineColor={0,0,0},
              lineThickness=0.5,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid),
            Polygon(
              points={{168,48},{178,64},{180,64},{170,48},{168,48}},
              lineColor={0,0,0},
              lineThickness=0.5,
              fillColor={0,0,0},
              fillPattern=FillPattern.Solid),
            Polygon(
              points={{170,48},{180,64},{180,60},{170,44},{170,48}},
              lineColor={0,0,0},
              lineThickness=0.5,
              fillColor={0,0,0},
              fillPattern=FillPattern.Solid),
            Polygon(
              points={{166,44},{170,44},{178,58},{178,24},{166,4},{166,44}},
              lineColor={0,0,0},
              lineThickness=0.5,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid),
            Polygon(
              points={{168,48},{168,94},{170,94},{178,104},{178,64},{168,48}},
              lineColor={0,0,0},
              lineThickness=0.5,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid),
            Polygon(
              points={{170,94},{180,106},{180,110},{170,98},{170,94}},
              lineColor={0,0,0},
              lineThickness=0.5,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid),
            Polygon(
              points={{156,132},{166,134},{178,108},{170,98},{156,132}},
              lineColor={0,0,0},
              lineThickness=0.5,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid),
            Line(points={{88,48},{106,66}},   color={0,0,0}),
            Line(points={{106,66},{164,66}},color={0,0,0}),
            Line(points={{106,66},{106,94}}, color={0,0,0}),
            Text(
              extent={{94,18},{158,6}},
              lineColor={0,0,0},
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid,
              textString="Fume Hood"),
            Ellipse(
              extent={{122,134},{134,132}},
              lineColor={0,0,0},
              fillColor={95,95,95},
              fillPattern=FillPattern.Solid,
              lineThickness=0.5),
            Ellipse(
              extent={{122,168},{134,166}},
              lineColor={0,0,0},
              fillColor={95,95,95},
              fillPattern=FillPattern.Solid,
              lineThickness=0.5),
            Ellipse(
              extent={{122,162},{134,160}},
              lineColor={0,0,0},
              fillColor={95,95,95},
              fillPattern=FillPattern.Solid,
              lineThickness=0.5),
            Ellipse(
              extent={{122,154},{134,152}},
              lineColor={0,0,0},
              fillColor={95,95,95},
              fillPattern=FillPattern.Solid,
              lineThickness=0.5),
            Ellipse(
              extent={{122,146},{134,144}},
              lineColor={0,0,0},
              fillColor={95,95,95},
              fillPattern=FillPattern.Solid,
              lineThickness=0.5),
            Ellipse(
              extent={{122,140},{134,138}},
              lineColor={0,0,0},
              fillColor={95,95,95},
              fillPattern=FillPattern.Solid,
              lineThickness=0.5),
            Polygon(
              points={{140,56},{156,56},{150,64},{150,68},{152,68},{152,70},{
                  144,70},{144,68},{146,68},{146,64},{140,56}},
              lineColor={0,0,0},
              fillColor={255,255,255},
              fillPattern=FillPattern.Solid),
            Polygon(
              points={{146,64},{150,64},{156,56},{140,56},{146,64}},
              lineColor={0,0,0},
              fillColor={0,255,0},
              fillPattern=FillPattern.Solid),
            Polygon(
              points={{120,56},{136,56},{130,64},{130,68},{132,68},{132,70},{
                  124,70},{124,68},{126,68},{126,64},{120,56}},
              lineColor={0,0,0},
              fillColor={255,255,255},
              fillPattern=FillPattern.Solid),
            Polygon(
              points={{126,64},{130,64},{136,56},{120,56},{126,64}},
              lineColor={0,0,0},
              fillColor={255,0,255},
              fillPattern=FillPattern.Solid),
            Polygon(
              points={{102,56},{116,56},{116,64},{116,68},{116,68},{116,70},{
                  102,70},{102,68},{102,68},{102,64},{102,56}},
              lineColor={0,0,0},
              fillColor={255,255,255},
              fillPattern=FillPattern.Solid),
            Polygon(
              points={{102,64},{116,64},{116,56},{102,56},{102,64}},
              lineColor={0,0,0},
              fillColor={170,85,255},
              fillPattern=FillPattern.Solid),
            Polygon(
              points={{-20,132},{-4,134},{50,134},{40,132},{-20,132}},
              lineColor={0,0,0},
              lineThickness=0.5,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid),
            Rectangle(
              extent={{6,132},{18,168}},
              lineColor={0,0,0},
              lineThickness=0.5,
              fillColor={95,95,95},
              fillPattern=FillPattern.Solid),
            Rectangle(
              extent={{-30,44},{10,4}},
              lineColor={0,0,0},
              lineThickness=0.5,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid),
            Rectangle(
              extent={{10,44},{50,4}},
              lineColor={0,0,0},
              lineThickness=0.5,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid),
            Rectangle(
              extent={{-36,48},{54,44}},
              lineColor={0,0,0},
              lineThickness=0.5,
              fillColor={0,0,0},
              fillPattern=FillPattern.Solid),
            Rectangle(
              extent={{-23,2},{23,-2}},
              lineColor={0,0,0},
              lineThickness=0.5,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid,
              origin={-30,71},
              rotation=90),
            Rectangle(
              extent={{-23,2},{23,-2}},
              lineColor={0,0,0},
              lineThickness=0.5,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid,
              origin={50,71},
              rotation=90),
            Rectangle(
              extent={{-36,98},{54,94}},
              lineColor={0,0,0},
              lineThickness=0.5,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid),
            Rectangle(
              extent={{-28,94},{48,48}},
              lineColor={0,0,0},
              lineThickness=0.5,
              fillColor={170,255,255},
              fillPattern=FillPattern.Solid),
            Line(
              points={{-28,72},{48,72}},
              color={0,0,0},
              thickness=0.5),
            Polygon(
              points={{-32,98},{-20,132},{40,132},{54,98},{-32,98}},
              lineColor={0,0,0},
              lineThickness=0.5,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid),
            Polygon(
              points={{52,48},{62,64},{64,64},{54,48},{52,48}},
              lineColor={0,0,0},
              lineThickness=0.5,
              fillColor={0,0,0},
              fillPattern=FillPattern.Solid),
            Polygon(
              points={{54,48},{64,64},{64,60},{54,44},{54,48}},
              lineColor={0,0,0},
              lineThickness=0.5,
              fillColor={0,0,0},
              fillPattern=FillPattern.Solid),
            Polygon(
              points={{50,44},{54,44},{62,58},{62,24},{50,4},{50,44}},
              lineColor={0,0,0},
              lineThickness=0.5,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid),
            Polygon(
              points={{52,48},{52,94},{54,94},{62,104},{62,64},{52,48}},
              lineColor={0,0,0},
              lineThickness=0.5,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid),
            Polygon(
              points={{54,94},{64,106},{64,110},{54,98},{54,94}},
              lineColor={0,0,0},
              lineThickness=0.5,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid),
            Polygon(
              points={{40,132},{50,134},{62,108},{54,98},{40,132}},
              lineColor={0,0,0},
              lineThickness=0.5,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid),
            Line(points={{-28,48},{-10,66}},  color={0,0,0}),
            Line(points={{-10,66},{48,66}}, color={0,0,0}),
            Line(points={{-10,66},{-10,94}}, color={0,0,0}),
            Text(
              extent={{-22,18},{42,6}},
              lineColor={0,0,0},
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid,
              textString="Fume Hood"),
            Ellipse(
              extent={{6,134},{18,132}},
              lineColor={0,0,0},
              fillColor={95,95,95},
              fillPattern=FillPattern.Solid,
              lineThickness=0.5),
            Ellipse(
              extent={{6,168},{18,166}},
              lineColor={0,0,0},
              fillColor={95,95,95},
              fillPattern=FillPattern.Solid,
              lineThickness=0.5),
            Ellipse(
              extent={{6,162},{18,160}},
              lineColor={0,0,0},
              fillColor={95,95,95},
              fillPattern=FillPattern.Solid,
              lineThickness=0.5),
            Ellipse(
              extent={{6,154},{18,152}},
              lineColor={0,0,0},
              fillColor={95,95,95},
              fillPattern=FillPattern.Solid,
              lineThickness=0.5),
            Ellipse(
              extent={{6,146},{18,144}},
              lineColor={0,0,0},
              fillColor={95,95,95},
              fillPattern=FillPattern.Solid,
              lineThickness=0.5),
            Ellipse(
              extent={{6,140},{18,138}},
              lineColor={0,0,0},
              fillColor={95,95,95},
              fillPattern=FillPattern.Solid,
              lineThickness=0.5),
            Polygon(
              points={{24,56},{40,56},{34,64},{34,68},{36,68},{36,70},{28,70},{
                  28,68},{30,68},{30,64},{24,56}},
              lineColor={0,0,0},
              fillColor={255,255,255},
              fillPattern=FillPattern.Solid),
            Polygon(
              points={{30,64},{34,64},{40,56},{24,56},{30,64}},
              lineColor={0,0,0},
              fillColor={0,255,0},
              fillPattern=FillPattern.Solid),
            Polygon(
              points={{4,56},{20,56},{14,64},{14,68},{16,68},{16,70},{8,70},{8,
                  68},{10,68},{10,64},{4,56}},
              lineColor={0,0,0},
              fillColor={255,255,255},
              fillPattern=FillPattern.Solid),
            Polygon(
              points={{10,64},{14,64},{20,56},{4,56},{10,64}},
              lineColor={0,0,0},
              fillColor={255,0,255},
              fillPattern=FillPattern.Solid),
            Polygon(
              points={{-14,56},{0,56},{0,64},{0,68},{0,68},{0,70},{-14,70},{-14,
                  68},{-14,68},{-14,64},{-14,56}},
              lineColor={0,0,0},
              fillColor={255,255,255},
              fillPattern=FillPattern.Solid),
            Polygon(
              points={{-14,64},{0,64},{0,56},{-14,56},{-14,64}},
              lineColor={0,0,0},
              fillColor={170,85,255},
              fillPattern=FillPattern.Solid),
            Text(
              extent={{-172,-22},{174,-158}},
              lineColor={0,0,0},
              fillColor={0,255,255},
              fillPattern=FillPattern.Solid,
              textString="Fume-hood systems present in 
the east wing of the building")}),                                   Diagram(
            coordinateSystem(preserveAspectRatio=false, extent={{-200,-200},{
                200,200}})));
    end EastFumeHood;

    model WestFumeHood
     package MediumA =Buildings.Media.Air "Medium model for Air";
      FumeHood CEA17_201(
        hConduit=7,
        m_flow_nominal=4*0.44,
        DiamConduit=4*0.1,
        pDropConduit(displayUnit="Pa") = 4*50)
        annotation (Placement(transformation(extent={{-60,80},{-40,100}})));
      FumeHood LMO16_101(m_flow_nominal=0.09, hConduit=12)
        "Fume hood in On/Off"
        annotation (Placement(transformation(extent={{-60,-40},{-40,-20}})));
      FumeHood LMO16_101_2(m_flow_nominal=0.44, hConduit=12)
        "Fume hood with a minimum mass flow rate of 260m3/h"
        annotation (Placement(transformation(extent={{40,-60},{60,-40}})));
      Modelica.Blocks.Sources.CombiTimeTable testSorbone(extrapolation=Modelica.Blocks.Types.Extrapolation.Periodic, table=[0,
            0.1; 3600*9,0.1; (3600*9) + 1,0.5; 3600*16,0.5; (3600*16) + 1,0.1; 3600*
            24,0.1]) "Fraction of internal heat gain"
        annotation (Placement(transformation(extent={{10,-10},{-10,10}},
            rotation=0,
            origin={56,160})));
      Modelica.Fluid.Interfaces.FluidPort_a port_a(redeclare package Medium =
            MediumA) annotation (Placement(transformation(extent={{-110,80},{-90,100}}),
            iconTransformation(extent={{-110,-54},{-90,-34}})));
      Modelica.Fluid.Interfaces.FluidPort_a port_a3(
                                                   redeclare package Medium =
            MediumA) annotation (Placement(transformation(extent={{-110,-40},{-90,-20}}),
            iconTransformation(extent={{-110,-28},{-90,-8}})));
      Modelica.Fluid.Interfaces.FluidPort_a port_a7(
                                                   redeclare package Medium =
            MediumA) annotation (Placement(transformation(extent={{-110,-60},{-90,-40}}),
            iconTransformation(extent={{-110,86},{-90,106}})));
      Modelica.Fluid.Interfaces.FluidPort_b port_b(redeclare package Medium =
            MediumA)
        annotation (Placement(transformation(extent={{90,82},{110,102}}),
            iconTransformation(extent={{90,82},{110,102}})));
      Modelica.Fluid.Interfaces.FluidPort_b port_b5(redeclare package Medium =
            MediumA)
        annotation (Placement(transformation(extent={{92,-80},{112,-60}}),
            iconTransformation(extent={{92,-80},{112,-60}})));
      Modelica.Fluid.Interfaces.FluidPort_b port_b6(redeclare package Medium =
            MediumA)
        annotation (Placement(transformation(extent={{92,-106},{112,-86}}),
            iconTransformation(extent={{92,-106},{112,-86}})));
      Modelica.Blocks.Sources.CombiTimeTable testSorbone1(
                                                         extrapolation=Modelica.Blocks.Types.Extrapolation.Periodic, table=[0,
            0.1; 3600*9,0.1; (3600*9) + 1,0.8; 3600*16,0.8; (3600*16) + 1,0.1; 3600*
            24,0.1]) "Fraction of internal heat gain"
        annotation (Placement(transformation(extent={{-10,10},{10,-10}},
            rotation=180,
            origin={34,22})));
      Modelica.Blocks.Sources.CombiTimeTable testSorbone2(
                                                         extrapolation=Modelica.Blocks.Types.Extrapolation.Periodic, table=[0,
            0.2; 3600*9,0.2; (3600*9) + 1,0.7; 3600*16,0.7; (3600*16) + 1,0.2; 3600*
            24,0.2]) "Fraction of internal heat gain"
        annotation (Placement(transformation(extent={{10,-10},{-10,10}},
            rotation=0,
            origin={124,-26})));
      FBM.Components.WorkingDayOrWeekEnd workingDayOrWeekEnd
        annotation (Placement(transformation(extent={{182,124},{162,144}})));
      Modelica.Blocks.Logical.Switch switch1
        annotation (Placement(transformation(extent={{24,112},{4,132}})));
      Modelica.Blocks.Sources.Constant TRooSet1(k=0.1)
        annotation (Placement(transformation(extent={{180,100},{160,120}})));
      Modelica.Blocks.Logical.Switch switch2
        annotation (Placement(transformation(extent={{4,-10},{-16,10}})));
      Modelica.Blocks.Logical.Switch switch3
        annotation (Placement(transformation(extent={{98,-52},{78,-32}})));
    equation
      connect(CEA17_201.port_a, port_a)
        annotation (Line(points={{-60,90},{-74,90},{-100,90}}, color={0,127,255}));
      connect(LMO16_101.port_a, port_a3) annotation (Line(points={{-60,-30},{-66,-30},
              {-100,-30}}, color={0,127,255}));
      connect(LMO16_101_2.port_a, port_a7)
        annotation (Line(points={{40,-50},{-100,-50}}, color={0,127,255}));
      connect(CEA17_201.port_b, port_b)
        annotation (Line(points={{-40,90},{100,90},{100,92}}, color={0,127,255}));
      connect(LMO16_101.port_b, port_b5)
        annotation (Line(points={{-40,-30},{32,-30},{32,-70},{102,-70}},
                                                       color={0,127,255}));
      connect(LMO16_101_2.port_b, port_b6)
        annotation (Line(points={{60,-50},{80,-50},{80,-96},{102,-96}},
                                                      color={0,127,255}));
      connect(switch1.u2, workingDayOrWeekEnd.y) annotation (Line(points={{26,122},
              {34,122},{34,134},{161,134}}, color={255,0,255}));
      connect(switch1.u3, TRooSet1.y) annotation (Line(points={{26,114},{32,114},{
              32,108},{38,108},{159,108},{159,110}}, color={0,0,127}));
      connect(CEA17_201.u, switch1.y) annotation (Line(points={{-40,98},{-18,98},{
              -18,122},{3,122}}, color={0,0,127}));
      connect(switch1.u1, testSorbone.y[1]) annotation (Line(points={{26,130},{30,
              130},{30,160},{45,160}}, color={0,0,127}));
      connect(testSorbone1.y[1], switch2.u1)
        annotation (Line(points={{23,22},{23,8},{6,8}}, color={0,0,127}));
      connect(TRooSet1.y, switch2.u3) annotation (Line(points={{159,110},{154,110},
              {154,-8},{6,-8}}, color={0,0,127}));
      connect(workingDayOrWeekEnd.y, switch2.u2) annotation (Line(points={{161,134},
              {160,134},{160,0},{6,0}}, color={255,0,255}));
      connect(LMO16_101.u, switch2.y) annotation (Line(points={{-40,-22},{-28,-22},
              {-28,0},{-17,0}}, color={0,0,127}));
      connect(LMO16_101_2.u, switch3.y)
        annotation (Line(points={{60,-42},{77,-42},{77,-42}}, color={0,0,127}));
      connect(switch3.u1, testSorbone2.y[1]) annotation (Line(points={{100,-34},{106,
              -34},{106,-26},{113,-26}}, color={0,0,127}));
      connect(workingDayOrWeekEnd.y, switch3.u2) annotation (Line(points={{161,134},
              {161,-42},{100,-42}}, color={255,0,255}));
      connect(TRooSet1.y, switch3.u3) annotation (Line(points={{159,110},{154,110},
              {154,-50},{100,-50}}, color={0,0,127}));
      annotation (Icon(coordinateSystem(preserveAspectRatio=false), graphics={
            Rectangle(
              extent={{-100,100},{100,-100}},
              lineColor={0,0,0},
              fillColor={0,255,255},
              fillPattern=FillPattern.Solid),
            Polygon(
              points={{-32,50},{-16,52},{38,52},{28,50},{-32,50}},
              lineColor={0,0,0},
              lineThickness=0.5,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid),
            Rectangle(
              extent={{-6,50},{6,86}},
              lineColor={0,0,0},
              lineThickness=0.5,
              fillColor={95,95,95},
              fillPattern=FillPattern.Solid),
            Rectangle(
              extent={{-42,-38},{-2,-78}},
              lineColor={0,0,0},
              lineThickness=0.5,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid),
            Rectangle(
              extent={{-2,-38},{38,-78}},
              lineColor={0,0,0},
              lineThickness=0.5,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid),
            Rectangle(
              extent={{-48,-34},{42,-38}},
              lineColor={0,0,0},
              lineThickness=0.5,
              fillColor={0,0,0},
              fillPattern=FillPattern.Solid),
            Rectangle(
              extent={{-23,2},{23,-2}},
              lineColor={0,0,0},
              lineThickness=0.5,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid,
              origin={-42,-11},
              rotation=90),
            Rectangle(
              extent={{-23,2},{23,-2}},
              lineColor={0,0,0},
              lineThickness=0.5,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid,
              origin={38,-11},
              rotation=90),
            Rectangle(
              extent={{-48,16},{42,12}},
              lineColor={0,0,0},
              lineThickness=0.5,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid),
            Rectangle(
              extent={{-40,12},{36,-34}},
              lineColor={0,0,0},
              lineThickness=0.5,
              fillColor={170,255,255},
              fillPattern=FillPattern.Solid),
            Line(
              points={{-40,-10},{36,-10}},
              color={0,0,0},
              thickness=0.5),
            Polygon(
              points={{-44,16},{-32,50},{28,50},{42,16},{-44,16}},
              lineColor={0,0,0},
              lineThickness=0.5,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid),
            Polygon(
              points={{40,-34},{50,-18},{52,-18},{42,-34},{40,-34}},
              lineColor={0,0,0},
              lineThickness=0.5,
              fillColor={0,0,0},
              fillPattern=FillPattern.Solid),
            Polygon(
              points={{42,-34},{52,-18},{52,-22},{42,-38},{42,-34}},
              lineColor={0,0,0},
              lineThickness=0.5,
              fillColor={0,0,0},
              fillPattern=FillPattern.Solid),
            Polygon(
              points={{38,-38},{42,-38},{50,-24},{50,-58},{38,-78},{38,-38}},
              lineColor={0,0,0},
              lineThickness=0.5,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid),
            Polygon(
              points={{40,-34},{40,12},{42,12},{50,22},{50,-18},{40,-34}},
              lineColor={0,0,0},
              lineThickness=0.5,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid),
            Polygon(
              points={{42,12},{52,24},{52,28},{42,16},{42,12}},
              lineColor={0,0,0},
              lineThickness=0.5,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid),
            Polygon(
              points={{28,50},{38,52},{50,26},{42,16},{28,50}},
              lineColor={0,0,0},
              lineThickness=0.5,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid),
            Line(points={{-40,-34},{-22,-16}},color={0,0,0}),
            Line(points={{-22,-16},{36,-16}},
                                            color={0,0,0}),
            Line(points={{-22,-16},{-22,12}},color={0,0,0}),
            Text(
              extent={{-36,-54},{28,-66}},
              lineColor={0,0,0},
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid,
              textString="West
Fume hood
systems"),  Ellipse(
              extent={{-6,52},{6,50}},
              lineColor={0,0,0},
              fillColor={95,95,95},
              fillPattern=FillPattern.Solid,
              lineThickness=0.5),
            Ellipse(
              extent={{-6,86},{6,84}},
              lineColor={0,0,0},
              fillColor={95,95,95},
              fillPattern=FillPattern.Solid,
              lineThickness=0.5),
            Ellipse(
              extent={{-6,80},{6,78}},
              lineColor={0,0,0},
              fillColor={95,95,95},
              fillPattern=FillPattern.Solid,
              lineThickness=0.5),
            Ellipse(
              extent={{-6,72},{6,70}},
              lineColor={0,0,0},
              fillColor={95,95,95},
              fillPattern=FillPattern.Solid,
              lineThickness=0.5),
            Ellipse(
              extent={{-6,64},{6,62}},
              lineColor={0,0,0},
              fillColor={95,95,95},
              fillPattern=FillPattern.Solid,
              lineThickness=0.5),
            Ellipse(
              extent={{-6,58},{6,56}},
              lineColor={0,0,0},
              fillColor={95,95,95},
              fillPattern=FillPattern.Solid,
              lineThickness=0.5),
            Polygon(
              points={{12,-26},{28,-26},{22,-18},{22,-14},{24,-14},{24,-12},{16,
                  -12},{16,-14},{18,-14},{18,-18},{12,-26}},
              lineColor={0,0,0},
              fillColor={255,255,255},
              fillPattern=FillPattern.Solid),
            Polygon(
              points={{18,-18},{22,-18},{28,-26},{12,-26},{18,-18}},
              lineColor={0,0,0},
              fillColor={0,255,0},
              fillPattern=FillPattern.Solid),
            Polygon(
              points={{-8,-26},{8,-26},{2,-18},{2,-14},{4,-14},{4,-12},{-4,-12},
                  {-4,-14},{-2,-14},{-2,-18},{-8,-26}},
              lineColor={0,0,0},
              fillColor={255,255,255},
              fillPattern=FillPattern.Solid),
            Polygon(
              points={{-2,-18},{2,-18},{8,-26},{-8,-26},{-2,-18}},
              lineColor={0,0,0},
              fillColor={255,0,255},
              fillPattern=FillPattern.Solid),
            Polygon(
              points={{-26,-26},{-12,-26},{-12,-18},{-12,-14},{-12,-14},{-12,
                  -12},{-26,-12},{-26,-14},{-26,-14},{-26,-18},{-26,-26}},
              lineColor={0,0,0},
              fillColor={255,255,255},
              fillPattern=FillPattern.Solid),
            Polygon(
              points={{-26,-18},{-12,-18},{-12,-26},{-26,-26},{-26,-18}},
              lineColor={0,0,0},
              fillColor={170,85,255},
              fillPattern=FillPattern.Solid)}),                      Diagram(
            coordinateSystem(preserveAspectRatio=false)));
    end WestFumeHood;

    model SouthFumeHood
    package MediumA =Buildings.Media.Air "Medium model for Air";
      FumeHood LMO25_201(
        m_flow_nominal=2*0.375,
        hConduit=7,
        DiamConduit=2*0.1,
        pDropConduit(displayUnit="Pa") = 2*50)
        annotation (Placement(transformation(extent={{-10,70},{10,90}})));
      FumeHood LMO25_201_3(
        m_flow_nominal=0.110,
        hConduit=7,
        DiamConduit=2*0.20,
        pDropConduit(displayUnit="Pa") = 2*50)
        annotation (Placement(transformation(extent={{-10,-10},{10,10}})));
      Modelica.Fluid.Interfaces.FluidPort_a port_a(redeclare package Medium =
            MediumA) annotation (Placement(transformation(extent={{-110,70},{-90,90}}),
            iconTransformation(extent={{-108,-70},{-88,-50}})));
      Modelica.Fluid.Interfaces.FluidPort_a port_a2(redeclare package Medium =
            MediumA) annotation (Placement(transformation(extent={{-110,-10},{-90,10}}),
            iconTransformation(extent={{-108,30},{-88,50}})));
      Modelica.Fluid.Interfaces.FluidPort_b port_b(redeclare package Medium =
            MediumA)
        annotation (Placement(transformation(extent={{90,70},{110,90}})));
      Modelica.Fluid.Interfaces.FluidPort_b port_b2(redeclare package Medium =
            MediumA)
        annotation (Placement(transformation(extent={{90,-10},{110,10}})));
      Modelica.Blocks.Sources.CombiTimeTable testSorbone(extrapolation=Modelica.Blocks.Types.Extrapolation.Periodic, table=[0,
            0.1; 3600*9,0.1; (3600*9) + 1,0.5; 3600*16,0.5; (3600*16) + 1,0.1; 3600*
            24,0.1]) "Fraction of internal heat gain"
        annotation (Placement(transformation(extent={{-10,10},{10,-10}},
            rotation=180,
            origin={92,62})));
      Modelica.Blocks.Sources.Constant TRooSet(k=1)
        annotation (Placement(transformation(extent={{60,-40},{40,-20}})));
      FBM.Components.WorkingDayOrWeekEnd workingDayOrWeekEnd
        annotation (Placement(transformation(extent={{102,30},{82,50}})));
      Modelica.Blocks.Logical.Switch switch1
        annotation (Placement(transformation(extent={{60,20},{40,40}})));
      Modelica.Blocks.Sources.Constant TRooSet1(k=0.1)
        annotation (Placement(transformation(extent={{100,6},{80,26}})));
    equation
      connect(port_a, LMO25_201.port_a) annotation (Line(points={{-100,80},{-56,
              80},{-10,80}}, color={0,127,255}));
      connect(LMO25_201_3.port_a, port_a2) annotation (Line(points={{-10,0},{-11,
              0},{-100,0}}, color={0,127,255}));
      connect(LMO25_201.port_b, port_b) annotation (Line(points={{10,80},{56,80},
              {100,80}}, color={0,127,255}));
      connect(LMO25_201_3.port_b, port_b2)
        annotation (Line(points={{10,0},{11,0},{100,0}}, color={0,127,255}));
      connect(TRooSet.y, LMO25_201_3.u) annotation (Line(points={{39,-30},{24,
              -30},{24,8},{10,8}}, color={0,0,127}));
      connect(switch1.u2, workingDayOrWeekEnd.y) annotation (Line(points={{62,30},
              {70,30},{70,40},{81,40}}, color={255,0,255}));
      connect(switch1.y, LMO25_201.u) annotation (Line(points={{39,30},{26,30},{26,
              88},{10,88}}, color={0,0,127}));
      connect(switch1.u1, testSorbone.y[1]) annotation (Line(points={{62,38},{68,38},
              {68,62},{81,62}}, color={0,0,127}));
      connect(switch1.u3, TRooSet1.y) annotation (Line(points={{62,22},{68,22},{68,
              16},{74,16},{80,16},{79,16}}, color={0,0,127}));
      annotation (Icon(coordinateSystem(preserveAspectRatio=false), graphics={
            Rectangle(
              extent={{-100,100},{100,-100}},
              lineColor={0,0,0},
              fillColor={0,255,255},
              fillPattern=FillPattern.Solid),
            Polygon(
              points={{-32,46},{-16,48},{38,48},{28,46},{-32,46}},
              lineColor={0,0,0},
              lineThickness=0.5,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid),
            Rectangle(
              extent={{-6,46},{6,82}},
              lineColor={0,0,0},
              lineThickness=0.5,
              fillColor={95,95,95},
              fillPattern=FillPattern.Solid),
            Rectangle(
              extent={{-42,-42},{-2,-82}},
              lineColor={0,0,0},
              lineThickness=0.5,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid),
            Rectangle(
              extent={{-2,-42},{38,-82}},
              lineColor={0,0,0},
              lineThickness=0.5,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid),
            Rectangle(
              extent={{-48,-38},{42,-42}},
              lineColor={0,0,0},
              lineThickness=0.5,
              fillColor={0,0,0},
              fillPattern=FillPattern.Solid),
            Rectangle(
              extent={{-23,2},{23,-2}},
              lineColor={0,0,0},
              lineThickness=0.5,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid,
              origin={-42,-15},
              rotation=90),
            Rectangle(
              extent={{-23,2},{23,-2}},
              lineColor={0,0,0},
              lineThickness=0.5,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid,
              origin={38,-15},
              rotation=90),
            Rectangle(
              extent={{-48,12},{42,8}},
              lineColor={0,0,0},
              lineThickness=0.5,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid),
            Rectangle(
              extent={{-40,8},{36,-38}},
              lineColor={0,0,0},
              lineThickness=0.5,
              fillColor={170,255,255},
              fillPattern=FillPattern.Solid),
            Line(
              points={{-40,-14},{36,-14}},
              color={0,0,0},
              thickness=0.5),
            Polygon(
              points={{-44,12},{-32,46},{28,46},{42,12},{-44,12}},
              lineColor={0,0,0},
              lineThickness=0.5,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid),
            Polygon(
              points={{40,-38},{50,-22},{52,-22},{42,-38},{40,-38}},
              lineColor={0,0,0},
              lineThickness=0.5,
              fillColor={0,0,0},
              fillPattern=FillPattern.Solid),
            Polygon(
              points={{42,-38},{52,-22},{52,-26},{42,-42},{42,-38}},
              lineColor={0,0,0},
              lineThickness=0.5,
              fillColor={0,0,0},
              fillPattern=FillPattern.Solid),
            Polygon(
              points={{38,-42},{42,-42},{50,-28},{50,-62},{38,-82},{38,-42}},
              lineColor={0,0,0},
              lineThickness=0.5,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid),
            Polygon(
              points={{40,-38},{40,8},{42,8},{50,18},{50,-22},{40,-38}},
              lineColor={0,0,0},
              lineThickness=0.5,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid),
            Polygon(
              points={{42,8},{52,20},{52,24},{42,12},{42,8}},
              lineColor={0,0,0},
              lineThickness=0.5,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid),
            Polygon(
              points={{28,46},{38,48},{50,22},{42,12},{28,46}},
              lineColor={0,0,0},
              lineThickness=0.5,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid),
            Line(points={{-40,-38},{-22,-20}},color={0,0,0}),
            Line(points={{-22,-20},{36,-20}},
                                            color={0,0,0}),
            Line(points={{-22,-20},{-22,8}}, color={0,0,0}),
            Text(
              extent={{-34,-56},{30,-68}},
              lineColor={0,0,0},
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid,
              textString="South
Fume Hood
Systems"),  Ellipse(
              extent={{-6,48},{6,46}},
              lineColor={0,0,0},
              fillColor={95,95,95},
              fillPattern=FillPattern.Solid,
              lineThickness=0.5),
            Ellipse(
              extent={{-6,82},{6,80}},
              lineColor={0,0,0},
              fillColor={95,95,95},
              fillPattern=FillPattern.Solid,
              lineThickness=0.5),
            Ellipse(
              extent={{-6,76},{6,74}},
              lineColor={0,0,0},
              fillColor={95,95,95},
              fillPattern=FillPattern.Solid,
              lineThickness=0.5),
            Ellipse(
              extent={{-6,68},{6,66}},
              lineColor={0,0,0},
              fillColor={95,95,95},
              fillPattern=FillPattern.Solid,
              lineThickness=0.5),
            Ellipse(
              extent={{-6,60},{6,58}},
              lineColor={0,0,0},
              fillColor={95,95,95},
              fillPattern=FillPattern.Solid,
              lineThickness=0.5),
            Ellipse(
              extent={{-6,54},{6,52}},
              lineColor={0,0,0},
              fillColor={95,95,95},
              fillPattern=FillPattern.Solid,
              lineThickness=0.5),
            Polygon(
              points={{12,-30},{28,-30},{22,-22},{22,-18},{24,-18},{24,-16},{16,
                  -16},{16,-18},{18,-18},{18,-22},{12,-30}},
              lineColor={0,0,0},
              fillColor={255,255,255},
              fillPattern=FillPattern.Solid),
            Polygon(
              points={{18,-22},{22,-22},{28,-30},{12,-30},{18,-22}},
              lineColor={0,0,0},
              fillColor={0,255,0},
              fillPattern=FillPattern.Solid),
            Polygon(
              points={{-8,-30},{8,-30},{2,-22},{2,-18},{4,-18},{4,-16},{-4,-16},
                  {-4,-18},{-2,-18},{-2,-22},{-8,-30}},
              lineColor={0,0,0},
              fillColor={255,255,255},
              fillPattern=FillPattern.Solid),
            Polygon(
              points={{-2,-22},{2,-22},{8,-30},{-8,-30},{-2,-22}},
              lineColor={0,0,0},
              fillColor={255,0,255},
              fillPattern=FillPattern.Solid),
            Polygon(
              points={{-26,-30},{-12,-30},{-12,-22},{-12,-18},{-12,-18},{-12,
                  -16},{-26,-16},{-26,-18},{-26,-18},{-26,-22},{-26,-30}},
              lineColor={0,0,0},
              fillColor={255,255,255},
              fillPattern=FillPattern.Solid),
            Polygon(
              points={{-26,-22},{-12,-22},{-12,-30},{-26,-30},{-26,-22}},
              lineColor={0,0,0},
              fillColor={170,85,255},
              fillPattern=FillPattern.Solid)}),                      Diagram(
            coordinateSystem(preserveAspectRatio=false)));
    end SouthFumeHood;

    model S1_batterie
        package MediumA =Buildings.Media.Air "Medium model for Air";
      package MediumW = Buildings.Media.Water "Medium model for water";
        parameter Modelica.SIunits.MassFlowRate mFlowMun=8.61
        "Nominal mass flow rate for Munters HVACs and batteries networks";
        parameter Modelica.SIunits.MassFlowRate mAirBat_S_S1=0.95;
      parameter Modelica.SIunits.MassFlowRate mAirBat_E_S1=1.38;
      parameter Modelica.SIunits.MassFlowRate mAirBat_W_S1=2.31;
      parameter Modelica.SIunits.MassFlowRate mAirBat_S1 = mAirBat_S_S1 + mAirBat_E_S1 + mAirBat_W_S1;
      parameter Modelica.SIunits.MassFlowRate mWatBat_S_S1=0.071;
      parameter Modelica.SIunits.MassFlowRate mWatBat_E_S1=0.095;
      parameter Modelica.SIunits.MassFlowRate mWatBat_W_S1=0.219;
      parameter Modelica.SIunits.MassFlowRate mWatBat_S1 = mWatBat_S_S1 + mWatBat_E_S1 + mWatBat_W_S1;
      parameter Modelica.SIunits.MassFlowRate mHotDeck_S1=0.40;
      parameter Modelica.SIunits.MassFlowRate mAirFlow_S1=4.11;
      parameter Modelica.SIunits.Pressure dpThrWayVal_nominal = 5000
        "Pressure difference of three-way valve";
      S1 s1_1(redeclare package Medium1 = MediumA,
        mWat=mHotDeck_S1,
        nin=3,
        redeclare package Medium2 = MediumA,
        redeclare package Medium = MediumW,
        m_flow_nominal=mHotDeck_S1,
        m1_flow_nominal=mAirFlow_S1,
        m2_flow_nominal=mAirFlow_S1,
        mAir=mAirFlow_S1)
        annotation (Placement(transformation(extent={{160,-18},{224,44}})));
      FBM.Examples.BaseClasses.BaseClassesVentilation.VAVBranch SouthS1(
        redeclare package MediumA = MediumA,
        redeclare package MediumW = MediumW,
        m_flow_Wat=mWatBat_S_S1,
        m_flow_nominal=mAirBat_S_S1,
        PuissanceBatterie=2531,
        PressureDropBatterieAir(displayUnit="Pa") = 15,
        PressureDropBatterieWatter(displayUnit="Pa") = 4000)
        "South-facing thermal zone"
        annotation (Placement(transformation(extent={{-136,56},{-178,98}})));
      FBM.Examples.BaseClasses.BaseClassesVentilation.VAVBranch EastS1(
        redeclare package MediumA = MediumA,
        redeclare package MediumW = MediumW,
        m_flow_Wat=mWatBat_E_S1,
        m_flow_nominal=mAirBat_E_S1,
        PuissanceBatterie=3393,
        PressureDropBatterieAir(displayUnit="Pa") = 20,
        PressureDropBatterieWatter(displayUnit="Pa") = 4500)
        "South-facing thermal zone"
        annotation (Placement(transformation(extent={{-60,56},{-102,98}})));
      FBM.Examples.BaseClasses.BaseClassesVentilation.VAVBranch WestS1(
        redeclare package MediumA = MediumA,
        redeclare package MediumW = MediumW,
        m_flow_Wat=mWatBat_W_S1,
        m_flow_nominal=mAirBat_W_S1,
        PuissanceBatterie=7796,
        PressureDropBatterieAir(displayUnit="Pa") = 25,
        PressureDropBatterieWatter(displayUnit="Pa") = 8000)
        "South-facing thermal zone"
        annotation (Placement(transformation(extent={{10,56},{-32,98}})));
    Buildings.Fluid.FixedResistances.Junction splVal34(
      redeclare package Medium = MediumA,
      m_flow_nominal={mAirBat_S1,-(mAirBat_S1 - mAirBat_W_S1),-mAirBat_W_S1},
      dp_nominal={10,10,10}) "Flow splitter" annotation (Placement(
          transformation(
          extent={{10,10},{-10,-10}},
          rotation=0,
          origin={-12,-6})));

    Buildings.Fluid.FixedResistances.Junction splVal35(
      redeclare package Medium = MediumA,
      m_flow_nominal={(mAirBat_S1 - mAirBat_W_S1),-mAirBat_S_S1,-mAirBat_E_S1},
      dp_nominal={10,10,10}) "Flow splitter" annotation (Placement(
          transformation(
          extent={{10,10},{-10,-10}},
          rotation=0,
          origin={-82,-6})));

      Buildings.BoundaryConditions.WeatherData.Bus weaBus annotation (Placement(
            transformation(extent={{-280,180},{-240,220}}), iconTransformation(
              extent={{-258,170},{-238,190}})));
      Modelica.Fluid.Interfaces.FluidPort_a HotWater(redeclare package Medium =
            MediumW)
        annotation (Placement(transformation(extent={{144,-290},{164,-270}}),
            iconTransformation(extent={{188,-296},{208,-276}})));
      Modelica.Fluid.Interfaces.FluidPort_b ColdWater(redeclare package Medium =
            MediumW)
        annotation (Placement(transformation(extent={{224,-292},{244,-272}}),
            iconTransformation(extent={{122,-296},{142,-276}})));
      Modelica.Fluid.Interfaces.FluidPort_a FreshAir(redeclare package Medium =
            MediumA)
        annotation (Placement(transformation(extent={{294,-50},{314,-30}}),
            iconTransformation(extent={{294,-50},{314,-30}})));
      Modelica.Fluid.Interfaces.FluidPort_b ExhaustAit(redeclare package Medium =
            MediumA)
        annotation (Placement(transformation(extent={{292,40},{312,60}}),
            iconTransformation(extent={{292,40},{312,60}})));
      Modelica.Blocks.Interfaces.RealInput TRoom[3]
        annotation (Placement(transformation(extent={{340,192},{300,232}})));
      Modelica.Fluid.Interfaces.FluidPort_a ExtractAir(redeclare package Medium =
            MediumA) annotation (Placement(transformation(extent={{106,250},{
                126,270}}), iconTransformation(extent={{68,248},{88,268}})));
      Modelica.Fluid.Interfaces.FluidPort_b WestS1_Out(redeclare package Medium =
            MediumA)
        annotation (Placement(transformation(extent={{-22,250},{-2,270}})));
      Modelica.Fluid.Interfaces.FluidPort_b EastS1_Out(redeclare package Medium =
            MediumA)
        annotation (Placement(transformation(extent={{-88,250},{-68,270}})));
      Modelica.Fluid.Interfaces.FluidPort_b SouthS1_Out(
                                                       redeclare package Medium =
            MediumA)
        annotation (Placement(transformation(extent={{-166,250},{-146,270}})));
    Buildings.Fluid.FixedResistances.Junction splVal1(
      redeclare package Medium = MediumW,
      energyDynamics=Modelica.Fluid.Types.Dynamics.SteadyStateInitial,
      dp_nominal={0,0,0},
      m_flow_nominal={mHotDeck_S1 + mWatBat_S1,-mHotDeck_S1,-mWatBat_S1})
      "Flow splitter" annotation (Placement(transformation(
          extent={{10,-10},{-10,10}},
          rotation=270,
          origin={154,-86})));
    Buildings.Fluid.FixedResistances.Junction splVal2(
      redeclare package Medium = MediumW,
      energyDynamics=Modelica.Fluid.Types.Dynamics.SteadyStateInitial,
      dp_nominal={0,0,0},
      m_flow_nominal={mHotDeck_S1,-(mHotDeck_S1 + mWatBat_S1),mWatBat_S1})
      "Flow splitter" annotation (Placement(transformation(
          extent={{-10,-10},{10,10}},
          rotation=270,
          origin={234,-120})));
      Modelica.Blocks.Interaction.Show.RealValue RealVal13
        annotation (Placement(transformation(extent={{240,100},{278,124}})));
      Modelica.Blocks.Interaction.Show.RealValue RealVal14(significantDigits=4)
        annotation (Placement(transformation(extent={{232,86},{270,110}})));
      Modelica.Blocks.Routing.DeMultiplex3 deMultiplex3_1 annotation (Placement(
            transformation(
            extent={{-10,-10},{10,10}},
            rotation=180,
            origin={260,210})));
      Buildings.Fluid.Sensors.TemperatureTwoPort T18(redeclare package Medium =
          MediumW, m_flow_nominal=mHotDeck_S1)
      annotation (Placement(transformation(extent={{10,-10},{-10,10}},
          rotation=90,
          origin={154,-34})));
    equation
      connect(WestS1.port_a,splVal34. port_3) annotation (Line(
          points={{-11,66.36},{-11,34.18},{-12,34.18},{-12,4}},
          color={85,255,85},
          thickness=0.5));
      connect(splVal35.port_1,splVal34. port_2) annotation (Line(
          points={{-72,-6},{-72,-6},{-22,-6}},
          color={85,255,85},
          thickness=0.5));
      connect(splVal35.port_2,SouthS1. port_a) annotation (Line(
          points={{-92,-6},{-156,-6},{-156,66.36},{-157,66.36}},
          color={85,255,85},
          thickness=0.5));
      connect(EastS1.port_a,splVal35. port_3) annotation (Line(
          points={{-81,66.36},{-81,54},{-82,54},{-82,40},{-82,4}},
          color={85,255,85},
          thickness=0.5));
      connect(WestS1.yDam,s1_1. u[1]) annotation (Line(
          points={{-33.4,70},{28,70},{28,46.8933},{194.56,46.8933}},
          color={0,0,127},
          pattern=LinePattern.Dash));
      connect(EastS1.yDam,s1_1. u[2]) annotation (Line(
          points={{-103.4,70},{-4,70},{-4,45.24},{194.56,45.24}},
          color={0,0,127},
          pattern=LinePattern.Dash));
      connect(SouthS1.yDam,s1_1. u[3]) annotation (Line(
          points={{-179.4,70},{-42,70},{-42,43.5867},{194.56,43.5867}},
          color={0,0,127},
          pattern=LinePattern.Dash));
      connect(weaBus, s1_1.weaBus) annotation (Line(
          points={{-260,200},{142,200},{142,36.56},{160,36.56}},
          color={255,204,51},
          thickness=0.5), Text(
          string="%first",
          index=-1,
          extent={{-6,3},{-6,3}}));
      connect(s1_1.port_b1, ExhaustAit) annotation (Line(points={{224,31.6},{
              262,31.6},{262,50},{302,50}},
                                  color={0,127,255}));
      connect(s1_1.port_a2, FreshAir) annotation (Line(points={{224,-5.6},{264,
              -5.6},{264,-40},{304,-40}},
                                    color={0,127,255}));
      connect(SouthS1.port_b, SouthS1_Out) annotation (Line(points={{-157,98},{-156,
              98},{-156,260}}, color={0,127,255}));
      connect(WestS1.port_b, WestS1_Out) annotation (Line(points={{-11,98},{-11,179},
              {-12,179},{-12,260}}, color={0,127,255}));
      connect(s1_1.Auxilaire,RealVal13. numberPort) annotation (Line(points={{227.2,
              1.84},{231.4,1.84},{231.4,112},{237.15,112}},               color=
             {0,0,127}));
      connect(s1_1.EHotDeck,RealVal14. numberPort) annotation (Line(points={{227.2,-2.5},
              {228.4,-2.5},{228.4,98},{229.15,98}},                     color={
              0,0,127}));
      connect(EastS1.port_b, EastS1_Out) annotation (Line(points={{-81,98},{-80,
              98},{-80,260},{-78,260}}, color={0,127,255}));
      connect(splVal2.port_2, ColdWater) annotation (Line(points={{234,-130},{
              234,-282},{234,-282}}, color={0,127,255}));
      connect(splVal1.port_1, HotWater) annotation (Line(points={{154,-96},{
            154,-280}},          color={0,127,255}));
      connect(SouthS1.TRoo, deMultiplex3_1.y3[1]) annotation (Line(points={{
              -133.2,84},{-118,84},{-118,217},{249,217}}, color={0,0,127}));
      connect(EastS1.TRoo, deMultiplex3_1.y2[1]) annotation (Line(points={{
              -57.2,84},{-38,84},{-38,210},{249,210}}, color={0,0,127}));
      connect(WestS1.TRoo, deMultiplex3_1.y1[1]) annotation (Line(points={{12.8,
              84},{130,84},{130,203},{249,203}}, color={0,0,127}));
      connect(deMultiplex3_1.u, TRoom) annotation (Line(points={{272,210},{290,
              210},{290,212},{320,212}}, color={0,0,127}));
      connect(s1_1.controlBus, WestS1.controlBus) annotation (Line(
          points={{213.76,44},{213.88,44},{213.88,66.08},{10,66.08}},
          color={255,204,51},
          thickness=0.5));
      connect(s1_1.controlBus, EastS1.controlBus) annotation (Line(
          points={{213.76,44},{214,44},{214,66.08},{-60,66.08}},
          color={255,204,51},
          thickness=0.5));
      connect(s1_1.controlBus, SouthS1.controlBus) annotation (Line(
          points={{213.76,44},{214,44},{214,66.08},{-136,66.08}},
          color={255,204,51},
          thickness=0.5));
      connect(TRoom, s1_1.TRoom) annotation (Line(points={{320,212},{108,212},{
              108,-14.9},{157.44,-14.9}}, color={0,0,127}));
      connect(splVal1.port_3, WestS1.port_InTer) annotation (Line(points={{144,
              -86},{-26,-86},{-26,73.08},{-25.56,73.08}}, color={0,127,255}));
      connect(splVal1.port_3, EastS1.port_InTer) annotation (Line(points={{144,
              -86},{-96,-86},{-96,73.08},{-95.56,73.08}}, color={0,127,255}));
      connect(splVal1.port_3, SouthS1.port_InTer) annotation (Line(points={{144,
              -86},{-172,-86},{-172,73.08},{-171.56,73.08}}, color={0,127,255}));
      connect(splVal2.port_3, WestS1.port_OffTer) annotation (Line(points={{224,
              -120},{-32,-120},{-32,78.68},{-25.28,78.68}}, color={0,127,255}));
      connect(splVal2.port_3, EastS1.port_OffTer) annotation (Line(points={{224,
              -120},{-104,-120},{-104,78.68},{-95.28,78.68}}, color={0,127,255}));
      connect(splVal2.port_3, SouthS1.port_OffTer) annotation (Line(points={{
              224,-120},{-178,-120},{-178,78.68},{-171.28,78.68}}, color={0,127,
              255}));
    connect(splVal34.port_1, s1_1.port_b2) annotation (Line(points={{-2,-6},{
            160,-6},{160,-5.6}}, color={0,127,255}));
    connect(T18.port_a, s1_1.port_a) annotation (Line(points={{154,-24},{154,
            13},{160,13}}, color={0,127,255}));
    connect(T18.port_b, splVal1.port_2) annotation (Line(points={{154,-44},{
            154,-44},{154,-76}}, color={0,127,255}));
    connect(s1_1.port_b, splVal2.port_1) annotation (Line(points={{224,13},{
            234,13},{234,-110}}, color={0,127,255}));


      connect(ExtractAir, s1_1.port_a1) annotation (Line(points={{116,260},{116,
              260},{116,31.6},{160,31.6}}, color={0,127,255}));
      annotation (Icon(coordinateSystem(preserveAspectRatio=false, extent={{-320,-280},
                {300,260}}), graphics={Rectangle(
              extent={{-320,260},{302,-280}},
              lineColor={0,128,255},
              fillColor={0,128,255},
              fillPattern=FillPattern.Solid),
                                 Bitmap(
              extent={{110,76},{220,-62}},
              imageSource=
                  ""
                   +
                  "09RYkI8NF+A/ECT4r8KC/Nd//rOjLx16/8OPz318ntrltGshHJ4Ph+fd3rXaMf33f3hrjR454YgyM59vqN/9XAPWFcE3IEjwTRJJ1suHD+zft+di8+Wz7//dOzpGeiJIEmqlck/T888+8xTWk8E9IUhwbzwet3FXfUP9jus3W8/+7YPO7h7SE0ECKyst2fuDF2qqrCw2/oH/D0GC+2FZdmtN9daaantf/4efXGi5ei0SiZIeChJGBo+3fVvdc7t2mgzFpGeBBIAgwUMxGw1mo+HVHx1tbvnHRxcuDg45SE8EVCvWaxt27nh6+5P8J54gPQskDAQJHgGfz2/cVd+4q35wyPHGb0+OuD2kJwLqFOSrf/H6cV2RhvQgkHjweS6shl6nLbGYSE8BNCqxmFAjWB0ECQAAqIAgAQAAFRAkAACgAoIEAABUQJAAAIAKCBIQQ3aDbbgn/FGAIAQJiDHodVfOnztx/FhdbU1qKpbEEZOamlpXW3Pi+LEr588Z9DgcD4jBqwCQpNdp9Trtj48emQwEWq5+ce2L61/dah/3+UnPtSHkKeSVWyq2ba3dvq1uIx8AD/RAkIAKuTk5e5t2723azTBMKBTq7LG1trW33upobe+IRCKkp0sSPB6vsqK8ckt5pbWirLREKBCQngjgLggSUEcoFNbV1tTV1jAM83Us1tvX33qrvdvWe7O1bXRsnPR0CUaZp6iutJZaTJVbKkxGQ2pCneAOGw2CBFRL5XBKLeZSi5lhmKWlJYdzuK29s8fe2z842D8wFAqHSQ9IHaFQaCzWGfR6i8lorSjTaYtSUlJIDwXwUBAkSBgsy65cc7pzTzA4NzDk6LHbBx3OwSGHrbdvYWFjfb6XkcGzmIx6nVavLSoxm4t1WpEok/RQAKuEIEECE4kyq6wVVdaKlZvRaHTQ4ewbGHQ4hr1jY57RUa93bHpmhuyQcSTJylKp8vJVKmWeQq8tMhTr9dqi9PR00nMBxAeCBMmDy+WWmE0l5ru2IV9cXPT5J9xer8cz6vZ6Pd5Rj3fUPzE5GQiQmvOB1CqlNDdHmpurVinzVSq1WpmvUinkMnw5HpIbnt+Q5NLS0tQqpVqlZGrvun8yEBj3+aenZ2ZmZ6dnZqdnZm5PT4+N+8Lh+fD8fDgcDs/PB4NzcZ9HJMoU8PkCgUAo4PP5fGWeIlsiyRKLJVniLLFYIslSyGW5OTlx/70A9EOQYIPKzcl5mNf9wNTthYWFSCQSiUYjkWj0X9HY17Hw/PwDf1DA53NSOTwuj8tN53G5PB4vIyMDy30A7gNBArgfJARg3WDrIAAAoAKCBAAAVECQAACACggSAABQAUECAAAqIEgAAEAFBAkAAKiAIAEAABUQJAAAoEIcdmrostke/0Eg4XjcXtIjAI08bu9Hn3xKegpYb3EJQRyC9Nnlls8utzz+4wBAEuiy2btsdtJTQELCR3YAAEAFBAkAAKiAIAEAABUQJAAAoAKCBAAAVECQAACACggSAABQAUECAAAqIEgAAEAFBAkAAKiAIAEAABUQJAAAoAKCBAAAVECQAACACggSAABQAUECAAAqIEgAAEAFBAkAAKiAIAEAABUQJAAAoAKCBAAAVPg3pdXlZSKkN84AAAAASUVORK5CYII=",
              fileName="modelica://ClaRa/figures/Components/LUVO.png"),
            Rectangle(
              extent={{220,52},{296,48}},
              lineColor={0,0,0},
              fillColor={170,255,255},
              fillPattern=FillPattern.Solid,
              lineThickness=0.5),
            Rectangle(
              extent={{218,-40},{296,-36}},
              lineColor={0,0,0},
              fillColor={170,255,255},
              fillPattern=FillPattern.Solid,
              lineThickness=0.5),
            Rectangle(
              extent={{196,-280},{198,-46}},
              lineColor={255,0,0},
              fillColor={255,0,0},
              fillPattern=FillPattern.Solid),
            Rectangle(
              extent={{130,-280},{132,-44}},
              lineColor={0,0,255},
              fillColor={0,0,255},
              fillPattern=FillPattern.Solid),
            Rectangle(
              extent={{-28,98},{32,2}},
              lineColor={0,0,0},
              lineThickness=1,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid),
            Line(
              points={{-28,98},{30,2},{30,4}},
              color={0,0,0},
              thickness=1),
            Text(
              extent={{18,94},{32,82}},
              lineColor={0,0,0},
              lineThickness=1,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid,
              textString="+",
              fontSize=16,
              textStyle={TextStyle.Bold}),
            Rectangle(
              extent={{-108,74},{-48,-22}},
              lineColor={0,0,0},
              lineThickness=1,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid),
            Line(
              points={{-108,74},{-50,-22},{-50,-20}},
              color={0,0,0},
              thickness=1),
            Text(
              extent={{-68,68},{-54,56}},
              lineColor={0,0,0},
              lineThickness=1,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid,
              textString="+",
              fontSize=16,
              textStyle={TextStyle.Bold}),
            Rectangle(
              extent={{-180,40},{-120,-56}},
              lineColor={0,0,0},
              lineThickness=1,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid),
            Line(
              points={{-180,42},{-122,-54},{-122,-52}},
              color={0,0,0},
              thickness=1),
            Text(
              extent={{-136,32},{-122,20}},
              lineColor={0,0,0},
              lineThickness=1,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid,
              textString="+",
              fontSize=16,
              textStyle={TextStyle.Bold}),
            Rectangle(
              extent={{-100,2},{100,-2}},
              lineColor={0,0,0},
              fillColor={170,255,255},
              fillPattern=FillPattern.Solid,
              lineThickness=0.5,
              origin={78,152},
              rotation=90),
            Rectangle(
              extent={{76,54},{112,50}},
              lineColor={0,0,0},
              fillColor={170,255,255},
              fillPattern=FillPattern.Solid,
              lineThickness=0.5),
            Rectangle(
              extent={{32,6},{114,2}},
              lineColor={0,0,0},
              fillColor={170,255,255},
              fillPattern=FillPattern.Solid,
              lineThickness=0.5),
            Rectangle(
              extent={{-48,-16},{114,-20}},
              lineColor={0,0,0},
              fillColor={170,255,255},
              fillPattern=FillPattern.Solid,
              lineThickness=0.5),
            Rectangle(
              extent={{-120,-42},{112,-46}},
              lineColor={0,0,0},
              fillColor={170,255,255},
              fillPattern=FillPattern.Solid,
              lineThickness=0.5),
            Rectangle(
              extent={{-78,2},{78,-2}},
              lineColor={0,0,0},
              fillColor={170,255,255},
              fillPattern=FillPattern.Solid,
              lineThickness=0.5,
              origin={-12,178},
              rotation=90),
            Rectangle(
              extent={{-91,2},{91,-2}},
              lineColor={0,0,0},
              fillColor={170,255,255},
              fillPattern=FillPattern.Solid,
              lineThickness=0.5,
              origin={-78,165},
              rotation=90),
            Rectangle(
              extent={{-108,2},{108,-2}},
              lineColor={0,0,0},
              fillColor={170,255,255},
              fillPattern=FillPattern.Solid,
              lineThickness=0.5,
              origin={-156,148},
              rotation=90),
            Rectangle(
              extent={{-1,-162},{1,162}},
              lineColor={255,0,0},
              fillColor={255,0,0},
              fillPattern=FillPattern.Solid,
              origin={34,-97},
              rotation=90),
            Rectangle(
              extent={{16,-96},{18,4}},
              lineColor={255,0,0},
              fillColor={255,0,0},
              fillPattern=FillPattern.Solid),
            Rectangle(
              extent={{-62,-96},{-60,-22}},
              lineColor={255,0,0},
              fillColor={255,0,0},
              fillPattern=FillPattern.Solid),
            Rectangle(
              extent={{-128,-96},{-126,-56}},
              lineColor={255,0,0},
              fillColor={255,0,0},
              fillPattern=FillPattern.Solid),
            Rectangle(
              extent={{-0.5,-133.5},{0.5,133.5}},
              lineColor={0,0,255},
              fillColor={0,0,255},
              fillPattern=FillPattern.Solid,
              origin={-2.5,-134.5},
              rotation=90),
            Rectangle(
              extent={{-2,-134},{0,2}},
              lineColor={0,0,255},
              fillColor={0,0,255},
              fillPattern=FillPattern.Solid),
            Rectangle(
              extent={{-78,-134},{-76,-22}},
              lineColor={0,0,255},
              fillColor={0,0,255},
              fillPattern=FillPattern.Solid),
            Rectangle(
              extent={{-134,-134},{-136,-56}},
              lineColor={0,0,255},
              fillColor={0,0,255},
              fillPattern=FillPattern.Solid),
            Ellipse(
              extent={{-274,208},{-222,156}},
              lineColor={255,255,0},
              fillColor={255,255,0},
              fillPattern=FillPattern.Solid),
            Line(
              points={{-10,0},{10,0}},
              color={255,255,0},
              smooth=Smooth.None,
              thickness=1,
              origin={-248,142},
              rotation=90),
            Line(
              points={{-10,0},{10,0}},
              color={255,255,0},
              smooth=Smooth.None,
              thickness=1,
              origin={-248,224},
              rotation=90),
            Line(
              points={{-216,180},{-196,180}},
              color={255,255,0},
              smooth=Smooth.None,
              thickness=1),
            Line(
              points={{-298,182},{-278,182}},
              color={255,255,0},
              smooth=Smooth.None,
              thickness=1),
            Line(
              points={{-8,-8},{6,6}},
              color={255,255,0},
              smooth=Smooth.None,
              thickness=1,
              origin={-282,210},
              rotation=90),
            Line(
              points={{-8,-8},{6,6}},
              color={255,255,0},
              smooth=Smooth.None,
              thickness=1,
              origin={-222,152},
              rotation=90),
            Line(
              points={{-8,-8},{6,6}},
              color={255,255,0},
              smooth=Smooth.None,
              thickness=1,
              origin={-216,210},
              rotation=180),
            Line(
              points={{-8,-8},{6,6}},
              color={255,255,0},
              smooth=Smooth.None,
              thickness=1,
              origin={-280,150},
              rotation=180)}),Diagram(coordinateSystem(preserveAspectRatio=false,
              extent={{-320,-280},{300,260}})));
    end S1_batterie;

    model N1_Batterie
      package MediumA =Buildings.Media.Air "Medium model for Air";
      package MediumW = Buildings.Media.Water "Medium model for water";
        parameter Modelica.SIunits.MassFlowRate mFlowMun=8.61
        "Nominal mass flow rate for Munters HVACs and batteries networks";
      parameter Modelica.SIunits.MassFlowRate mAirBat_E_N1=4.39;
      parameter Modelica.SIunits.MassFlowRate mAirBat_W_N1=1.94;
      parameter Modelica.SIunits.MassFlowRate mAirBat_N1 = mAirBat_W_N1 + mAirBat_E_N1;
      parameter Modelica.SIunits.MassFlowRate mWatBat_E_N1=0.201;
      parameter Modelica.SIunits.MassFlowRate mWatBat_W_N1=0.082;
      parameter Modelica.SIunits.MassFlowRate mWatBat_N1 = mWatBat_W_N1 + mWatBat_E_N1;
      parameter Modelica.SIunits.MassFlowRate mHotDeck_N1=0.40;
    parameter Modelica.SIunits.MassFlowRate mAirFlow_N1=3.9;
      parameter Modelica.SIunits.Pressure dpThrWayVal_nominal = 5000
        "Pressure difference of three-way valve";
      N1 n1_1(redeclare package Medium1 = MediumA,
        mWat=mHotDeck_N1,
        redeclare package Medium2 = MediumA,
        redeclare package Medium = MediumW,
        m_flow_nominal=mHotDeck_N1,
        m1_flow_nominal=mAirFlow_N1,
        m2_flow_nominal=mAirFlow_N1,
        mAir=mAirFlow_N1)
        annotation (Placement(transformation(extent={{88,-16},{148,44}})));
    Buildings.Fluid.FixedResistances.Junction splVal14(
      redeclare package Medium = MediumW,
      dp_nominal={0,0,0},
      m_flow_nominal={mHotDeck_N1,-(mWatBat_N1 + mHotDeck_N1),mWatBat_N1})
      "Flow splitter" annotation (Placement(transformation(
          extent={{-10,-10},{10,10}},
          rotation=270,
          origin={156,-80})));
    Buildings.Fluid.FixedResistances.Junction splVal15(
      redeclare package Medium = MediumW,
      dp_nominal={0,0,0},
      m_flow_nominal={mWatBat_N1 + mHotDeck_N1,-mHotDeck_N1,-mWatBat_N1})
      "Flow splitter" annotation (Placement(transformation(
          extent={{10,-10},{-10,10}},
          rotation=270,
          origin={78,0})));
      FBM.Examples.BaseClasses.BaseClassesVentilation.VAVBranch EastN1(
        redeclare package MediumA = MediumA,
        redeclare package MediumW = MediumW,
        m_flow_Wat=mWatBat_E_N1,
        m_flow_nominal=mAirBat_E_N1,
        PuissanceBatterie=7145,
        PressureDropBatterieAir(displayUnit="Pa") = 25,
        PressureDropBatterieWatter(displayUnit="Pa") = 8000)
        "South-facing thermal zone"
        annotation (Placement(transformation(extent={{-90,32},{-132,74}})));
      FBM.Examples.BaseClasses.BaseClassesVentilation.VAVBranch WestN1(
        redeclare package MediumA = MediumA,
        redeclare package MediumW = MediumW,
        m_flow_Wat=mWatBat_W_N1,
        m_flow_nominal=mAirBat_W_N1,
        PuissanceBatterie=2903,
        PressureDropBatterieAir(displayUnit="Pa") = 15,
        PressureDropBatterieWatter(displayUnit="Pa") = 4000)
        "South-facing thermal zone"
        annotation (Placement(transformation(extent={{-24,32},{-66,74}})));
    Buildings.Fluid.FixedResistances.Junction splVal16(
      redeclare package Medium = MediumA,
      m_flow_nominal={mAirBat_N1,-(mAirBat_E_N1),-mAirBat_W_N1},
      dp_nominal={10,10,10}) "Flow splitter" annotation (Placement(
          transformation(
          extent={{10,10},{-10,-10}},
          rotation=0,
          origin={-46,16})));
      Modelica.Blocks.Interaction.Show.RealValue RealVal19
        annotation (Placement(transformation(extent={{212,-94},{250,-70}})));
      Modelica.Blocks.Interaction.Show.RealValue RealVal20(significantDigits=4)
        annotation (Placement(transformation(extent={{212,-108},{250,-84}})));
      Modelica.Fluid.Interfaces.FluidPort_a HotWater(redeclare package Medium =
            MediumW)
        annotation (Placement(transformation(extent={{72,-290},{92,-270}}),
            iconTransformation(extent={{172,-296},{192,-276}})));
      Modelica.Fluid.Interfaces.FluidPort_b ColdWater(redeclare package Medium =
            MediumW)
        annotation (Placement(transformation(extent={{144,-290},{164,-270}}),
            iconTransformation(extent={{112,-296},{132,-276}})));
      Buildings.BoundaryConditions.WeatherData.Bus weaBus annotation (Placement(
            transformation(extent={{-240,180},{-200,220}}), iconTransformation(
              extent={{-260,172},{-240,192}})));
      Modelica.Fluid.Interfaces.FluidPort_a FreshAir(redeclare package Medium =
            MediumA)
        annotation (Placement(transformation(extent={{270,-48},{290,-28}})));
      Modelica.Fluid.Interfaces.FluidPort_b ExhaustAit(redeclare package Medium =
            MediumA)
        annotation (Placement(transformation(extent={{270,28},{290,48}})));
      Modelica.Fluid.Interfaces.FluidPort_a ExtractAir(redeclare package Medium =
            MediumA)
        annotation (Placement(transformation(extent={{68,230},{88,250}}),
            iconTransformation(extent={{68,230},{88,250}})));
      Modelica.Blocks.Interfaces.RealInput TRoom[3]
        annotation (Placement(transformation(extent={{320,160},{280,200}})));
      Modelica.Fluid.Interfaces.FluidPort_b WestN1_Out(redeclare package Medium =
            MediumA)
        annotation (Placement(transformation(extent={{-56,230},{-36,250}})));
      Modelica.Fluid.Interfaces.FluidPort_b EastN1_Out(redeclare package Medium =
            MediumA)
        annotation (Placement(transformation(extent={{-126,230},{-106,250}})));
      Modelica.Blocks.Routing.DeMultiplex3 deMultiplex3_1 annotation (Placement(
            transformation(
            extent={{-10,-10},{10,10}},
            rotation=180,
            origin={250,180})));
      Buildings.Fluid.Sensors.TemperatureTwoPort T18(redeclare package Medium =
          MediumW, m_flow_nominal=mHotDeck_N1)
      annotation (Placement(transformation(extent={{-10,-10},{10,10}},
          rotation=90,
          origin={78,-28})));
    equation
      connect(splVal16.port_3,WestN1. port_a) annotation (Line(
          points={{-46,26},{-46,42.36},{-45,42.36}},
          color={85,255,85},
          thickness=0.5));
      connect(splVal16.port_2,EastN1. port_a) annotation (Line(
          points={{-56,16},{-112,16},{-112,42.36},{-111,42.36}},
          color={85,255,85},
          thickness=0.5));
      connect(EastN1.yDam,n1_1. u[1]) annotation (Line(
          points={{-133.4,46},{-140,46},{-140,78},{134.8,78},{134.8,46.1}},
          color={0,0,127},
          pattern=LinePattern.Dash));
      connect(WestN1.yDam,n1_1. u[2]) annotation (Line(
          points={{-67.4,46},{-68,46},{-68,78},{134.8,78},{134.8,43.1}},
          color={0,0,127},
          pattern=LinePattern.Dash));
      connect(n1_1.Auxilaire,RealVal19. numberPort) annotation (Line(points={{151,3.2},
              {200,3.2},{200,4},{200,-82},{209.15,-82}},          color={0,0,
              127}));
      connect(n1_1.EHotDeck,RealVal20. numberPort) annotation (Line(points={{151,-1},
              {200,-1},{200,-96},{209.15,-96}},               color={0,0,127}));
      connect(splVal15.port_2, n1_1.port_a) annotation (Line(points={{78,10},
            {78,10},{78,14},{88,14}},
                                color={0,127,255}));
      connect(ColdWater,ColdWater)  annotation (Line(points={{154,-280},{154,
              -280}},       color={0,127,255}));
      connect(n1_1.port_b1, ExhaustAit) annotation (Line(points={{148,32},{216,32},{
              216,38},{280,38}}, color={0,127,255}));
      connect(n1_1.port_a2, FreshAir) annotation (Line(points={{148,-4},{214,-4},{214,
              -38},{280,-38}}, color={0,127,255}));
      connect(ExtractAir, n1_1.port_a1) annotation (Line(points={{78,240},{40,
              240},{40,32},{88,32}},
                               color={0,127,255}));
      connect(weaBus, n1_1.weaBus) annotation (Line(
          points={{-220,200},{70,200},{70,36.8},{88,36.8}},
          color={255,204,51},
          thickness=0.5), Text(
          string="%first",
          index=-1,
          extent={{-6,3},{-6,3}}));
      connect(EastN1_Out, EastN1.port_b) annotation (Line(points={{-116,240},{
              -116,74},{-111,74}}, color={0,127,255}));
      connect(WestN1_Out, WestN1.port_b) annotation (Line(points={{-46,240},{
              -46,240},{-46,160},{-46,74},{-45,74}}, color={0,127,255}));
      connect(splVal14.port_2, ColdWater) annotation (Line(points={{156,-90},
            {156,-280},{154,-280}},  color={0,127,255}));
      connect(deMultiplex3_1.u, TRoom) annotation (Line(points={{262,180},{276,
              180},{276,180},{300,180}}, color={0,0,127}));
      connect(deMultiplex3_1.y2[1], EastN1.TRoo) annotation (Line(points={{239,
              180},{-76,180},{-76,60},{-87.2,60}}, color={0,0,127}));
      connect(WestN1.TRoo, deMultiplex3_1.y1[1]) annotation (Line(points={{-21.2,
              60},{22,60},{22,173},{239,173}},       color={0,0,127}));
      connect(n1_1.controlBus, WestN1.controlBus) annotation (Line(
          points={{138.4,44},{58,44},{58,42.08},{-24,42.08}},
          color={255,204,51},
          thickness=0.5));
      connect(n1_1.controlBus, EastN1.controlBus) annotation (Line(
          points={{138.4,44},{26,44},{26,42.08},{-90,42.08}},
          color={255,204,51},
          thickness=0.5));
      connect(TRoom, n1_1.TRoom) annotation (Line(points={{300,180},{66,180},{
              66,-14.8},{85.6,-14.8}}, color={0,0,127}));
      connect(splVal15.port_3, WestN1.port_InTer) annotation (Line(points={{68,
            1.77636e-015},{-62,1.77636e-015},{-62,49.08},{-59.56,49.08}},
                                                          color={0,127,255}));
      connect(splVal15.port_3, EastN1.port_InTer) annotation (Line(points={{68,
            1.77636e-015},{-130,1.77636e-015},{-130,49.08},{-125.56,49.08}},
                                                             color={0,127,255}));
      connect(splVal14.port_3, WestN1.port_OffTer) annotation (Line(points={{146,-80},
            {-66,-80},{-66,54.68},{-59.28,54.68}},            color={0,127,255}));
      connect(splVal14.port_3, EastN1.port_OffTer) annotation (Line(points={{146,-80},
            {-134,-80},{-134,54.68},{-125.28,54.68}},            color={0,127,
              255}));
    connect(n1_1.port_b2, splVal16.port_1) annotation (Line(points={{88,-4},{
            26,-4},{26,16},{-36,16}}, color={0,127,255}));
    connect(splVal15.port_1, T18.port_b) annotation (Line(points={{78,-10},{
            78,-10},{78,-18}}, color={0,127,255}));
    connect(T18.port_a, HotWater) annotation (Line(points={{78,-38},{82,-38},
            {82,-280}}, color={0,127,255}));
    connect(n1_1.port_b, splVal14.port_1) annotation (Line(points={{148,14},{
            154,14},{154,-70},{156,-70}}, color={0,127,255}));
      annotation (Icon(coordinateSystem(preserveAspectRatio=false, extent={{-300,-280},
                {280,240}}), graphics={Rectangle(
              extent={{-298,240},{282,-280}},
              lineColor={0,128,255},
              fillColor={0,128,255},
              fillPattern=FillPattern.Solid),
                                 Bitmap(
              extent={{94,70},{204,-68}},
              imageSource=
                  ""
                   +
                  "09RYkI8NF+A/ECT4r8KC/Nd//rOjLx16/8OPz318ntrltGshHJ4Ph+fd3rXaMf33f3hrjR454YgyM59vqN/9XAPWFcE3IEjwTRJJ1suHD+zft+di8+Wz7//dOzpGeiJIEmqlck/T888+8xTWk8E9IUhwbzwet3FXfUP9jus3W8/+7YPO7h7SE0ECKyst2fuDF2qqrCw2/oH/D0GC+2FZdmtN9daaantf/4efXGi5ei0SiZIeChJGBo+3fVvdc7t2mgzFpGeBBIAgwUMxGw1mo+HVHx1tbvnHRxcuDg45SE8EVCvWaxt27nh6+5P8J54gPQskDAQJHgGfz2/cVd+4q35wyPHGb0+OuD2kJwLqFOSrf/H6cV2RhvQgkHjweS6shl6nLbGYSE8BNCqxmFAjWB0ECQAAqIAgAQAAFRAkAACgAoIEAABUQJAAAIAKCBIQQ3aDbbgn/FGAIAQJiDHodVfOnztx/FhdbU1qKpbEEZOamlpXW3Pi+LEr588Z9DgcD4jBqwCQpNdp9Trtj48emQwEWq5+ce2L61/dah/3+UnPtSHkKeSVWyq2ba3dvq1uIx8AD/RAkIAKuTk5e5t2723azTBMKBTq7LG1trW33upobe+IRCKkp0sSPB6vsqK8ckt5pbWirLREKBCQngjgLggSUEcoFNbV1tTV1jAM83Us1tvX33qrvdvWe7O1bXRsnPR0CUaZp6iutJZaTJVbKkxGQ2pCneAOGw2CBFRL5XBKLeZSi5lhmKWlJYdzuK29s8fe2z842D8wFAqHSQ9IHaFQaCzWGfR6i8lorSjTaYtSUlJIDwXwUBAkSBgsy65cc7pzTzA4NzDk6LHbBx3OwSGHrbdvYWFjfb6XkcGzmIx6nVavLSoxm4t1WpEok/RQAKuEIEECE4kyq6wVVdaKlZvRaHTQ4ewbGHQ4hr1jY57RUa93bHpmhuyQcSTJylKp8vJVKmWeQq8tMhTr9dqi9PR00nMBxAeCBMmDy+WWmE0l5ru2IV9cXPT5J9xer8cz6vZ6Pd5Rj3fUPzE5GQiQmvOB1CqlNDdHmpurVinzVSq1WpmvUinkMnw5HpIbnt+Q5NLS0tQqpVqlZGrvun8yEBj3+aenZ2ZmZ6dnZqdnZm5PT4+N+8Lh+fD8fDgcDs/PB4NzcZ9HJMoU8PkCgUAo4PP5fGWeIlsiyRKLJVniLLFYIslSyGW5OTlx/70A9EOQYIPKzcl5mNf9wNTthYWFSCQSiUYjkWj0X9HY17Hw/PwDf1DA53NSOTwuj8tN53G5PB4vIyMDy30A7gNBArgfJARg3WDrIAAAoAKCBAAAVECQAACACggSAABQAUECAAAqIEgAAEAFBAkAAKiAIAEAABUQJAAAoEIcdmrostke/0Eg4XjcXtIjAI08bu9Hn3xKegpYb3EJQRyC9Nnlls8utzz+4wBAEuiy2btsdtJTQELCR3YAAEAFBAkAAKiAIAEAABUQJAAAoAKCBAAAVECQAACACggSAABQAUECAAAqIEgAAEAFBAkAAKiAIAEAABUQJAAAoAKCBAAAVECQAACACggSAABQAUECAAAqIEgAAEAFBAkAAKiAIAEAABUQJAAAoAKCBAAAVPg3pdXlZSKkN84AAAAASUVORK5CYII=",
              fileName="modelica://ClaRa/figures/Components/LUVO.png"),
            Rectangle(
              extent={{202,40},{278,36}},
              lineColor={0,0,0},
              fillColor={170,255,255},
              fillPattern=FillPattern.Solid,
              lineThickness=0.5),
            Rectangle(
              extent={{202,-44},{280,-40}},
              lineColor={0,0,0},
              fillColor={170,255,255},
              fillPattern=FillPattern.Solid,
              lineThickness=0.5),
            Rectangle(
              extent={{-96,2},{96,-2}},
              lineColor={0,0,0},
              fillColor={170,255,255},
              fillPattern=FillPattern.Solid,
              lineThickness=0.5,
              origin={78,140},
              rotation=90),
            Rectangle(
              extent={{76,48},{98,44}},
              lineColor={0,0,0},
              fillColor={170,255,255},
              fillPattern=FillPattern.Solid,
              lineThickness=0.5),
            Rectangle(
              extent={{-60,70},{0,-26}},
              lineColor={0,0,0},
              lineThickness=1,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid),
            Line(
              points={{-60,70},{-2,-26},{-2,-24}},
              color={0,0,0},
              thickness=1),
            Text(
              extent={{-14,66},{0,54}},
              lineColor={0,0,0},
              lineThickness=1,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid,
              textString="+",
              fontSize=16,
              textStyle={TextStyle.Bold}),
            Rectangle(
              extent={{-134,46},{-74,-50}},
              lineColor={0,0,0},
              lineThickness=1,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid),
            Line(
              points={{-134,46},{-76,-50},{-76,-48}},
              color={0,0,0},
              thickness=1),
            Text(
              extent={{-90,40},{-76,28}},
              lineColor={0,0,0},
              lineThickness=1,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid,
              textString="+",
              fontSize=16,
              textStyle={TextStyle.Bold}),
            Rectangle(
              extent={{-76,-48},{96,-44}},
              lineColor={0,0,0},
              fillColor={170,255,255},
              fillPattern=FillPattern.Solid,
              lineThickness=0.5),
            Rectangle(
              extent={{-2,-26},{96,-22}},
              lineColor={0,0,0},
              fillColor={170,255,255},
              fillPattern=FillPattern.Solid,
              lineThickness=0.5),
            Rectangle(
              extent={{-96,2},{96,-2}},
              lineColor={0,0,0},
              fillColor={170,255,255},
              fillPattern=FillPattern.Solid,
              lineThickness=0.5,
              origin={-118,142},
              rotation=90),
            Rectangle(
              extent={{-84,2},{84,-2}},
              lineColor={0,0,0},
              fillColor={170,255,255},
              fillPattern=FillPattern.Solid,
              lineThickness=0.5,
              origin={-46,154},
              rotation=90),
            Rectangle(
              extent={{182,-280},{184,-54}},
              lineColor={255,0,0},
              fillColor={255,0,0},
              fillPattern=FillPattern.Solid),
            Rectangle(
              extent={{-1,-135},{1,135}},
              lineColor={255,0,0},
              fillColor={255,0,0},
              fillPattern=FillPattern.Solid,
              origin={47,-105},
              rotation=90),
            Rectangle(
              extent={{-14,-104},{-12,-26}},
              lineColor={255,0,0},
              fillColor={255,0,0},
              fillPattern=FillPattern.Solid),
            Rectangle(
              extent={{-88,-104},{-86,-50}},
              lineColor={255,0,0},
              fillColor={255,0,0},
              fillPattern=FillPattern.Solid),
            Rectangle(
              extent={{120,-280},{122,-52}},
              lineColor={0,0,255},
              fillColor={0,0,255},
              fillPattern=FillPattern.Solid),
            Rectangle(
              extent={{1,-117},{-1,117}},
              lineColor={0,0,255},
              fillColor={0,0,255},
              fillPattern=FillPattern.Solid,
              origin={3,-121},
              rotation=90),
            Rectangle(
              extent={{-1,-36},{1,36}},
              lineColor={0,0,255},
              fillColor={0,0,255},
              fillPattern=FillPattern.Solid,
              origin={-113,-86},
              rotation=180),
            Rectangle(
              extent={{-1,-47},{1,47}},
              lineColor={0,0,255},
              fillColor={0,0,255},
              fillPattern=FillPattern.Solid,
              origin={-35,-73},
              rotation=180),
            Text(
              extent={{106,78},{194,58}},
              lineColor={0,0,0},
              lineThickness=1,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid,
              textString="HVAC system"),
            Text(
              extent={{204,236},{254,176}},
              lineColor={0,0,0},
              lineThickness=1,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid,
              textStyle={TextStyle.Bold,TextStyle.UnderLine},
              textString="N1"),
            Ellipse(
              extent={{-274,208},{-222,156}},
              lineColor={255,255,0},
              fillColor={255,255,0},
              fillPattern=FillPattern.Solid),
            Line(
              points={{-10,0},{10,0}},
              color={255,255,0},
              smooth=Smooth.None,
              thickness=1,
              origin={-248,142},
              rotation=90),
            Line(
              points={{-10,0},{10,0}},
              color={255,255,0},
              smooth=Smooth.None,
              thickness=1,
              origin={-248,224},
              rotation=90),
            Line(
              points={{-216,180},{-196,180}},
              color={255,255,0},
              smooth=Smooth.None,
              thickness=1),
            Line(
              points={{-298,182},{-278,182}},
              color={255,255,0},
              smooth=Smooth.None,
              thickness=1),
            Line(
              points={{-8,-8},{6,6}},
              color={255,255,0},
              smooth=Smooth.None,
              thickness=1,
              origin={-282,210},
              rotation=90),
            Line(
              points={{-8,-8},{6,6}},
              color={255,255,0},
              smooth=Smooth.None,
              thickness=1,
              origin={-222,152},
              rotation=90),
            Line(
              points={{-8,-8},{6,6}},
              color={255,255,0},
              smooth=Smooth.None,
              thickness=1,
              origin={-216,210},
              rotation=180),
            Line(
              points={{-8,-8},{6,6}},
              color={255,255,0},
              smooth=Smooth.None,
              thickness=1,
              origin={-280,150},
              rotation=180)}),Diagram(coordinateSystem(preserveAspectRatio=false,
              extent={{-300,-280},{280,240}})));
    end N1_Batterie;

    model N3_Batterie
       package MediumA =Buildings.Media.Air "Medium model for Air";
      package MediumW = Buildings.Media.Water "Medium model for water";
      parameter Modelica.SIunits.MassFlowRate mAirBat_S_N3=0.90;
      parameter Modelica.SIunits.MassFlowRate mAirBat_E_N3=0.29;
      parameter Modelica.SIunits.MassFlowRate mAirBat_N_N3=0.87;
      parameter Modelica.SIunits.MassFlowRate mAirBat_W_N3=0.80;
      parameter Modelica.SIunits.MassFlowRate mAirBat_N3 = mAirBat_W_N3 + mAirBat_N_N3 + mAirBat_E_N3 + mAirBat_S_N3;
       parameter Modelica.SIunits.MassFlowRate mHotDeck_N3=0.83;
    parameter Modelica.SIunits.MassFlowRate mAirFlow_N3=2.83;
      parameter Modelica.SIunits.Pressure dpThrWayVal_nominal = 5000;
    Buildings.Fluid.FixedResistances.Junction splVal33(
      redeclare package Medium = MediumA,
      m_flow_nominal={mAirBat_N3,-(mAirBat_W_N3 + mAirBat_N_N3 + mAirBat_E_N3),
          -mAirBat_S_N3},
      dp_nominal={10,10,10}) "Flow splitter" annotation (Placement(
          transformation(
          extent={{-10,10},{10,-10}},
          rotation=0,
          origin={0,-24})));
      Modelica.Fluid.Interfaces.FluidPort_a HotWater(redeclare package Medium =
            MediumW)
        annotation (Placement(transformation(extent={{-242,-310},{-222,-290}}),
            iconTransformation(extent={{-242,-310},{-222,-290}})));
      Modelica.Fluid.Interfaces.FluidPort_b ColdWater(redeclare package Medium =
            MediumW)
        annotation (Placement(transformation(extent={{-172,-310},{-152,-290}}),
            iconTransformation(extent={{-172,-310},{-152,-290}})));
      Buildings.BoundaryConditions.WeatherData.Bus weaBus annotation (Placement(
            transformation(extent={{-310,246},{-270,286}}), iconTransformation(
              extent={{-268,226},{-248,246}})));
      Modelica.Blocks.Interfaces.RealInput TRoom[3]
        annotation (Placement(transformation(extent={{380,258},{340,298}})));
      Modelica.Fluid.Interfaces.FluidPort_a ExtractAir(redeclare package Medium =
            MediumA)
        annotation (Placement(transformation(extent={{-98,308},{-78,328}})));
      Modelica.Fluid.Interfaces.FluidPort_a FreshAir(redeclare package Medium =
            MediumA)
        annotation (Placement(transformation(extent={{-370,-48},{-350,-28}})));
      Modelica.Fluid.Interfaces.FluidPort_b ExhaustAit(redeclare package Medium =
            MediumA)
        annotation (Placement(transformation(extent={{-370,28},{-350,48}})));
      Modelica.Blocks.Interaction.Show.RealValue RealVal17(significantDigits=4)
        annotation (Placement(transformation(extent={{-146,-8},{-108,16}})));
      Modelica.Blocks.Interaction.Show.RealValue RealVal18(significantDigits=4)
        annotation (Placement(transformation(extent={{-146,-24},{-108,0}})));
      Modelica.Fluid.Interfaces.FluidPort_b EastN3_Out(redeclare package Medium =
            MediumA)
        annotation (Placement(transformation(extent={{126,310},{146,330}})));
      Modelica.Fluid.Interfaces.FluidPort_b WestN3_Out(redeclare package Medium =
            MediumA)
        annotation (Placement(transformation(extent={{238,310},{258,330}})));
      Modelica.Blocks.Routing.DeMultiplex3 deMultiplex3_1 annotation (Placement(
            transformation(
            extent={{-10,-10},{10,10}},
            rotation=180,
            origin={288,122})));
      N3 n3_1(
        redeclare package Medium1 = MediumA,
        redeclare package Medium2 = MediumA,
        m1_flow_nominal=mAirFlow_N3,
        m2_flow_nominal=mAirFlow_N3,
        redeclare package Medium = MediumW,
        m_flow_nominal=mHotDeck_N3,
        mAir=mAirFlow_N3,
        mWat=mHotDeck_N3)
              annotation (Placement(transformation(extent={{-218,-34},{-174,12}})));
      BranchVAV N3South(redeclare package MediumA = MediumA, m_flow_nominal=
            mAirBat_S_N3)
        annotation (Placement(transformation(extent={{16,28},{-14,58}})));
    Buildings.Fluid.FixedResistances.Junction splVal1(
      redeclare package Medium = MediumA,
      m_flow_nominal={(mAirBat_W_N3 + mAirBat_N_N3 + mAirBat_E_N3),
          mAirBat_W_N3 + mAirBat_N_N3/2,mAirBat_E_N3 + mAirBat_N_N3/2},
      dp_nominal={10,10,10}) "Flow splitter" annotation (Placement(
          transformation(
          extent={{-10,10},{10,-10}},
          rotation=0,
          origin={136,-24})));
      BranchVAV N3East(redeclare package MediumA = MediumA, m_flow_nominal=
            mAirBat_E_N3 + mAirBat_N_N3/2)
        annotation (Placement(transformation(extent={{152,28},{122,58}})));
      BranchVAV N3West(redeclare package MediumA = MediumA, m_flow_nominal=
            mAirBat_W_N3 + mAirBat_N_N3/2)
        annotation (Placement(transformation(extent={{260,28},{230,58}})));
      Modelica.Fluid.Interfaces.FluidPort_b SouthN3_Out(
                                                       redeclare package Medium =
            MediumA)
        annotation (Placement(transformation(extent={{-8,310},{12,330}})));
    Buildings.Utilities.Math.Average ave(nin=3)
      annotation (Placement(transformation(extent={{-100,60},{-120,80}})));
    Buildings.Utilities.Math.Min min(nin=3)
      annotation (Placement(transformation(extent={{-100,100},{-120,120}})));
      Buildings.Fluid.Sensors.TemperatureTwoPort T18(redeclare package Medium =
          MediumW, m_flow_nominal=mHotDeck_N3)
      annotation (Placement(transformation(extent={{-10,-10},{10,10}},
          rotation=90,
          origin={-226,-46})));
    equation
      connect(deMultiplex3_1.u, TRoom) annotation (Line(points={{300,122},{308,122},
              {308,258},{308,278},{360,278}},      color={0,0,127}));
      connect(weaBus, n3_1.weaBus) annotation (Line(
          points={{-290,266},{-228,266},{-228,5.56},{-217.56,5.56}},
          color={255,204,51},
          thickness=0.5), Text(
          string="%first",
          index=-1,
          extent={{-6,3},{-6,3}}));
      connect(n3_1.port_a2, FreshAir) annotation (Line(points={{-174,-24.8},{-172,-24.8},
              {-172,-38},{-360,-38}}, color={0,127,255}));
      connect(n3_1.port_b1, ExhaustAit) annotation (Line(points={{-174,2.8},{-165,2.8},
              {-165,38},{-360,38}}, color={0,127,255}));
      connect(n3_1.port_a1, ExtractAir) annotation (Line(points={{-218,2.8},{-236,2.8},
              {-236,216},{-88,216},{-88,318}}, color={0,127,255}));
      connect(n3_1.Auxilaire, RealVal17.numberPort) annotation (Line(points={{-171.8,
              -14.22},{-157.9,-14.22},{-157.9,4},{-148.85,4}}, color={0,0,127}));
      connect(n3_1.EHotDeck, RealVal18.numberPort) annotation (Line(points={{-171.8,
              -17.44},{-156.9,-17.44},{-156.9,-12},{-148.85,-12}}, color={0,0,127}));
      connect(splVal33.port_2, splVal1.port_1)
        annotation (Line(points={{10,-24},{68,-24},{126,-24}}, color={0,127,255}));
      connect(N3South.port_a, splVal33.port_3) annotation (Line(points={{1,35.4},{1,
              10.7},{0,10.7},{0,-14}}, color={0,127,255}));
      connect(N3East.port_a, splVal1.port_3) annotation (Line(points={{137,35.4},{137,
              11.7},{136,11.7},{136,-14}}, color={0,127,255}));
      connect(splVal1.port_2, N3West.port_a) annotation (Line(points={{146,-24},{246,
              -24},{246,35.4},{245,35.4}}, color={0,127,255}));
      connect(n3_1.controlBus, N3South.controlBus) annotation (Line(
          points={{-218,-4.1},{-228,-4.1},{-228,33},{9.8,33}},
          color={255,204,51},
          thickness=0.5));
      connect(n3_1.controlBus, N3East.controlBus) annotation (Line(
          points={{-218,-4.1},{-228,-4.1},{-228,33},{145.8,33}},
          color={255,204,51},
          thickness=0.5));
      connect(N3West.controlBus, n3_1.controlBus) annotation (Line(
          points={{253.8,33},{-226.9,33},{-226.9,-4.1},{-218,-4.1}},
          color={255,204,51},
          thickness=0.5));
      connect(N3South.TRoo, deMultiplex3_1.y3[1]) annotation (Line(points={{18,48},{
              26,48},{26,129},{277,129}}, color={0,0,127}));
      connect(N3East.TRoo, deMultiplex3_1.y2[1]) annotation (Line(points={{154,48},{
              166,48},{166,122},{277,122}}, color={0,0,127}));
      connect(deMultiplex3_1.y1[1], N3West.TRoo) annotation (Line(points={{277,115},
              {277,112},{262,112},{262,48}}, color={0,0,127}));
      connect(N3South.port_b, SouthN3_Out)
        annotation (Line(points={{1,58},{2,58},{2,320}}, color={0,127,255}));
      connect(N3East.port_b, EastN3_Out) annotation (Line(points={{137,58},{137,187},
              {136,187},{136,320}}, color={0,127,255}));
      connect(N3West.port_b, WestN3_Out) annotation (Line(points={{245,58},{246,58},
              {246,320},{248,320}}, color={0,127,255}));
      connect(N3South.yDam, n3_1.u[1]) annotation (Line(points={{-15,38},{-94,
              38},{-94,-4.1},{-173.56,-4.1}},color={0,0,127}));
      connect(N3East.yDam, n3_1.u[2]) annotation (Line(points={{121,38},{-94,38},{-94,
              -4.1},{-173.56,-4.1}}, color={0,0,127}));
      connect(N3West.yDam, n3_1.u[3]) annotation (Line(points={{229,38},{28,
              38},{28,-4.1},{-173.56,-4.1}}, color={0,0,127}));
      connect(n3_1.TRooMin, min.y) annotation (Line(points={{-193.36,12.92},{-193.36,
              109.46},{-121,109.46},{-121,110}}, color={0,0,127}));
      connect(n3_1.TRooAve, ave.y) annotation (Line(points={{-182.8,12.92},{-182.4,12.92},
              {-182.4,70},{-121,70}}, color={0,0,127}));
      connect(min.u, TRoom) annotation (Line(points={{-98,110},{130,110},{130,278},
              {360,278}}, color={0,0,127}));
      connect(ave.u, TRoom) annotation (Line(points={{-98,70},{128,70},{128,278},{
              360,278}}, color={0,0,127}));
    connect(n3_1.port_b2, splVal33.port_1) annotation (Line(points={{-218,
            -24.8},{-112,-24.8},{-112,-24},{-10,-24}}, color={0,127,255}));
    connect(T18.port_b, n3_1.port_a) annotation (Line(points={{-226,-36},{
            -226,-11},{-218,-11}}, color={0,127,255}));
    connect(T18.port_a, HotWater) annotation (Line(points={{-226,-56},{-230,
            -56},{-230,-300},{-232,-300}}, color={0,127,255}));
    connect(n3_1.port_b, ColdWater) annotation (Line(points={{-174,-11},{-174,
            -155.5},{-162,-155.5},{-162,-300}}, color={0,127,255}));
      annotation (Icon(coordinateSystem(preserveAspectRatio=false, extent={{-360,-300},
                {340,320}}), graphics={Rectangle(
              extent={{-358,318},{342,-302}},
              lineColor={0,128,255},
              fillColor={0,128,255},
              fillPattern=FillPattern.Solid),
                                 Bitmap(
              extent={{-272,66},{-136,-84}},
              imageSource=
                  ""
                   +
                  "09RYkI8NF+A/ECT4r8KC/Nd//rOjLx16/8OPz318ntrltGshHJ4Ph+fd3rXaMf33f3hrjR454YgyM59vqN/9XAPWFcE3IEjwTRJJ1suHD+zft+di8+Wz7//dOzpGeiJIEmqlck/T888+8xTWk8E9IUhwbzwet3FXfUP9jus3W8/+7YPO7h7SE0ECKyst2fuDF2qqrCw2/oH/D0GC+2FZdmtN9daaantf/4efXGi5ei0SiZIeChJGBo+3fVvdc7t2mgzFpGeBBIAgwUMxGw1mo+HVHx1tbvnHRxcuDg45SE8EVCvWaxt27nh6+5P8J54gPQskDAQJHgGfz2/cVd+4q35wyPHGb0+OuD2kJwLqFOSrf/H6cV2RhvQgkHjweS6shl6nLbGYSE8BNCqxmFAjWB0ECQAAqIAgAQAAFRAkAACgAoIEAABUQJAAAIAKCBIQQ3aDbbgn/FGAIAQJiDHodVfOnztx/FhdbU1qKpbEEZOamlpXW3Pi+LEr588Z9DgcD4jBqwCQpNdp9Trtj48emQwEWq5+ce2L61/dah/3+UnPtSHkKeSVWyq2ba3dvq1uIx8AD/RAkIAKuTk5e5t2723azTBMKBTq7LG1trW33upobe+IRCKkp0sSPB6vsqK8ckt5pbWirLREKBCQngjgLggSUEcoFNbV1tTV1jAM83Us1tvX33qrvdvWe7O1bXRsnPR0CUaZp6iutJZaTJVbKkxGQ2pCneAOGw2CBFRL5XBKLeZSi5lhmKWlJYdzuK29s8fe2z842D8wFAqHSQ9IHaFQaCzWGfR6i8lorSjTaYtSUlJIDwXwUBAkSBgsy65cc7pzTzA4NzDk6LHbBx3OwSGHrbdvYWFjfb6XkcGzmIx6nVavLSoxm4t1WpEok/RQAKuEIEECE4kyq6wVVdaKlZvRaHTQ4ewbGHQ4hr1jY57RUa93bHpmhuyQcSTJylKp8vJVKmWeQq8tMhTr9dqi9PR00nMBxAeCBMmDy+WWmE0l5ru2IV9cXPT5J9xer8cz6vZ6Pd5Rj3fUPzE5GQiQmvOB1CqlNDdHmpurVinzVSq1WpmvUinkMnw5HpIbnt+Q5NLS0tQqpVqlZGrvun8yEBj3+aenZ2ZmZ6dnZqdnZm5PT4+N+8Lh+fD8fDgcDs/PB4NzcZ9HJMoU8PkCgUAo4PP5fGWeIlsiyRKLJVniLLFYIslSyGW5OTlx/70A9EOQYIPKzcl5mNf9wNTthYWFSCQSiUYjkWj0X9HY17Hw/PwDf1DA53NSOTwuj8tN53G5PB4vIyMDy30A7gNBArgfJARg3WDrIAAAoAKCBAAAVECQAACACggSAABQAUECAAAqIEgAAEAFBAkAAKiAIAEAABUQJAAAoEIcdmrostke/0Eg4XjcXtIjAI08bu9Hn3xKegpYb3EJQRyC9Nnlls8utzz+4wBAEuiy2btsdtJTQELCR3YAAEAFBAkAAKiAIAEAABUQJAAAoAKCBAAAVECQAACACggSAABQAUECAAAqIEgAAEAFBAkAAKiAIAEAABUQJAAAoAKCBAAAVECQAACACggSAABQAUECAAAqIEgAAEAFBAkAAKiAIAEAABUQJAAAoAKCBAAAVPg3pdXlZSKkN84AAAAASUVORK5CYII=",
              fileName="modelica://ClaRa/figures/Components/LUVO.png"),
            Rectangle(
              extent={{-170,-292},{-168,-78}},
              lineColor={255,0,0},
              fillColor={255,0,0},
              fillPattern=FillPattern.Solid),
            Rectangle(
              extent={{-232,-290},{-230,-76}},
              lineColor={0,0,255},
              fillColor={0,0,255},
              fillPattern=FillPattern.Solid),
            Rectangle(
              extent={{-350,-36},{-268,-40}},
              lineColor={0,0,0},
              fillColor={170,255,255},
              fillPattern=FillPattern.Solid,
              lineThickness=0.5),
            Rectangle(
              extent={{-352,40},{-268,36}},
              lineColor={0,0,0},
              fillColor={170,255,255},
              fillPattern=FillPattern.Solid,
              lineThickness=0.5),
            Rectangle(
              extent={{-136,50},{-86,46}},
              lineColor={0,0,0},
              fillColor={170,255,255},
              fillPattern=FillPattern.Solid,
              lineThickness=0.5),
            Rectangle(
              extent={{-131,2},{131,-2}},
              lineColor={0,0,0},
              fillColor={170,255,255},
              fillPattern=FillPattern.Solid,
              lineThickness=0.5,
              origin={-88,177},
              rotation=90),
            Rectangle(
              extent={{78,40},{138,-56}},
              lineColor={0,0,0},
              lineThickness=1,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid),
            Rectangle(
              extent={{-22,54},{38,-42}},
              lineColor={0,0,0},
              lineThickness=1,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid),
            Line(
              points={{38,54},{-20,-42},{-20,-40}},
              color={0,0,0},
              thickness=1),
            Line(
              points={{136,38},{78,-58},{78,-56}},
              color={0,0,0},
              thickness=1),
            Text(
              extent={{-14,46},{0,34}},
              lineColor={0,0,0},
              lineThickness=1,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid,
              textString="+",
              fontSize=16,
              textStyle={TextStyle.Bold}),
            Text(
              extent={{84,34},{98,22}},
              lineColor={0,0,0},
              lineThickness=1,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid,
              textString="+",
              fontSize=16,
              textStyle={TextStyle.Bold}),
            Rectangle(
              extent={{-138,-36},{-24,-40}},
              lineColor={0,0,0},
              fillColor={170,255,255},
              fillPattern=FillPattern.Solid,
              lineThickness=0.5),
            Rectangle(
              extent={{-138,-54},{76,-50}},
              lineColor={0,0,0},
              fillColor={170,255,255},
              fillPattern=FillPattern.Solid,
              lineThickness=0.5),
            Rectangle(
              extent={{-126,2},{126,-2}},
              lineColor={0,0,0},
              fillColor={170,255,255},
              fillPattern=FillPattern.Solid,
              lineThickness=0.5,
              origin={-7.54952e-015,182},
              rotation=90),
            Rectangle(
              extent={{-134,2},{134,-2}},
              lineColor={0,0,0},
              fillColor={170,255,255},
              fillPattern=FillPattern.Solid,
              lineThickness=0.5,
              origin={100,176},
              rotation=90),
            Rectangle(
              extent={{-1,-162},{1,162}},
              lineColor={255,0,0},
              fillColor={255,0,0},
              fillPattern=FillPattern.Solid,
              origin={-4,-97},
              rotation=90),
            Rectangle(
              extent={{-18,-94},{-16,-42}},
              lineColor={255,0,0},
              fillColor={255,0,0},
              fillPattern=FillPattern.Solid),
            Rectangle(
              extent={{86,-96},{88,-54}},
              lineColor={255,0,0},
              fillColor={255,0,0},
              fillPattern=FillPattern.Solid),
            Rectangle(
              extent={{-1,-55},{1,55}},
              lineColor={0,0,255},
              fillColor={0,0,255},
              fillPattern=FillPattern.Solid,
              origin={-9,-97},
              rotation=180),
            Rectangle(
              extent={{-1,-49},{1,49}},
              lineColor={0,0,255},
              fillColor={0,0,255},
              fillPattern=FillPattern.Solid,
              origin={95,-105},
              rotation=180),
            Text(
              extent={{-242,86},{-154,66}},
              lineColor={0,0,0},
              lineThickness=1,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid,
              textString="HVAC system"),
            Rectangle(
              extent={{150,22},{210,-74}},
              lineColor={0,0,0},
              lineThickness=1,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid),
            Rectangle(
              extent={{-136,-72},{150,-68}},
              lineColor={0,0,0},
              fillColor={170,255,255},
              fillPattern=FillPattern.Solid,
              lineThickness=0.5),
            Rectangle(
              extent={{158,-96},{160,-74}},
              lineColor={255,0,0},
              fillColor={255,0,0},
              fillPattern=FillPattern.Solid),
            Rectangle(
              extent={{-1,-38},{1,38}},
              lineColor={0,0,255},
              fillColor={0,0,255},
              fillPattern=FillPattern.Solid,
              origin={165,-114},
              rotation=180),
            Rectangle(
              extent={{1,-199},{-1,199}},
              lineColor={0,0,255},
              fillColor={0,0,255},
              fillPattern=FillPattern.Solid,
              origin={-31,-153},
              rotation=90),
            Rectangle(
              extent={{-143,2},{143,-2}},
              lineColor={0,0,0},
              fillColor={170,255,255},
              fillPattern=FillPattern.Solid,
              lineThickness=0.5,
              origin={178,167},
              rotation=90),
            Line(
              points={{210,22},{152,-74},{152,-72}},
              color={0,0,0},
              thickness=1),
            Text(
              extent={{156,14},{170,2}},
              lineColor={0,0,0},
              lineThickness=1,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid,
              textString="+",
              fontSize=16,
              textStyle={TextStyle.Bold}),
            Ellipse(
              extent={{-284,264},{-232,212}},
              lineColor={255,255,0},
              fillColor={255,255,0},
              fillPattern=FillPattern.Solid),
            Line(
              points={{-8,-8},{6,6}},
              color={255,255,0},
              smooth=Smooth.None,
              thickness=1,
              origin={-230,264},
              rotation=180),
            Line(
              points={{-8,-8},{6,6}},
              color={255,255,0},
              smooth=Smooth.None,
              thickness=1,
              origin={-284,206},
              rotation=180),
            Line(
              points={{-10,0},{10,0}},
              color={255,255,0},
              smooth=Smooth.None,
              thickness=1,
              origin={-258,280},
              rotation=90),
            Line(
              points={{-10,0},{10,0}},
              color={255,255,0},
              smooth=Smooth.None,
              thickness=1,
              origin={-258,196},
              rotation=90),
            Line(
              points={{-8,-8},{6,6}},
              color={255,255,0},
              smooth=Smooth.None,
              thickness=1,
              origin={-290,266},
              rotation=90),
            Line(
              points={{-8,-8},{6,6}},
              color={255,255,0},
              smooth=Smooth.None,
              thickness=1,
              origin={-228,210},
              rotation=90),
            Line(
              points={{-228,238},{-208,238}},
              color={255,255,0},
              smooth=Smooth.None,
              thickness=1),
            Line(
              points={{-310,238},{-290,238}},
              color={255,255,0},
              smooth=Smooth.None,
              thickness=1),
            Text(
              extent={{270,312},{320,252}},
              lineColor={0,0,0},
              lineThickness=1,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid,
              textStyle={TextStyle.Bold,TextStyle.UnderLine},
              textString="N3")}), Diagram(coordinateSystem(preserveAspectRatio=false,
              extent={{-360,-300},{340,320}})));
    end N3_Batterie;

    model N2_Batterie
       package MediumA =Buildings.Media.Air "Medium model for Air";
      package MediumW = Buildings.Media.Water "Medium model for water";
       parameter Modelica.SIunits.MassFlowRate mAirBat_E_N2=1.3;
      parameter Modelica.SIunits.MassFlowRate mAirBat_N_N2=1.83;
      parameter Modelica.SIunits.MassFlowRate mAirBat_W_N2=1.94;
      parameter Modelica.SIunits.MassFlowRate mAirBat_N2 = mAirBat_W_N2 + mAirBat_N_N2 + mAirBat_E_N2;
      parameter Modelica.SIunits.MassFlowRate mWatBat_E_N2=0.091;
      parameter Modelica.SIunits.MassFlowRate mWatBat_N_N2=0.175;
      parameter Modelica.SIunits.MassFlowRate mWatBat_W_N2=0.050;
      parameter Modelica.SIunits.MassFlowRate mWatBat_N2 = mWatBat_W_N2 + mWatBat_N_N2 + mWatBat_E_N2;
      parameter Modelica.SIunits.MassFlowRate mHotDeck_N2=2.78;
      parameter Modelica.SIunits.MassFlowRate mAirFlow_N2_Sou=5.43;
      parameter Modelica.SIunits.MassFlowRate mAirFlow_N2_Rep=2.23;
      parameter Modelica.SIunits.Pressure dpThrWayVal_nominal = 5000;
      N2 n2_2(
        redeclare package Medium1 = MediumA,
        redeclare package Medium2 = MediumA,
        redeclare package Medium = MediumW,
        m_flow_nominal=mHotDeck_N2,
        mWat=mHotDeck_N2,
        nin=2,
        mAir_Sou=mAirFlow_N2_Sou,
        mAir_Rep=mAirFlow_N2_Rep,
        m1_flow_nominal=mAirFlow_N2_Rep,
        m2_flow_nominal=mAirFlow_N2_Sou)
        annotation (Placement(transformation(extent={{-116,-14},{-156,20}})));
      FBM.Examples.BaseClasses.BaseClassesVentilation.VAVBranch EastN2(
        redeclare package MediumA = MediumA,
        redeclare package MediumW = MediumW,
        m_flow_nominal=mAirBat_E_N2,
        m_flow_Wat=mWatBat_E_N2,
        PuissanceBatterie=3248,
        PressureDropBatterieAir(displayUnit="Pa") = 20,
        PressureDropBatterieWatter(displayUnit="Pa") = 7000)
        "South-facing thermal zone"
        annotation (Placement(transformation(extent={{20,-10},{-22,32}})));
      FBM.Examples.BaseClasses.BaseClassesVentilation.VAVBranch WestN2(
        redeclare package MediumA = MediumA,
        redeclare package MediumW = MediumW,
        m_flow_nominal=mAirBat_W_N2 + mAirBat_N_N2,
        m_flow_Wat=mWatBat_W_N2 + mWatBat_N_N2,
        PuissanceBatterie=1748 + 6202,
        PressureDropBatterieAir(displayUnit="Pa") = 25,
        PressureDropBatterieWatter(displayUnit="Pa") = 8500)
        "South-facing thermal zone"
        annotation (Placement(transformation(extent={{120,0},{78,42}})));
    Buildings.Fluid.FixedResistances.Junction splVal36(
      redeclare package Medium = MediumW,
      dp_nominal={0,0,0},
      m_flow_nominal={(mHotDeck_N2 + mWatBat_N2),-mHotDeck_N2,-mWatBat_N2})
      "Flow splitter" annotation (Placement(transformation(
          extent={{10,10},{-10,-10}},
          rotation=270,
          origin={-104,-74})));
    Buildings.Fluid.FixedResistances.Junction splVal37(
      redeclare package Medium = MediumW,
      dp_nominal={0,0,0},
      m_flow_nominal={mHotDeck_N2,-(mHotDeck_N2 + mWatBat_N2),mWatBat_N2})
      "Flow splitter" annotation (Placement(transformation(
          extent={{10,-10},{-10,10}},
          rotation=90,
          origin={-182,-100})));
    Buildings.Fluid.FixedResistances.Junction splVal33(
      redeclare package Medium = MediumA,
      m_flow_nominal={mAirBat_N2,-(mAirBat_W_N2 + mAirBat_N_N2),-mAirBat_E_N2},
      dp_nominal={10,10,10}) "Flow splitter" annotation (Placement(
          transformation(
          extent={{-10,10},{10,-10}},
          rotation=0,
          origin={0,-24})));

      Modelica.Fluid.Interfaces.FluidPort_a HotWater(redeclare package Medium =
            MediumW)
        annotation (Placement(transformation(extent={{-180,-310},{-160,-290}}),
            iconTransformation(extent={{-180,-310},{-160,-290}})));
      Modelica.Fluid.Interfaces.FluidPort_b ColdWater(redeclare package Medium =
            MediumW)
        annotation (Placement(transformation(extent={{-242,-312},{-222,-292}}),
            iconTransformation(extent={{-242,-312},{-222,-292}})));
      Buildings.BoundaryConditions.WeatherData.Bus weaBus annotation (Placement(
            transformation(extent={{-310,246},{-270,286}}), iconTransformation(
              extent={{-268,226},{-248,246}})));
      Modelica.Blocks.Interfaces.RealInput TRoom[3]
        annotation (Placement(transformation(extent={{380,258},{340,298}})));
      Modelica.Fluid.Interfaces.FluidPort_a ExtractAir(redeclare package Medium =
            MediumA)
        annotation (Placement(transformation(extent={{-98,308},{-78,328}})));
      Modelica.Fluid.Interfaces.FluidPort_a FreshAir(redeclare package Medium =
            MediumA)
        annotation (Placement(transformation(extent={{-370,-48},{-350,-28}})));
      Modelica.Fluid.Interfaces.FluidPort_b ExhaustAit(redeclare package Medium =
            MediumA)
        annotation (Placement(transformation(extent={{-370,28},{-350,48}})));
      Modelica.Blocks.Interaction.Show.RealValue RealVal17(significantDigits=4)
        annotation (Placement(transformation(extent={{-214,-36},{-252,-12}})));
      Modelica.Blocks.Interaction.Show.RealValue RealVal18(significantDigits=4)
        annotation (Placement(transformation(extent={{-214,-48},{-252,-24}})));
      Modelica.Fluid.Interfaces.FluidPort_b EastN2_Out(redeclare package Medium =
            MediumA)
        annotation (Placement(transformation(extent={{-10,308},{10,328}})));
      Modelica.Fluid.Interfaces.FluidPort_b WestN2_Out(redeclare package Medium =
            MediumA)
        annotation (Placement(transformation(extent={{90,310},{110,330}})));
      Modelica.Blocks.Routing.DeMultiplex3 deMultiplex3_1 annotation (Placement(
            transformation(
            extent={{-10,-10},{10,10}},
            rotation=180,
            origin={244,120})));
    equation
      connect(splVal33.port_3,EastN2. port_a) annotation (Line(points={{0,-14},{0,-14},
              {0,0.36},{-1,0.36}},               color={0,127,255}));
      connect(n2_2.weaBus, weaBus) annotation (Line(
          points={{-116.4,15.24},{-116.4,266.62},{-290,266.62},{-290,266}},
          color={255,204,51},
          thickness=0.5), Text(
          string="%second",
          index=1,
          extent={{6,3},{6,3}}));
      connect(n2_2.port_a1, ExtractAir) annotation (Line(points={{-116,13.2},{-88,13.2},
              {-88,72},{-88,318}}, color={0,127,255}));
      connect(ExhaustAit, n2_2.port_b1) annotation (Line(points={{-360,38},{-258,38},
              {-258,13.2},{-156,13.2}}, color={0,127,255}));
      connect(FreshAir, n2_2.port_a2) annotation (Line(points={{-360,-38},{-258,-38},
              {-258,-7.2},{-156,-7.2}}, color={0,127,255}));
      connect(RealVal17.numberPort, n2_2.Auxilaire1) annotation (Line(points={{-211.15,
              -24},{-188,-24},{-188,-0.4},{-157.6,-0.4}},           color={0,0,
              127}));
      connect(RealVal18.numberPort, n2_2.EHotDeck) annotation (Line(points={{-211.15,
              -36},{-188,-36},{-188,-2.78},{-157.6,-2.78}},           color={0,
              0,127}));
      connect(EastN2_Out, EastN2.port_b)
        annotation (Line(points={{0,318},{-1,318},{-1,32}}, color={0,127,255}));
      connect(ColdWater, ColdWater) annotation (Line(points={{-232,-302},{-232,-302},
              {-232,-302}}, color={0,127,255}));
      connect(WestN2_Out, WestN2.port_b) annotation (Line(points={{100,320},{
              100,42},{99,42}}, color={0,127,255}));
      connect(ColdWater, splVal37.port_2) annotation (Line(points={{-232,-302},
              {-182,-302},{-182,-110}}, color={0,127,255}));
      connect(HotWater, splVal36.port_1) annotation (Line(points={{-170,-300},
            {-104,-300},{-104,-84}},  color={0,127,255}));
      connect(deMultiplex3_1.u, TRoom) annotation (Line(points={{256,120},{268,
              120},{268,260},{268,278},{360,278}}, color={0,0,127}));
      connect(deMultiplex3_1.y2[1], EastN2.TRoo) annotation (Line(points={{233,
              120},{70,120},{70,18},{22.8,18}}, color={0,0,127}));
      connect(deMultiplex3_1.y1[1], WestN2.TRoo) annotation (Line(points={{233,
              113},{233,68.5},{122.8,68.5},{122.8,28}}, color={0,0,127}));
      connect(splVal33.port_2, WestN2.port_a) annotation (Line(points={{10,-24},
              {100,-24},{100,10.36},{99,10.36}}, color={0,127,255}));
      connect(n2_2.u[1], EastN2.yDam) annotation (Line(points={{-142.8,21.53},{
              -83.4,21.53},{-83.4,4},{-23.4,4}}, color={0,0,127}));
      connect(n2_2.u[2], WestN2.yDam) annotation (Line(points={{-142.8,19.83},{
              -32.4,19.83},{-32.4,14},{76.6,14}}, color={0,0,127}));
      connect(n2_2.controlBus, EastN2.controlBus) annotation (Line(
          points={{-147.6,20},{38,20},{38,0.08},{20,0.08}},
          color={255,204,51},
          thickness=0.5));
      connect(n2_2.controlBus, WestN2.controlBus) annotation (Line(
          points={{-147.6,20},{136,20},{136,10.08},{120,10.08}},
          color={255,204,51},
          thickness=0.5));
      connect(n2_2.TRoom, TRoom) annotation (Line(points={{-114.8,-12.3},{
              -101.4,-12.3},{-101.4,278},{360,278}}, color={0,0,127}));
      connect(splVal36.port_3, EastN2.port_InTer) annotation (Line(points={{-94,-74},
            {-16,-74},{-16,7.08},{-15.56,7.08}},        color={0,127,255}));
      connect(splVal36.port_3, WestN2.port_InTer) annotation (Line(points={{-94,-74},
            {84,-74},{84,17.08},{84.44,17.08}},        color={0,127,255}));
      connect(splVal37.port_3, EastN2.port_OffTer) annotation (Line(points={{
              -172,-100},{-22,-100},{-22,12.68},{-15.28,12.68}}, color={0,127,
              255}));
      connect(WestN2.port_OffTer, splVal37.port_3) annotation (Line(points={{
              84.72,22.68},{77.36,22.68},{77.36,-100},{-172,-100}}, color={0,
              127,255}));
    connect(n2_2.port_b2, splVal33.port_1) annotation (Line(points={{-116,
            -7.2},{-64,-7.2},{-64,-24},{-10,-24}}, color={0,127,255}));
    connect(n2_2.port_b, splVal37.port_1) annotation (Line(points={{-156,3},{
            -182,3},{-182,-90}}, color={0,127,255}));
    connect(splVal36.port_2, n2_2.port_a) annotation (Line(points={{-104,-64},
            {-104,-64},{-104,3},{-116,3}}, color={0,127,255}));
      annotation (Icon(coordinateSystem(preserveAspectRatio=false, extent={{-360,-300},
                {340,320}}), graphics={Rectangle(
              extent={{-358,318},{342,-302}},
              lineColor={0,128,255},
              fillColor={0,128,255},
              fillPattern=FillPattern.Solid),
                                 Bitmap(
              extent={{-272,66},{-136,-84}},
              imageSource=
                  ""
                   +
                  "09RYkI8NF+A/ECT4r8KC/Nd//rOjLx16/8OPz318ntrltGshHJ4Ph+fd3rXaMf33f3hrjR454YgyM59vqN/9XAPWFcE3IEjwTRJJ1suHD+zft+di8+Wz7//dOzpGeiJIEmqlck/T888+8xTWk8E9IUhwbzwet3FXfUP9jus3W8/+7YPO7h7SE0ECKyst2fuDF2qqrCw2/oH/D0GC+2FZdmtN9daaantf/4efXGi5ei0SiZIeChJGBo+3fVvdc7t2mgzFpGeBBIAgwUMxGw1mo+HVHx1tbvnHRxcuDg45SE8EVCvWaxt27nh6+5P8J54gPQskDAQJHgGfz2/cVd+4q35wyPHGb0+OuD2kJwLqFOSrf/H6cV2RhvQgkHjweS6shl6nLbGYSE8BNCqxmFAjWB0ECQAAqIAgAQAAFRAkAACgAoIEAABUQJAAAIAKCBIQQ3aDbbgn/FGAIAQJiDHodVfOnztx/FhdbU1qKpbEEZOamlpXW3Pi+LEr588Z9DgcD4jBqwCQpNdp9Trtj48emQwEWq5+ce2L61/dah/3+UnPtSHkKeSVWyq2ba3dvq1uIx8AD/RAkIAKuTk5e5t2723azTBMKBTq7LG1trW33upobe+IRCKkp0sSPB6vsqK8ckt5pbWirLREKBCQngjgLggSUEcoFNbV1tTV1jAM83Us1tvX33qrvdvWe7O1bXRsnPR0CUaZp6iutJZaTJVbKkxGQ2pCneAOGw2CBFRL5XBKLeZSi5lhmKWlJYdzuK29s8fe2z842D8wFAqHSQ9IHaFQaCzWGfR6i8lorSjTaYtSUlJIDwXwUBAkSBgsy65cc7pzTzA4NzDk6LHbBx3OwSGHrbdvYWFjfb6XkcGzmIx6nVavLSoxm4t1WpEok/RQAKuEIEECE4kyq6wVVdaKlZvRaHTQ4ewbGHQ4hr1jY57RUa93bHpmhuyQcSTJylKp8vJVKmWeQq8tMhTr9dqi9PR00nMBxAeCBMmDy+WWmE0l5ru2IV9cXPT5J9xer8cz6vZ6Pd5Rj3fUPzE5GQiQmvOB1CqlNDdHmpurVinzVSq1WpmvUinkMnw5HpIbnt+Q5NLS0tQqpVqlZGrvun8yEBj3+aenZ2ZmZ6dnZqdnZm5PT4+N+8Lh+fD8fDgcDs/PB4NzcZ9HJMoU8PkCgUAo4PP5fGWeIlsiyRKLJVniLLFYIslSyGW5OTlx/70A9EOQYIPKzcl5mNf9wNTthYWFSCQSiUYjkWj0X9HY17Hw/PwDf1DA53NSOTwuj8tN53G5PB4vIyMDy30A7gNBArgfJARg3WDrIAAAoAKCBAAAVECQAACACggSAABQAUECAAAqIEgAAEAFBAkAAKiAIAEAABUQJAAAoEIcdmrostke/0Eg4XjcXtIjAI08bu9Hn3xKegpYb3EJQRyC9Nnlls8utzz+4wBAEuiy2btsdtJTQELCR3YAAEAFBAkAAKiAIAEAABUQJAAAoAKCBAAAVECQAACACggSAABQAUECAAAqIEgAAEAFBAkAAKiAIAEAABUQJAAAoAKCBAAAVECQAACACggSAABQAUECAAAqIEgAAEAFBAkAAKiAIAEAABUQJAAAoAKCBAAAVPg3pdXlZSKkN84AAAAASUVORK5CYII=",
              fileName="modelica://ClaRa/figures/Components/LUVO.png"),
            Rectangle(
              extent={{-170,-292},{-168,-78}},
              lineColor={255,0,0},
              fillColor={255,0,0},
              fillPattern=FillPattern.Solid),
            Rectangle(
              extent={{-232,-290},{-230,-76}},
              lineColor={0,0,255},
              fillColor={0,0,255},
              fillPattern=FillPattern.Solid),
            Rectangle(
              extent={{-350,-36},{-268,-40}},
              lineColor={0,0,0},
              fillColor={170,255,255},
              fillPattern=FillPattern.Solid,
              lineThickness=0.5),
            Rectangle(
              extent={{-352,40},{-268,36}},
              lineColor={0,0,0},
              fillColor={170,255,255},
              fillPattern=FillPattern.Solid,
              lineThickness=0.5),
            Rectangle(
              extent={{-136,50},{-86,46}},
              lineColor={0,0,0},
              fillColor={170,255,255},
              fillPattern=FillPattern.Solid,
              lineThickness=0.5),
            Rectangle(
              extent={{-131,2},{131,-2}},
              lineColor={0,0,0},
              fillColor={170,255,255},
              fillPattern=FillPattern.Solid,
              lineThickness=0.5,
              origin={-88,177},
              rotation=90),
            Rectangle(
              extent={{78,40},{138,-56}},
              lineColor={0,0,0},
              lineThickness=1,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid),
            Rectangle(
              extent={{-22,54},{38,-42}},
              lineColor={0,0,0},
              lineThickness=1,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid),
            Line(
              points={{38,54},{-20,-42},{-20,-40}},
              color={0,0,0},
              thickness=1),
            Line(
              points={{136,38},{78,-58},{78,-56}},
              color={0,0,0},
              thickness=1),
            Text(
              extent={{-14,46},{0,34}},
              lineColor={0,0,0},
              lineThickness=1,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid,
              textString="+",
              fontSize=16,
              textStyle={TextStyle.Bold}),
            Text(
              extent={{84,34},{98,22}},
              lineColor={0,0,0},
              lineThickness=1,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid,
              textString="+",
              fontSize=16,
              textStyle={TextStyle.Bold}),
            Rectangle(
              extent={{-138,-36},{-24,-40}},
              lineColor={0,0,0},
              fillColor={170,255,255},
              fillPattern=FillPattern.Solid,
              lineThickness=0.5),
            Rectangle(
              extent={{-138,-54},{76,-50}},
              lineColor={0,0,0},
              fillColor={170,255,255},
              fillPattern=FillPattern.Solid,
              lineThickness=0.5),
            Rectangle(
              extent={{-126,2},{126,-2}},
              lineColor={0,0,0},
              fillColor={170,255,255},
              fillPattern=FillPattern.Solid,
              lineThickness=0.5,
              origin={-7.54952e-015,182},
              rotation=90),
            Rectangle(
              extent={{-134,2},{134,-2}},
              lineColor={0,0,0},
              fillColor={170,255,255},
              fillPattern=FillPattern.Solid,
              lineThickness=0.5,
              origin={100,176},
              rotation=90),
            Rectangle(
              extent={{-1,-127},{1,127}},
              lineColor={255,0,0},
              fillColor={255,0,0},
              fillPattern=FillPattern.Solid,
              origin={-39,-97},
              rotation=90),
            Rectangle(
              extent={{-18,-94},{-16,-42}},
              lineColor={255,0,0},
              fillColor={255,0,0},
              fillPattern=FillPattern.Solid),
            Rectangle(
              extent={{86,-96},{88,-54}},
              lineColor={255,0,0},
              fillColor={255,0,0},
              fillPattern=FillPattern.Solid),
            Rectangle(
              extent={{-1,-55},{1,55}},
              lineColor={0,0,255},
              fillColor={0,0,255},
              fillPattern=FillPattern.Solid,
              origin={-9,-97},
              rotation=180),
            Rectangle(
              extent={{-1,-49},{1,49}},
              lineColor={0,0,255},
              fillColor={0,0,255},
              fillPattern=FillPattern.Solid,
              origin={95,-105},
              rotation=180),
            Text(
              extent={{-242,86},{-154,66}},
              lineColor={0,0,0},
              lineThickness=1,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid,
              textString="HVAC system"),
            Rectangle(
              extent={{-1,-163},{1,163}},
              lineColor={0,0,255},
              fillColor={0,0,255},
              fillPattern=FillPattern.Solid,
              origin={-67,-155},
              rotation=90),
            Ellipse(
              extent={{-284,264},{-232,212}},
              lineColor={255,255,0},
              fillColor={255,255,0},
              fillPattern=FillPattern.Solid),
            Line(
              points={{-8,-8},{6,6}},
              color={255,255,0},
              smooth=Smooth.None,
              thickness=1,
              origin={-230,264},
              rotation=180),
            Line(
              points={{-8,-8},{6,6}},
              color={255,255,0},
              smooth=Smooth.None,
              thickness=1,
              origin={-284,206},
              rotation=180),
            Line(
              points={{-10,0},{10,0}},
              color={255,255,0},
              smooth=Smooth.None,
              thickness=1,
              origin={-258,280},
              rotation=90),
            Line(
              points={{-10,0},{10,0}},
              color={255,255,0},
              smooth=Smooth.None,
              thickness=1,
              origin={-258,196},
              rotation=90),
            Line(
              points={{-8,-8},{6,6}},
              color={255,255,0},
              smooth=Smooth.None,
              thickness=1,
              origin={-290,266},
              rotation=90),
            Line(
              points={{-8,-8},{6,6}},
              color={255,255,0},
              smooth=Smooth.None,
              thickness=1,
              origin={-228,210},
              rotation=90),
            Line(
              points={{-228,238},{-208,238}},
              color={255,255,0},
              smooth=Smooth.None,
              thickness=1),
            Line(
              points={{-310,238},{-290,238}},
              color={255,255,0},
              smooth=Smooth.None,
              thickness=1),
            Text(
              extent={{270,312},{320,252}},
              lineColor={0,0,0},
              lineThickness=1,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid,
              textStyle={TextStyle.Bold,TextStyle.UnderLine},
              textString="N2")}), Diagram(coordinateSystem(preserveAspectRatio=false,
              extent={{-360,-300},{340,320}})));
    end N2_Batterie;

    model S2_Batterie
      package MediumA =Buildings.Media.Air "Medium model for Air";
      package MediumW = Buildings.Media.Water "Medium model for water";
     parameter Modelica.SIunits.MassFlowRate mAirBat_S_S2=2.3;
      parameter Modelica.SIunits.MassFlowRate mAirBat_E_S2=2.91;
      parameter Modelica.SIunits.MassFlowRate mAirBat_S2 = mAirBat_S_S2 + mAirBat_E_S2;
      parameter Modelica.SIunits.MassFlowRate mWatBat_S_S2=0.184;
      parameter Modelica.SIunits.MassFlowRate mWatBat_E_S2=0.324;
      parameter Modelica.SIunits.MassFlowRate mWatBat_S2 = mWatBat_S_S2 + mWatBat_E_S2;
      parameter Modelica.SIunits.MassFlowRate mHotDeck_S2=1.08;
      parameter Modelica.SIunits.MassFlowRate mAirBat_S2_Sou=3.13;
       parameter Modelica.SIunits.MassFlowRate mAirBat_S2_Rep=2.45;
       parameter Modelica.SIunits.Pressure dpThrWayVal_nominal = 5000;
      S2 s2_1(
        redeclare package Medium1 = MediumA,
        redeclare package Medium2 = MediumA,
        redeclare package Medium = MediumW,
        m_flow_nominal=mHotDeck_S2,
        mWat=mHotDeck_S2,
        mAir_Sou=mAirBat_S2_Sou,
        mAir_Rep=mAirBat_S2_Rep,
        m1_flow_nominal=mAirBat_S2_Rep,
        m2_flow_nominal=mAirBat_S2_Sou)
        annotation (Placement(transformation(extent={{-96,6},{-134,46}})));
      FBM.Examples.BaseClasses.BaseClassesVentilation.VAVBranch EastS2(
        redeclare package MediumA = MediumA,
        redeclare package MediumW = MediumW,
        m_flow_nominal=mAirBat_E_S2,
        m_flow_Wat=mWatBat_E_S2,
        PuissanceBatterie=11510,
        PressureDropBatterieAir(displayUnit="Pa") = 30,
        PressureDropBatterieWatter(displayUnit="Pa") = 8500)
        "South-facing thermal zone"
        annotation (Placement(transformation(extent={{36,-18},{-6,24}})));
      FBM.Examples.BaseClasses.BaseClassesVentilation.VAVBranch SouthS2(
        redeclare package MediumA = MediumA,
        redeclare package MediumW = MediumW,
        m_flow_nominal=mAirBat_S_S2,
        m_flow_Wat=mWatBat_S_S2,
        PuissanceBatterie=6545,
        PressureDropBatterieAir(displayUnit="Pa") = 20,
        PressureDropBatterieWatter(displayUnit="Pa") = 5500)
        "South-facing thermal zone"
        annotation (Placement(transformation(extent={{184,-18},{142,24}})));
    Buildings.Fluid.FixedResistances.Junction splVal32(
      redeclare package Medium = MediumA,
      m_flow_nominal={mAirBat_S2_Sou,-(mAirBat_S_S2),-mAirBat_E_S2},
      dp_nominal={10,10,10}) "Flow splitter" annotation (Placement(
          transformation(
          extent={{-10,10},{10,-10}},
          rotation=0,
          origin={6,-36})));
      Modelica.Blocks.Interaction.Show.RealValue RealVal11(significantDigits=4)
        annotation (Placement(transformation(extent={{-170,-10},{-208,14}})));
      Modelica.Blocks.Interaction.Show.RealValue RealVal12(significantDigits=4)
        annotation (Placement(transformation(extent={{-170,-22},{-208,2}})));
      Buildings.BoundaryConditions.WeatherData.Bus weaBus annotation (Placement(
            transformation(extent={{-250,230},{-210,270}}), iconTransformation(
              extent={{-202,216},{-182,236}})));
      Modelica.Fluid.Interfaces.FluidPort_a FreshAir(redeclare package Medium =
            MediumA)
        annotation (Placement(transformation(extent={{-270,4},{-250,24}})));
      Modelica.Fluid.Interfaces.FluidPort_b ExhaustAit(redeclare package Medium =
            MediumA)
        annotation (Placement(transformation(extent={{-270,28},{-250,48}})));
      Modelica.Fluid.Interfaces.FluidPort_a ExtractAir(redeclare package Medium =
            MediumA)
        annotation (Placement(transformation(extent={{-48,270},{-28,290}})));
      Modelica.Fluid.Interfaces.FluidPort_b EastS2_Out(redeclare package Medium =
            MediumA)
        annotation (Placement(transformation(extent={{38,270},{58,290}})));
      Modelica.Fluid.Interfaces.FluidPort_b SouthS2_Out(redeclare package
          Medium =
            MediumA)
        annotation (Placement(transformation(extent={{172,270},{192,290}})));
    Buildings.Fluid.FixedResistances.Junction splVal41(
      redeclare package Medium = MediumW,
      dp_nominal={0,0,0},
      m_flow_nominal={(mHotDeck_S2 + mWatBat_S2),-mHotDeck_S2,-mWatBat_S2})
      "Flow splitter" annotation (Placement(transformation(
          extent={{10,10},{-10,-10}},
          rotation=270,
          origin={-80,-148})));
      Modelica.Fluid.Interfaces.FluidPort_a HotWater(redeclare package Medium =
            MediumW)
        annotation (Placement(transformation(extent={{-90,-230},{-70,-210}})));
      Modelica.Fluid.Interfaces.FluidPort_b ColdWater(redeclare package Medium =
            MediumW)
        annotation (Placement(transformation(extent={{-154,-232},{-134,-212}})));
    Buildings.Fluid.FixedResistances.Junction splVal42(
      redeclare package Medium = MediumW,
      dp_nominal={0,0,0},
      m_flow_nominal={(mHotDeck_S2),-(mHotDeck_S2 + mWatBat_S2),mWatBat_S2})
      "Flow splitter" annotation (Placement(transformation(
          extent={{10,-10},{-10,10}},
          rotation=90,
          origin={-144,-176})));
      Modelica.Blocks.Interfaces.RealInput TRoom[3]
        annotation (Placement(transformation(extent={{300,212},{260,252}})));
      Modelica.Blocks.Routing.DeMultiplex3 deMultiplex3_1 annotation (Placement(
            transformation(
            extent={{-10,-10},{10,10}},
            rotation=180,
            origin={234,232})));
      Buildings.Fluid.Sensors.TemperatureTwoPort T18(redeclare package Medium =
          MediumW, m_flow_nominal=mHotDeck_S2)
      annotation (Placement(transformation(extent={{-10,-10},{10,10}},
          rotation=90,
          origin={-80,-48})));
    equation
      connect(EastS2.yDam,s2_1. u[1]) annotation (Line(points={{-7.4,-4},{-26,-4},{-26,
              46.8},{-121.46,46.8}},         color={0,0,127}));
      connect(SouthS2.yDam,s2_1. u[2]) annotation (Line(points={{140.6,-4},{58,-4},{
              58,48},{-110,48},{-110,46},{-110,46.8},{-121.46,46.8}},
                                             color={0,0,127}));
      connect(splVal32.port_3,EastS2. port_a) annotation (Line(points={{6,-26},{6,-26},
              {6,-7.64},{15,-7.64}},             color={0,127,255}));
      connect(splVal32.port_2,SouthS2. port_a) annotation (Line(points={{16,-36},{164,
              -36},{164,-7.64},{163,-7.64}},          color={0,127,255}));
      connect(RealVal11.numberPort,s2_1. Auxilaire) annotation (Line(points={{-167.15,
              2},{-146,2},{-146,22},{-135.9,22}},               color={0,0,127}));
      connect(RealVal12.numberPort,s2_1. EHotDeck) annotation (Line(points={{-167.15,
              -10},{-135.9,-10},{-135.9,19.2}},          color={0,0,127}));
      connect(weaBus, s2_1.weaBus) annotation (Line(
          points={{-230,250},{-68,250},{-68,40.4},{-96.38,40.4}},
          color={255,204,51},
          thickness=0.5), Text(
          string="%first",
          index=-1,
          extent={{-6,3},{-6,3}}));
      connect(FreshAir, s2_1.port_a2)
        annotation (Line(points={{-260,14},{-134,14}}, color={0,127,255}));
      connect(s2_1.port_b1, ExhaustAit) annotation (Line(points={{-134,38},{-134,38},
              {-260,38}}, color={0,127,255}));
      connect(s2_1.port_a1, ExtractAir) annotation (Line(points={{-96,38},{-96,38},{
              -38,38},{-38,280}}, color={0,127,255}));
      connect(EastS2.port_b, EastS2_Out) annotation (Line(points={{15,24},{14,24},{14,
              218},{14,280},{48,280}},                   color={0,127,255}));
      connect(SouthS2.port_b, SouthS2_Out) annotation (Line(points={{163,24},{164,24},
              {164,280},{182,280}}, color={0,127,255}));
      connect(splVal42.port_2, ColdWater) annotation (Line(points={{-144,-186},
              {-144,-222}},             color={0,127,255}));
      connect(splVal41.port_1, HotWater) annotation (Line(points={{-80,-158},{
              -80,-158},{-80,-220}}, color={0,127,255}));
      connect(deMultiplex3_1.u, TRoom) annotation (Line(points={{246,232},{260,
              232},{280,232}}, color={0,0,127}));
      connect(deMultiplex3_1.y2[1], EastS2.TRoo) annotation (Line(points={{223,
              232},{48,232},{48,10},{38.8,10}}, color={0,0,127}));
      connect(deMultiplex3_1.y3[1], SouthS2.TRoo) annotation (Line(points={{223,239},
              {223,240},{204,240},{204,10},{186.8,10}},
                                                      color={0,0,127}));
      connect(s2_1.controlBus, EastS2.controlBus) annotation (Line(
          points={{-126.02,46},{42.99,46},{42.99,-7.92},{36,-7.92}},
          color={255,204,51},
          thickness=0.5));
      connect(s2_1.controlBus, SouthS2.controlBus) annotation (Line(
          points={{-126.02,46},{200,46},{200,-7.92},{184,-7.92}},
          color={255,204,51},
          thickness=0.5));
      connect(TRoom, s2_1.TRoom) annotation (Line(points={{280,232},{-60,232},{
              -60,6.8},{-94.1,6.8}}, color={0,0,127}));
      connect(splVal41.port_3, EastS2.port_InTer) annotation (Line(points={{-70,
              -148},{0,-148},{0,-0.92},{0.44,-0.92}}, color={0,127,255}));
      connect(splVal41.port_3, SouthS2.port_InTer) annotation (Line(points={{
              -70,-148},{148,-148},{148,-0.92},{148.44,-0.92}}, color={0,127,
              255}));
      connect(splVal42.port_3, EastS2.port_OffTer) annotation (Line(points={{
              -134,-176},{-6,-176},{-6,4.68},{0.72,4.68}}, color={0,127,255}));
      connect(splVal42.port_3, SouthS2.port_OffTer) annotation (Line(points={{
              -134,-176},{140,-176},{140,4.68},{148.72,4.68}}, color={0,127,255}));
    connect(s2_1.port_b2, splVal32.port_1) annotation (Line(points={{-96,14},
            {-50,14},{-50,-36},{-4,-36}}, color={0,127,255}));
    connect(s2_1.port_a, T18.port_b) annotation (Line(points={{-96,26},{-80,
            26},{-80,-38}}, color={0,127,255}));
    connect(s2_1.port_b, splVal42.port_1) annotation (Line(points={{-134,26},
            {-140,26},{-140,-166},{-144,-166}}, color={0,127,255}));
    connect(T18.port_a, splVal41.port_2) annotation (Line(points={{-80,-58},{
            -80,-58},{-80,-138}}, color={0,127,255}));
      annotation (Icon(coordinateSystem(preserveAspectRatio=false, extent={{-260,-220},
                {260,280}}), graphics={Rectangle(
              extent={{-260,280},{260,-222}},
              lineColor={0,128,255},
              fillColor={0,128,255},
              fillPattern=FillPattern.Solid),
                                 Bitmap(
              extent={{-174,84},{-64,-54}},
              imageSource=
                  ""
                   +
                  "09RYkI8NF+A/ECT4r8KC/Nd//rOjLx16/8OPz318ntrltGshHJ4Ph+fd3rXaMf33f3hrjR454YgyM59vqN/9XAPWFcE3IEjwTRJJ1suHD+zft+di8+Wz7//dOzpGeiJIEmqlck/T888+8xTWk8E9IUhwbzwet3FXfUP9jus3W8/+7YPO7h7SE0ECKyst2fuDF2qqrCw2/oH/D0GC+2FZdmtN9daaantf/4efXGi5ei0SiZIeChJGBo+3fVvdc7t2mgzFpGeBBIAgwUMxGw1mo+HVHx1tbvnHRxcuDg45SE8EVCvWaxt27nh6+5P8J54gPQskDAQJHgGfz2/cVd+4q35wyPHGb0+OuD2kJwLqFOSrf/H6cV2RhvQgkHjweS6shl6nLbGYSE8BNCqxmFAjWB0ECQAAqIAgAQAAFRAkAACgAoIEAABUQJAAAIAKCBIQQ3aDbbgn/FGAIAQJiDHodVfOnztx/FhdbU1qKpbEEZOamlpXW3Pi+LEr588Z9DgcD4jBqwCQpNdp9Trtj48emQwEWq5+ce2L61/dah/3+UnPtSHkKeSVWyq2ba3dvq1uIx8AD/RAkIAKuTk5e5t2723azTBMKBTq7LG1trW33upobe+IRCKkp0sSPB6vsqK8ckt5pbWirLREKBCQngjgLggSUEcoFNbV1tTV1jAM83Us1tvX33qrvdvWe7O1bXRsnPR0CUaZp6iutJZaTJVbKkxGQ2pCneAOGw2CBFRL5XBKLeZSi5lhmKWlJYdzuK29s8fe2z842D8wFAqHSQ9IHaFQaCzWGfR6i8lorSjTaYtSUlJIDwXwUBAkSBgsy65cc7pzTzA4NzDk6LHbBx3OwSGHrbdvYWFjfb6XkcGzmIx6nVavLSoxm4t1WpEok/RQAKuEIEECE4kyq6wVVdaKlZvRaHTQ4ewbGHQ4hr1jY57RUa93bHpmhuyQcSTJylKp8vJVKmWeQq8tMhTr9dqi9PR00nMBxAeCBMmDy+WWmE0l5ru2IV9cXPT5J9xer8cz6vZ6Pd5Rj3fUPzE5GQiQmvOB1CqlNDdHmpurVinzVSq1WpmvUinkMnw5HpIbnt+Q5NLS0tQqpVqlZGrvun8yEBj3+aenZ2ZmZ6dnZqdnZm5PT4+N+8Lh+fD8fDgcDs/PB4NzcZ9HJMoU8PkCgUAo4PP5fGWeIlsiyRKLJVniLLFYIslSyGW5OTlx/70A9EOQYIPKzcl5mNf9wNTthYWFSCQSiUYjkWj0X9HY17Hw/PwDf1DA53NSOTwuj8tN53G5PB4vIyMDy30A7gNBArgfJARg3WDrIAAAoAKCBAAAVECQAACACggSAABQAUECAAAqIEgAAEAFBAkAAKiAIAEAABUQJAAAoEIcdmrostke/0Eg4XjcXtIjAI08bu9Hn3xKegpYb3EJQRyC9Nnlls8utzz+4wBAEuiy2btsdtJTQELCR3YAAEAFBAkAAKiAIAEAABUQJAAAoAKCBAAAVECQAACACggSAABQAUECAAAqIEgAAEAFBAkAAKiAIAEAABUQJAAAoAKCBAAAVECQAACACggSAABQAUECAAAqIEgAAEAFBAkAAKiAIAEAABUQJAAAoAKCBAAAVPg3pdXlZSKkN84AAAAASUVORK5CYII=",
              fileName="modelica://ClaRa/figures/Components/LUVO.png"),
            Rectangle(
              extent={{-82,-220},{-80,-38}},
              lineColor={255,0,0},
              fillColor={255,0,0},
              fillPattern=FillPattern.Solid),
            Rectangle(
              extent={{-144,-220},{-142,-38}},
              lineColor={0,0,255},
              fillColor={0,0,255},
              fillPattern=FillPattern.Solid),
            Rectangle(
              extent={{-252,38},{-170,36}},
              lineColor={0,0,0},
              fillColor={170,255,255},
              fillPattern=FillPattern.Solid,
              lineThickness=0.5),
            Rectangle(
              extent={{-254,14},{-172,12}},
              lineColor={0,0,0},
              fillColor={170,255,255},
              fillPattern=FillPattern.Solid,
              lineThickness=0.5),
            Rectangle(
              extent={{-64,38},{-36,36}},
              lineColor={0,0,0},
              fillColor={170,255,255},
              fillPattern=FillPattern.Solid,
              lineThickness=0.5),
            Rectangle(
              extent={{-119.5,1.5},{119.5,-1.5}},
              lineColor={0,0,0},
              fillColor={170,255,255},
              fillPattern=FillPattern.Solid,
              lineThickness=0.5,
              origin={-37.5,156.5},
              rotation=90),
            Rectangle(
              extent={{140,24},{200,-72}},
              lineColor={0,0,0},
              lineThickness=1,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid),
            Rectangle(
              extent={{26,68},{86,-28}},
              lineColor={0,0,0},
              lineThickness=1,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid),
            Line(
              points={{86,68},{28,-28},{28,-26}},
              color={0,0,0},
              thickness=1),
            Line(
              points={{200,24},{142,-72},{142,-70}},
              color={0,0,0},
              thickness=1),
            Text(
              extent={{34,62},{48,50}},
              lineColor={0,0,0},
              lineThickness=1,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid,
              textString="+",
              fontSize=16,
              textStyle={TextStyle.Bold}),
            Text(
              extent={{146,16},{160,4}},
              lineColor={0,0,0},
              lineThickness=1,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid,
              textString="+",
              fontSize=16,
              textStyle={TextStyle.Bold}),
            Rectangle(
              extent={{-64,14},{26,12}},
              lineColor={0,0,0},
              fillColor={170,255,255},
              fillPattern=FillPattern.Solid,
              lineThickness=0.5),
            Rectangle(
              extent={{-64,-32},{140,-30}},
              lineColor={0,0,0},
              fillColor={170,255,255},
              fillPattern=FillPattern.Solid,
              lineThickness=0.5),
            Rectangle(
              extent={{-104,1},{104,-1}},
              lineColor={0,0,0},
              fillColor={170,255,255},
              fillPattern=FillPattern.Solid,
              lineThickness=0.5,
              origin={47,172},
              rotation=90),
            Rectangle(
              extent={{-126,1},{126,-1}},
              lineColor={0,0,0},
              fillColor={170,255,255},
              fillPattern=FillPattern.Solid,
              lineThickness=0.5,
              origin={181,150},
              rotation=90),
            Rectangle(
              extent={{-1,-114},{1,114}},
              lineColor={255,0,0},
              fillColor={255,0,0},
              fillPattern=FillPattern.Solid,
              origin={34,-105},
              rotation=90),
            Rectangle(
              extent={{30,-104},{32,-24}},
              lineColor={255,0,0},
              fillColor={255,0,0},
              fillPattern=FillPattern.Solid),
            Rectangle(
              extent={{148,-106},{150,-64}},
              lineColor={255,0,0},
              fillColor={255,0,0},
              fillPattern=FillPattern.Solid),
            Rectangle(
              extent={{-1,-152},{1,152}},
              lineColor={0,0,255},
              fillColor={0,0,255},
              fillPattern=FillPattern.Solid,
              origin={10,-133},
              rotation=90),
            Rectangle(
              extent={{-1,-55},{1,55}},
              lineColor={0,0,255},
              fillColor={0,0,255},
              fillPattern=FillPattern.Solid,
              origin={43,-79},
              rotation=180),
            Rectangle(
              extent={{-1,-34},{1,34}},
              lineColor={0,0,255},
              fillColor={0,0,255},
              fillPattern=FillPattern.Solid,
              origin={159,-98},
              rotation=180),
            Ellipse(
              extent={{-218,252},{-166,200}},
              lineColor={255,255,0},
              fillColor={255,255,0},
              fillPattern=FillPattern.Solid),
            Line(
              points={{-8,-8},{6,6}},
              color={255,255,0},
              smooth=Smooth.None,
              thickness=1,
              origin={-162,254},
              rotation=180),
            Line(
              points={{-8,-8},{6,6}},
              color={255,255,0},
              smooth=Smooth.None,
              thickness=1,
              origin={-222,194},
              rotation=180),
            Line(
              points={{-10,0},{10,0}},
              color={255,255,0},
              smooth=Smooth.None,
              thickness=1,
              origin={-192,266},
              rotation=90),
            Line(
              points={{-10,0},{10,0}},
              color={255,255,0},
              smooth=Smooth.None,
              thickness=1,
              origin={-192,186},
              rotation=90),
            Line(
              points={{-242,228},{-222,228}},
              color={255,255,0},
              smooth=Smooth.None,
              thickness=1),
            Line(
              points={{-162,226},{-142,226}},
              color={255,255,0},
              smooth=Smooth.None,
              thickness=1),
            Line(
              points={{-8,-8},{6,6}},
              color={255,255,0},
              smooth=Smooth.None,
              thickness=1,
              origin={-162,198},
              rotation=90),
            Line(
              points={{-8,-8},{6,6}},
              color={255,255,0},
              smooth=Smooth.None,
              thickness=1,
              origin={-224,258},
              rotation=90),
            Text(
              extent={{-160,92},{-72,72}},
              lineColor={0,0,0},
              lineThickness=1,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid,
              textString="HVAC system"),
            Text(
              extent={{198,276},{244,220}},
              lineColor={0,0,0},
              lineThickness=1,
              fillColor={215,215,215},
              fillPattern=FillPattern.Solid,
              textString="S2",
              textStyle={TextStyle.Bold,TextStyle.UnderLine})}),
                                                Diagram(coordinateSystem(
              preserveAspectRatio=false, extent={{-260,-220},{260,280}})));
    end S2_Batterie;

    model S1 "Model de CTA Menerga S1 presente sur le bâtiment hélios"
    extends Buildings.Fluid.Interfaces.PartialFourPortInterface(
      redeclare replaceable package Medium1 =
            Modelica.Media.Interfaces.PartialCondensingGases,
      redeclare replaceable package Medium2 =
            Modelica.Media.Interfaces.PartialCondensingGases);
      extends Buildings.Fluid.Interfaces.PartialTwoPortInterface(
        redeclare replaceable package Medium =
          Modelica.Media.Interfaces.PartialMedium
          "Liquid Medium in the component");
      parameter Modelica.SIunits.MassFlowRate mWat;
      parameter Modelica.SIunits.MassFlowRate mAir;
      parameter Modelica.SIunits.PressureDifference dp_Dam=150;
      parameter Integer nin=3 "Number of inputs";
      Modelica.Blocks.Interfaces.RealInput u[nin]
        "Connector of Real input signals"                                           annotation (Placement(
            transformation(extent={{-8,-8},{8,8}},        rotation=270,
            origin={8,104})));
      Buildings.Fluid.HeatExchangers.ConstantEffectiveness EchangRecup(
      dp1_nominal=155,
      dp2_nominal=155,
      m1_flow_nominal=4.11,
      m2_flow_nominal=4.11,
      redeclare package Medium1 = Medium1,
      redeclare package Medium2 = Medium1,
      eps=0.75)
      annotation (Placement(transformation(extent={{-12,-30},{-32,-10}})));
      Buildings.BoundaryConditions.WeatherData.Bus weaBus
        "Bus with weather data"
        annotation (Placement(transformation(extent={{-110,66},{-90,86}})));
      Buildings.Fluid.Actuators.Valves.TwoWayEqualPercentage val(
      from_dp=true,
      m_flow_nominal=mWat,
      redeclare package Medium = Medium,
      dpFixed_nominal(displayUnit="kPa"),
      CvData=Buildings.Fluid.Types.CvTypes.Kv,
      Kv=40) annotation (Placement(transformation(
          extent={{-10,10},{10,-10}},
          rotation=90,
          origin={40,-90})));
      Buildings.Controls.Continuous.LimPID heaCoiCon(
        yMax=1,
        yMin=0,
        initType=Modelica.Blocks.Types.InitPID.InitialState,
        Td=60,
        Ti=600,
      controllerType=Modelica.Blocks.Types.SimpleController.P,
      k=0.001)  "Controller for heating coil"
        annotation (Placement(transformation(extent={{80,-76},{68,-64}})));
      Buildings.Fluid.Movers.SpeedControlled_y fanRet(
        tau=60,
        redeclare package Medium = Medium1,
        per(pressure(V_flow={2400/3600,11100/3600}, dp={2600,600})),
        energyDynamics=Modelica.Fluid.Types.Dynamics.DynamicFreeInitial)
        "Return air fan"
        annotation (Placement(transformation(extent={{56,64},{44,76}})));
      Buildings.Fluid.Sensors.VolumeFlowRate senRetFlo(
                                          redeclare package Medium = Medium1,
          m_flow_nominal=mAir) "Sensor for return fan flow rate"
        annotation (Placement(transformation(extent={{70,66},{64,74}})));
      Buildings.Examples.VAVReheat.Controls.FanVFD
                      conFanRet(
        xSet_nominal(displayUnit="m3/s") = mAir/1.2,
        k=0.01,
        Ti=120,
        controllerType=Modelica.Blocks.Types.SimpleController.PI,
        r_N_min=0.3) "Controller for fan"
        annotation (Placement(transformation(extent={{38,88},{46,96}})));
      Buildings.Fluid.Sensors.VolumeFlowRate senSupFlo(
                                          redeclare package Medium = Medium1,
          m_flow_nominal=mAir) "Sensor for supply fan flow rate"
        annotation (Placement(transformation(extent={{68,-24},{76,-16}})));
      Buildings.Fluid.Movers.SpeedControlled_y fanSup1(
        tau=60,
        redeclare package Medium = Medium1,
        per(pressure(V_flow={2400/3600,11100/3600}, dp={2600,600})),
        energyDynamics=Modelica.Fluid.Types.Dynamics.DynamicFreeInitial)
        "Supply air fan"
        annotation (Placement(transformation(extent={{52,-26},{62,-16}})));
      Buildings.Examples.VAVReheat.Controls.ControlBus
                 controlBus "Controle pour les consignes jour et nuit"
        annotation (Placement(transformation(extent={{58,90},{78,110}})));
      Buildings.Fluid.Sensors.RelativePressure dpRetFan(redeclare package
          Medium =
            Medium1) "Pressure difference over return fan" annotation (Placement(
            transformation(
            extent={{-5,5},{5,-5}},
            rotation=90,
            origin={79,15})));
      Buildings.Examples.VAVReheat.Controls.FanVFD
                      conFanSup(
        k=0.01,
        xSet_nominal(displayUnit="Pa") = 300,
        Ti=120,
        controllerType=Modelica.Blocks.Types.SimpleController.PI,
        r_N_min=0.3) "Controller for fan"
        annotation (Placement(transformation(extent={{64,12},{72,20}})));
      Buildings.Examples.VAVReheat.Controls.DuctStaticPressureSetpoint
                                          pSetDuc(
        pMin=50,
        nin=nin,
        k=0.01,
        pMax=400,
        Ti=120,
        controllerType=Modelica.Blocks.Types.SimpleController.PI)
        "Duct static pressure setpoint"
        annotation (Placement(transformation(extent={{52,12},{60,20}})));
      Buildings.Fluid.Sensors.TemperatureTwoPort TCoiHeaOut(
        T_start(displayUnit="K"),
        redeclare package Medium = Medium1,
        m_flow_nominal=mAir) "Heating coil outlet temperature"
        annotation (Placement(transformation(extent={{44,-18},{50,-24}})));
         block CoolingControl
        "Controller for the free cooling and the mechanical cooling"
         extends Modelica.Blocks.Icons.Block;
         parameter Modelica.SIunits.Temperature TRooFre = 22+273.15
          "Maximum temperature above which free cooling is enabled";
         parameter Modelica.SIunits.Temperature TOutFre = 16+273.15
          "Outside temperature above which free cooling is allowed";
         parameter Modelica.SIunits.TemperatureDifference dT = 1
          "Dead-band for free cooling";
         Modelica.Blocks.Interfaces.RealInput TRoo(unit="K")
          "Room air temperature"
           annotation (Placement(transformation(extent={{-140,40},{-100,80}})));
         Modelica.Blocks.Interfaces.RealInput TOut(unit="K")
          "Outside air temperature"
           annotation (Placement(transformation(extent={{-140,-80},{-100,-40}})));
         Modelica.Blocks.Interfaces.RealOutput yF
          "Control signal for free cooling, 1 if free cooling should be provided"
           annotation (Placement(transformation(extent={{100,-10},{120,10}}),
               iconTransformation(extent={{100,-10},{120,10}})));
         Modelica.Blocks.Interfaces.RealOutput yHex
          "Control signal for heat recovery damper"
           annotation (Placement(transformation(extent={{100,-70},{120,-50}}),
               iconTransformation(extent={{100,-70},{120,-50}})));
         initial equation
         yF   = 0.0;
         yHex = 1.0;
         algorithm
         when TRoo > TRooFre and TOut > TOutFre and TOut < TRoo - dT then
           yF   := 1.0;
           yHex := 0.0;
         elsewhen  TOut < TOutFre-dT or TOut > TRoo then
           yF   := 0.0;
           yHex := 1.0;
         end when;
         annotation (Icon(coordinateSystem(preserveAspectRatio=false, extent={{-100,-100},
                   {100,100}}), graphics={
               Text(
                 extent={{-94,38},{-64,80}},
                 lineColor={0,0,255},
                 textString="TRoo"),
               Text(
                 extent={{-94,-82},{-64,-40}},
                 lineColor={0,0,255},
                 textString="TOut"),
               Text(
                 extent={{66,42},{86,74}},
                 lineColor={0,0,255},
                 textString="yC"),
               Text(
                 extent={{-32,100},{24,124}},
                 lineColor={0,0,255},
                 textString="%name"),
               Text(
                 extent={{66,-16},{86,16}},
                 lineColor={0,0,255},
                 textString="yF"),
               Text(
                 extent={{68,-74},{88,-42}},
                 lineColor={0,0,255},
                textString="yHex")}),Documentation(info="<html>
<p>
This block computes a control signal for free cooling and for mechanical cooling.
</p>
</html>",     revisions="<html>
<ul>
<li>
February 27, 2015, by Michael Wetter:<br/>
Changed controller to output setpoint for supply air temperature for cooling coil.
</li>
</ul>
</html>"));
         end CoolingControl;
      CoolingControl coolingControl
        annotation (Placement(transformation(extent={{-82,86},{-74,94}})));
      Buildings.Fluid.MassExchangers.Humidifier_u hum(
        dp_nominal=70,
        redeclare package Medium = Medium1,
        m_flow_nominal=mAir,
        mWat_flow_nominal=mAir*0.005,
        energyDynamics=Modelica.Fluid.Types.Dynamics.SteadyState)
        annotation (Placement(transformation(extent={{38,64},{26,72}})));
      Buildings.Fluid.Sensors.TemperatureTwoPort senTem1(
                                         redeclare package Medium = Medium1,
          m_flow_nominal=mAir) "Temperature sensor"
        annotation (Placement(transformation(extent={{14,64},{24,74}})));
      Buildings.Controls.Continuous.LimPID conHum(
      yMax=1,
      yMin=0,
      Td=60,
      controllerType=Modelica.Blocks.Types.SimpleController.PI,
      k=0.01,
      Ti=120,
        reverseAction=true)
              "Controller for adiabatic cooler"
      annotation (Placement(transformation(extent={{130,96},{124,102}})));

      Modelica.Blocks.Sources.Constant TSepPointAdia(y(
          final quantity="ThermodynamicTemperature",
          final unit="K",
          displayUnit="degC",
          min=0), k=273.15 + 15)
        "Supply air temperature setpoint for heating"
        annotation (Placement(transformation(extent={{142,104},{136,110}})));
      Modelica.Blocks.Logical.Switch swi1 "Switch to select set point"
        annotation (Placement(transformation(extent={{112,80},{100,92}})));
      Modelica.Blocks.Sources.Constant AdiaOff(k=0)
        "Supply air temperature setpoint for heating"
        annotation (Placement(transformation(extent={{148,66},{142,72}})));
      Modelica.Blocks.Logical.LessThreshold yFCOntroler(threshold=0.5)
        "control if the free cooling is close"
        annotation (Placement(transformation(extent={{172,86},{166,92}})));
      Modelica.Blocks.Logical.And and1
        annotation (Placement(transformation(extent={{144,82},{138,88}})));
    Buildings.Fluid.FixedResistances.PressureDrop fil3(
      from_dp=false,
      linearized=false,
      redeclare package Medium = Medium1,
      m_flow_nominal=mAir,
      dp_nominal=dp_Dam) "Filter"
      annotation (Placement(transformation(extent={{78,-26},{90,-14}})));
      Modelica.Blocks.Math.Add add
        annotation (Placement(transformation(extent={{66,-42},{78,-30}})));
      Modelica.Blocks.Continuous.Integrator PumpAuxi8(k=1/(3600*1000))
        annotation (Placement(transformation(extent={{216,-18},{228,-6}})));
      Modelica.Blocks.Continuous.Integrator PumpAuxi1(k=1/(3600*1000))
        annotation (Placement(transformation(extent={{216,14},{228,26}})));
      Modelica.Blocks.Math.Add add1(k1=-1)
        annotation (Placement(transformation(extent={{242,-6},{262,14}})));
      Modelica.Blocks.Continuous.Integrator PumpAuxi2(k=1/(3600*1000))
        annotation (Placement(transformation(extent={{86,-42},{98,-30}})));
      Modelica.Blocks.Interfaces.RealOutput Auxilaire
        "Auxiliairy energie consumme by the CTA" annotation (Placement(
            transformation(
            extent={{10,-10},{-10,10}},
            rotation=180,
            origin={110,-36})));
      Modelica.Blocks.Interfaces.RealOutput EHotDeck
        "Eneergy consumme by the hot deck" annotation (Placement(transformation(
            extent={{10,-10},{-10,10}},
            rotation=180,
            origin={110,-50})));
      Buildings.Fluid.Sensors.EnthalpyFlowRate senEntFlo2(redeclare package
          Medium = Medium1, m_flow_nominal=mAir) annotation (Placement(
            transformation(
            extent={{6,6},{-6,-6}},
            rotation=180,
            origin={0,-22})));
      Buildings.Fluid.Sensors.EnthalpyFlowRate senEntFlo1(redeclare package
          Medium = Medium1, m_flow_nominal=mAir) annotation (Placement(
            transformation(
            extent={{6,6},{-6,-6}},
            rotation=180,
            origin={106,-20})));
      Buildings.Fluid.HeatExchangers.DryEffectivenessNTU BC(
      redeclare package Medium1 = Medium1,
      redeclare package Medium2 = Medium,
      m1_flow_nominal=mAir,
      m2_flow_nominal=mWat,
      configuration=Buildings.Fluid.Types.HeatExchangerConfiguration.CrossFlowUnmixed,
      dp1_nominal=24,
      Q_flow_nominal(displayUnit="kW") = 21500,
      dp2_nominal(displayUnit="kPa") = 3600,
      T_a1_nominal=286.65,
      T_a2_nominal=343.15)
      annotation (Placement(transformation(extent={{18,-50},{38,-30}})));
      Modelica.Blocks.Sources.RealExpression Consommation(y=if (translate.y ==
            1) then 0 else (senEntFlo3.H_flow - ProdIn.H_flow))
        "part de chaleur envoyer vers le REC depuis les chaudières"
        annotation (Placement(transformation(extent={{344,104},{364,124}})));
      Buildings.Fluid.Sensors.EnthalpyFlowRate ProdIn(redeclare package Medium =
            Medium1, m_flow_nominal=mAir) annotation (Placement(transformation(
            extent={{-6,-6},{6,6}},
            rotation=180,
            origin={-42,-68})));
      Buildings.Fluid.Sensors.EnthalpyFlowRate senEntFlo3(redeclare package
          Medium = Medium1, m_flow_nominal=mAir) annotation (Placement(
            transformation(
            extent={{6,6},{-6,-6}},
            rotation=180,
            origin={80,54})));
      Modelica.Blocks.Continuous.Integrator Conso(k=1/(3600*1000))
        annotation (Placement(transformation(extent={{376,108},{388,120}})));
      Modelica.Blocks.Sources.RealExpression Production(y=if (translate.y == 1)
             then (senEntFlo3.H_flow - ProdIn.H_flow) else 0)
        "part de chaleur envoyer vers le REC depuis les chaudières"
        annotation (Placement(transformation(extent={{344,68},{364,88}})));
      Modelica.Blocks.Continuous.Integrator Produ(k=1/(3600*1000))
        annotation (Placement(transformation(extent={{376,72},{388,84}})));
      Modelica.Blocks.Math.RealToInteger translate
        annotation (Placement(transformation(extent={{-44,130},{-24,150}})));
      Buildings.Controls.SetPoints.OccupancySchedule occSch1(occupancy=3600*{6,
            19}) "Occupancy schedule"
        annotation (Placement(transformation(extent={{-206,30},{-186,50}})));
      Buildings.Examples.VAVReheat.Controls.RoomTemperatureSetpoint
                                       TSetRoo(
        TCooOff(displayUnit="degC"),
        THeaOn(displayUnit="degC") = 297.15,
        TCooOn(displayUnit="degC") = 299.15,
        THeaOff(displayUnit="degC") = 294.15)
        annotation (Placement(transformation(extent={{-206,6},{-186,26}})));
      Modelica.Blocks.Routing.RealPassThrough TOut(y(
          final quantity="ThermodynamicTemperature",
          final unit="K",
          displayUnit="degC",
          min=0))
        annotation (Placement(transformation(extent={{-206,60},{-186,80}})));
      Buildings.Examples.VAVReheat.Controls.ModeSelector
                            modeSelector(
        TRooSetCooOcc(displayUnit="degC"),
        delTRooOnOff(displayUnit="degC") = 2,
        TRooSetHeaOcc(displayUnit="degC") = 297.15,
        TSetHeaCoiOut(displayUnit="degC") = 294.15)
        annotation (Placement(transformation(extent={{-206,-20},{-186,0}})));
    Buildings.Utilities.Math.Average ave1(nin=3)
      "Compute average of room temperatures"
      annotation (Placement(transformation(extent={{-208,-78},{-188,-58}})));
    Buildings.Utilities.Math.Min min1(nin=3)
      "Computes lowest room temperature"
      annotation (Placement(transformation(extent={{-208,-52},{-188,-32}})));
      Modelica.Blocks.Interfaces.RealInput TRoom[3]
        annotation (Placement(transformation(extent={{20,-20},{-20,20}},
            rotation=180,
            origin={-108,-90})));
      Modelica.Blocks.Logical.GreaterThreshold greaterThreshold(threshold=
            273.15 + 22)
        annotation (Placement(transformation(extent={{176,74},{168,82}})));
      Modelica.Blocks.Sources.Constant TSupSetHea1(
                                                  y(
          final quantity="ThermodynamicTemperature",
          final unit="K",
          displayUnit="degC",
          min=0), k=273.15 + 19)
        "Supply air temperature setpoint for heating"
        annotation (Placement(transformation(extent={{166,-86},{154,-74}})));
      Modelica.Blocks.Logical.Switch swiPum "Pump switch"
        annotation (Placement(transformation(extent={{134,-94},{120,-80}})));
      Modelica.Blocks.Sources.Constant TSupSetHea2(
                                                  y(
          final quantity="ThermodynamicTemperature",
          final unit="K",
          displayUnit="degC",
          min=0), k=273.15 + 15)
        "Supply air temperature setpoint for heating"
        annotation (Placement(transformation(extent={{166,-106},{154,-94}})));
      FBM.Components.WorkingDayOrWeekEnd workingDayOrWeekEnd
        annotation (Placement(transformation(extent={{194,-98},{174,-78}})));
      Buildings.Fluid.Actuators.Dampers.VAVBoxExponential vavDam(
        redeclare package Medium = Medium1,
        m_flow_nominal=mAir,
      dp_nominal=dp_Dam)
        annotation (Placement(transformation(extent={{-64,-36},{-44,-16}})));
      Buildings.Fluid.Actuators.Dampers.VAVBoxExponential vavDam1(
        redeclare package Medium = Medium1,
        m_flow_nominal=mAir,
      dp_nominal=dp_Dam)
        annotation (Placement(transformation(extent={{-28,-56},{-8,-36}})));
      Buildings.Fluid.Actuators.Dampers.VAVBoxExponential vavDam2(
        redeclare package Medium = Medium1,
        m_flow_nominal=mAir,
      dp_nominal=dp_Dam)
        annotation (Placement(transformation(extent={{4,34},{-16,54}})));
      Buildings.Fluid.Actuators.Dampers.VAVBoxExponential vavDam3(
        redeclare package Medium = Medium1,
        m_flow_nominal=mAir,
      dp_nominal=dp_Dam)
        annotation (Placement(transformation(extent={{12,-12},{-8,8}})));
    equation
    connect(val.y, heaCoiCon.y) annotation (Line(
        points={{52,-90},{52,-70},{67.4,-70}},
        color={0,0,127},
        pattern=LinePattern.Dash));
      connect(senRetFlo.port_b, fanRet.port_a)
        annotation (Line(points={{64,70},{56,70}}, color={0,127,255}));
      connect(senRetFlo.V_flow, conFanRet.u_m) annotation (Line(
          points={{67,74.4},{67,81.2},{42,81.2},{42,87.2}},
          color={0,0,127},
          pattern=LinePattern.Dash));
      connect(fanSup1.port_b, senSupFlo.port_a) annotation (Line(points={{62,-21},
              {68,-21},{68,-20}},      color={0,127,255}));
      connect(senSupFlo.V_flow, conFanRet.u) annotation (Line(
          points={{72,-15.6},{88,-15.6},{88,92},{37.2,92}},
          color={0,0,127},
          pattern=LinePattern.Dash));
      connect(conFanRet.y, fanRet.y) annotation (Line(
          points={{46.4,92},{50.12,92},{50.12,77.2}},
          color={0,0,127},
          pattern=LinePattern.Dash));
      connect(controlBus, conFanRet.controlBus) annotation (Line(
          points={{68,100},{62,100},{62,95.2},{39.2,95.2}},
          color={255,204,51},
          thickness=0.5), Text(
          string="%first",
          index=-1,
          extent={{-6,3},{-6,3}}));
      connect(dpRetFan.p_rel,conFanSup. u_m) annotation (Line(points={{74.5,15},{75.25,
              15},{75.25,11.2},{68,11.2}},
                                        color={0,0,127},
          pattern=LinePattern.Dash));
      connect(conFanSup.u,pSetDuc. y)
        annotation (Line(points={{63.2,16},{62,16},{60.4,16}},
                                                     color={0,0,127},
          pattern=LinePattern.Dash));
      connect(conFanSup.y, fanSup1.y)
        annotation (Line(points={{72.4,16},{74,16},{74,2},{57,2},{57,-15},{56.9,-15}},
                                                            color={0,0,127},
          pattern=LinePattern.Dash));
      connect(weaBus.TDryBul, pSetDuc.TOut) annotation (Line(
          points={{-100,76},{18,76},{18,19.2},{51.2,19.2}},
          color={255,204,51},
          thickness=0.5), Text(
          string="%first",
          index=-1,
          extent={{-6,3},{-6,3}}));
      connect(controlBus, conFanSup.controlBus) annotation (Line(
          points={{68,100},{62,100},{62,19.2},{65.2,19.2}},
          color={255,204,51},
          thickness=0.5), Text(
          string="%first",
          index=-1,
          extent={{-6,3},{-6,3}}));
      connect(TCoiHeaOut.T, heaCoiCon.u_m) annotation (Line(
          points={{47,-24.3},{47,-51.15},{74,-51.15},{74,-77.2}},
          color={0,0,127},
          pattern=LinePattern.Dash));
      connect(weaBus.TDryBul, coolingControl.TOut) annotation (Line(
          points={{-100,76},{-92,76},{-92,87.6},{-82.8,87.6}},
          color={255,204,51},
          thickness=0.5), Text(
          string="%first",
          index=-1,
          extent={{-6,3},{-6,3}}));
      connect(hum.port_a, fanRet.port_b)
        annotation (Line(points={{38,68},{38,70},{44,70}}, color={0,127,255}));
      connect(hum.port_b, senTem1.port_b) annotation (Line(points={{26,68},{26,
              68},{26,69},{24,69}},
                               color={0,127,255}));
      connect(swi1.y, hum.u) annotation (Line(
          points={{99.4,86},{40,86},{40,70.4},{39.2,70.4}},
          color={0,0,127},
          pattern=LinePattern.Dash));
    connect(senTem1.T, conHum.u_m) annotation (Line(
        points={{19,74.5},{18,74.5},{18,98},{72,98},{72,95.4},{127,95.4}},
        color={0,0,127},
        pattern=LinePattern.Dash));
    connect(conHum.y, swi1.u1) annotation (Line(points={{123.7,99},{123.7,
            91.5},{113.2,91.5},{113.2,90.8}}, color={0,0,127}));
      connect(AdiaOff.y, swi1.u3) annotation (Line(points={{141.7,69},{130.85,
              69},{130.85,81.2},{113.2,81.2}},
                                   color={0,0,127}));
    connect(conHum.u_s, TSepPointAdia.y) annotation (Line(
        points={{130.6,99},{131.3,99},{131.3,107},{135.7,107}},
        color={0,0,127},
        pattern=LinePattern.Dash));
      connect(coolingControl.yF, yFCOntroler.u) annotation (Line(
          points={{-73.6,90},{174,90},{174,98},{174,92},{174,89},{172.6,89}},
          color={0,0,127},
          pattern=LinePattern.Dash));
      connect(and1.u1, yFCOntroler.y) annotation (Line(
          points={{144.6,85},{152,85},{152,86},{160,86},{160,89},{165.7,89}},
          color={255,0,255},
          pattern=LinePattern.Dash));
      connect(and1.y, swi1.u2) annotation (Line(
          points={{137.7,85},{134,85},{134,86},{113.2,86}},
          color={255,0,255},
          pattern=LinePattern.Dash));
      connect(dpRetFan.port_a, fanSup1.port_b) annotation (Line(points={{79,10},{72,
              10},{72,6},{64,6},{64,-21},{62,-21}},
                                      color={0,127,255}));
      connect(u, pSetDuc.u) annotation (Line(points={{8,104},{8,104},{8,16},{51.2,16}},
            color={0,0,127}));
      connect(fanRet.port_a, dpRetFan.port_b) annotation (Line(points={{56,70},
              {68,70},{68,20},{79,20}}, color={0,127,255}));
      connect(TCoiHeaOut.port_b, fanSup1.port_a)
        annotation (Line(points={{50,-21},{52,-21}}, color={0,127,255}));
      connect(senSupFlo.port_b, fil3.port_a) annotation (Line(points={{76,-20},
              {78,-20}},                   color={0,127,255}));
      connect(fanRet.P, add.u1) annotation (Line(points={{43.4,74.8},{43.4,
              -36.6},{64.8,-36.6},{64.8,-32.4}}, color={0,0,127}));
      connect(fanSup1.P, add.u2) annotation (Line(points={{62.5,-17},{62.5,
              -43.25},{64.8,-43.25},{64.8,-39.6}}, color={0,0,127}));
      connect(PumpAuxi8.y, add1.u2) annotation (Line(points={{228.6,-12},{234,
              -12},{234,-2},{240,-2}}, color={0,0,127}));
      connect(PumpAuxi1.y, add1.u1) annotation (Line(points={{228.6,20},{234,20},
              {234,10},{240,10}}, color={0,0,127}));
      connect(add1.y, EHotDeck) annotation (Line(points={{263,4},{274,4},{274,
              -50},{110,-50}}, color={0,0,127}));
      connect(Auxilaire, PumpAuxi2.y) annotation (Line(points={{110,-36},{98.6,
              -36}},             color={0,0,127}));
      connect(add.y, PumpAuxi2.u) annotation (Line(points={{78.6,-36},{84.8,-36}},
                           color={0,0,127}));
    connect(EchangRecup.port_b2, senEntFlo2.port_a) annotation (Line(points={
            {-12,-26},{-12,-22},{-6,-22}}, color={0,127,255}));
      connect(port_b2, senEntFlo1.port_b) annotation (Line(points={{-100,-60},{
              114,-60},{114,-20},{112,-20}}, color={0,127,255}));
      connect(senEntFlo1.port_a, fil3.port_b)
        annotation (Line(points={{100,-20},{90,-20}}, color={0,127,255}));
      connect(senEntFlo2.H_flow, PumpAuxi1.u) annotation (Line(points={{0,-15.4},
              {108,-15.4},{108,20},{214.8,20}}, color={0,0,127}));
      connect(senEntFlo1.H_flow, PumpAuxi8.u) annotation (Line(points={{106,
              -13.4},{160,-13.4},{160,-12},{214.8,-12}}, color={0,0,127}));
    connect(senEntFlo2.port_b, BC.port_a1) annotation (Line(points={{6,-22},{
            12,-22},{12,-34},{18,-34}}, color={0,127,255}));
    connect(BC.port_b1, TCoiHeaOut.port_a) annotation (Line(points={{38,-34},
            {42,-34},{42,-21},{44,-21}}, color={0,127,255}));
      connect(ProdIn.port_a, port_a2) annotation (Line(points={{-36,-68},{106,
              -68},{106,-60},{100,-60}}, color={0,127,255}));
      connect(senEntFlo3.port_b, port_b1) annotation (Line(points={{86,54},{92,
              54},{92,60},{100,60}}, color={0,127,255}));
    connect(EchangRecup.port_b1, senEntFlo3.port_a) annotation (Line(points={
            {-32,-14},{-36,-14},{-36,54},{74,54}}, color={0,127,255}));
      connect(Consommation.y, Conso.u)
        annotation (Line(points={{365,114},{374.8,114}}, color={0,0,127}));
      connect(Production.y, Produ.u)
        annotation (Line(points={{365,78},{374.8,78}}, color={0,0,127}));
      connect(coolingControl.yF, translate.u) annotation (Line(points={{-73.6,
              90},{-56,90},{-56,140},{-46,140}}, color={0,0,127}));
    connect(BC.port_a2, val.port_b) annotation (Line(points={{38,-46},{40,-46},
            {40,-80}}, color={0,127,255}));
    connect(port_a, val.port_a) annotation (Line(points={{-100,0},{-124,0},{-124,
            -100},{40,-100}}, color={0,127,255}));
    connect(BC.port_b2, port_b) annotation (Line(points={{18,-46},{132,-46},{
            132,0},{100,0}}, color={0,127,255}));
      connect(controlBus,modeSelector. cb) annotation (Line(
          points={{68,100},{-114,100},{-114,-3.18182},{-202.818,-3.18182}},
          color={255,204,51},
          thickness=0.5), Text(
          string="%first",
          index=-1,
          extent={{-6,3},{-6,3}}));
      connect(weaBus.TDryBul, TOut.u) annotation (Line(
          points={{-100,76},{-252,76},{-252,70},{-208,70}},
          color={255,204,51},
          thickness=0.5), Text(
          string="%first",
          index=-1,
          extent={{-6,3},{-6,3}}));
      connect(TOut.y, controlBus.TOut) annotation (Line(points={{-185,70},{-152,
              70},{-152,100},{68,100}}, color={0,0,127}), Text(
          string="%second",
          index=1,
          extent={{6,3},{6,3}}));
      connect(occSch1.occupied, controlBus.occupied) annotation (Line(points={{
              -185,34},{-144,34},{-144,100},{68,100}}, color={255,0,255}), Text(
          string="%second",
          index=1,
          extent={{6,3},{6,3}}));
      connect(occSch1.tNexOcc, controlBus.dTNexOcc) annotation (Line(points={{
              -185,46},{-138,46},{-138,100},{68,100}}, color={0,0,127}), Text(
          string="%second",
          index=1,
          extent={{6,3},{6,3}}));
      connect(TSetRoo.controlBus, controlBus) annotation (Line(
          points={{-194,22},{-194,22},{-114,22},{-114,100},{68,100}},
          color={255,204,51},
          thickness=0.5), Text(
          string="%second",
          index=1,
          extent={{6,3},{6,3}}));
      connect(ave1.y, coolingControl.TRoo) annotation (Line(points={{-187,-68},
              {-130,-68},{-130,92.4},{-82.8,92.4}}, color={0,0,127}));
      connect(min1.y, controlBus.TRooMin) annotation (Line(points={{-187,-42},{
              -134,-42},{-134,32},{68,32},{68,100}}, color={0,0,127}), Text(
          string="%second",
          index=1,
          extent={{6,3},{6,3}}));
      connect(ave1.y, controlBus.TRooAve) annotation (Line(points={{-187,-68},{
              68,-68},{68,100}}, color={0,0,127}), Text(
          string="%second",
          index=1,
          extent={{6,3},{6,3}}));
      connect(TRoom, min1.u) annotation (Line(points={{-108,-90},{-236,-90},{
              -236,-42},{-210,-42}}, color={0,0,127}));
      connect(TRoom, ave1.u) annotation (Line(points={{-108,-90},{-236,-90},{
              -236,-68},{-210,-68}}, color={0,0,127}));
      connect(and1.u2, greaterThreshold.y) annotation (Line(points={{144.6,82.6},
              {159.3,82.6},{159.3,78},{167.6,78}}, color={255,0,255}));
      connect(ave1.y, greaterThreshold.u) annotation (Line(points={{-187,-68},{
              -176,-68},{-176,108},{176.8,108},{176.8,78}}, color={0,0,127}));
      connect(swiPum.u1, TSupSetHea1.y) annotation (Line(points={{135.4,-81.4},
              {146,-81.4},{146,-80},{153.4,-80}}, color={0,0,127}));
      connect(swiPum.y, heaCoiCon.u_s) annotation (Line(points={{119.3,-87},{
              102,-87},{102,-70},{81.2,-70}}, color={0,0,127}));
      connect(swiPum.u3, TSupSetHea2.y) annotation (Line(points={{135.4,-92.6},
              {143.7,-92.6},{143.7,-100},{153.4,-100}}, color={0,0,127}));
      connect(swiPum.u2, workingDayOrWeekEnd.y) annotation (Line(points={{135.4,
              -87},{154.7,-87},{154.7,-88},{173,-88}}, color={255,0,255}));
    connect(vavDam.port_b, EchangRecup.port_a2) annotation (Line(points={{-44,
            -26},{-38,-26},{-32,-26}}, color={0,127,255}));
      connect(coolingControl.yHex, vavDam.y) annotation (Line(points={{-73.6,87.6},
              {-73.6,86.8},{-54,86.8},{-54,-14}}, color={0,0,127}));
      connect(fanSup1.port_a, vavDam1.port_b) annotation (Line(points={{52,-21},{52,
              -21},{52,-46},{-8,-46}}, color={0,127,255}));
      connect(coolingControl.yF, vavDam1.y) annotation (Line(points={{-73.6,90},{-54,
              90},{-54,-10},{-36,-10},{-36,-34},{-18,-34}}, color={0,0,127}));
      connect(ProdIn.port_b, vavDam.port_a) annotation (Line(points={{-48,-68},{-78,
              -68},{-78,-26},{-64,-26}}, color={0,127,255}));
      connect(ProdIn.port_b, vavDam1.port_a) annotation (Line(points={{-48,-68},{-62,
              -68},{-62,-46},{-28,-46}}, color={0,127,255}));
      connect(senEntFlo3.port_a, vavDam2.port_b) annotation (Line(points={{74,54},
              {-22,54},{-22,44},{-16,44}}, color={0,127,255}));
      connect(senTem1.port_a, vavDam2.port_a) annotation (Line(points={{14,69},{14,
              69},{14,44},{4,44}}, color={0,127,255}));
      connect(coolingControl.yF, vavDam2.y) annotation (Line(points={{-73.6,90},{-74,
              90},{-74,56},{-6,56}}, color={0,0,127}));
      connect(port_a1, senRetFlo.port_a) annotation (Line(points={{-100,60},{74,60},
              {74,70},{70,70}}, color={0,127,255}));
      connect(vavDam3.port_a, senTem1.port_a)
        annotation (Line(points={{12,-2},{14,-2},{14,69}}, color={0,127,255}));
    connect(vavDam3.port_b, EchangRecup.port_a1) annotation (Line(points={{-8,
            -2},{-12,-2},{-12,-14}}, color={0,127,255}));
      connect(coolingControl.yHex, vavDam3.y) annotation (Line(points={{-73.6,87.6},
              {-37.8,87.6},{-37.8,10},{2,10}}, color={0,0,127}));
       annotation (Icon(coordinateSystem(preserveAspectRatio=false, extent={{-100,
                -100},{100,100}}),
                       graphics={Bitmap(
              extent={{-100,100},{100,-100}},
              imageSource=
                  ""
                   +
                  "09RYkI8NF+A/ECT4r8KC/Nd//rOjLx16/8OPz318ntrltGshHJ4Ph+fd3rXaMf33f3hrjR454YgyM59vqN/9XAPWFcE3IEjwTRJJ1suHD+zft+di8+Wz7//dOzpGeiJIEmqlck/T888+8xTWk8E9IUhwbzwet3FXfUP9jus3W8/+7YPO7h7SE0ECKyst2fuDF2qqrCw2/oH/D0GC+2FZdmtN9daaantf/4efXGi5ei0SiZIeChJGBo+3fVvdc7t2mgzFpGeBBIAgwUMxGw1mo+HVHx1tbvnHRxcuDg45SE8EVCvWaxt27nh6+5P8J54gPQskDAQJHgGfz2/cVd+4q35wyPHGb0+OuD2kJwLqFOSrf/H6cV2RhvQgkHjweS6shl6nLbGYSE8BNCqxmFAjWB0ECQAAqIAgAQAAFRAkAACgAoIEAABUQJAAAIAKCBIQQ3aDbbgn/FGAIAQJiDHodVfOnztx/FhdbU1qKpbEEZOamlpXW3Pi+LEr588Z9DgcD4jBqwCQpNdp9Trtj48emQwEWq5+ce2L61/dah/3+UnPtSHkKeSVWyq2ba3dvq1uIx8AD/RAkIAKuTk5e5t2723azTBMKBTq7LG1trW33upobe+IRCKkp0sSPB6vsqK8ckt5pbWirLREKBCQngjgLggSUEcoFNbV1tTV1jAM83Us1tvX33qrvdvWe7O1bXRsnPR0CUaZp6iutJZaTJVbKkxGQ2pCneAOGw2CBFRL5XBKLeZSi5lhmKWlJYdzuK29s8fe2z842D8wFAqHSQ9IHaFQaCzWGfR6i8lorSjTaYtSUlJIDwXwUBAkSBgsy65cc7pzTzA4NzDk6LHbBx3OwSGHrbdvYWFjfb6XkcGzmIx6nVavLSoxm4t1WpEok/RQAKuEIEECE4kyq6wVVdaKlZvRaHTQ4ewbGHQ4hr1jY57RUa93bHpmhuyQcSTJylKp8vJVKmWeQq8tMhTr9dqi9PR00nMBxAeCBMmDy+WWmE0l5ru2IV9cXPT5J9xer8cz6vZ6Pd5Rj3fUPzE5GQiQmvOB1CqlNDdHmpurVinzVSq1WpmvUinkMnw5HpIbnt+Q5NLS0tQqpVqlZGrvun8yEBj3+aenZ2ZmZ6dnZqdnZm5PT4+N+8Lh+fD8fDgcDs/PB4NzcZ9HJMoU8PkCgUAo4PP5fGWeIlsiyRKLJVniLLFYIslSyGW5OTlx/70A9EOQYIPKzcl5mNf9wNTthYWFSCQSiUYjkWj0X9HY17Hw/PwDf1DA53NSOTwuj8tN53G5PB4vIyMDy30A7gNBArgfJARg3WDrIAAAoAKCBAAAVECQAACACggSAABQAUECAAAqIEgAAEAFBAkAAKiAIAEAABUQJAAAoEIcdmrostke/0Eg4XjcXtIjAI08bu9Hn3xKegpYb3EJQRyC9Nnlls8utzz+4wBAEuiy2btsdtJTQELCR3YAAEAFBAkAAKiAIAEAABUQJAAAoAKCBAAAVECQAACACggSAABQAUECAAAqIEgAAEAFBAkAAKiAIAEAABUQJAAAoAKCBAAAVECQAACACggSAABQAUECAAAqIEgAAEAFBAkAAKiAIAEAABUQJAAAoAKCBAAAVPg3pdXlZSKkN84AAAAASUVORK5CYII=",
              fileName="modelica://ClaRa/figures/Components/LUVO.png")}));
    end S1;

    model N3
      "Modèle de CTA N3 du bâtiment hélios (avec recuptérateur à roue non hygroscopique)"
     extends Buildings.Fluid.Interfaces.PartialFourPortInterface(
      redeclare replaceable package Medium1 =
            Modelica.Media.Interfaces.PartialCondensingGases,
      redeclare replaceable package Medium2 =
            Modelica.Media.Interfaces.PartialCondensingGases);
      extends Buildings.Fluid.Interfaces.PartialTwoPortInterface(
        redeclare replaceable package Medium =
          Modelica.Media.Interfaces.PartialMedium
          "Liquid Medium in the component");
      parameter Modelica.SIunits.PressureDifference dp_Dam=150;
      parameter Modelica.SIunits.MassFlowRate mAir;
      parameter Modelica.SIunits.MassFlowRate mWat;
      parameter Integer nin=3 "Number of inputs";
      Buildings.Fluid.Movers.SpeedControlled_y fanSup(
        redeclare package Medium = Medium1,
        per(pressure(V_flow={2400/3600,6500/3600,11100/3600}, dp={2600,1900,600})),
        tau=60,
        energyDynamics=Modelica.Fluid.Types.Dynamics.FixedInitial)
        "Supply air fan"
        annotation (Placement(transformation(extent={{52,36},{32,56}})));
      Buildings.Fluid.Movers.SpeedControlled_y fanSup1(
        tau=60,
        redeclare package Medium = Medium1,
        per(pressure(V_flow={2400/3600,6500/3600,11100/3600}, dp={2600,1900,600})),
        energyDynamics=Modelica.Fluid.Types.Dynamics.FixedInitial)
        "Supply air fan"
        annotation (Placement(transformation(extent={{54,-44},{74,-24}})));
      Buildings.Fluid.Actuators.Valves.TwoWayEqualPercentage val(
      from_dp=true,
      m_flow_nominal=mWat,
      redeclare package Medium = Medium,
      CvData=Buildings.Fluid.Types.CvTypes.Kv,
      dpValve_nominal(displayUnit="Pa"),
      Kv=25) annotation (Placement(transformation(
          extent={{-10,10},{10,-10}},
          rotation=90,
          origin={40,-66})));
      Buildings.Controls.Continuous.LimPID heaCoiCon(
        yMax=1,
        yMin=0,
        initType=Modelica.Blocks.Types.InitPID.InitialState,
        Td=60,
        Ti=600,
      controllerType=Modelica.Blocks.Types.SimpleController.P,
      k=0.001)  "Controller for heating coil"
        annotation (Placement(transformation(extent={{78,-78},{66,-66}})));
      Modelica.Blocks.Sources.Constant TSupSetHea(y(
          final quantity="ThermodynamicTemperature",
          final unit="K",
          displayUnit="degC",
          min=0), k=273.15 + 19)
        "Supply air temperature setpoint for heating"
        annotation (Placement(transformation(extent={{186,-66},{174,-54}})));
      Buildings.Fluid.Sensors.TemperatureTwoPort TCoiHeaOut(
        T_start(displayUnit="K"),
        redeclare package Medium = Medium1,
        m_flow_nominal=mAir) "Heating coil outlet temperature"
        annotation (Placement(transformation(extent={{42,-22},{48,-28}})));
      Buildings.Fluid.Sensors.RelativePressure dpRetFan(redeclare package
          Medium =
            Medium1) "Pressure difference over return fan" annotation (Placement(
            transformation(
            extent={{-5,5},{5,-5}},
            rotation=90,
            origin={79,5})));
      Buildings.Fluid.Sensors.VolumeFlowRate senRetFlo(redeclare package Medium =
            Medium1, m_flow_nominal=mAir) "Sensor for return fan flow rate"
        annotation (Placement(transformation(extent={{64,42},{58,50}})));
      Buildings.Fluid.Sensors.VolumeFlowRate senSupFlo(redeclare package Medium =
            Medium1, m_flow_nominal=mAir) "Sensor for supply fan flow rate"
        annotation (Placement(transformation(extent={{84,-36},{92,-28}})));
      Buildings.Examples.VAVReheat.Controls.FanVFD
                      conFanRet(
        xSet_nominal(displayUnit="m3/s") = mAir/1.2,
        k=0.01,
        Ti=120,
        controllerType=Modelica.Blocks.Types.SimpleController.PI,
        r_N_min=0.3) "Controller for fan"
        annotation (Placement(transformation(extent={{60,78},{68,86}})));
      Buildings.BoundaryConditions.WeatherData.Bus weaBus
        "Bus with weather data"
        annotation (Placement(transformation(extent={{-108,62},{-88,82}})));
      Buildings.Examples.VAVReheat.Controls.FanVFD
                      conFanSup(
        xSet_nominal(displayUnit="Pa") = 470,
        initType=Modelica.Blocks.Types.Init.SteadyState,
        k=0.01,
        Ti=120,
        controllerType=Modelica.Blocks.Types.SimpleController.PI,
        r_N_min=0.3) "Controller for fan"
        annotation (Placement(transformation(extent={{60,2},{68,10}})));
      Buildings.Examples.VAVReheat.Controls.ControlBus
                 controlBus "Controle pour les consignes jour et nuit"
        annotation (Placement(transformation(extent={{-110,20},{-90,40}})));
             block CoolingControl
        "Controller for the free cooling and the mechanical cooling"
               extends Modelica.Blocks.Icons.Block;
               parameter Modelica.SIunits.Temperature TRooFre=22 + 273.15
          "Maximum temperature above which free cooling is enabled";
               parameter Modelica.SIunits.Temperature TOutFre=16 + 273.15
          "Outside temperature above which free cooling is allowed";
               parameter Modelica.SIunits.TemperatureDifference dT=1
          "Dead-band for free cooling";
               Modelica.Blocks.Interfaces.RealInput TRoo(unit="K")
          "Room air temperature"
                 annotation (Placement(transformation(extent={{-140,40},{-100,80}})));
               Modelica.Blocks.Interfaces.RealInput TOut(unit="K")
          "Outside air temperature"
                 annotation (Placement(transformation(extent=
                 {{-140,-80},{-100,-40}})));
               Modelica.Blocks.Interfaces.RealOutput yF
          "Control signal for free cooling, 1 if free cooling should be provided"
                 annotation (Placement(transformation(extent={{100,-10},{120,10}}),
               iconTransformation(extent={{100,-10},{120,10}})));
               Modelica.Blocks.Interfaces.RealOutput yHex
          "Control signal for heat recovery damper" annotation (Placement(
              transformation(extent={{100,-70},{120,-50}}),
               iconTransformation(extent={{100,-70},{120,-50}})));
             initial equation
               yF = 0.0;
               yHex = 1.0;
             algorithm
               when TRoo > TRooFre and TOut > TOutFre and TOut < TRoo - dT then
                 yF := 1.0;
                 yHex := 0.0;
               elsewhen TOut < TOutFre - dT or TOut > TRoo then
                 yF := 0.0;
                 yHex := 1.0;
               end when;
               annotation (Icon(coordinateSystem(preserveAspectRatio=false, extent={{-100,
                  -100},
                   {100,100}}), graphics={
               Text(
                 extent={{-94,38},{-64,80}},
                 lineColor={0,0,255},
                 textString="TRoo"),
               Text(
                 extent={{-94,-82},{-64,-40}},
                 lineColor={0,0,255},
                 textString="TOut"),
               Text(
                 extent={{66,42},{86,74}},
                 lineColor={0,0,255},
                 textString="yC"),
               Text(
                 extent={{-32,100},{24,124}},
                 lineColor={0,0,255},
                 textString="%name"),
               Text(
                 extent={{66,-16},{86,16}},
                 lineColor={0,0,255},
                 textString="yF"),
               Text(
                 extent={{68,-74},{88,-42}},
                 lineColor={0,0,255},
                textString="yHex")}),Documentation(info="<html>
<p>
Ce bloc calcul si le free-cooling est autorisé <br>
Si il l'est, l'ouverture et la fermeture de deux dampers bypass le recupérateur de chaleur et la batterie chaude.<br><br>
L'autorisation dépend de deux températures. Une sur la température extérieur et l'autre sur la température intérieur. Il n'est permet d'utiliser le free-cooling
que si la température interieur à dépasser TRooFre (généralement égale à la consigne de jour).<br> Il est interdit d'utiliser le free-cooling si la température extérieur
est trop basse (typiquement la consigne de nuit)

</p>
</html>"));
             end CoolingControl;
      CoolingControl coolingControl
        annotation (Placement(transformation(extent={{-78,78},{-64,90}})));
      Buildings.Controls.SetPoints.OccupancySchedule occSch1(occupancy=3600*{8,
            17}) "Occupancy schedule"
        annotation (Placement(transformation(extent={{-226,10},{-206,30}})));
      Buildings.Examples.VAVReheat.Controls.RoomTemperatureSetpoint
                                       TSetRoo(
        TCooOff(displayUnit="degC"),
        TCooOn(displayUnit="degC") = 299.15,
        THeaOn(displayUnit="degC") = 297.15,
        THeaOff(displayUnit="degC") = 291.15)
        annotation (Placement(transformation(extent={{-226,-14},{-206,6}})));
      Modelica.Blocks.Routing.RealPassThrough TOut(y(
          final quantity="ThermodynamicTemperature",
          final unit="K",
          displayUnit="degC",
          min=0))
        annotation (Placement(transformation(extent={{-226,40},{-206,60}})));
      Modelica.Blocks.Interfaces.RealInput TRooMin
        "Minimum temperature in the room" annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=270,
            origin={12,104})));
      Modelica.Blocks.Interfaces.RealInput TRooAve
        "Minimum temperature in the room" annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=270,
            origin={60,104})));
      Buildings.Examples.VAVReheat.Controls.ModeSelector
                            modeSelector(
        TRooSetCooOcc(displayUnit="degC"),
        delTRooOnOff(displayUnit="degC") = 3,
        TRooSetHeaOcc(displayUnit="degC") = 297.15,
        TSetHeaCoiOut(displayUnit="degC") = 297.15)
        annotation (Placement(transformation(extent={{-226,-40},{-206,-20}})));
      Buildings.Fluid.HeatExchangers.ConstantEffectiveness EchangRecup(
        redeclare package Medium1 = Medium1,
        redeclare package Medium2 = Medium1,
        m1_flow_nominal=mAir,
        m2_flow_nominal=mAir,
        dp1_nominal=216,
        dp2_nominal=211,
        eps=0.75) annotation (Placement(transformation(extent={{-4,-26},{-24,-6}})));
      Modelica.Blocks.Math.Add add
        annotation (Placement(transformation(extent={{72,-24},{84,-12}})));
      Modelica.Blocks.Interfaces.RealOutput Auxilaire
        "Auxiliairy energie consumme by the CTA" annotation (Placement(
            transformation(
            extent={{10,-10},{-10,10}},
            rotation=180,
            origin={110,-14})));
      Modelica.Blocks.Continuous.Integrator PumpAuxi8(k=1/(3600*1000))
        annotation (Placement(transformation(extent={{196,-38},{208,-26}})));
      Buildings.Fluid.Sensors.EnthalpyFlowRate senEntFlo1(redeclare package
          Medium = Medium1, m_flow_nominal=mAir) annotation (Placement(
            transformation(
            extent={{6,6},{-6,-6}},
            rotation=180,
            origin={128,-32})));
      Buildings.Fluid.Sensors.EnthalpyFlowRate senEntFlo2(redeclare package
          Medium = Medium1, m_flow_nominal=mAir) annotation (Placement(
            transformation(
            extent={{6,6},{-6,-6}},
            rotation=180,
            origin={6,-22})));
      Modelica.Blocks.Continuous.Integrator PumpAuxi1(k=1/(3600*1000))
        annotation (Placement(transformation(extent={{196,-6},{208,6}})));
      Modelica.Blocks.Math.Add add1(k1=-1)
        annotation (Placement(transformation(extent={{222,-26},{242,-6}})));
      Modelica.Blocks.Interfaces.RealOutput EHotDeck
        "Eneergy consumme by the hot deck" annotation (Placement(transformation(
            extent={{10,-10},{-10,10}},
            rotation=180,
            origin={110,-28})));
      Modelica.Blocks.Continuous.Integrator PumpAuxi2(k=1/(3600*1000))
        annotation (Placement(transformation(extent={{88,-20},{100,-8}})));
      Buildings.Fluid.HeatExchangers.DryEffectivenessNTU BC(
        redeclare package Medium1 = Medium1,
        redeclare package Medium2 = Medium,
        m1_flow_nominal=mAir,
        m2_flow_nominal=mWat,
        dp1_nominal=29,
        Q_flow_nominal(displayUnit="kW") = 34540,
        configuration=Buildings.Fluid.Types.HeatExchangerConfiguration.CrossFlowUnmixed,
        dp2_nominal(displayUnit="kPa") = 13200,
      T_a1_nominal=286.95,
      T_a2_nominal=343.15)
        annotation (Placement(transformation(extent={{18,-38},{38,-18}})));
      Modelica.Blocks.Sources.RealExpression Consommation(y=if (translate.y ==
            1) then 0 else (senEntFlo3.H_flow - ProdIn.H_flow))
        "part de chaleur envoyer vers le REC depuis les chaudières"
        annotation (Placement(transformation(extent={{-14,130},{6,150}})));
      Modelica.Blocks.Continuous.Integrator Conso(k=1/(3600*1000))
        annotation (Placement(transformation(extent={{18,134},{30,146}})));
      Buildings.Fluid.Sensors.EnthalpyFlowRate senEntFlo3(redeclare package
          Medium = Medium1, m_flow_nominal=mAir) annotation (Placement(
            transformation(
            extent={{6,6},{-6,-6}},
            rotation=180,
            origin={78,68})));
      Buildings.Fluid.Sensors.EnthalpyFlowRate ProdIn(redeclare package Medium =
            Medium1, m_flow_nominal=mAir) annotation (Placement(transformation(
            extent={{-6,-6},{6,6}},
            rotation=180,
            origin={82,-58})));
      Modelica.Blocks.Sources.RealExpression Production(y=if (translate.y == 1)
             then (senEntFlo3.H_flow - ProdIn.H_flow) else 0)
        "part de chaleur envoyer vers le REC depuis les chaudières"
        annotation (Placement(transformation(extent={{-14,152},{6,172}})));
      Modelica.Blocks.Continuous.Integrator Produ(k=1/(3600*1000))
        annotation (Placement(transformation(extent={{18,156},{30,168}})));
      Modelica.Blocks.Math.RealToInteger translate
        annotation (Placement(transformation(extent={{-44,130},{-24,150}})));
      Buildings.Examples.VAVReheat.Controls.DuctStaticPressureSetpoint
                                          pSetDuc(
        pMin=50,
        pMax=590,
        k=0.01,
        Ti=120,
        controllerType=Modelica.Blocks.Types.SimpleController.PI,
        nin=3) "Duct static pressure setpoint"
        annotation (Placement(transformation(extent={{46,2},{54,10}})));
      Modelica.Blocks.Logical.Switch swiPum "Pump switch"
        annotation (Placement(transformation(extent={{124,-104},{110,-90}})));
      Modelica.Blocks.Sources.Constant TSupSetHea1(
                                                  y(
          final quantity="ThermodynamicTemperature",
          final unit="K",
          displayUnit="degC",
          min=0), k=273.15 + 15)
        "Supply air temperature setpoint for heating"
        annotation (Placement(transformation(extent={{156,-116},{144,-104}})));
      FBM.Components.WorkingDayOrWeekEnd workingDayOrWeekEnd
        annotation (Placement(transformation(extent={{180,-132},{160,-112}})));
      Buildings.Fluid.Actuators.Dampers.VAVBoxExponential vavDam2(
        redeclare package Medium = Medium1,
        m_flow_nominal=mAir,
      dp_nominal=3*dp_Dam)
        annotation (Placement(transformation(extent={{-54,-36},{-34,-16}})));
      Buildings.Fluid.Actuators.Dampers.VAVBoxExponential vavDam1(
        redeclare package Medium = Medium1,
        m_flow_nominal=mAir,
      dp_nominal=3*dp_Dam)
        annotation (Placement(transformation(extent={{-30,-60},{-10,-40}})));
      Buildings.Fluid.Actuators.Dampers.VAVBoxExponential vavDam3(
        redeclare package Medium = Medium1,
        m_flow_nominal=mAir,
      dp_nominal=2*dp_Dam)
        annotation (Placement(transformation(extent={{16,36},{-4,56}})));
      Buildings.Fluid.Actuators.Dampers.VAVBoxExponential vavDam4(
        redeclare package Medium = Medium1,
        m_flow_nominal=mAir,
      dp_nominal=2*dp_Dam)
        annotation (Placement(transformation(extent={{26,-2},{6,18}})));
      Modelica.Blocks.Interfaces.RealInput u[nin] "Damper position input"
        annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=180,
            origin={102,30})));
    equation
    connect(val.y, heaCoiCon.y) annotation (Line(
        points={{52,-66},{65.4,-66},{65.4,-72}},
        color={0,0,127},
        pattern=LinePattern.Dash));
      connect(TCoiHeaOut.port_b, fanSup1.port_a) annotation (Line(
          points={{48,-25},{52,-25},{52,-34},{54,-34}},
          color={0,127,255},
          thickness=0.5));
      connect(TCoiHeaOut.T, heaCoiCon.u_m) annotation (Line(
          points={{45,-28.3},{45,-55.15},{72,-55.15},{72,-79.2}},
          color={0,0,127},
          pattern=LinePattern.Dash));
      connect(fanSup.port_a, senRetFlo.port_b)
        annotation (Line(points={{52,46},{56,46},{58,46}}, color={0,127,255},
          thickness=0.5));
      connect(fanSup1.port_b, senSupFlo.port_a)
        annotation (Line(points={{74,-34},{74,-32},{84,-32}}, color={0,127,255},
          thickness=0.5));
      connect(senRetFlo.V_flow, conFanRet.u_m) annotation (Line(
          points={{61,50.4},{61,65.2},{64,65.2},{64,77.2}},
          color={0,0,127},
          pattern=LinePattern.Dash));
      connect(conFanRet.u, senSupFlo.V_flow) annotation (Line(
          points={{59.2,82},{88,82},{88,-27.6}},
          color={0,0,127},
          pattern=LinePattern.Dash));
      connect(conFanRet.y, fanSup.y) annotation (Line(
          points={{68.4,82},{68,82},{68,58},{42.2,58}},
          color={0,0,127},
          pattern=LinePattern.Dash));
      connect(dpRetFan.p_rel, conFanSup.u_m) annotation (Line(points={{74.5,5},
              {65.25,5},{65.25,1.2},{64,1.2}},
                                        color={0,0,127},
          pattern=LinePattern.Dash));
      connect(conFanSup.y, fanSup1.y)
        annotation (Line(points={{68.4,6},{70,6},{70,2},{70,-10},{63.8,-10},{63.8,-22}},
                                                            color={0,0,127},
          pattern=LinePattern.Dash));
      connect(dpRetFan.port_b, fanSup.port_a) annotation (Line(points={{79,10},{56,10},
              {56,46},{52,46}}, color={0,127,255}));
      connect(dpRetFan.port_a, fanSup1.port_b) annotation (Line(points={{79,0},{
              78,0},{78,-34},{74,-34}},
                                  color={0,127,255}));
      connect(occSch1.tNexOcc, controlBus.dTNexOcc) annotation (Line(
          points={{-205,26},{-100,26},{-100,30}},
          color={0,0,127},
          smooth=Smooth.None), Text(
          string="%second",
          index=1,
          extent={{6,3},{6,3}}));
      connect(occSch1.occupied, controlBus.occupied) annotation (Line(
          points={{-205,14},{-100,14},{-100,30}},
          color={255,0,255},
          smooth=Smooth.None), Text(
          string="%second",
          index=1,
          extent={{6,3},{6,3}}));
      connect(TSetRoo.controlBus,controlBus)  annotation (Line(
          points={{-214,2},{-150,2},{-150,30},{-100,30}},
          color={255,204,51},
          thickness=0.5,
          smooth=Smooth.None));
      connect(TOut.y, controlBus.TOut) annotation (Line(
          points={{-205,50},{-100,50},{-100,30}},
          color={255,213,170},
          smooth=Smooth.None,
          thickness=0.5), Text(
          string="%second",
          index=1,
          extent={{6,3},{6,3}}));
      connect(weaBus.TDryBul, TOut.u) annotation (Line(
          points={{-98,72},{-282,72},{-282,50},{-228,50}},
          color={255,204,51},
          thickness=0.5), Text(
          string="%first",
          index=-1,
          extent={{-6,3},{-6,3}}));
      connect(TRooMin, controlBus.TRooMin) annotation (Line(points={{12,104},{
              -20,104},{-20,30},{-100,30}},   color={0,0,127}), Text(
          string="%second",
          index=1,
          extent={{6,3},{6,3}}));
      connect(TRooAve, controlBus.TRooAve) annotation (Line(points={{60,104},{
              -20,104},{-20,30},{-100,30}}, color={0,0,127}), Text(
          string="%second",
          index=1,
          extent={{6,3},{6,3}}));
      connect(controlBus, conFanSup.controlBus) annotation (Line(
          points={{-100,30},{-20,30},{-20,9.2},{61.2,9.2}},
          color={255,204,51},
          thickness=0.5), Text(
          string="%first",
          index=-1,
          extent={{-6,3},{-6,3}}));
      connect(controlBus, conFanRet.controlBus) annotation (Line(
          points={{-100,30},{-20,30},{-20,85.2},{61.2,85.2}},
          color={255,204,51},
          thickness=0.5), Text(
          string="%first",
          index=-1,
          extent={{-6,3},{-6,3}}));
      connect(controlBus, modeSelector.cb) annotation (Line(
          points={{-100,30},{-134,30},{-134,-23.1818},{-222.818,-23.1818}},
          color={255,204,51},
          thickness=0.5), Text(
          string="%first",
          index=-1,
          extent={{-6,3},{-6,3}}));
      connect(fanSup1.P, add.u2) annotation (Line(points={{75,-26},{78,-26},{78,
              -21.6},{70.8,-21.6}}, color={0,0,127}));
      connect(fanSup.P, add.u1) annotation (Line(points={{31,54},{32,54},{32,
              -14.4},{70.8,-14.4}}, color={0,0,127}));
      connect(port_b2, senEntFlo1.port_b) annotation (Line(points={{-100,-60},{20,-60},
              {138,-60},{138,-32},{134,-32}},color={0,127,255}));
      connect(senEntFlo1.port_a, senSupFlo.port_b)
        annotation (Line(points={{122,-32},{108,-32},{92,-32}},
                                                      color={0,127,255}));
      connect(EchangRecup.port_b2, senEntFlo2.port_a)
        annotation (Line(points={{-4,-22},{-2,-22},{0,-22}}, color={0,127,255}));
      connect(senEntFlo1.H_flow, PumpAuxi8.u) annotation (Line(points={{128,-25.4},{
              184,-25.4},{184,-32},{194.8,-32}},         color={0,0,127}));
      connect(senEntFlo2.H_flow, PumpAuxi1.u) annotation (Line(points={{6,-15.4},
              {6,-15.4},{6,0},{194.8,0}}, color={0,0,127}));
      connect(PumpAuxi8.y, add1.u2) annotation (Line(points={{208.6,-32},{214,
              -32},{214,-22},{220,-22}}, color={0,0,127}));
      connect(PumpAuxi1.y, add1.u1) annotation (Line(points={{208.6,0},{214,0},
              {214,-10},{220,-10}}, color={0,0,127}));
      connect(add1.y, EHotDeck) annotation (Line(points={{243,-16},{116,-16},{
              116,-28},{110,-28}}, color={0,0,127}));
      connect(Auxilaire, PumpAuxi2.y) annotation (Line(points={{110,-14},{108,
              -14},{100.6,-14}}, color={0,0,127}));
      connect(add.y, PumpAuxi2.u) annotation (Line(points={{84.6,-18},{86.8,-18},
              {86.8,-14}}, color={0,0,127}));
      connect(senEntFlo2.port_b, BC.port_a1)
        annotation (Line(points={{12,-22},{15,-22},{18,-22}}, color={0,127,255}));
      connect(BC.port_b1, TCoiHeaOut.port_a) annotation (Line(points={{38,-22},{40,-22},
              {40,-25},{42,-25}}, color={0,127,255}));
      connect(Consommation.y, Conso.u)
        annotation (Line(points={{7,140},{16.8,140}}, color={0,0,127}));
      connect(senEntFlo3.port_b, port_b1) annotation (Line(points={{84,68},{92,
              68},{92,60},{100,60}}, color={0,127,255}));
      connect(senEntFlo3.port_a, EchangRecup.port_b1) annotation (Line(points={{72,68},
              {-30,68},{-30,-10},{-24,-10}}, color={0,127,255}));
      connect(ProdIn.port_a, port_a2)
        annotation (Line(points={{88,-58},{94,-58},{94,-60},{100,-60}},
                                                      color={0,127,255}));
      connect(Production.y, Produ.u)
        annotation (Line(points={{7,162},{16.8,162}}, color={0,0,127}));
      connect(coolingControl.yF, translate.u) annotation (Line(points={{-63.3,
              84},{-56,84},{-56,140},{-46,140}}, color={0,0,127}));
    connect(port_a, val.port_a) annotation (Line(points={{-100,0},{-110,0},{-110,
            -76},{40,-76}}, color={0,127,255}));
    connect(BC.port_a2, val.port_b) annotation (Line(points={{38,-34},{40,-34},
            {40,-56}}, color={0,127,255}));
      connect(BC.port_b2, port_b) annotation (Line(points={{18,-34},{156,-34},{156,0},
              {100,0}}, color={0,127,255}));
      connect(TOut.y, coolingControl.TOut) annotation (Line(points={{-205,50},{
              -198,50},{-198,80.4},{-79.4,80.4}}, color={0,0,127}));
      connect(conFanSup.u, pSetDuc.y)
        annotation (Line(points={{59.2,6},{54.4,6}}, color={0,0,127}));
      connect(weaBus.TDryBul, pSetDuc.TOut) annotation (Line(
          points={{-98,72},{-28,72},{-28,9.2},{45.2,9.2}},
          color={255,204,51},
          thickness=0.5), Text(
          string="%first",
          index=-1,
          extent={{-6,3},{-6,3}}));
      connect(TRooAve, coolingControl.TRoo) annotation (Line(points={{60,104},{
              -90,104},{-90,87.6},{-79.4,87.6}}, color={0,0,127}));
      connect(swiPum.y, heaCoiCon.u_s) annotation (Line(points={{109.3,-97},{92,
              -97},{92,-72},{79.2,-72}}, color={0,0,127}));
      connect(swiPum.u3, TSupSetHea1.y) annotation (Line(points={{125.4,-102.6},
              {133.7,-102.6},{133.7,-110},{143.4,-110}}, color={0,0,127}));
      connect(swiPum.u2, workingDayOrWeekEnd.y) annotation (Line(points={{125.4,
              -97},{138.7,-97},{138.7,-122},{159,-122}},
                                                       color={255,0,255}));
      connect(vavDam2.port_b, EchangRecup.port_a2) annotation (Line(points={{-34,-26},
              {-30,-26},{-30,-22},{-24,-22}}, color={0,127,255}));
      connect(coolingControl.yHex, vavDam2.y) annotation (Line(points={{-63.3,80.4},
              {-63.3,33.2},{-44,33.2},{-44,-14}}, color={0,0,127}));
      connect(vavDam1.port_b, fanSup1.port_a)
        annotation (Line(points={{-10,-50},{54,-50},{54,-34}}, color={0,127,255}));
      connect(ProdIn.port_b, vavDam1.port_a) annotation (Line(points={{76,-58},{-68,
              -58},{-68,-50},{-30,-50}}, color={0,127,255}));
      connect(ProdIn.port_b, vavDam2.port_a) annotation (Line(points={{76,-58},{-68,
              -58},{-68,-26},{-54,-26}}, color={0,127,255}));
      connect(vavDam3.port_b, senEntFlo3.port_a) annotation (Line(points={{-4,46},{-14,
              46},{-14,68},{72,68}}, color={0,127,255}));
      connect(vavDam3.port_a, fanSup.port_b)
        annotation (Line(points={{16,46},{22,46},{32,46}}, color={0,127,255}));
      connect(coolingControl.yF, vavDam3.y)
        annotation (Line(points={{-63.3,84},{6,84},{6,58}}, color={0,0,127}));
      connect(vavDam4.port_a, fanSup.port_b) annotation (Line(points={{26,8},{30,8},
              {30,46},{32,46}}, color={0,127,255}));
      connect(EchangRecup.port_a1, vavDam4.port_b) annotation (Line(points={{-4,-10},
              {2,-10},{2,8},{6,8}}, color={0,127,255}));
      connect(coolingControl.yHex, vavDam4.y) annotation (Line(points={{-63.3,80.4},
              {-23.65,80.4},{-23.65,20},{16,20}}, color={0,0,127}));
      connect(senRetFlo.port_a, port_a1) annotation (Line(points={{64,46},{72,46},{72,
              60},{-100,60}}, color={0,127,255}));
      connect(coolingControl.yF, vavDam1.y) annotation (Line(points={{-63.3,84},{-30,
              84},{-30,-38},{-20,-38}}, color={0,0,127}));
      connect(pSetDuc.u, u) annotation (Line(points={{45.2,6},{40,6},{40,30},{102,30}},
            color={0,0,127}));
    connect(TSupSetHea.y, swiPum.u1) annotation (Line(points={{173.4,-60},{
            148,-60},{148,-91.4},{125.4,-91.4}}, color={0,0,127}));
     annotation (Icon(coordinateSystem(preserveAspectRatio=false, extent={{-100,
                -100},{100,100}}),
                       graphics={Bitmap(
              extent={{-100,100},{100,-100}},
              imageSource=
                  ""
                   +
                  "09RYkI8NF+A/ECT4r8KC/Nd//rOjLx16/8OPz318ntrltGshHJ4Ph+fd3rXaMf33f3hrjR454YgyM59vqN/9XAPWFcE3IEjwTRJJ1suHD+zft+di8+Wz7//dOzpGeiJIEmqlck/T888+8xTWk8E9IUhwbzwet3FXfUP9jus3W8/+7YPO7h7SE0ECKyst2fuDF2qqrCw2/oH/D0GC+2FZdmtN9daaantf/4efXGi5ei0SiZIeChJGBo+3fVvdc7t2mgzFpGeBBIAgwUMxGw1mo+HVHx1tbvnHRxcuDg45SE8EVCvWaxt27nh6+5P8J54gPQskDAQJHgGfz2/cVd+4q35wyPHGb0+OuD2kJwLqFOSrf/H6cV2RhvQgkHjweS6shl6nLbGYSE8BNCqxmFAjWB0ECQAAqIAgAQAAFRAkAACgAoIEAABUQJAAAIAKCBIQQ3aDbbgn/FGAIAQJiDHodVfOnztx/FhdbU1qKpbEEZOamlpXW3Pi+LEr588Z9DgcD4jBqwCQpNdp9Trtj48emQwEWq5+ce2L61/dah/3+UnPtSHkKeSVWyq2ba3dvq1uIx8AD/RAkIAKuTk5e5t2723azTBMKBTq7LG1trW33upobe+IRCKkp0sSPB6vsqK8ckt5pbWirLREKBCQngjgLggSUEcoFNbV1tTV1jAM83Us1tvX33qrvdvWe7O1bXRsnPR0CUaZp6iutJZaTJVbKkxGQ2pCneAOGw2CBFRL5XBKLeZSi5lhmKWlJYdzuK29s8fe2z842D8wFAqHSQ9IHaFQaCzWGfR6i8lorSjTaYtSUlJIDwXwUBAkSBgsy65cc7pzTzA4NzDk6LHbBx3OwSGHrbdvYWFjfb6XkcGzmIx6nVavLSoxm4t1WpEok/RQAKuEIEECE4kyq6wVVdaKlZvRaHTQ4ewbGHQ4hr1jY57RUa93bHpmhuyQcSTJylKp8vJVKmWeQq8tMhTr9dqi9PR00nMBxAeCBMmDy+WWmE0l5ru2IV9cXPT5J9xer8cz6vZ6Pd5Rj3fUPzE5GQiQmvOB1CqlNDdHmpurVinzVSq1WpmvUinkMnw5HpIbnt+Q5NLS0tQqpVqlZGrvun8yEBj3+aenZ2ZmZ6dnZqdnZm5PT4+N+8Lh+fD8fDgcDs/PB4NzcZ9HJMoU8PkCgUAo4PP5fGWeIlsiyRKLJVniLLFYIslSyGW5OTlx/70A9EOQYIPKzcl5mNf9wNTthYWFSCQSiUYjkWj0X9HY17Hw/PwDf1DA53NSOTwuj8tN53G5PB4vIyMDy30A7gNBArgfJARg3WDrIAAAoAKCBAAAVECQAACACggSAABQAUECAAAqIEgAAEAFBAkAAKiAIAEAABUQJAAAoEIcdmrostke/0Eg4XjcXtIjAI08bu9Hn3xKegpYb3EJQRyC9Nnlls8utzz+4wBAEuiy2btsdtJTQELCR3YAAEAFBAkAAKiAIAEAABUQJAAAoAKCBAAAVECQAACACggSAABQAUECAAAqIEgAAEAFBAkAAKiAIAEAABUQJAAAoAKCBAAAVECQAACACggSAABQAUECAAAqIEgAAEAFBAkAAKiAIAEAABUQJAAAoAKCBAAAVPg3pdXlZSKkN84AAAAASUVORK5CYII=",
              fileName="modelica://ClaRa/figures/Components/LUVO.png")}),
                                        Diagram(coordinateSystem(
              preserveAspectRatio=false)),
    Documentation(info="<html>
<p> Cette CTA sert à renouveler l'air dans la zone bureau du bâtiment hélios. Elle alimente les bureaux des trois façades et à donc une consigne
différente des 4 autres CTA. Contrairement aux autres CTA, aucune batterie terminale n'est présente sur l'air soufflé.<br><br>
La régulation se fait par maintien d'une différence de pression statique entre la gaine de souflage est la gaine de reprise<br><br>
La CTA se compose d'un bypass (voir le bloc bypass pour son fonctionnement), d'un récupérateur à roue non hygroscopique, d'une batterie chaude alimenté
par le réseau secondaire d'eau chaude, de filtres, d'une ventileur sur la gaine de souflage et de reprise et du contrôle commande associé </p>


   
        </html>"));
    end N3;

    model N1 "Model de CTA Menerga S1 presente sur le bâtiment hélios"
    extends Buildings.Fluid.Interfaces.PartialFourPortInterface(
      redeclare replaceable package Medium1 =
            Modelica.Media.Interfaces.PartialCondensingGases,
      redeclare replaceable package Medium2 =
            Modelica.Media.Interfaces.PartialCondensingGases);
      extends Buildings.Fluid.Interfaces.PartialTwoPortInterface(
        redeclare replaceable package Medium =
          Modelica.Media.Interfaces.PartialMedium
          "Liquid Medium in the component");
      parameter Modelica.SIunits.MassFlowRate mAir;
      parameter Modelica.SIunits.MassFlowRate mWat;
      parameter Modelica.SIunits.PressureDifference dp_Dam=150;
      Buildings.Fluid.HeatExchangers.ConstantEffectiveness EchangRecup(
      dp1_nominal=155,
      dp2_nominal=155,
      redeclare package Medium1 = Medium1,
      redeclare package Medium2 = Medium1,
      m1_flow_nominal=mAir,
      m2_flow_nominal=mAir,
      eps=0.75)
      annotation (Placement(transformation(extent={{-6,-26},{-26,-6}})));
      Buildings.BoundaryConditions.WeatherData.Bus weaBus
        "Bus with weather data"
        annotation (Placement(transformation(extent={{-110,66},{-90,86}})));
      Buildings.Fluid.Actuators.Valves.TwoWayEqualPercentage val(
      from_dp=true,
      m_flow_nominal=mWat,
      redeclare package Medium = Medium,
      dpFixed_nominal(displayUnit="kPa"),
      CvData=Buildings.Fluid.Types.CvTypes.Kv,
      Kv=40) annotation (Placement(transformation(
          extent={{-10,10},{10,-10}},
          rotation=90,
          origin={30,-78})));
      Buildings.Controls.Continuous.LimPID heaCoiCon(
        yMax=1,
        yMin=0,
        initType=Modelica.Blocks.Types.InitPID.InitialState,
        Td=60,
        Ti=600,
      controllerType=Modelica.Blocks.Types.SimpleController.P,
      k=0.001)  "Controller for heating coil"
        annotation (Placement(transformation(extent={{82,-76},{70,-64}})));
      Buildings.Fluid.Movers.SpeedControlled_y fanRet(
        tau=60,
        per(pressure(V_flow={3050/3600,11500/3600}, dp={1150,815})),
        redeclare package Medium = Medium1,
        energyDynamics=Modelica.Fluid.Types.Dynamics.FixedInitial)
        "Return air fan"
        annotation (Placement(transformation(extent={{56,64},{44,76}})));
      Buildings.Fluid.Sensors.VolumeFlowRate senRetFlo(redeclare package Medium =
            Medium1, m_flow_nominal=mAir) "Sensor for return fan flow rate"
        annotation (Placement(transformation(extent={{70,66},{64,74}})));
      Buildings.Examples.VAVReheat.Controls.FanVFD
                      conFanRet(
        xSet_nominal(displayUnit="m3/s") = mAir/1.2,
        k=0.01,
        Ti=120,
        controllerType=Modelica.Blocks.Types.SimpleController.PI,
        r_N_min=0.3) "Controller for fan"
        annotation (Placement(transformation(extent={{38,88},{46,96}})));
      Buildings.Fluid.Sensors.VolumeFlowRate senSupFlo(redeclare package Medium =
            Medium1, m_flow_nominal=mAir) "Sensor for supply fan flow rate"
        annotation (Placement(transformation(extent={{60,-24},{68,-16}})));
      Buildings.Fluid.Movers.SpeedControlled_y fanSup1(
        tau=60,
        redeclare package Medium = Medium1,
        per(pressure(V_flow={2400/3600,11100/3600}, dp={2600,600})),
        energyDynamics=Modelica.Fluid.Types.Dynamics.FixedInitial)
        "Supply air fan"
        annotation (Placement(transformation(extent={{44,-26},{54,-16}})));
      Buildings.Examples.VAVReheat.Controls.ControlBus
                 controlBus "Controle pour les consignes jour et nuit"
        annotation (Placement(transformation(extent={{58,90},{78,110}})));
      Modelica.Blocks.Interfaces.RealInput u[2] "Damper position input" annotation (
         Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=270,
            origin={56,102})));
      Buildings.Fluid.Sensors.RelativePressure dpRetFan(redeclare package
          Medium =
            Medium1) "Pressure difference over return fan" annotation (Placement(
            transformation(
            extent={{-5,5},{5,-5}},
            rotation=90,
            origin={81,15})));
      Buildings.Examples.VAVReheat.Controls.FanVFD
                      conFanSup(
        k=0.01,
        xSet_nominal(displayUnit="Pa") = 300,
        Ti=120,
        controllerType=Modelica.Blocks.Types.SimpleController.PI,
        r_N_min=0.3) "Controller for fan"
        annotation (Placement(transformation(extent={{64,12},{72,20}})));
      Buildings.Examples.VAVReheat.Controls.DuctStaticPressureSetpoint
                                          pSetDuc(
        pMin=50,
        nin=2,
        k=0.01,
        pMax=400,
        Ti=120,
        controllerType=Modelica.Blocks.Types.SimpleController.PI)
        "Duct static pressure setpoint"
        annotation (Placement(transformation(extent={{52,12},{60,20}})));
      Buildings.Fluid.Sensors.TemperatureTwoPort TCoiHeaOut(
        T_start(displayUnit="K"),
        redeclare package Medium = Medium1,
        m_flow_nominal=mAir) "Heating coil outlet temperature"
        annotation (Placement(transformation(extent={{34,-18},{40,-24}})));
         block CoolingControl
        "Controller for the free cooling and the mechanical cooling"
         extends Modelica.Blocks.Icons.Block;
         parameter Modelica.SIunits.Temperature TRooFre = 22+273.15
          "Maximum temperature above which free cooling is enabled";
         parameter Modelica.SIunits.Temperature TOutFre = 16+273.15
          "Outside temperature above which free cooling is allowed";
         parameter Modelica.SIunits.TemperatureDifference dT = 1
          "Dead-band for free cooling";
         Modelica.Blocks.Interfaces.RealInput TRoo(unit="K")
          "Room air temperature"
           annotation (Placement(transformation(extent={{-140,40},{-100,80}})));
         Modelica.Blocks.Interfaces.RealInput TOut(unit="K")
          "Outside air temperature"
           annotation (Placement(transformation(extent={{-140,-80},{-100,-40}})));
         Modelica.Blocks.Interfaces.RealOutput yF
          "Control signal for free cooling, 1 if free cooling should be provided"
           annotation (Placement(transformation(extent={{100,-10},{120,10}}),
               iconTransformation(extent={{100,-10},{120,10}})));
         Modelica.Blocks.Interfaces.RealOutput yHex
          "Control signal for heat recovery damper"
           annotation (Placement(transformation(extent={{100,-70},{120,-50}}),
               iconTransformation(extent={{100,-70},{120,-50}})));
         initial equation
         yF   = 0.0;
         yHex = 1.0;
         algorithm
         when TRoo > TRooFre and TOut > TOutFre and TOut < TRoo - dT then
           yF   := 1.0;
           yHex := 0.0;
         elsewhen  TOut < TOutFre-dT or TOut > TRoo then
           yF   := 0.0;
           yHex := 1.0;
         end when;
         annotation (Icon(coordinateSystem(preserveAspectRatio=false, extent={{-100,-100},
                   {100,100}}), graphics={
               Text(
                 extent={{-94,38},{-64,80}},
                 lineColor={0,0,255},
                 textString="TRoo"),
               Text(
                 extent={{-94,-82},{-64,-40}},
                 lineColor={0,0,255},
                 textString="TOut"),
               Text(
                 extent={{66,42},{86,74}},
                 lineColor={0,0,255},
                 textString="yC"),
               Text(
                 extent={{-32,100},{24,124}},
                 lineColor={0,0,255},
                 textString="%name"),
               Text(
                 extent={{66,-16},{86,16}},
                 lineColor={0,0,255},
                 textString="yF"),
               Text(
                 extent={{68,-74},{88,-42}},
                 lineColor={0,0,255},
                textString="yHex")}),Documentation(info="<html>
<p>
This block computes a control signal for free cooling and for mechanical cooling.
</p>
</html>",     revisions="<html>
<ul>
<li>
February 27, 2015, by Michael Wetter:<br/>
Changed controller to output setpoint for supply air temperature for cooling coil.
</li>
</ul>
</html>"));
         end CoolingControl;
      CoolingControl coolingControl
        annotation (Placement(transformation(extent={{-82,86},{-74,94}})));
      Buildings.Fluid.MassExchangers.Humidifier_u hum(
        dp_nominal=70,
        redeclare package Medium = Medium1,
        m_flow_nominal=mAir,
        mWat_flow_nominal=mAir*0.005,
        energyDynamics=Modelica.Fluid.Types.Dynamics.SteadyState)
        annotation (Placement(transformation(extent={{40,66},{28,74}})));
      Buildings.Fluid.Sensors.TemperatureTwoPort senTem1(redeclare package
          Medium =
            Medium1, m_flow_nominal=3.78) "Temperature sensor"
        annotation (Placement(transformation(extent={{16,64},{26,74}})));
      Buildings.Controls.Continuous.LimPID ConHum(
      yMax=1,
      yMin=0,
      Td=60,
      controllerType=Modelica.Blocks.Types.SimpleController.PI,
      k=0.01,
      Ti=120,
        reverseAction=true)
              "Controller for adiabatic cooler"
      annotation (Placement(transformation(extent={{148,104},{142,110}})));

      Modelica.Blocks.Sources.Constant TSepPointAdia(y(
          final quantity="ThermodynamicTemperature",
          final unit="K",
          displayUnit="degC",
          min=0), k=273.15 + 15)
        "Supply air temperature setpoint for heating"
        annotation (Placement(transformation(extent={{162,104},{156,110}})));
      Modelica.Blocks.Logical.Switch swi1 "Switch to select set point"
        annotation (Placement(transformation(extent={{124,80},{112,92}})));
      Modelica.Blocks.Sources.Constant AdiaOff(k=0)
        "Supply air temperature setpoint for heating"
        annotation (Placement(transformation(extent={{140,78},{134,84}})));
      Modelica.Blocks.Logical.LessThreshold yFCOntroler(threshold=0.5)
        "control if the free cooling is close"
        annotation (Placement(transformation(extent={{194,128},{188,134}})));
      Modelica.Blocks.Logical.And and1
        annotation (Placement(transformation(extent={{162,124},{156,130}})));
    Buildings.Fluid.FixedResistances.PressureDrop fil3(
      from_dp=false,
      linearized=false,
      redeclare package Medium = Medium1,
      m_flow_nominal=mAir,
      dp_nominal=dp_Dam) "Filter"
      annotation (Placement(transformation(extent={{82,-26},{94,-14}})));
      Modelica.Blocks.Math.Add add
        annotation (Placement(transformation(extent={{66,-42},{78,-30}})));
      Modelica.Blocks.Continuous.Integrator PumpAuxi2(k=1/(3600*1000))
        annotation (Placement(transformation(extent={{88,-42},{100,-30}})));
      Modelica.Blocks.Interfaces.RealOutput Auxilaire
        "Auxiliairy energie consumme by the CTA" annotation (Placement(
            transformation(
            extent={{10,-10},{-10,10}},
            rotation=180,
            origin={110,-36})));
      Modelica.Blocks.Interfaces.RealOutput EHotDeck
        "Eneergy consumme by the hot deck" annotation (Placement(transformation(
            extent={{10,-10},{-10,10}},
            rotation=180,
            origin={110,-50})));
      Modelica.Blocks.Continuous.Integrator PumpAuxi8(k=1/(3600*1000))
        annotation (Placement(transformation(extent={{206,-28},{218,-16}})));
      Modelica.Blocks.Continuous.Integrator PumpAuxi1(k=1/(3600*1000))
        annotation (Placement(transformation(extent={{206,4},{218,16}})));
      Modelica.Blocks.Math.Add add1(k1=-1)
        annotation (Placement(transformation(extent={{232,-16},{252,4}})));
      Buildings.Fluid.Sensors.EnthalpyFlowRate senEntFlo1(redeclare package
          Medium = Medium1, m_flow_nominal=mAir) annotation (Placement(
            transformation(
            extent={{6,6},{-6,-6}},
            rotation=180,
            origin={4,-22})));
      Buildings.Fluid.Sensors.EnthalpyFlowRate senEntFlo2(redeclare package
          Medium = Medium1, m_flow_nominal=mAir) annotation (Placement(
            transformation(
            extent={{6,6},{-6,-6}},
            rotation=180,
            origin={108,-20})));
      Buildings.Fluid.Sensors.TemperatureTwoPort TCoiHeaOut1(
        T_start(displayUnit="K"),
        redeclare package Medium = Medium,
        m_flow_nominal=mWat) "Heating coil outlet temperature"
        annotation (Placement(transformation(extent={{-6,-6},{6,6}},
            rotation=90,
            origin={30,-114})));
      Buildings.Fluid.HeatExchangers.DryEffectivenessNTU BC(
      redeclare package Medium1 = Medium1,
      redeclare package Medium2 = Medium,
      m1_flow_nominal=mAir,
      m2_flow_nominal=mWat,
      configuration=Buildings.Fluid.Types.HeatExchangerConfiguration.CrossFlowUnmixed,
      dp1_nominal=21,
      Q_flow_nominal(displayUnit="kW") = 22700,
      dp2_nominal(displayUnit="kPa") = 3900,
      T_a1_nominal=285.85,
      T_a2_nominal=343.15)
      annotation (Placement(transformation(extent={{10,-48},{30,-28}})));
      Modelica.Blocks.Sources.RealExpression Consommation(y=if (translate.y ==
            1.00) then 0 else (senEntFlo3.H_flow - ProdIn.H_flow))
        "part de chaleur envoyer vers le REC depuis les chaudières"
        annotation (Placement(transformation(extent={{14,152},{34,172}})));
      Modelica.Blocks.Continuous.Integrator Conso(k=1/(3600*1000))
        annotation (Placement(transformation(extent={{46,156},{58,168}})));
      Buildings.Fluid.Sensors.EnthalpyFlowRate senEntFlo3(redeclare package
          Medium = Medium1, m_flow_nominal=mAir) annotation (Placement(
            transformation(
            extent={{6,6},{-6,-6}},
            rotation=180,
            origin={74,52})));
      Buildings.Fluid.Sensors.EnthalpyFlowRate ProdIn(redeclare package Medium =
            Medium1, m_flow_nominal=mAir) annotation (Placement(transformation(
            extent={{-6,-6},{6,6}},
            rotation=180,
            origin={-32,-64})));
      Modelica.Blocks.Sources.RealExpression Production(y=if (translate.y == 1)
             then (senEntFlo3.H_flow - ProdIn.H_flow) else 0)
        "part de chaleur envoyer vers le REC depuis les chaudières"
        annotation (Placement(transformation(extent={{14,128},{34,148}})));
      Modelica.Blocks.Continuous.Integrator Produ(k=1/(3600*1000))
        annotation (Placement(transformation(extent={{46,132},{58,144}})));
      Modelica.Blocks.Math.RealToInteger translate
        annotation (Placement(transformation(extent={{-54,120},{-34,140}})));
      Buildings.Controls.SetPoints.OccupancySchedule occSch1(occupancy=3600*{6,
            19}) "Occupancy schedule"
        annotation (Placement(transformation(extent={{-206,30},{-186,50}})));
      Buildings.Examples.VAVReheat.Controls.RoomTemperatureSetpoint
                                       TSetRoo(
        TCooOff(displayUnit="degC"),
        THeaOn(displayUnit="degC") = 297.15,
        TCooOn(displayUnit="degC") = 299.15,
        THeaOff(displayUnit="degC") = 294.15)
        annotation (Placement(transformation(extent={{-206,6},{-186,26}})));
      Modelica.Blocks.Routing.RealPassThrough TOut(y(
          final quantity="ThermodynamicTemperature",
          final unit="K",
          displayUnit="degC",
          min=0))
        annotation (Placement(transformation(extent={{-206,60},{-186,80}})));
      Buildings.Examples.VAVReheat.Controls.ModeSelector
                            modeSelector(
        TRooSetCooOcc(displayUnit="degC"),
        TRooSetHeaOcc(displayUnit="degC") = 297.15,
        TSetHeaCoiOut(displayUnit="degC") = 294.15,
        delTRooOnOff(displayUnit="degC") = 1)
        annotation (Placement(transformation(extent={{-206,-20},{-186,0}})));
    Buildings.Utilities.Math.Average ave1(nin=3)
      "Compute average of room temperatures"
      annotation (Placement(transformation(extent={{-208,-78},{-188,-58}})));
    Buildings.Utilities.Math.Min min1(nin=3)
      "Computes lowest room temperature"
      annotation (Placement(transformation(extent={{-208,-52},{-188,-32}})));
      Modelica.Blocks.Interfaces.RealInput TRoom[3]
        annotation (Placement(transformation(extent={{20,-20},{-20,20}},
            rotation=180,
            origin={-108,-96})));
      Modelica.Blocks.Logical.GreaterThreshold greaterThreshold(threshold=
            273.15 + 22)
        annotation (Placement(transformation(extent={{194,116},{186,124}})));
      Modelica.Blocks.Sources.Constant TSupSetHea1(
                                                  y(
          final quantity="ThermodynamicTemperature",
          final unit="K",
          displayUnit="degC",
          min=0), k=273.15 + 19)
        "Supply air temperature setpoint for heating"
        annotation (Placement(transformation(extent={{166,-86},{154,-74}})));
      Modelica.Blocks.Logical.Switch swiPum "Pump switch"
        annotation (Placement(transformation(extent={{134,-94},{120,-80}})));
      Modelica.Blocks.Sources.Constant TSupSetHea2(
                                                  y(
          final quantity="ThermodynamicTemperature",
          final unit="K",
          displayUnit="degC",
          min=0), k=273.15 + 15)
        "Supply air temperature setpoint for heating"
        annotation (Placement(transformation(extent={{166,-106},{154,-94}})));
      FBM.Components.WorkingDayOrWeekEnd workingDayOrWeekEnd
        annotation (Placement(transformation(extent={{194,-100},{174,-80}})));
      Buildings.Fluid.Actuators.Dampers.VAVBoxExponential vavDam2(
        redeclare package Medium = Medium1,
        m_flow_nominal=mAir,
      dp_nominal=dp_Dam)
        annotation (Placement(transformation(extent={{-76,-46},{-56,-26}})));
      Buildings.Fluid.Actuators.Dampers.VAVBoxExponential vavDam1(
        redeclare package Medium = Medium1,
        m_flow_nominal=mAir,
      dp_nominal=dp_Dam)
        annotation (Placement(transformation(extent={{-20,-58},{0,-38}})));
      Buildings.Fluid.Actuators.Dampers.VAVBoxExponential vavDam3(
        redeclare package Medium = Medium1,
        m_flow_nominal=mAir,
      dp_nominal=dp_Dam)
        annotation (Placement(transformation(extent={{10,14},{-10,34}})));
      Buildings.Fluid.Actuators.Dampers.VAVBoxExponential vavDam4(
        redeclare package Medium = Medium1,
        m_flow_nominal=mAir,
      dp_nominal=dp_Dam)
        annotation (Placement(transformation(extent={{18,-20},{-2,0}})));
    equation
    connect(val.y, heaCoiCon.y) annotation (Line(
        points={{42,-78},{56,-78},{56,-70},{69.4,-70}},
        color={0,0,127},
        pattern=LinePattern.Dash));
      connect(senRetFlo.port_b, fanRet.port_a)
        annotation (Line(points={{64,70},{56,70}}, color={0,127,255}));
      connect(senRetFlo.V_flow, conFanRet.u_m) annotation (Line(
          points={{67,74.4},{67,81.2},{42,81.2},{42,87.2}},
          color={0,0,127},
          pattern=LinePattern.Dash));
      connect(fanSup1.port_b, senSupFlo.port_a) annotation (Line(points={{54,-21},{60,
              -21},{60,-20}},          color={0,127,255}));
      connect(senSupFlo.V_flow, conFanRet.u) annotation (Line(
          points={{64,-15.6},{88,-15.6},{88,92},{37.2,92}},
          color={0,0,127},
          pattern=LinePattern.Dash));
      connect(conFanRet.y, fanRet.y) annotation (Line(
          points={{46.4,92},{50.12,92},{50.12,77.2}},
          color={0,0,127},
          pattern=LinePattern.Dash));
      connect(controlBus, conFanRet.controlBus) annotation (Line(
          points={{68,100},{62,100},{62,95.2},{39.2,95.2}},
          color={255,204,51},
          thickness=0.5), Text(
          string="%first",
          index=-1,
          extent={{-6,3},{-6,3}}));
      connect(dpRetFan.p_rel,conFanSup. u_m) annotation (Line(points={{76.5,15},{75.25,
              15},{75.25,11.2},{68,11.2}},
                                        color={0,0,127},
          pattern=LinePattern.Dash));
      connect(conFanSup.u,pSetDuc. y)
        annotation (Line(points={{63.2,16},{62,16},{60.4,16}},
                                                     color={0,0,127},
          pattern=LinePattern.Dash));
      connect(conFanSup.y, fanSup1.y)
        annotation (Line(points={{72.4,16},{74,16},{74,6},{49,6},{49,-15},{48.9,-15}},
                                                            color={0,0,127},
          pattern=LinePattern.Dash));
      connect(weaBus.TDryBul, pSetDuc.TOut) annotation (Line(
          points={{-100,76},{18,76},{18,19.2},{51.2,19.2}},
          color={255,204,51},
          thickness=0.5), Text(
          string="%first",
          index=-1,
          extent={{-6,3},{-6,3}}));
      connect(controlBus, conFanSup.controlBus) annotation (Line(
          points={{68,100},{62,100},{62,19.2},{65.2,19.2}},
          color={255,204,51},
          thickness=0.5), Text(
          string="%first",
          index=-1,
          extent={{-6,3},{-6,3}}));
      connect(TCoiHeaOut.port_b, fanSup1.port_a) annotation (Line(points={{40,-21},{
              44,-21}},                   color={0,127,255}));
      connect(TCoiHeaOut.T, heaCoiCon.u_m) annotation (Line(
          points={{37,-24.3},{37,-85.15},{76,-85.15},{76,-77.2}},
          color={0,0,127},
          pattern=LinePattern.Dash));
      connect(weaBus.TDryBul, coolingControl.TOut) annotation (Line(
          points={{-100,76},{-92,76},{-92,87.6},{-82.8,87.6}},
          color={255,204,51},
          thickness=0.5), Text(
          string="%first",
          index=-1,
          extent={{-6,3},{-6,3}}));
      connect(hum.port_a, fanRet.port_b)
        annotation (Line(points={{40,70},{40,70},{44,70}}, color={0,127,255}));
      connect(swi1.y, hum.u) annotation (Line(
          points={{111.4,86},{40,86},{40,72.4},{41.2,72.4}},
          color={0,0,127},
          pattern=LinePattern.Dash));
    connect(senTem1.T, ConHum.u_m) annotation (Line(
        points={{21,74.5},{20,74.5},{20,76},{20,103.4},{145,103.4}},
        color={0,0,127},
        pattern=LinePattern.Dash));
    connect(ConHum.y, swi1.u1) annotation (Line(points={{141.7,107},{141.7,
            91.5},{125.2,91.5},{125.2,90.8}}, color={0,0,127}));
      connect(AdiaOff.y, swi1.u3) annotation (Line(points={{133.7,81},{130.85,81},{130.85,
              81.2},{125.2,81.2}}, color={0,0,127}));
    connect(ConHum.u_s, TSepPointAdia.y) annotation (Line(
        points={{148.6,107},{151.3,107},{155.7,107}},
        color={0,0,127},
        pattern=LinePattern.Dash));
      connect(coolingControl.yF, yFCOntroler.u) annotation (Line(
          points={{-73.6,90},{218,90},{218,131},{194.6,131}},
          color={0,0,127},
          pattern=LinePattern.Dash));
      connect(and1.u1, yFCOntroler.y) annotation (Line(
          points={{162.6,127},{174,127},{174,131},{187.7,131}},
          color={255,0,255},
          pattern=LinePattern.Dash));
      connect(and1.y, swi1.u2) annotation (Line(
          points={{155.7,127},{134,127},{134,86},{125.2,86}},
          color={255,0,255},
          pattern=LinePattern.Dash));
      connect(u, pSetDuc.u) annotation (Line(
          points={{56,102},{48,102},{48,16},{51.2,16}},
          color={0,0,127},
          pattern=LinePattern.Dash));
      connect(fanRet.port_a, dpRetFan.port_b) annotation (Line(points={{56,70},
              {62,70},{62,20},{81,20}}, color={0,127,255}));
      connect(fanSup1.port_b, dpRetFan.port_a) annotation (Line(points={{54,-21},
              {54,-21},{54,10},{81,10}}, color={0,127,255}));
      connect(senSupFlo.port_b, fil3.port_a) annotation (Line(points={{68,-20},
              {76,-20},{82,-20}},          color={0,127,255}));
      connect(fanRet.P, add.u1) annotation (Line(points={{43.4,74.8},{43.4,
              -35.6},{64.8,-35.6},{64.8,-32.4}}, color={0,0,127}));
      connect(fanSup1.P, add.u2) annotation (Line(points={{54.5,-17},{55.25,-17},
              {55.25,-39.6},{64.8,-39.6}}, color={0,0,127}));
      connect(Auxilaire, PumpAuxi2.y) annotation (Line(points={{110,-36},{108,
              -36},{100.6,-36}}, color={0,0,127}));
      connect(add.y, PumpAuxi2.u) annotation (Line(points={{78.6,-36},{78,-36},
              {86.8,-36}}, color={0,0,127}));
      connect(PumpAuxi8.y, add1.u2) annotation (Line(points={{218.6,-22},{224,
              -22},{224,-12},{230,-12}}, color={0,0,127}));
      connect(PumpAuxi1.y, add1.u1) annotation (Line(points={{218.6,10},{224,10},
              {224,0},{230,0}}, color={0,0,127}));
      connect(add1.y, EHotDeck) annotation (Line(points={{253,-6},{126,-6},{126,
              -50},{110,-50}}, color={0,0,127}));
    connect(EchangRecup.port_b2, senEntFlo1.port_a)
      annotation (Line(points={{-6,-22},{-2,-22}}, color={0,127,255}));
      connect(fil3.port_b, senEntFlo2.port_a)
        annotation (Line(points={{94,-20},{98,-20},{102,-20}},
                                                      color={0,127,255}));
      connect(senEntFlo2.port_b, port_b2) annotation (Line(points={{114,-20},{
              116,-20},{116,-60},{-100,-60}}, color={0,127,255}));
      connect(senEntFlo1.H_flow, PumpAuxi1.u) annotation (Line(points={{4,-15.4},
              {4,-15.4},{4,10},{204.8,10}}, color={0,0,127}));
      connect(senEntFlo2.H_flow, PumpAuxi8.u) annotation (Line(points={{108,
              -13.4},{156,-13.4},{156,-22},{204.8,-22}}, color={0,0,127}));
    connect(senEntFlo1.port_b, BC.port_a1) annotation (Line(points={{10,-22},
            {10,-28},{10,-32}}, color={0,127,255}));
    connect(BC.port_b1, TCoiHeaOut.port_a) annotation (Line(points={{30,-32},
            {34,-32},{34,-21}}, color={0,127,255}));
      connect(Consommation.y, Conso.u)
        annotation (Line(points={{35,162},{44.8,162}}, color={0,0,127}));
      connect(senEntFlo3.port_b, port_b1) annotation (Line(points={{80,52},{92,
              52},{92,60},{100,60}}, color={0,127,255}));
      connect(ProdIn.port_a, port_a2) annotation (Line(points={{-26,-64},{100,
              -64},{100,-60}}, color={0,127,255}));
      connect(Production.y, Produ.u)
        annotation (Line(points={{35,138},{44.8,138}}, color={0,0,127}));
    connect(EchangRecup.port_b1, senEntFlo3.port_a) annotation (Line(points={
            {-26,-10},{-36,-10},{-36,52},{68,52}}, color={0,127,255}));
      connect(coolingControl.yF, translate.u) annotation (Line(points={{-73.6,
              90},{-66,90},{-66,130},{-56,130}}, color={0,0,127}));
    connect(TCoiHeaOut1.port_b, val.port_a) annotation (Line(points={{30,-108},
            {30,-108},{30,-88}}, color={0,127,255}));
    connect(val.port_b, BC.port_a2) annotation (Line(points={{30,-68},{30,-56},
            {30,-44}}, color={0,127,255}));
      connect(port_a, TCoiHeaOut1.port_a) annotation (Line(points={{-100,0},{
              -120,0},{-120,-120},{30,-120}}, color={0,127,255}));
    connect(BC.port_b2, port_b) annotation (Line(points={{10,-44},{146,-44},{
            146,0},{100,0}}, color={0,127,255}));
      connect(controlBus,modeSelector. cb) annotation (Line(
          points={{68,100},{-114,100},{-114,-3.18182},{-202.818,-3.18182}},
          color={255,204,51},
          thickness=0.5), Text(
          string="%first",
          index=-1,
          extent={{-6,3},{-6,3}}));
      connect(weaBus.TDryBul, TOut.u) annotation (Line(
          points={{-100,76},{-252,76},{-252,70},{-208,70}},
          color={255,204,51},
          thickness=0.5), Text(
          string="%first",
          index=-1,
          extent={{-6,3},{-6,3}}));
      connect(TOut.y, controlBus.TOut) annotation (Line(points={{-185,70},{-152,
              70},{-152,100},{68,100}}, color={0,0,127}), Text(
          string="%second",
          index=1,
          extent={{6,3},{6,3}}));
      connect(occSch1.occupied, controlBus.occupied) annotation (Line(points={{
              -185,34},{-144,34},{-144,100},{68,100}}, color={255,0,255}), Text(
          string="%second",
          index=1,
          extent={{6,3},{6,3}}));
      connect(occSch1.tNexOcc, controlBus.dTNexOcc) annotation (Line(points={{
              -185,46},{-138,46},{-138,100},{68,100}}, color={0,0,127}), Text(
          string="%second",
          index=1,
          extent={{6,3},{6,3}}));
      connect(TSetRoo.controlBus, controlBus) annotation (Line(
          points={{-194,22},{-194,22},{-114,22},{-114,100},{68,100}},
          color={255,204,51},
          thickness=0.5), Text(
          string="%second",
          index=1,
          extent={{6,3},{6,3}}));
      connect(ave1.y, coolingControl.TRoo) annotation (Line(points={{-187,-68},
              {-130,-68},{-130,92.4},{-82.8,92.4}}, color={0,0,127}));
      connect(min1.y, controlBus.TRooMin) annotation (Line(points={{-187,-42},{
              -162,-42},{-162,-18},{68,-18},{68,100}}, color={0,0,127}), Text(
          string="%second",
          index=1,
          extent={{6,3},{6,3}}));
      connect(ave1.y, controlBus.TRooAve) annotation (Line(points={{-187,-68},{
              -124,-68},{-124,40},{68,40},{68,100}}, color={0,0,127}), Text(
          string="%second",
          index=1,
          extent={{6,3},{6,3}}));
      connect(TRoom, ave1.u) annotation (Line(points={{-108,-96},{-234,-96},{
              -234,-68},{-210,-68}}, color={0,0,127}));
      connect(TRoom, min1.u) annotation (Line(points={{-108,-96},{-233,-96},{
              -233,-42},{-210,-42}}, color={0,0,127}));
      connect(and1.u2, greaterThreshold.y) annotation (Line(points={{162.6,
              124.6},{174.3,124.6},{174.3,120},{185.6,120}}, color={255,0,255}));
      connect(greaterThreshold.u, ave1.y) annotation (Line(points={{194.8,120},
              {604,120},{604,80},{270,80},{270,-68},{-187,-68}}, color={0,0,127}));
      connect(swiPum.u1, TSupSetHea1.y) annotation (Line(points={{135.4,-81.4},
              {146,-81.4},{146,-80},{153.4,-80}}, color={0,0,127}));
      connect(swiPum.y, heaCoiCon.u_s) annotation (Line(points={{119.3,-87},{
              102,-87},{102,-70},{83.2,-70}}, color={0,0,127}));
      connect(swiPum.u3, TSupSetHea2.y) annotation (Line(points={{135.4,-92.6},
              {143.7,-92.6},{143.7,-100},{153.4,-100}}, color={0,0,127}));
      connect(swiPum.u2, workingDayOrWeekEnd.y) annotation (Line(points={{135.4,
              -87},{154,-87},{154,-90},{173,-90}}, color={255,0,255}));
    connect(vavDam2.port_b, EchangRecup.port_a2) annotation (Line(points={{-56,
            -36},{-50,-36},{-50,-22},{-26,-22}}, color={0,127,255}));
      connect(vavDam2.port_a, ProdIn.port_b) annotation (Line(points={{-76,-36},{-84,
              -36},{-84,-64},{-38,-64}}, color={0,127,255}));
      connect(coolingControl.yF, vavDam1.y) annotation (Line(points={{-73.6,90},{-10,
              90},{-10,-36}}, color={0,0,127}));
      connect(coolingControl.yHex, vavDam2.y) annotation (Line(points={{-73.6,87.6},
              {-73.6,30.8},{-66,30.8},{-66,-24}}, color={0,0,127}));
      connect(vavDam1.port_b, fanSup1.port_a)
        annotation (Line(points={{0,-48},{44,-48},{44,-21}}, color={0,127,255}));
      connect(ProdIn.port_b, vavDam1.port_a) annotation (Line(points={{-38,-64},{-84,
              -64},{-84,-48},{-20,-48}}, color={0,127,255}));
      connect(senTem1.port_a, vavDam3.port_a) annotation (Line(points={{16,69},{12,
              69},{12,24},{10,24}}, color={0,127,255}));
      connect(vavDam3.port_b, senEntFlo3.port_a) annotation (Line(points={{-10,24},
              {-16,24},{-16,52},{68,52}}, color={0,127,255}));
      connect(coolingControl.yF, vavDam3.y)
        annotation (Line(points={{-73.6,90},{0,90},{0,36}}, color={0,0,127}));
    connect(EchangRecup.port_a1, vavDam4.port_b)
      annotation (Line(points={{-6,-10},{-2,-10}}, color={0,127,255}));
      connect(vavDam4.port_a, senTem1.port_a) annotation (Line(points={{18,-10},{18,
              -10},{18,69},{16,69}}, color={0,127,255}));
      connect(coolingControl.yHex, vavDam4.y) annotation (Line(points={{-73.6,87.6},
              {8.2,87.6},{8.2,2},{8,2}}, color={0,0,127}));
      connect(senTem1.port_b, hum.port_b) annotation (Line(points={{26,69},{26,69},
              {26,70},{28,70}}, color={0,127,255}));
      connect(port_a1, senRetFlo.port_a) annotation (Line(points={{-100,60},{84,60},
              {84,70},{70,70}}, color={0,127,255}));
       annotation (Icon(coordinateSystem(preserveAspectRatio=false, extent={{-100,
                -100},{100,100}}),
                       graphics={Bitmap(
              extent={{-100,100},{100,-100}},
              imageSource=
                  ""
                   +
                  "09RYkI8NF+A/ECT4r8KC/Nd//rOjLx16/8OPz318ntrltGshHJ4Ph+fd3rXaMf33f3hrjR454YgyM59vqN/9XAPWFcE3IEjwTRJJ1suHD+zft+di8+Wz7//dOzpGeiJIEmqlck/T888+8xTWk8E9IUhwbzwet3FXfUP9jus3W8/+7YPO7h7SE0ECKyst2fuDF2qqrCw2/oH/D0GC+2FZdmtN9daaantf/4efXGi5ei0SiZIeChJGBo+3fVvdc7t2mgzFpGeBBIAgwUMxGw1mo+HVHx1tbvnHRxcuDg45SE8EVCvWaxt27nh6+5P8J54gPQskDAQJHgGfz2/cVd+4q35wyPHGb0+OuD2kJwLqFOSrf/H6cV2RhvQgkHjweS6shl6nLbGYSE8BNCqxmFAjWB0ECQAAqIAgAQAAFRAkAACgAoIEAABUQJAAAIAKCBIQQ3aDbbgn/FGAIAQJiDHodVfOnztx/FhdbU1qKpbEEZOamlpXW3Pi+LEr588Z9DgcD4jBqwCQpNdp9Trtj48emQwEWq5+ce2L61/dah/3+UnPtSHkKeSVWyq2ba3dvq1uIx8AD/RAkIAKuTk5e5t2723azTBMKBTq7LG1trW33upobe+IRCKkp0sSPB6vsqK8ckt5pbWirLREKBCQngjgLggSUEcoFNbV1tTV1jAM83Us1tvX33qrvdvWe7O1bXRsnPR0CUaZp6iutJZaTJVbKkxGQ2pCneAOGw2CBFRL5XBKLeZSi5lhmKWlJYdzuK29s8fe2z842D8wFAqHSQ9IHaFQaCzWGfR6i8lorSjTaYtSUlJIDwXwUBAkSBgsy65cc7pzTzA4NzDk6LHbBx3OwSGHrbdvYWFjfb6XkcGzmIx6nVavLSoxm4t1WpEok/RQAKuEIEECE4kyq6wVVdaKlZvRaHTQ4ewbGHQ4hr1jY57RUa93bHpmhuyQcSTJylKp8vJVKmWeQq8tMhTr9dqi9PR00nMBxAeCBMmDy+WWmE0l5ru2IV9cXPT5J9xer8cz6vZ6Pd5Rj3fUPzE5GQiQmvOB1CqlNDdHmpurVinzVSq1WpmvUinkMnw5HpIbnt+Q5NLS0tQqpVqlZGrvun8yEBj3+aenZ2ZmZ6dnZqdnZm5PT4+N+8Lh+fD8fDgcDs/PB4NzcZ9HJMoU8PkCgUAo4PP5fGWeIlsiyRKLJVniLLFYIslSyGW5OTlx/70A9EOQYIPKzcl5mNf9wNTthYWFSCQSiUYjkWj0X9HY17Hw/PwDf1DA53NSOTwuj8tN53G5PB4vIyMDy30A7gNBArgfJARg3WDrIAAAoAKCBAAAVECQAACACggSAABQAUECAAAqIEgAAEAFBAkAAKiAIAEAABUQJAAAoEIcdmrostke/0Eg4XjcXtIjAI08bu9Hn3xKegpYb3EJQRyC9Nnlls8utzz+4wBAEuiy2btsdtJTQELCR3YAAEAFBAkAAKiAIAEAABUQJAAAoAKCBAAAVECQAACACggSAABQAUECAAAqIEgAAEAFBAkAAKiAIAEAABUQJAAAoAKCBAAAVECQAACACggSAABQAUECAAAqIEgAAEAFBAkAAKiAIAEAABUQJAAAoAKCBAAAVPg3pdXlZSKkN84AAAAASUVORK5CYII=",
              fileName="modelica://ClaRa/figures/Components/LUVO.png")}));
    end N1;

    model S2 "Modèle de CTA S2 du bâtiment hélios "
      extends Buildings.Fluid.Interfaces.PartialFourPortInterface(
      redeclare replaceable package Medium1 =
            Modelica.Media.Interfaces.PartialCondensingGases,
      redeclare replaceable package Medium2 =
            Modelica.Media.Interfaces.PartialCondensingGases);
      extends Buildings.Fluid.Interfaces.PartialTwoPortInterface(
        redeclare replaceable package Medium =
          Modelica.Media.Interfaces.PartialMedium
          "Liquid Medium in the component");
      parameter Modelica.SIunits.MassFlowRate mAir_Sou;
      parameter Modelica.SIunits.MassFlowRate mAir_Rep;
      parameter Modelica.SIunits.MassFlowRate mWat;
      parameter Modelica.SIunits.PressureDifference dp_Dam=150;
      parameter Integer nin=2 "Number of inputs";
            block CoolingControl
        "Controller for the free cooling and the mechanical cooling"
              extends Modelica.Blocks.Icons.Block;
              parameter Modelica.SIunits.Temperature TRooFre=22 + 273.15
          "Maximum temperature above which free cooling is enabled";
              parameter Modelica.SIunits.Temperature TOutFre=16 + 273.15
          "Outside temperature above which free cooling is allowed";
              parameter Modelica.SIunits.TemperatureDifference dT=1
          "Dead-band for free cooling";
              Modelica.Blocks.Interfaces.RealInput TRoo(unit="K")
          "Room air temperature"
                annotation (Placement(transformation(extent={{-140,40},{-100,80}})));
              Modelica.Blocks.Interfaces.RealInput TOut(unit="K")
          "Outside air temperature"
                annotation (Placement(transformation(extent=
                 {{-140,-80},{-100,-40}})));
              Modelica.Blocks.Interfaces.RealOutput yF
          "Control signal for free cooling, 1 if free cooling should be provided"
                annotation (Placement(transformation(extent={{100,-10},{120,10}}),
               iconTransformation(extent={{100,-10},{120,10}})));
              Modelica.Blocks.Interfaces.RealOutput yHex
          "Control signal for heat recovery damper" annotation (Placement(
              transformation(extent={{100,-70},{120,-50}}),
               iconTransformation(extent={{100,-70},{120,-50}})));
            initial equation
              yF = 0.0;
              yHex = 1.0;
            algorithm
              when TRoo > TRooFre and TOut > TOutFre and TOut < TRoo - dT then
                yF := 1.0;
                yHex := 0.0;
              elsewhen TOut < TOutFre - dT or TOut > TRoo then
                yF := 0.0;
                yHex := 1.0;
              end when;
              annotation (Icon(coordinateSystem(preserveAspectRatio=false, extent={{-100,
                  -100},
                   {100,100}}), graphics={
               Text(
                 extent={{-94,38},{-64,80}},
                 lineColor={0,0,255},
                 textString="TRoo"),
               Text(
                 extent={{-94,-82},{-64,-40}},
                 lineColor={0,0,255},
                 textString="TOut"),
               Text(
                 extent={{66,42},{86,74}},
                 lineColor={0,0,255},
                 textString="yC"),
               Text(
                 extent={{-32,100},{24,124}},
                 lineColor={0,0,255},
                 textString="%name"),
               Text(
                 extent={{66,-16},{86,16}},
                 lineColor={0,0,255},
                 textString="yF"),
               Text(
                 extent={{68,-74},{88,-42}},
                 lineColor={0,0,255},
                textString="yHex")}),Documentation(info="<html>
<p>
This block computes a control signal for free cooling and for mechanical cooling.
</p>
</html>",     revisions="<html>
<ul>
<li>
February 27, 2015, by Michael Wetter:<br/>
Changed controller to output setpoint for supply air temperature for cooling coil.
</li>
</ul>
</html>"));
            end CoolingControl;
      Buildings.Fluid.Movers.SpeedControlled_y fanSup1(
        tau=60,
        redeclare package Medium = Medium1,
        per(pressure(V_flow={2400/3600,11100/3600}, dp={2600,600})),
        energyDynamics=Modelica.Fluid.Types.Dynamics.FixedInitial)
        "Supply air fan"
        annotation (Placement(transformation(extent={{-66,-70},{-86,-50}})));
      Buildings.Fluid.Actuators.Valves.TwoWayEqualPercentage val(
        from_dp=true,
        m_flow_nominal=mWat,
        redeclare package Medium = Medium,
        dpFixed_nominal(displayUnit="kPa"),
        CvData=Buildings.Fluid.Types.CvTypes.Kv,
        Kv=40) annotation (Placement(transformation(
            extent={{-10,10},{10,-10}},
            rotation=90,
            origin={-38,-100})));
      Buildings.Controls.Continuous.LimPID heaCoiCon(
        yMax=1,
        yMin=0,
        initType=Modelica.Blocks.Types.InitPID.InitialState,
        Td=60,
        Ti=600,
      controllerType=Modelica.Blocks.Types.SimpleController.P,
      k=0.001)  "Controller for heating coil"
        annotation (Placement(transformation(extent={{-8,-88},{-20,-76}})));
      Buildings.Fluid.Sensors.TemperatureTwoPort TCoiHeaOut(
        T_start(displayUnit="K"),
        redeclare package Medium = Medium1,
        m_flow_nominal=mAir_Sou) "Heating coil outlet temperature"
        annotation (Placement(transformation(extent={{-48,-56},{-56,-64}})));
      Buildings.Fluid.Sensors.RelativePressure dpRetFan(redeclare package
          Medium =
            Medium1) "Pressure difference over return fan" annotation (Placement(
            transformation(
            extent={{-5,5},{5,-5}},
            rotation=90,
            origin={-39,7})));
      Buildings.Fluid.Sensors.VolumeFlowRate senRetFlo(redeclare package Medium =
            Medium1, m_flow_nominal=mAir_Rep)
        "Sensor for return fan flow rate"
        annotation (Placement(transformation(extent={{-50,56},{-44,64}})));
      Buildings.Fluid.Sensors.VolumeFlowRate senSupFlo(redeclare package Medium =
            Medium1, m_flow_nominal=mAir_Sou)
        "Sensor for supply fan flow rate"
        annotation (Placement(transformation(extent={{-56,-64},{-64,-56}})));
      Buildings.Examples.VAVReheat.Controls.FanVFD
                      conFanRet(
        xSet_nominal(displayUnit="m3/s") = mAir_Rep/1.2,
        k=0.01,
        Ti=120,
        controllerType=Modelica.Blocks.Types.SimpleController.PI,
        r_N_min=0.3) "Controller for fan"
        annotation (Placement(transformation(extent={{64,74},{72,82}})));
      Buildings.BoundaryConditions.WeatherData.Bus weaBus
        "Bus with weather data"
        annotation (Placement(transformation(extent={{-108,62},{-88,82}})));
      Buildings.Examples.VAVReheat.Controls.FanVFD
                      conFanSup(
        xSet_nominal(displayUnit="Pa") = 580,
        k=0.01,
        Ti=120,
        controllerType=Modelica.Blocks.Types.SimpleController.PI,
        r_N_min=0.3) "Controller for fan"
        annotation (Placement(transformation(extent={{58,2},{66,10}})));
      Buildings.Examples.VAVReheat.Controls.DuctStaticPressureSetpoint
                                          pSetDuc(
        pMin=50,
        nin=nin,
        k=0.01,
        pMax=700,
        Ti=120,
        controllerType=Modelica.Blocks.Types.SimpleController.PI)
        "Duct static pressure setpoint"
        annotation (Placement(transformation(extent={{44,2},{52,10}})));
      Buildings.Examples.VAVReheat.Controls.ControlBus
                 controlBus "Controle pour les consignes jour et nuit"
        annotation (Placement(transformation(extent={{48,90},{68,110}})));
      Modelica.Blocks.Interfaces.RealInput u[nin] "Damper position input"
        annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=270,
            origin={34,104})));
      Buildings.Fluid.HeatExchangers.ConstantEffectiveness EchangRecup(
        redeclare package Medium1 = Medium1,
        redeclare package Medium2 = Medium1,
        dp2_nominal=95,
        dp1_nominal=65,
        m1_flow_nominal=mAir_Rep,
        m2_flow_nominal=mAir_Sou,
        eps=0.75) annotation (Placement(transformation(extent={{-8,-8},{12,12}})));
      Buildings.Fluid.Movers.SpeedControlled_y fanRet(
        tau=60,
        per(pressure(V_flow={2100/3600,10000/3600}, dp={2130,420})),
        redeclare package Medium = Medium1,
        energyDynamics=Modelica.Fluid.Types.Dynamics.DynamicFreeInitial)
        "Return air fan"
        annotation (Placement(transformation(extent={{-38,50},{-18,70}})));
      CoolingControl coolingControl
        annotation (Placement(transformation(extent={{-80,80},{-70,88}})));
      Modelica.Blocks.Math.Add add
        annotation (Placement(transformation(extent={{58,-26},{70,-14}})));
      Modelica.Blocks.Continuous.Integrator PumpAuxi2(k=1/(3600*1000))
        annotation (Placement(transformation(extent={{76,-26},{88,-14}})));
      Modelica.Blocks.Interfaces.RealOutput Auxilaire
        "Auxiliairy energie consumme by the CTA" annotation (Placement(
            transformation(
            extent={{10,-10},{-10,10}},
            rotation=180,
            origin={110,-20})));
      Modelica.Blocks.Interfaces.RealOutput EHotDeck
        "Eneergy consumme by the hot deck" annotation (Placement(transformation(
            extent={{10,-10},{-10,10}},
            rotation=180,
            origin={110,-34})));
      Buildings.Fluid.Sensors.EnthalpyFlowRate senEntFlo2(redeclare package
          Medium = Medium1, m_flow_nominal=mAir_Sou)
                                                 annotation (Placement(
            transformation(
            extent={{-6,6},{6,-6}},
            rotation=180,
            origin={-12,-14})));
      Buildings.Fluid.Sensors.EnthalpyFlowRate senEntFlo1(redeclare package
          Medium = Medium1, m_flow_nominal=mAir_Sou)
                                                 annotation (Placement(
            transformation(
            extent={{-4,4},{4,-4}},
            rotation=180,
            origin={-92,-60})));
      Modelica.Blocks.Continuous.Integrator PumpAuxi8(k=1/(3600*1000))
        annotation (Placement(transformation(extent={{74,-10},{86,2}})));
      Modelica.Blocks.Continuous.Integrator PumpAuxi1(k=1/(3600*1000))
        annotation (Placement(transformation(extent={{72,14},{84,26}})));
      Modelica.Blocks.Math.Add add1(k1=-1)
        annotation (Placement(transformation(extent={{92,4},{112,24}})));
      Buildings.Fluid.HeatExchangers.DryEffectivenessNTU BC(
        redeclare package Medium1 = Medium1,
        redeclare package Medium2 = Medium,
        m2_flow_nominal=mWat,
        configuration=Buildings.Fluid.Types.HeatExchangerConfiguration.CrossFlowUnmixed,
        dp1_nominal=21,
        Q_flow_nominal(displayUnit="kW") = 44770,
        dp2_nominal(displayUnit="kPa") = 17200,
        m1_flow_nominal=mAir_Sou,
      T_a1_nominal=284.75,
      T_a2_nominal=343.15)
        annotation (Placement(transformation(extent={{-18,-48},{-38,-28}})));
      Modelica.Blocks.Sources.RealExpression Consommation(y=if (translate.y ==
            1) then 0 else (senEntFlo3.H_flow - ProdIn.H_flow))
        "part de chaleur envoyer vers le REC depuis les chaudières"
        annotation (Placement(transformation(extent={{78,98},{98,118}})));
      Modelica.Blocks.Continuous.Integrator Conso(k=1/(3600*1000))
        annotation (Placement(transformation(extent={{110,102},{122,114}})));
      Buildings.Fluid.Sensors.EnthalpyFlowRate senEntFlo3(redeclare package
          Medium = Medium1, m_flow_nominal=mAir_Rep)
                                                 annotation (Placement(
            transformation(
            extent={{6,6},{-6,-6}},
            rotation=180,
            origin={82,60})));
      Buildings.Fluid.Sensors.EnthalpyFlowRate ProdIn(redeclare package Medium =
            Medium1, m_flow_nominal=mAir_Sou)
                                          annotation (Placement(transformation(
            extent={{-6,-6},{6,6}},
            rotation=180,
            origin={86,-60})));
      Modelica.Blocks.Sources.RealExpression Production(y=if (translate.y == 1)
             then (senEntFlo3.H_flow - ProdIn.H_flow) else 0)
        "part de chaleur envoyer vers le REC depuis les chaudières"
        annotation (Placement(transformation(extent={{78,78},{98,98}})));
      Modelica.Blocks.Continuous.Integrator Produ(k=1/(3600*1000))
        annotation (Placement(transformation(extent={{110,82},{122,94}})));
      Modelica.Blocks.Math.RealToInteger translate
        annotation (Placement(transformation(extent={{-40,84},{-20,104}})));
      Buildings.Controls.SetPoints.OccupancySchedule occSch1(occupancy=3600*{6,
            19}) "Occupancy schedule"
        annotation (Placement(transformation(extent={{-194,18},{-174,38}})));
      Buildings.Examples.VAVReheat.Controls.RoomTemperatureSetpoint
                                       TSetRoo(
        TCooOff(displayUnit="degC"),
        THeaOn(displayUnit="degC") = 297.15,
        TCooOn(displayUnit="degC") = 299.15,
        THeaOff(displayUnit="degC") = 294.15)
        annotation (Placement(transformation(extent={{-194,-6},{-174,14}})));
      Modelica.Blocks.Routing.RealPassThrough TOut(y(
          final quantity="ThermodynamicTemperature",
          final unit="K",
          displayUnit="degC",
          min=0))
        annotation (Placement(transformation(extent={{-194,48},{-174,68}})));
      Buildings.Examples.VAVReheat.Controls.ModeSelector
                            modeSelector(
        TRooSetCooOcc(displayUnit="degC"),
        TRooSetHeaOcc(displayUnit="degC") = 297.15,
        TSetHeaCoiOut(displayUnit="degC") = 294.15,
        delTRooOnOff(displayUnit="degC") = 1)
        annotation (Placement(transformation(extent={{-194,-32},{-174,-12}})));
    Buildings.Utilities.Math.Average ave1(nin=3)
      "Compute average of room temperatures"
      annotation (Placement(transformation(extent={{-196,-90},{-176,-70}})));
    Buildings.Utilities.Math.Min min1(nin=3)
      "Computes lowest room temperature"
      annotation (Placement(transformation(extent={{-196,-64},{-176,-44}})));
      Modelica.Blocks.Interfaces.RealInput TRoom[3]
        annotation (Placement(transformation(extent={{20,-20},{-20,20}},
            rotation=180,
            origin={-110,-96})));
      Modelica.Blocks.Sources.Constant TSupSetHea1(
                                                  y(
          final quantity="ThermodynamicTemperature",
          final unit="K",
          displayUnit="degC",
          min=0), k=273.15 + 19)
        "Supply air temperature setpoint for heating"
        annotation (Placement(transformation(extent={{62,-82},{50,-70}})));
      Modelica.Blocks.Logical.Switch swiPum "Pump switch"
        annotation (Placement(transformation(extent={{30,-90},{16,-76}})));
      Modelica.Blocks.Sources.Constant TSupSetHea2(
                                                  y(
          final quantity="ThermodynamicTemperature",
          final unit="K",
          displayUnit="degC",
          min=0), k=273.15 + 15)
        "Supply air temperature setpoint for heating"
        annotation (Placement(transformation(extent={{62,-102},{50,-90}})));
      FBM.Components.WorkingDayOrWeekEnd workingDayOrWeekEnd
        annotation (Placement(transformation(extent={{98,-94},{78,-74}})));
      Buildings.Fluid.Actuators.Dampers.VAVBoxExponential vavDam3(
        redeclare package Medium = Medium1,
        m_flow_nominal=mAir_Sou,
      dp_nominal=dp_Dam)
        annotation (Placement(transformation(extent={{26,-70},{6,-50}})));
      Buildings.Fluid.Actuators.Dampers.VAVBoxExponential vavDam1(
        redeclare package Medium = Medium1,
        m_flow_nominal=mAir_Sou,
      dp_nominal=dp_Dam)
        annotation (Placement(transformation(extent={{46,-44},{26,-24}})));
      Buildings.Fluid.Actuators.Dampers.VAVBoxExponential damRetByp(
      redeclare package Medium = Medium1,
      m_flow_nominal=mAir_Rep,
      dp_nominal=2*dp_Dam)
      "Return air damper that bypasses the heat recovery"
      annotation (Placement(transformation(extent={{-8,50},{12,70}})));
    equation
      connect(TCoiHeaOut.port_b, senSupFlo.port_a)
        annotation (Line(points={{-56,-60},{-56,-60}}, color={0,127,255}));
      connect(fanSup1.port_a, senSupFlo.port_b)
        annotation (Line(points={{-66,-60},{-64,-60}}, color={0,127,255}));
      connect(val.y, heaCoiCon.y) annotation (Line(
          points={{-26,-100},{-26,-100},{-26,-82},{-20.6,-82}},
          color={0,0,127},
          pattern=LinePattern.Dash));
      connect(TCoiHeaOut.T, heaCoiCon.u_m) annotation (Line(
          points={{-52,-64.4},{-50,-64.4},{-50,-88},{-14,-88},{-14,-89.2}},
          color={0,0,127},
          pattern=LinePattern.Dash));
      connect(pSetDuc.y, conFanSup.u)
        annotation (Line(points={{52.4,6},{57.2,6}},          color={0,0,127}));
      connect(controlBus, conFanRet.controlBus) annotation (Line(
          points={{58,100},{60,100},{60,81.2},{65.2,81.2}},
          color={255,204,51},
          thickness=0.5), Text(
          string="%first",
          index=-1,
          extent={{-6,3},{-6,3}}));
      connect(controlBus, conFanSup.controlBus) annotation (Line(
          points={{58,100},{59.2,100},{59.2,9.2}},
          color={255,204,51},
          thickness=0.5), Text(
          string="%first",
          index=-1,
          extent={{-6,3},{-6,3}}));
      connect(u, pSetDuc.u) annotation (Line(points={{34,104},{34,104},{34,6},{43.2,
              6}}, color={0,0,127}));
      connect(weaBus.TDryBul, pSetDuc.TOut) annotation (Line(
          points={{-98,72},{43,72},{43,9.2},{43.2,9.2}},
          color={255,204,51},
          thickness=0.5), Text(
          string="%first",
          index=-1,
          extent={{-6,3},{-6,3}}));
      connect(fanSup1.port_b, dpRetFan.port_a) annotation (Line(points={{-86,-60},
              {-86,-60},{-86,2},{-39,2}},
                                     color={0,127,255}));
      connect(senRetFlo.port_b, fanRet.port_a)
        annotation (Line(points={{-44,60},{-38,60}}, color={0,127,255}));
      connect(fanRet.port_b, EchangRecup.port_a1) annotation (Line(points={{-18,60},
              {-14,60},{-14,8},{-8,8}}, color={0,127,255}));
      connect(dpRetFan.port_b, fanRet.port_a)
        annotation (Line(points={{-39,12},{-38,12},{-38,60}}, color={0,127,255}));
      connect(conFanRet.y, fanRet.y) annotation (Line(points={{72.4,78},{74,78},{-22,
              78},{-22,76},{-28.2,76},{-28.2,72}},
                                               color={0,0,127}));
      connect(senRetFlo.V_flow, conFanRet.u_m) annotation (Line(points={{-47,64.4},{
              -47.5,64.4},{-47.5,73.2},{68,73.2}}, color={0,0,127}));
      connect(conFanSup.y, fanSup1.y) annotation (Line(points={{66.4,6},{82,6},{82,-2},
              {12,-2},{12,-24},{-75.8,-24},{-75.8,-48}},
                                                     color={0,0,127}));
      connect(senSupFlo.V_flow, conFanRet.u) annotation (Line(points={{-60,
              -55.6},{-60,-55.6},{-60,78},{63.2,78}},
                                          color={0,0,127}));
      connect(dpRetFan.p_rel, conFanSup.u_m) annotation (Line(points={{-43.5,7},{-46.75,
              7},{-46.75,1.2},{62,1.2}}, color={0,0,127}));
      connect(weaBus.TDryBul, coolingControl.TOut) annotation (Line(
          points={{-98,72},{-92,72},{-92,81.6},{-81,81.6}},
          color={255,204,51},
          thickness=0.5), Text(
          string="%first",
          index=-1,
          extent={{-6,3},{-6,3}}));
      connect(fanRet.P, add.u1) annotation (Line(points={{-17,68},{24,68},{24,
              -16.4},{56.8,-16.4}}, color={0,0,127}));
      connect(fanSup1.P, add.u2) annotation (Line(points={{-87,-52},{-6,-52},{
              -6,-23.6},{56.8,-23.6}}, color={0,0,127}));
      connect(Auxilaire, PumpAuxi2.y)
        annotation (Line(points={{110,-20},{88.6,-20}}, color={0,0,127}));
      connect(add.y, PumpAuxi2.u)
        annotation (Line(points={{70.6,-20},{74.8,-20}}, color={0,0,127}));
      connect(EchangRecup.port_b2, senEntFlo2.port_a) annotation (Line(points={{-8,-4},
              {-8,-10},{-8,-14},{-6,-14}}, color={0,127,255}));
      connect(port_b2, senEntFlo1.port_b) annotation (Line(points={{-100,-60},{
              -98,-60},{-96,-60}}, color={0,127,255}));
      connect(senEntFlo1.port_a, fanSup1.port_b) annotation (Line(points={{-88,
              -60},{-88,-60},{-86,-60}}, color={0,127,255}));
      connect(PumpAuxi8.y, add1.u2) annotation (Line(points={{86.6,-4},{88,-4},
            {88,4},{88,4},{88,8},{90,8}},color={0,0,127}));
      connect(PumpAuxi1.y, add1.u1) annotation (Line(points={{84.6,20},{90,20},
            {90,20}},           color={0,0,127}));
      connect(add1.y, EHotDeck) annotation (Line(points={{113,14},{120,14},{
            120,-34},{110,-34}},
                               color={0,0,127}));
      connect(senEntFlo2.H_flow, PumpAuxi1.u) annotation (Line(points={{-12,
            -7.4},{-14,-7.4},{-14,20},{70.8,20}},    color={0,0,127}));
      connect(senEntFlo1.H_flow, PumpAuxi8.u) annotation (Line(points={{-92,
            -55.6},{58,-55.6},{58,-4},{72.8,-4}},      color={0,0,127}));
      connect(BC.port_b1, TCoiHeaOut.port_a) annotation (Line(points={{-38,-32},{-44,
              -32},{-44,-60},{-48,-60}}, color={0,127,255}));
      connect(BC.port_a1, senEntFlo2.port_b) annotation (Line(points={{-18,-32},{-18,
              -32},{-18,-14}}, color={0,127,255}));
      connect(Consommation.y, Conso.u)
        annotation (Line(points={{99,108},{108.8,108}},color={0,0,127}));
      connect(port_b1, senEntFlo3.port_b) annotation (Line(points={{100,60},{94,
              60},{88,60}}, color={0,127,255}));
      connect(senEntFlo3.port_a, EchangRecup.port_b1) annotation (Line(points={{76,60},
              {46,60},{46,8},{12,8}}, color={0,127,255}));
      connect(port_a2, ProdIn.port_a)
        annotation (Line(points={{100,-60},{92,-60}}, color={0,127,255}));
      connect(Production.y, Produ.u)
        annotation (Line(points={{99,88},{108.8,88}},  color={0,0,127}));
      connect(coolingControl.yF, translate.u) annotation (Line(points={{-69.5,
            84},{-56,84},{-56,94},{-42,94}},     color={0,0,127}));
      connect(val.port_b, BC.port_a2) annotation (Line(points={{-38,-90},{-38,-90},{
              -38,-44}}, color={0,127,255}));
      connect(port_a, val.port_a) annotation (Line(points={{-100,0},{-122,0},{-122,-110},
              {-38,-110}}, color={0,127,255}));
      connect(BC.port_b2, port_b) annotation (Line(points={{-18,-44},{132,-44},{132,
              0},{100,0}}, color={0,127,255}));
      connect(controlBus,modeSelector. cb) annotation (Line(
          points={{58,100},{-102,100},{-102,-15.1818},{-190.818,-15.1818}},
          color={255,204,51},
          thickness=0.5), Text(
          string="%first",
          index=-1,
          extent={{-6,3},{-6,3}}));
      connect(weaBus.TDryBul, TOut.u) annotation (Line(
          points={{-98,72},{-200,72},{-200,58},{-196,58}},
          color={255,204,51},
          thickness=0.5), Text(
          string="%first",
          index=-1,
          extent={{-6,3},{-6,3}}));
      connect(TOut.y, controlBus.TOut) annotation (Line(points={{-173,58},{
            -162,58},{-162,100},{58,100}},
                                        color={0,0,127}), Text(
          string="%second",
          index=1,
          extent={{6,3},{6,3}}));
      connect(occSch1.occupied, controlBus.occupied) annotation (Line(points={{-173,22},
            {-154,22},{-154,100},{58,100}},            color={255,0,255}), Text(
          string="%second",
          index=1,
          extent={{6,3},{6,3}}));
      connect(occSch1.tNexOcc, controlBus.dTNexOcc) annotation (Line(points={{-173,34},
            {-148,34},{-148,100},{58,100}},            color={0,0,127}), Text(
          string="%second",
          index=1,
          extent={{6,3},{6,3}}));
      connect(TSetRoo.controlBus, controlBus) annotation (Line(
          points={{-182,10},{-182,10},{-102,10},{-102,100},{58,100}},
          color={255,204,51},
          thickness=0.5), Text(
          string="%second",
          index=1,
          extent={{6,3},{6,3}}));
      connect(ave1.y, coolingControl.TRoo) annotation (Line(points={{-175,-80},
            {-140,-80},{-140,86.4},{-81,86.4}},   color={0,0,127}));
      connect(min1.y, controlBus.TRooMin) annotation (Line(points={{-175,-54},
            {-172,-54},{-172,-18},{58,-18},{58,100}},  color={0,0,127}), Text(
          string="%second",
          index=1,
          extent={{6,3},{6,3}}));
      connect(ave1.y, controlBus.TRooAve) annotation (Line(points={{-175,-80},
            {-148,-80},{-148,-12},{58,-12},{58,100}},  color={0,0,127}), Text(
          string="%second",
          index=1,
          extent={{6,3},{6,3}}));
      connect(TRoom, min1.u) annotation (Line(points={{-110,-96},{-206,-96},{
            -206,-54},{-198,-54}},   color={0,0,127}));
      connect(TRoom, ave1.u) annotation (Line(points={{-110,-96},{-206,-96},{
            -206,-80},{-198,-80}},   color={0,0,127}));
      connect(swiPum.u1, TSupSetHea1.y) annotation (Line(points={{31.4,-77.4},
            {50,-77.4},{50,-76},{49.4,-76}},  color={0,0,127}));
      connect(swiPum.y, heaCoiCon.u_s) annotation (Line(points={{15.3,-83},{
            14,-83},{14,-82},{-6.8,-82}},color={0,0,127}));
      connect(swiPum.u3, TSupSetHea2.y) annotation (Line(points={{31.4,-88.6},
            {39.7,-88.6},{39.7,-96},{49.4,-96}},      color={0,0,127}));
      connect(swiPum.u2, workingDayOrWeekEnd.y) annotation (Line(points={{31.4,
            -83},{54,-83},{54,-84},{77,-84}},   color={255,0,255}));
      connect(TCoiHeaOut.port_a, vavDam3.port_b) annotation (Line(points={{-48,-60},
              {-22,-60},{6,-60}}, color={0,127,255}));
      connect(coolingControl.yF, vavDam3.y)
        annotation (Line(points={{-69.5,84},{16,84},{16,-48}}, color={0,0,127}));
      connect(EchangRecup.port_a2, vavDam1.port_b) annotation (Line(points={{12,-4},
              {20,-4},{20,-34},{26,-34}}, color={0,127,255}));
      connect(coolingControl.yHex, vavDam1.y) annotation (Line(points={{-69.5,
            81.6},{35.25,81.6},{35.25,-22},{36,-22}},
                                                  color={0,0,127}));
      connect(vavDam3.port_a, ProdIn.port_b) annotation (Line(points={{26,-60},{54,
              -60},{80,-60}}, color={0,127,255}));
      connect(vavDam1.port_a, ProdIn.port_b) annotation (Line(points={{46,-34},{64,
              -34},{64,-60},{80,-60}}, color={0,127,255}));
    connect(port_a1, senRetFlo.port_a) annotation (Line(points={{-100,60},{
            -75,60},{-50,60}}, color={0,127,255}));
    connect(fanRet.port_b, damRetByp.port_a)
      annotation (Line(points={{-18,60},{-8,60}}, color={0,127,255}));
    connect(damRetByp.port_b, senEntFlo3.port_a)
      annotation (Line(points={{12,60},{44,60},{76,60}}, color={0,127,255}));
    connect(coolingControl.yF, damRetByp.y)
      annotation (Line(points={{-69.5,84},{2,84},{2,72}}, color={0,0,127}));
     annotation (Icon(coordinateSystem(preserveAspectRatio=false, extent={{-100,
                -100},{100,100}}),
                       graphics={Bitmap(
              extent={{-100,100},{100,-100}},
              imageSource=
                  ""
                   +
                  "09RYkI8NF+A/ECT4r8KC/Nd//rOjLx16/8OPz318ntrltGshHJ4Ph+fd3rXaMf33f3hrjR454YgyM59vqN/9XAPWFcE3IEjwTRJJ1suHD+zft+di8+Wz7//dOzpGeiJIEmqlck/T888+8xTWk8E9IUhwbzwet3FXfUP9jus3W8/+7YPO7h7SE0ECKyst2fuDF2qqrCw2/oH/D0GC+2FZdmtN9daaantf/4efXGi5ei0SiZIeChJGBo+3fVvdc7t2mgzFpGeBBIAgwUMxGw1mo+HVHx1tbvnHRxcuDg45SE8EVCvWaxt27nh6+5P8J54gPQskDAQJHgGfz2/cVd+4q35wyPHGb0+OuD2kJwLqFOSrf/H6cV2RhvQgkHjweS6shl6nLbGYSE8BNCqxmFAjWB0ECQAAqIAgAQAAFRAkAACgAoIEAABUQJAAAIAKCBIQQ3aDbbgn/FGAIAQJiDHodVfOnztx/FhdbU1qKpbEEZOamlpXW3Pi+LEr588Z9DgcD4jBqwCQpNdp9Trtj48emQwEWq5+ce2L61/dah/3+UnPtSHkKeSVWyq2ba3dvq1uIx8AD/RAkIAKuTk5e5t2723azTBMKBTq7LG1trW33upobe+IRCKkp0sSPB6vsqK8ckt5pbWirLREKBCQngjgLggSUEcoFNbV1tTV1jAM83Us1tvX33qrvdvWe7O1bXRsnPR0CUaZp6iutJZaTJVbKkxGQ2pCneAOGw2CBFRL5XBKLeZSi5lhmKWlJYdzuK29s8fe2z842D8wFAqHSQ9IHaFQaCzWGfR6i8lorSjTaYtSUlJIDwXwUBAkSBgsy65cc7pzTzA4NzDk6LHbBx3OwSGHrbdvYWFjfb6XkcGzmIx6nVavLSoxm4t1WpEok/RQAKuEIEECE4kyq6wVVdaKlZvRaHTQ4ewbGHQ4hr1jY57RUa93bHpmhuyQcSTJylKp8vJVKmWeQq8tMhTr9dqi9PR00nMBxAeCBMmDy+WWmE0l5ru2IV9cXPT5J9xer8cz6vZ6Pd5Rj3fUPzE5GQiQmvOB1CqlNDdHmpurVinzVSq1WpmvUinkMnw5HpIbnt+Q5NLS0tQqpVqlZGrvun8yEBj3+aenZ2ZmZ6dnZqdnZm5PT4+N+8Lh+fD8fDgcDs/PB4NzcZ9HJMoU8PkCgUAo4PP5fGWeIlsiyRKLJVniLLFYIslSyGW5OTlx/70A9EOQYIPKzcl5mNf9wNTthYWFSCQSiUYjkWj0X9HY17Hw/PwDf1DA53NSOTwuj8tN53G5PB4vIyMDy30A7gNBArgfJARg3WDrIAAAoAKCBAAAVECQAACACggSAABQAUECAAAqIEgAAEAFBAkAAKiAIAEAABUQJAAAoEIcdmrostke/0Eg4XjcXtIjAI08bu9Hn3xKegpYb3EJQRyC9Nnlls8utzz+4wBAEuiy2btsdtJTQELCR3YAAEAFBAkAAKiAIAEAABUQJAAAoAKCBAAAVECQAACACggSAABQAUECAAAqIEgAAEAFBAkAAKiAIAEAABUQJAAAoAKCBAAAVECQAACACggSAABQAUECAAAqIEgAAEAFBAkAAKiAIAEAABUQJAAAoAKCBAAAVPg3pdXlZSKkN84AAAAASUVORK5CYII=",
              fileName="modelica://ClaRa/figures/Components/LUVO.png")}));
    end S2;

    model N2 "Modèle de CTA N2 du bâtiment hélios "
      extends Buildings.Fluid.Interfaces.PartialFourPortInterface(
      redeclare replaceable package Medium1 =
            Modelica.Media.Interfaces.PartialCondensingGases,
      redeclare replaceable package Medium2 =
            Modelica.Media.Interfaces.PartialCondensingGases);
      extends Buildings.Fluid.Interfaces.PartialTwoPortInterface(
        redeclare replaceable package Medium =
          Modelica.Media.Interfaces.PartialMedium
          "Liquid Medium in the component");
      parameter Modelica.SIunits.MassFlowRate mAir_Sou;
      parameter Modelica.SIunits.MassFlowRate mAir_Rep;
      parameter Modelica.SIunits.MassFlowRate mWat;
      parameter Modelica.SIunits.PressureDifference dp_Dam=150;
      parameter Integer nin=3 "Number of inputs";
      Buildings.Fluid.Movers.SpeedControlled_y fanSup(
        tau=60,
        redeclare package Medium = Medium1,
        per(pressure(V_flow={3800/3600,12500/3600,18750/3600}, dp={1150,850,240})),
        energyDynamics=Modelica.Fluid.Types.Dynamics.FixedInitial)
        "Supply air fan"
        annotation (Placement(transformation(extent={{52,38},{32,58}})));
      Buildings.Fluid.Movers.SpeedControlled_y fanSup1(
        tau=60,
        redeclare package Medium = Medium1,
        per(pressure(V_flow={5600/3600,17900/3600,26500/3600}, dp={2360,1800,500})),
        energyDynamics=Modelica.Fluid.Types.Dynamics.FixedInitial)
        "Supply air fan"
        annotation (Placement(transformation(extent={{56,-44},{76,-24}})));
      Buildings.Fluid.Actuators.Valves.TwoWayEqualPercentage val(
      from_dp=true,
      m_flow_nominal=mWat,
      redeclare package Medium = Medium,
      CvData=Buildings.Fluid.Types.CvTypes.Kv,
      Kv=40) annotation (Placement(transformation(
          extent={{-10,10},{10,-10}},
          rotation=90,
          origin={86,-110})));
      Buildings.Controls.Continuous.LimPID heaCoiCon(
        yMax=1,
        yMin=0,
        initType=Modelica.Blocks.Types.InitPID.InitialState,
        Td=60,
        Ti=600,
      controllerType=Modelica.Blocks.Types.SimpleController.P,
      k=0.001)  "Controller for heating coil"
        annotation (Placement(transformation(extent={{72,-86},{60,-74}})));
      Buildings.Fluid.Sensors.TemperatureTwoPort TCoiHeaOut(
        T_start(displayUnit="K"),
        redeclare package Medium = Medium1,
        m_flow_nominal=mAir_Sou) "Heating coil outlet temperature"
        annotation (Placement(transformation(extent={{42,-32},{48,-38}})));
      Buildings.Fluid.Sensors.RelativePressure dpRetFan(redeclare package
          Medium =
            Medium1) "Pressure difference over return fan" annotation (Placement(
            transformation(
            extent={{-5,5},{5,-5}},
            rotation=90,
            origin={77,19})));
      Buildings.Fluid.Sensors.VolumeFlowRate senRetFlo(redeclare package Medium =
            Medium1, m_flow_nominal=mAir_Rep)
        "Sensor for return fan flow rate"
        annotation (Placement(transformation(extent={{64,44},{58,52}})));
      Buildings.Fluid.Sensors.VolumeFlowRate senSupFlo(redeclare package Medium =
            Medium1, m_flow_nominal=mAir_Sou)
        "Sensor for supply fan flow rate"
        annotation (Placement(transformation(extent={{88,-38},{96,-30}})));
      Buildings.Examples.VAVReheat.Controls.FanVFD
                      conFanRet(
        xSet_nominal(displayUnit="m3/s") = mAir_Rep/1.2,
        k=0.01,
        Ti=120,
        controllerType=Modelica.Blocks.Types.SimpleController.PI,
        r_N_min=0.3) "Controller for fan"
        annotation (Placement(transformation(extent={{60,78},{68,86}})));
      Buildings.BoundaryConditions.WeatherData.Bus weaBus
        "Bus with weather data"
        annotation (Placement(transformation(extent={{-108,62},{-88,82}})));
      Buildings.Examples.VAVReheat.Controls.FanVFD
                      conFanSup(
        xSet_nominal(displayUnit="Pa") = 590,
        k=0.01,
        Ti=120,
        controllerType=Modelica.Blocks.Types.SimpleController.PI,
        r_N_min=0.3) "Controller for fan"
        annotation (Placement(transformation(extent={{56,2},{64,10}})));
      Buildings.Examples.VAVReheat.Controls.DuctStaticPressureSetpoint
                                          pSetDuc(
        pMin=50,
        nin=nin,
        k=0.01,
        pMax=700,
        Ti=120,
        controllerType=Modelica.Blocks.Types.SimpleController.PI)
        "Duct static pressure setpoint"
        annotation (Placement(transformation(extent={{42,2},{50,10}})));
      Buildings.Examples.VAVReheat.Controls.ControlBus
                 controlBus "Controle pour les consignes jour et nuit"
        annotation (Placement(transformation(extent={{48,90},{68,110}})));
      Modelica.Blocks.Interfaces.RealInput u[nin] "Damper position input"
        annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=270,
            origin={34,104})));
             block CoolingControl
        "Controller for the free cooling and the mechanical cooling"
               extends Modelica.Blocks.Icons.Block;
               parameter Modelica.SIunits.Temperature TRooFre=22 + 273.15
          "Maximum temperature above which free cooling is enabled";
               parameter Modelica.SIunits.Temperature TOutFre=16 + 273.15
          "Outside temperature above which free cooling is allowed";
               parameter Modelica.SIunits.TemperatureDifference dT=1
          "Dead-band for free cooling";
               Modelica.Blocks.Interfaces.RealInput TRoo(unit="K")
          "Room air temperature"
                 annotation (Placement(transformation(extent={{-140,40},{-100,80}})));
               Modelica.Blocks.Interfaces.RealInput TOut(unit="K")
          "Outside air temperature"
                 annotation (Placement(transformation(extent=
                 {{-140,-80},{-100,-40}})));
               Modelica.Blocks.Interfaces.RealOutput yF
          "Control signal for free cooling, 1 if free cooling should be provided"
                 annotation (Placement(transformation(extent={{100,-10},{120,10}}),
               iconTransformation(extent={{100,-10},{120,10}})));
               Modelica.Blocks.Interfaces.RealOutput yHex
          "Control signal for heat recovery damper" annotation (Placement(
              transformation(extent={{100,-70},{120,-50}}),
               iconTransformation(extent={{100,-70},{120,-50}})));
             initial equation
               yF = 0.0;
               yHex = 1.0;
             algorithm
               when TRoo > TRooFre and TOut > TOutFre and TOut < TRoo - dT then
                 yF := 1.0;
                 yHex := 0.0;
               elsewhen TOut < TOutFre - dT or TOut > TRoo then
                 yF := 0.0;
                 yHex := 1.0;
               end when;
               annotation (Icon(coordinateSystem(preserveAspectRatio=false, extent={{-100,
                  -100},
                   {100,100}}), graphics={
               Text(
                 extent={{-94,38},{-64,80}},
                 lineColor={0,0,255},
                 textString="TRoo"),
               Text(
                 extent={{-94,-82},{-64,-40}},
                 lineColor={0,0,255},
                 textString="TOut"),
               Text(
                 extent={{66,42},{86,74}},
                 lineColor={0,0,255},
                 textString="yC"),
               Text(
                 extent={{-32,100},{24,124}},
                 lineColor={0,0,255},
                 textString="%name"),
               Text(
                 extent={{66,-16},{86,16}},
                 lineColor={0,0,255},
                 textString="yF"),
               Text(
                 extent={{68,-74},{88,-42}},
                 lineColor={0,0,255},
                textString="yHex")}),Documentation(info="<html>
<p>
This block computes a control signal for free cooling and for mechanical cooling.
</p>
</html>",     revisions="<html>
<ul>
<li>
February 27, 2015, by Michael Wetter:<br/>
Changed controller to output setpoint for supply air temperature for cooling coil.
</li>
</ul>
</html>"));
             end CoolingControl;
      CoolingControl coolingControl
        annotation (Placement(transformation(extent={{-76,78},{-64,92}})));
      Buildings.Fluid.HeatExchangers.ConstantEffectiveness EchangRecup(
      redeclare package Medium1 = Medium1,
      redeclare package Medium2 = Medium1,
      dp1_nominal=54,
      dp2_nominal=54,
      m1_flow_nominal=mAir_Rep,
      m2_flow_nominal=mAir_Sou,
      eps=0.75)
      annotation (Placement(transformation(extent={{4,-12},{-16,8}})));
      Modelica.Blocks.Math.Add add
        annotation (Placement(transformation(extent={{74,-26},{86,-14}})));
      Modelica.Blocks.Continuous.Integrator PumpAuxi2(k=1/(3600*1000))
        annotation (Placement(transformation(extent={{134,4},{146,16}})));
      Modelica.Blocks.Interfaces.RealOutput Auxilaire1
        "Auxiliairy energie consumme by the CTA" annotation (Placement(
            transformation(
            extent={{10,-10},{-10,10}},
            rotation=180,
            origin={108,-20})));
      Modelica.Blocks.Interfaces.RealOutput EHotDeck
        "Eneergy consumme by the hot deck" annotation (Placement(transformation(
            extent={{10,-10},{-10,10}},
            rotation=180,
            origin={108,-34})));
      Buildings.Fluid.Sensors.EnthalpyFlowRate senEntFlo2(redeclare package
          Medium = Medium1, m_flow_nominal=mAir_Sou)
                                                 annotation (Placement(
            transformation(
            extent={{6,6},{-6,-6}},
            rotation=180,
            origin={10,-20})));
      Buildings.Fluid.Sensors.EnthalpyFlowRate senEntFlo1(redeclare package
          Medium = Medium1, m_flow_nominal=mAir_Sou)
                                                 annotation (Placement(
            transformation(
            extent={{4,4},{-4,-4}},
            rotation=180,
            origin={84,-34})));
      Modelica.Blocks.Continuous.Integrator PumpAuxi8(k=1/(3600*1000))
        annotation (Placement(transformation(extent={{206,-28},{218,-16}})));
      Modelica.Blocks.Continuous.Integrator PumpAuxi1(k=1/(3600*1000))
        annotation (Placement(transformation(extent={{206,4},{218,16}})));
      Modelica.Blocks.Math.Add add1(k1=-1)
        annotation (Placement(transformation(extent={{232,-16},{252,4}})));
      Buildings.Fluid.HeatExchangers.DryEffectivenessNTU BC(
      redeclare package Medium1 = Medium1,
      redeclare package Medium2 = Medium,
      m2_flow_nominal=mWat,
      configuration=Buildings.Fluid.Types.HeatExchangerConfiguration.CrossFlowUnmixed,
      dp1_nominal=77,
      Q_flow_nominal(displayUnit="kW") = 119820,
      dp2_nominal(displayUnit="kPa") = 11200,
      m1_flow_nominal=mAir_Sou,
      T_a1_nominal=286.95,
      T_a2_nominal=343.15)
      annotation (Placement(transformation(extent={{18,-50},{38,-30}})));
      Modelica.Blocks.Sources.RealExpression Consommation(y=if (translate.y ==
            1) then 0 else (senEntFlo3.H_flow - ProdIn.H_flow))
        "part de chaleur envoyer vers le REC depuis les chaudières"
        annotation (Placement(transformation(extent={{-18,124},{2,144}})));
      Modelica.Blocks.Continuous.Integrator Conso(k=1/(3600*1000))
        annotation (Placement(transformation(extent={{14,128},{26,140}})));
      Buildings.Fluid.Sensors.EnthalpyFlowRate senEntFlo3(redeclare package
          Medium = Medium1, m_flow_nominal=mAir_Rep)
                                                 annotation (Placement(
            transformation(
            extent={{6,6},{-6,-6}},
            rotation=180,
            origin={70,70})));
      Buildings.Fluid.Sensors.EnthalpyFlowRate ProdIn(redeclare package Medium =
            Medium1, m_flow_nominal=mAir_Sou)
                                          annotation (Placement(transformation(
            extent={{6,-6},{-6,6}},
            rotation=270,
            origin={-90,-38})));
      Modelica.Blocks.Sources.RealExpression Production(y=if (translate.y == 1)
             then (senEntFlo3.H_flow - ProdIn.H_flow) else 0)
        "part de chaleur envoyer vers le REC depuis les chaudières"
        annotation (Placement(transformation(extent={{-18,106},{2,126}})));
      Modelica.Blocks.Continuous.Integrator Produ(k=1/(3600*1000))
        annotation (Placement(transformation(extent={{14,110},{26,122}})));
      Modelica.Blocks.Math.RealToInteger translate
        annotation (Placement(transformation(extent={{-44,130},{-24,150}})));
      Buildings.Controls.SetPoints.OccupancySchedule occSch1(occupancy=3600*{6,
            19}) "Occupancy schedule"
        annotation (Placement(transformation(extent={{-206,30},{-186,50}})));
      Buildings.Examples.VAVReheat.Controls.RoomTemperatureSetpoint
                                       TSetRoo(
        TCooOff(displayUnit="degC"),
        THeaOn(displayUnit="degC") = 297.15,
        TCooOn(displayUnit="degC") = 299.15,
        THeaOff(displayUnit="degC") = 294.15)
        annotation (Placement(transformation(extent={{-206,6},{-186,26}})));
      Modelica.Blocks.Routing.RealPassThrough TOut(y(
          final quantity="ThermodynamicTemperature",
          final unit="K",
          displayUnit="degC",
          min=0))
        annotation (Placement(transformation(extent={{-206,60},{-186,80}})));
      Buildings.Examples.VAVReheat.Controls.ModeSelector
                            modeSelector(
        TRooSetCooOcc(displayUnit="degC"),
        TRooSetHeaOcc(displayUnit="degC") = 297.15,
        TSetHeaCoiOut(displayUnit="degC") = 294.15,
        delTRooOnOff(displayUnit="degC") = 1)
        annotation (Placement(transformation(extent={{-206,-20},{-186,0}})));
    Buildings.Utilities.Math.Average ave1(nin=3)
      "Compute average of room temperatures"
      annotation (Placement(transformation(extent={{-208,-78},{-188,-58}})));
    Buildings.Utilities.Math.Min min1(nin=3)
      "Computes lowest room temperature"
      annotation (Placement(transformation(extent={{-208,-52},{-188,-32}})));
      Modelica.Blocks.Interfaces.RealInput TRoom[3]
        annotation (Placement(transformation(extent={{20,-20},{-20,20}},
            rotation=180,
            origin={-106,-90})));
      Modelica.Blocks.Sources.Constant TSupSetHea1(
                                                  y(
          final quantity="ThermodynamicTemperature",
          final unit="K",
          displayUnit="degC",
          min=0), k=273.15 + 19)
        "Supply air temperature setpoint for heating"
        annotation (Placement(transformation(extent={{166,-86},{154,-74}})));
      Modelica.Blocks.Logical.Switch swiPum "Pump switch"
        annotation (Placement(transformation(extent={{134,-94},{120,-80}})));
      Modelica.Blocks.Sources.Constant TSupSetHea2(
                                                  y(
          final quantity="ThermodynamicTemperature",
          final unit="K",
          displayUnit="degC",
          min=0), k=273.15 + 15)
        "Supply air temperature setpoint for heating"
        annotation (Placement(transformation(extent={{166,-106},{154,-94}})));
      FBM.Components.WorkingDayOrWeekEnd workingDayOrWeekEnd
        annotation (Placement(transformation(extent={{194,-98},{174,-78}})));
      Buildings.Fluid.Actuators.Dampers.VAVBoxExponential vavDam3(
        redeclare package Medium = Medium1,
        m_flow_nominal=mAir_Sou,
      dp_nominal=3*dp_Dam)
        annotation (Placement(transformation(extent={{-52,-30},{-32,-10}})));
      Buildings.Fluid.Actuators.Dampers.VAVBoxExponential vavDam1(
        redeclare package Medium = Medium1,
        m_flow_nominal=mAir_Sou,
      dp_nominal=3*dp_Dam)
        annotation (Placement(transformation(extent={{-32,-82},{-12,-62}})));
      Buildings.Fluid.Actuators.Dampers.VAVBoxExponential vavDam2(
        redeclare package Medium = Medium1,
        m_flow_nominal=mAir_Rep,
      dp_nominal=2*dp_Dam)
        annotation (Placement(transformation(extent={{16,38},{-4,58}})));
      Buildings.Fluid.Actuators.Dampers.VAVBoxExponential vavDam4(
        redeclare package Medium = Medium1,
        m_flow_nominal=mAir_Rep,
      dp_nominal=2*dp_Dam)
        annotation (Placement(transformation(extent={{28,-6},{8,14}})));
    equation
    connect(val.y, heaCoiCon.y) annotation (Line(
        points={{98,-110},{98,-80},{59.4,-80}},
        color={0,0,127},
        pattern=LinePattern.Dash));
      connect(TCoiHeaOut.port_b, fanSup1.port_a) annotation (Line(
          points={{48,-35},{52,-35},{52,-34},{56,-34}},
          color={0,127,255},
          thickness=0.5));
      connect(TCoiHeaOut.T, heaCoiCon.u_m) annotation (Line(
          points={{45,-38.3},{45,-67.15},{66,-67.15},{66,-87.2}},
          color={0,0,127},
          pattern=LinePattern.Dash));
      connect(fanSup.port_a, senRetFlo.port_b)
        annotation (Line(points={{52,48},{56,48},{58,48}}, color={0,127,255},
          thickness=0.5));
      connect(senRetFlo.V_flow, conFanRet.u_m) annotation (Line(
          points={{61,52.4},{61,65.2},{64,65.2},{64,77.2}},
          color={0,0,127},
          pattern=LinePattern.Dash));
      connect(conFanRet.u, senSupFlo.V_flow) annotation (Line(
          points={{59.2,82},{92,82},{92,-29.6}},
          color={0,0,127},
          pattern=LinePattern.Dash));
      connect(conFanRet.y, fanSup.y) annotation (Line(
          points={{68.4,82},{68,82},{68,60},{42.2,60}},
          color={0,0,127},
          pattern=LinePattern.Dash));
      connect(dpRetFan.p_rel, conFanSup.u_m) annotation (Line(points={{72.5,19},{72,
              19},{72,2},{68,2},{68,1.2},{60,1.2}},
                                        color={0,0,127},
          pattern=LinePattern.Dash));
      connect(conFanSup.u, pSetDuc.y)
        annotation (Line(points={{55.2,6},{50.4,6}}, color={0,0,127},
          pattern=LinePattern.Dash));
      connect(conFanSup.y, fanSup1.y)
        annotation (Line(points={{64.4,6},{65.8,6},{65.8,-22}},
                                                            color={0,0,127},
          pattern=LinePattern.Dash));
      connect(weaBus.TDryBul, pSetDuc.TOut) annotation (Line(
          points={{-98,72},{26,72},{26,9.2},{41.2,9.2}},
          color={255,204,51},
          thickness=0.5), Text(
          string="%first",
          index=-1,
          extent={{-6,3},{-6,3}}));
      connect(controlBus, conFanRet.controlBus) annotation (Line(
          points={{58,100},{52,100},{52,85.2},{61.2,85.2}},
          color={255,204,51},
          thickness=0.5), Text(
          string="%first",
          index=-1,
          extent={{-6,3},{-6,3}}));
      connect(controlBus, conFanSup.controlBus) annotation (Line(
          points={{58,100},{52,100},{52,9.2},{57.2,9.2}},
          color={255,204,51},
          thickness=0.5), Text(
          string="%first",
          index=-1,
          extent={{-6,3},{-6,3}}));
      connect(weaBus.TDryBul, coolingControl.TOut) annotation (Line(
          points={{-98,72},{-88,72},{-88,80.8},{-77.2,80.8}},
          color={255,204,51},
          thickness=0.5), Text(
          string="%first",
          index=-1,
          extent={{-6,3},{-6,3}}));
      connect(port_b2, senSupFlo.port_b) annotation (Line(points={{-100,-60},{
              96,-60},{96,-34}},
                         color={0,127,255}));
      connect(dpRetFan.port_b, fanSup.port_a) annotation (Line(points={{77,24},{56,24},
              {56,48},{52,48}}, color={0,127,255}));
      connect(dpRetFan.port_a, fanSup1.port_b) annotation (Line(points={{77,14},{78,
              14},{78,-34},{76,-34}},
                                  color={0,127,255}));
      connect(fanSup1.P, add.u2) annotation (Line(points={{77,-26},{78,-26},{78,
              -23.6},{72.8,-23.6}}, color={0,0,127}));
      connect(fanSup.P, add.u1) annotation (Line(points={{31,56},{56,56},{56,
              -16.4},{72.8,-16.4}}, color={0,0,127}));
      connect(add.y, PumpAuxi2.u) annotation (Line(points={{86.6,-20},{90,-20},
              {90,10},{132.8,10}}, color={0,0,127}));
      connect(Auxilaire1, PumpAuxi2.y) annotation (Line(points={{108,-20},{
              146.6,-20},{146.6,10}}, color={0,0,127}));
    connect(EchangRecup.port_b2, senEntFlo2.port_a)
      annotation (Line(points={{4,-8},{4,-20}}, color={0,127,255}));
      connect(senSupFlo.port_a, senEntFlo1.port_b)
        annotation (Line(points={{88,-34},{88,-34}}, color={0,127,255}));
      connect(fanSup1.port_b, senEntFlo1.port_a) annotation (Line(points={{76,
              -34},{78,-34},{80,-34}}, color={0,127,255}));
      connect(PumpAuxi8.y, add1.u2) annotation (Line(points={{218.6,-22},{224,
              -22},{224,-12},{230,-12}}, color={0,0,127}));
      connect(PumpAuxi1.y, add1.u1) annotation (Line(points={{218.6,10},{224,10},
              {224,0},{230,0}}, color={0,0,127}));
      connect(add1.y, EHotDeck) annotation (Line(points={{253,-6},{126,-6},{126,
              -34},{108,-34}}, color={0,0,127}));
      connect(senEntFlo2.H_flow, PumpAuxi1.u) annotation (Line(points={{10,
              -13.4},{10,-13.4},{10,10},{204.8,10}}, color={0,0,127}));
      connect(senEntFlo1.H_flow, PumpAuxi8.u) annotation (Line(points={{84,
              -29.6},{84,-29.6},{84,-22},{204.8,-22}}, color={0,0,127}));
    connect(senEntFlo2.port_b, BC.port_a1) annotation (Line(points={{16,-20},
            {18,-20},{18,-34}}, color={0,127,255}));
    connect(TCoiHeaOut.port_a, BC.port_b1) annotation (Line(points={{42,-35},
            {40,-35},{40,-34},{38,-34}}, color={0,127,255}));
      connect(Consommation.y, Conso.u)
        annotation (Line(points={{3,134},{12.8,134}}, color={0,0,127}));
      connect(port_b1, senEntFlo3.port_b) annotation (Line(points={{100,60},{90,
              60},{90,70},{76,70}}, color={0,127,255}));
    connect(senEntFlo3.port_a, EchangRecup.port_b1) annotation (Line(points={
            {64,70},{-30,70},{-30,4},{-16,4}}, color={0,127,255}));
      connect(port_a2, ProdIn.port_a) annotation (Line(points={{100,-60},{-90,
              -60},{-90,-44}}, color={0,127,255}));
      connect(Production.y, Produ.u)
        annotation (Line(points={{3,116},{12.8,116}}, color={0,0,127}));
      connect(coolingControl.yF, translate.u) annotation (Line(points={{-63.4,
              85},{-56,85},{-56,140},{-46,140}}, color={0,0,127}));
    connect(BC.port_b2, val.port_b) annotation (Line(points={{18,-46},{68,-46},
            {86,-46},{86,-100}}, color={0,127,255}));
    connect(port_a, BC.port_a2) annotation (Line(points={{-100,0},{-114,0},{-114,
            -46},{38,-46}}, color={0,127,255}));
    connect(val.port_a, port_b) annotation (Line(points={{86,-120},{122,-120},
            {122,0},{100,0}}, color={0,127,255}));
      connect(u, pSetDuc.u) annotation (Line(points={{34,104},{34,104},{34,6},{
              41.2,6}}, color={0,0,127}));
      connect(controlBus,modeSelector. cb) annotation (Line(
          points={{58,100},{-114,100},{-114,-3.18182},{-202.818,-3.18182}},
          color={255,204,51},
          thickness=0.5), Text(
          string="%first",
          index=-1,
          extent={{-6,3},{-6,3}}));
      connect(weaBus.TDryBul, TOut.u) annotation (Line(
          points={{-98,72},{-214,72},{-214,70},{-208,70}},
          color={255,204,51},
          thickness=0.5), Text(
          string="%first",
          index=-1,
          extent={{-6,3},{-6,3}}));
      connect(TOut.y, controlBus.TOut) annotation (Line(points={{-185,70},{-152,
              70},{-152,100},{58,100}}, color={0,0,127}), Text(
          string="%second",
          index=1,
          extent={{6,3},{6,3}}));
      connect(occSch1.occupied, controlBus.occupied) annotation (Line(points={{
              -185,34},{-144,34},{-144,100},{58,100}}, color={255,0,255}), Text(
          string="%second",
          index=1,
          extent={{6,3},{6,3}}));
      connect(occSch1.tNexOcc, controlBus.dTNexOcc) annotation (Line(points={{
              -185,46},{-138,46},{-138,100},{58,100}}, color={0,0,127}), Text(
          string="%second",
          index=1,
          extent={{6,3},{6,3}}));
      connect(TSetRoo.controlBus, controlBus) annotation (Line(
          points={{-194,22},{-194,22},{-114,22},{-114,100},{58,100}},
          color={255,204,51},
          thickness=0.5), Text(
          string="%second",
          index=1,
          extent={{6,3},{6,3}}));
      connect(ave1.y, coolingControl.TRoo) annotation (Line(points={{-187,-68},
              {-130,-68},{-130,89.2},{-77.2,89.2}}, color={0,0,127}));
      connect(min1.y, controlBus.TRooMin) annotation (Line(points={{-187,-42},{
              -122,-42},{-122,46},{58,46},{58,100}}, color={0,0,127}), Text(
          string="%second",
          index=1,
          extent={{6,3},{6,3}}));
      connect(ave1.y, controlBus.TRooAve) annotation (Line(points={{-187,-68},{
              -112,-68},{-112,14},{58,14},{58,100}}, color={0,0,127}), Text(
          string="%second",
          index=1,
          extent={{6,3},{6,3}}));
      connect(TRoom, ave1.u) annotation (Line(points={{-106,-90},{-238,-90},{
              -238,-68},{-210,-68}}, color={0,0,127}));
      connect(TRoom, min1.u) annotation (Line(points={{-106,-90},{-238,-90},{
              -238,-42},{-210,-42}}, color={0,0,127}));
      connect(swiPum.u1, TSupSetHea1.y) annotation (Line(points={{135.4,-81.4},
              {146,-81.4},{146,-80},{153.4,-80}}, color={0,0,127}));
      connect(swiPum.y, heaCoiCon.u_s) annotation (Line(points={{119.3,-87},{
              102,-87},{102,-80},{73.2,-80}}, color={0,0,127}));
      connect(swiPum.u3, TSupSetHea2.y) annotation (Line(points={{135.4,-92.6},
              {143.7,-92.6},{143.7,-100},{153.4,-100}}, color={0,0,127}));
      connect(swiPum.u2, workingDayOrWeekEnd.y) annotation (Line(points={{135.4,
              -87},{154.7,-87},{154.7,-88},{173,-88}}, color={255,0,255}));
    connect(vavDam3.port_b, EchangRecup.port_a2) annotation (Line(points={{-32,-20},
            {-22,-20},{-22,-8},{-16,-8}},      color={0,127,255}));
      connect(coolingControl.yHex, vavDam3.y) annotation (Line(points={{-63.4,
            80.8},{-63.4,37.4},{-42,37.4},{-42,-8}},
                                                 color={0,0,127}));
      connect(vavDam1.port_b, fanSup1.port_a) annotation (Line(points={{-12,-72},{
              56,-72},{56,-34}}, color={0,127,255}));
      connect(ProdIn.port_b, vavDam3.port_a) annotation (Line(points={{-90,-32},
            {-90,-32},{-90,-20},{-52,-20}},
                                         color={0,127,255}));
      connect(ProdIn.port_b, vavDam1.port_a) annotation (Line(points={{-90,-32},{-90,
              -32},{-90,-20},{-74,-20},{-74,-72},{-32,-72}}, color={0,127,255}));
      connect(vavDam2.port_a, fanSup.port_b)
        annotation (Line(points={{16,48},{16,48},{32,48}}, color={0,127,255}));
      connect(vavDam2.port_b, senEntFlo3.port_a) annotation (Line(points={{-4,48},
            {-10,48},{-10,70},{64,70}},   color={0,127,255}));
      connect(coolingControl.yF, vavDam2.y) annotation (Line(points={{-63.4,
            85},{6.3,85},{6.3,60},{6,60}},
                                    color={0,0,127}));
      connect(coolingControl.yF, vavDam1.y) annotation (Line(points={{-63.4,85},{-63.4,
              84.5},{-22,84.5},{-22,-60}}, color={0,0,127}));
      connect(port_a1, senRetFlo.port_a) annotation (Line(points={{-100,60},{76,60},
              {76,48},{64,48}}, color={0,127,255}));
    connect(EchangRecup.port_a1, vavDam4.port_b)
      annotation (Line(points={{4,4},{8,4}}, color={0,127,255}));
      connect(vavDam4.port_a, fanSup.port_b)
        annotation (Line(points={{28,4},{32,4},{32,48}}, color={0,127,255}));
      connect(coolingControl.yHex, vavDam4.y) annotation (Line(points={{-63.4,80.8},
              {-22.7,80.8},{-22.7,16},{18,16}}, color={0,0,127}));
     annotation (Icon(coordinateSystem(preserveAspectRatio=false, extent={{-100,
                -100},{100,100}}),
                       graphics={Bitmap(
              extent={{-100,100},{100,-100}},
              imageSource=
                  ""
                   +
                  "09RYkI8NF+A/ECT4r8KC/Nd//rOjLx16/8OPz318ntrltGshHJ4Ph+fd3rXaMf33f3hrjR454YgyM59vqN/9XAPWFcE3IEjwTRJJ1suHD+zft+di8+Wz7//dOzpGeiJIEmqlck/T888+8xTWk8E9IUhwbzwet3FXfUP9jus3W8/+7YPO7h7SE0ECKyst2fuDF2qqrCw2/oH/D0GC+2FZdmtN9daaantf/4efXGi5ei0SiZIeChJGBo+3fVvdc7t2mgzFpGeBBIAgwUMxGw1mo+HVHx1tbvnHRxcuDg45SE8EVCvWaxt27nh6+5P8J54gPQskDAQJHgGfz2/cVd+4q35wyPHGb0+OuD2kJwLqFOSrf/H6cV2RhvQgkHjweS6shl6nLbGYSE8BNCqxmFAjWB0ECQAAqIAgAQAAFRAkAACgAoIEAABUQJAAAIAKCBIQQ3aDbbgn/FGAIAQJiDHodVfOnztx/FhdbU1qKpbEEZOamlpXW3Pi+LEr588Z9DgcD4jBqwCQpNdp9Trtj48emQwEWq5+ce2L61/dah/3+UnPtSHkKeSVWyq2ba3dvq1uIx8AD/RAkIAKuTk5e5t2723azTBMKBTq7LG1trW33upobe+IRCKkp0sSPB6vsqK8ckt5pbWirLREKBCQngjgLggSUEcoFNbV1tTV1jAM83Us1tvX33qrvdvWe7O1bXRsnPR0CUaZp6iutJZaTJVbKkxGQ2pCneAOGw2CBFRL5XBKLeZSi5lhmKWlJYdzuK29s8fe2z842D8wFAqHSQ9IHaFQaCzWGfR6i8lorSjTaYtSUlJIDwXwUBAkSBgsy65cc7pzTzA4NzDk6LHbBx3OwSGHrbdvYWFjfb6XkcGzmIx6nVavLSoxm4t1WpEok/RQAKuEIEECE4kyq6wVVdaKlZvRaHTQ4ewbGHQ4hr1jY57RUa93bHpmhuyQcSTJylKp8vJVKmWeQq8tMhTr9dqi9PR00nMBxAeCBMmDy+WWmE0l5ru2IV9cXPT5J9xer8cz6vZ6Pd5Rj3fUPzE5GQiQmvOB1CqlNDdHmpurVinzVSq1WpmvUinkMnw5HpIbnt+Q5NLS0tQqpVqlZGrvun8yEBj3+aenZ2ZmZ6dnZqdnZm5PT4+N+8Lh+fD8fDgcDs/PB4NzcZ9HJMoU8PkCgUAo4PP5fGWeIlsiyRKLJVniLLFYIslSyGW5OTlx/70A9EOQYIPKzcl5mNf9wNTthYWFSCQSiUYjkWj0X9HY17Hw/PwDf1DA53NSOTwuj8tN53G5PB4vIyMDy30A7gNBArgfJARg3WDrIAAAoAKCBAAAVECQAACACggSAABQAUECAAAqIEgAAEAFBAkAAKiAIAEAABUQJAAAoEIcdmrostke/0Eg4XjcXtIjAI08bu9Hn3xKegpYb3EJQRyC9Nnlls8utzz+4wBAEuiy2btsdtJTQELCR3YAAEAFBAkAAKiAIAEAABUQJAAAoAKCBAAAVECQAACACggSAABQAUECAAAqIEgAAEAFBAkAAKiAIAEAABUQJAAAoAKCBAAAVECQAACACggSAABQAUECAAAqIEgAAEAFBAkAAKiAIAEAABUQJAAAoAKCBAAAVPg3pdXlZSKkN84AAAAASUVORK5CYII=",
              fileName="modelica://ClaRa/figures/Components/LUVO.png")}));
    end N2;

    model VAVBranch
      import Buildings;
      replaceable package MediumA = Modelica.Media.Interfaces.PartialMedium
        "Medium model for air" annotation (choicesAllMatching=true);
      replaceable package MediumW = Modelica.Media.Interfaces.PartialMedium
        "Medium model for water" annotation (choicesAllMatching=true);
    Buildings.Fluid.Actuators.Dampers.VAVBoxExponential vav(
      redeclare package Medium = MediumA,
      m_flow_nominal=m_flow_nominal,
      dp_nominal(displayUnit="Pa") = 220) "VAV box for room" annotation (
        Placement(transformation(
          extent={{-10,-10},{10,10}},
          rotation=90,
          origin={50,104})));
      Buildings.Fluid.HeatExchangers.DryEffectivenessNTU terHea(
        redeclare package Medium1 = MediumA,
        redeclare package Medium2 = MediumW,
        from_dp2=true,
        m2_flow_nominal=m_flow_Wat,
        m1_flow_nominal=m_flow_nominal,
        Q_flow_nominal=PuissanceBatterie,
        configuration=Buildings.Fluid.Types.HeatExchangerConfiguration.CrossFlowUnmixed,
        dp1_nominal=PressureDropBatterieAir,
        dp2_nominal=PressureDropBatterieWatter,
      T_a1_nominal=295.15,
      T_a2_nominal=343.15)   "Heat exchanger of terminal box" annotation (Placement(
            transformation(
            extent={{-10,-10},{10,10}},
            rotation=90,
            origin={56,44})));
      Modelica.Fluid.Interfaces.FluidPort_a port_a(redeclare package Medium =
            MediumA)
        "Fluid connector a1 (positive design flow direction is from port_a1 to port_b1)"
        annotation (Placement(transformation(extent={{40,-36},{60,-16}}),
            iconTransformation(extent={{40,-36},{60,-16}})));
      Modelica.Fluid.Interfaces.FluidPort_a port_b(redeclare package Medium =
            MediumA)
        "Fluid connector b (positive design flow direction is from port_a1 to port_b1)"
        annotation (Placement(transformation(extent={{40,190},{60,210}}),
            iconTransformation(extent={{40,190},{60,210}})));
      parameter Modelica.SIunits.MassFlowRate m_flow_nominal
        "Air mass flow rate of this thermal zone";
      parameter Modelica.SIunits.MassFlowRate m_flow_Wat
        "Water mass flow rate of this thermal zone";
      parameter Modelica.SIunits.Power PuissanceBatterie
        "puissance de la batterie froide equivalente";
      parameter Modelica.SIunits.Pressure PressureDropBatterieAir( displayUnit="Pa")
        "Air pressure drop in the hot deck of the VAV branche";
      parameter Modelica.SIunits.Pressure PressureDropBatterieWatter( displayUnit="Pa")
        "Air pressure drop in the hot deck of the VAV branche";
      FBM.Examples.BaseClasses.BaseClassesVentilation.conVAVBranch con
        "Room temperature controller"
        annotation (Placement(transformation(extent={{2,-6},{22,14}})));
      Buildings.Examples.VAVReheat.Controls.ControlBus controlBus annotation (Placement(transformation(extent={{
                -110,-50},{-90,-30}}), iconTransformation(extent={{-110,-38},{-90,-18}})));
      Buildings.Fluid.Sensors.TemperatureTwoPort TSup(
        redeclare package Medium = MediumA,
        initType=Modelica.Blocks.Types.Init.InitialState,
        m_flow_nominal=m_flow_nominal) "Supply air temperature"
        annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=90,
            origin={50,74})));
      Modelica.Blocks.Interfaces.RealOutput yDam "Signal for VAV damper"
        annotation (Placement(transformation(extent={{200,-10},{220,10}})));
      Buildings.Fluid.Actuators.Valves.TwoWayLinear valHea(
        redeclare package Medium = MediumW,
        from_dp=true,
        m_flow_nominal=m_flow_Wat,
        CvData=Buildings.Fluid.Types.CvTypes.Kv,
        dpValve_nominal(displayUnit="Pa"),
        Kv=25) "Valve at reaheat coil"
        annotation (Placement(transformation(extent={{112,72},{132,52}})));
      Modelica.Blocks.Interfaces.RealInput TRoo(unit="K", displayUnit="degC")
        "Measured room temperature"
        annotation (Placement(transformation(extent={{-140,80},{-100,120}})));
      Modelica.Fluid.Interfaces.FluidPort_a port_InTer(redeclare package Medium =
            MediumW)
        annotation (Placement(transformation(extent={{144,12},{164,32}})));
      Modelica.Fluid.Interfaces.FluidPort_b port_OffTer(redeclare package
          Medium =
            MediumW)
        annotation (Placement(transformation(extent={{142,52},{162,72}})));
      Buildings.Fluid.Sensors.EnthalpyFlowRate senIn(redeclare package Medium = MediumW,
          m_flow_nominal=m_flow_Wat) annotation (Placement(transformation(
            extent={{-6,6},{6,-6}},
            rotation=180,
            origin={86,22})));
      Buildings.Fluid.Sensors.EnthalpyFlowRate senOut(redeclare package Medium = MediumW,
          m_flow_nominal=m_flow_Wat) annotation (Placement(transformation(
            extent={{-4,-4},{4,4}},
            rotation=0,
            origin={76,62})));
    equation
      connect(con.controlBus, controlBus) annotation (Line(
          points={{5,11.4},{5,-40},{-100,-40}},
          color={255,204,51},
          thickness=0.5,
          smooth=Smooth.None), Text(
          string="%second",
          index=1,
          extent={{6,3},{6,3}}));
      connect(TSup.T, con.TSup) annotation (Line(
          points={{39,74},{-20,74},{-20,6.66134e-016},{0,6.66134e-016}},
          color={0,0,127},
          smooth=Smooth.None,
          pattern=LinePattern.Dash));
      connect(con.yDam, vav.y) annotation (Line(
          points={{23,-1},{32,-1},{32,104},{38,104}},
          color={0,0,127},
          smooth=Smooth.None,
          pattern=LinePattern.Dash));
      connect(terHea.port_b1, TSup.port_a) annotation (Line(
          points={{50,54},{50,64}},
          color={85,255,85},
          thickness=0.5));
      connect(TSup.port_b, vav.port_a) annotation (Line(
          points={{50,84},{50,94}},
          color={85,255,85},
          thickness=0.5));
      connect(con.yDam, yDam) annotation (Line(
          points={{23,-1},{188,-1},{188,5.55112e-016},{210,5.55112e-016}},
          color={0,0,127},
          smooth=Smooth.None,
          pattern=LinePattern.Dash));
      connect(con.yHea, valHea.y) annotation (Line(
          points={{23,8},{122,8},{122,50}},
          color={28,108,200},
          pattern=LinePattern.Dash));
      connect(port_a, terHea.port_a1) annotation (Line(
          points={{50,-26},{50,34}},
          color={85,255,85},
          thickness=0.5));
      connect(con.TRoo, TRoo) annotation (Line(
          points={{0,8},{-60,8},{-60,100},{-120,100}},
          color={0,0,127},
          smooth=Smooth.None,
          pattern=LinePattern.Dash));
      connect(port_b, vav.port_b) annotation (Line(
          points={{50,200},{50,200},{50,114}},
          color={85,255,85},
          thickness=0.5));
      connect(senOut.port_a, terHea.port_b2) annotation (Line(points={{72,62},{68,
              62},{68,34},{62,34}}, color={0,127,255}));
      connect(senIn.port_b, terHea.port_a2) annotation (Line(points={{80,22},{80,22},
              {80,54},{62,54}}, color={0,127,255}));
      connect(senIn.port_a, port_InTer)
        annotation (Line(points={{92,22},{154,22}}, color={0,127,255}));
      connect(senOut.port_b, valHea.port_a)
        annotation (Line(points={{80,62},{112,62}}, color={0,127,255}));
      connect(valHea.port_b, port_OffTer)
        annotation (Line(points={{132,62},{142,62},{152,62}}, color={0,127,255}));
      annotation (Diagram(coordinateSystem(preserveAspectRatio=true, extent={{-100,
                -100},{200,200}})), Icon(coordinateSystem(
              preserveAspectRatio=true, extent={{-100,-100},{200,200}}), graphics={
            Rectangle(
              extent={{-100,200},{200,-100}},
              lineColor={0,0,0},
              fillColor={255,255,255},
              fillPattern=FillPattern.Solid),
            Rectangle(
              extent={{-160.5,-16.1286},{139.5,-20.1286}},
              lineColor={0,0,0},
              fillPattern=FillPattern.HorizontalCylinder,
              fillColor={0,127,255},
              origin={31.8714,60.5},
              rotation=90),
            Rectangle(
              extent={{36,42},{66,16}},
              fillPattern=FillPattern.Solid,
              fillColor={175,175,175},
              pattern=LinePattern.None),
            Rectangle(
              extent={{72,-20},{92,-40}},
              lineColor={0,0,0},
              fillPattern=FillPattern.HorizontalCylinder,
              fillColor={192,192,192},
              origin={20,52},
              rotation=90),
            Rectangle(
              extent={{73,-10},{93,-22}},
              lineColor={0,0,0},
              fillPattern=FillPattern.HorizontalCylinder,
              fillColor={0,127,255},
              origin={34,51},
              rotation=90),
            Polygon(
              points={{36,128},{64,144},{64,142},{36,126},{36,128}},
              pattern=LinePattern.None,
              smooth=Smooth.None,
              fillColor={0,0,0},
              fillPattern=FillPattern.Solid,
              lineColor={0,0,0}),
            Polygon(
              points={{36,36},{60,36},{60,34},{36,34},{36,36}},
              pattern=LinePattern.None,
              smooth=Smooth.None,
              fillColor={0,0,0},
              fillPattern=FillPattern.Solid,
              lineColor={0,0,0}),
            Polygon(
              points={{36,24},{60,24},{60,22},{36,22},{36,24}},
              pattern=LinePattern.None,
              smooth=Smooth.None,
              fillColor={0,0,0},
              fillPattern=FillPattern.Solid,
              lineColor={0,0,0}),
            Polygon(
              points={{46,30},{60,36},{60,34},{46,28},{46,30}},
              pattern=LinePattern.None,
              smooth=Smooth.None,
              fillColor={0,0,0},
              fillPattern=FillPattern.Solid,
              lineColor={0,0,0}),
            Polygon(
              points={{46,30},{60,24},{60,22},{46,28},{46,30}},
              pattern=LinePattern.None,
              smooth=Smooth.None,
              fillColor={0,0,0},
              fillPattern=FillPattern.Solid,
              lineColor={0,0,0}),
            Text(
              extent={{-78,198},{24,156}},
              lineColor={0,0,255},
              textString="%name"),
            Text(
              extent={{126,24},{194,-20}},
              lineColor={0,0,0},
              fillColor={255,255,255},
              fillPattern=FillPattern.Solid,
              textString="yDam"),
            Text(
              extent={{144,194},{184,168}},
              lineColor={0,0,0},
              fillColor={255,255,255},
              fillPattern=FillPattern.Solid,
              textString="p_rel"),
            Text(
              extent={{144,154},{192,122}},
              lineColor={0,0,0},
              fillColor={255,255,255},
              fillPattern=FillPattern.Solid,
              textString="TRooAir")}));
    end VAVBranch;

    model conVAVBranch
      extends Modelica.Blocks.Icons.Block;
      parameter Real kPDamHea = 0.5
        "Proportional gain for VAV damper in heating mode";
      Buildings.Controls.Continuous.LimPID conHea(
        yMax=1,
        Td=60,
        yMin=0,
        initType=Modelica.Blocks.Types.InitPID.InitialState,
        xi_start=0.1,
        controllerType=Modelica.Blocks.Types.SimpleController.PI,
        k=0.01,
        Ti=120) "Controller for heating"
        annotation (Placement(transformation(extent={{-20,50},{0,70}})));
     Buildings.Controls.Continuous.LimPID conCoo(
        yMax=1,
        Td=60,
        Ti=120,
        controllerType=Modelica.Blocks.Types.SimpleController.PI,
        initType=Modelica.Blocks.Types.InitPID.InitialState,
        xi_start=1,
        k=0.01,
        reverseAction=true)
                "Controller for cooling (acts on damper)"
        annotation (Placement(transformation(extent={{-20,-60},{0,-40}})));

      Buildings.Examples.VAVReheat.Controls.ControlBus controlBus
        annotation (Placement(transformation(extent={{-80,64},{-60,84}})));
      Modelica.Blocks.Interfaces.RealInput TRoo(final quantity="ThermodynamicTemperature",
                                              final unit = "K", displayUnit = "degC", min=0)
        "Measured room temperature"
        annotation (Placement(transformation(extent={{-140,20},{-100,60}})));
      Modelica.Blocks.Interfaces.RealOutput yHea "Signal for heating coil valve"
        annotation (Placement(transformation(extent={{100,30},{120,50}})));
      Modelica.Blocks.Interfaces.RealOutput yDam "Signal for VAV damper"
        annotation (Placement(transformation(extent={{100,-60},{120,-40}})));
      Modelica.Blocks.Interfaces.RealInput TSup(displayUnit="degC")
        "Measured supply air temperature after heating coil"
        annotation (Placement(transformation(extent={{-140,-60},{-100,-20}})));
    Buildings.Utilities.Math.SmoothMax smoothMax2(deltaX=0.1)
      annotation (Placement(transformation(extent={{12,-14},{32,6}})));
      Modelica.Blocks.Sources.Constant one(k=1)
        annotation (Placement(transformation(extent={{-60,-76},{-40,-56}})));
      Modelica.Blocks.Math.Add3 yDamHea(k2=kPDamHea, k3=-kPDamHea)
        "Outputs (unlimited) damper signal for heating."
        annotation (Placement(transformation(extent={{-20,-20},{0,0}})));
      Modelica.Blocks.Math.Add add
        annotation (Placement(transformation(extent={{40,-40},{60,-20}})));
      Modelica.Blocks.Sources.Constant zero(k=0.1)
        annotation (Placement(transformation(extent={{-20,10},{0,30}})));
    Buildings.Utilities.Math.SmoothMin smoothMin(deltaX=0.1)
      annotation (Placement(transformation(extent={{76,-60},{96,-40}})));
    equation
      connect(controlBus.TRooSetHea, conHea.u_s) annotation (Line(
          points={{-70,74},{-70,60},{-22,60}},
          color={255,204,51},
          thickness=0.5,
          smooth=Smooth.None), Text(
          string="%first",
          index=-1,
          extent={{-6,3},{-6,3}}));
      connect(controlBus.TRooSetCoo, conCoo.u_s) annotation (Line(
          points={{-70,74},{-70,-50},{-22,-50}},
          color={255,204,51},
          thickness=0.5,
          smooth=Smooth.None), Text(
          string="%first",
          index=-1,
          extent={{-6,3},{-6,3}}));
      connect(conHea.u_m, TRoo) annotation (Line(
          points={{-10,48},{-10,40},{-120,40}},
          color={0,0,127},
          smooth=Smooth.None));
      connect(conCoo.u_m, TRoo) annotation (Line(
          points={{-10,-62},{-10,-80},{-80,-80},{-80,40},{-120,40}},
          color={0,0,127},
          smooth=Smooth.None));
      connect(TRoo, yDamHea.u3) annotation (Line(
          points={{-120,40},{-80,40},{-80,-18},{-22,-18}},
          color={0,0,127},
          smooth=Smooth.None));
      connect(yDamHea.u2, TSup) annotation (Line(
          points={{-22,-10},{-90,-10},{-90,-40},{-120,-40}},
          color={0,0,127},
          smooth=Smooth.None));
      connect(one.y, yDamHea.u1) annotation (Line(
          points={{-39,-66},{-32,-66},{-32,-2},{-22,-2}},
          color={0,0,127},
          smooth=Smooth.None));
      connect(conCoo.y, add.u2) annotation (Line(
          points={{1,-50},{8,-50},{8,-36},{38,-36}},
          color={0,0,127},
          smooth=Smooth.None));
      connect(yDamHea.y, smoothMax2.u2) annotation (Line(
          points={{1,-10},{10,-10}},
          color={0,0,127},
          smooth=Smooth.None));
      connect(smoothMax2.y, add.u1) annotation (Line(
          points={{33,-4},{34,-4},{34,-24},{38,-24}},
          color={0,0,127},
          smooth=Smooth.None));
      connect(zero.y, smoothMax2.u1) annotation (Line(
          points={{1,20},{4,20},{4,2},{10,2}},
          color={0,0,127},
          smooth=Smooth.None));
      connect(smoothMin.u1, add.y) annotation (Line(
          points={{74,-44},{68,-44},{68,-30},{61,-30}},
          color={0,0,127},
          smooth=Smooth.None));
      connect(one.y, smoothMin.u2) annotation (Line(
          points={{-39,-66},{48,-66},{48,-56},{74,-56}},
          color={0,0,127},
          smooth=Smooth.None));
      connect(conHea.y, yHea) annotation (Line(
          points={{1,60},{80,60},{80,40},{110,40}},
          color={0,0,127},
          smooth=Smooth.None));
      connect(smoothMin.y, yDam) annotation (Line(
          points={{97,-50},{110,-50}},
          color={0,0,127},
          smooth=Smooth.None));
      annotation ( Icon(graphics={
            Text(
              extent={{-92,48},{-44,24}},
              lineColor={0,0,127},
              textString="TRoo"),
            Text(
              extent={{-92,-30},{-44,-54}},
              lineColor={0,0,127},
              textString="TSup"),
            Text(
              extent={{42,52},{90,28}},
              lineColor={0,0,127},
              textString="yHea"),
            Text(
              extent={{46,-36},{94,-60}},
              lineColor={0,0,127},
              textString="yCoo")}),
                  Icon(coordinateSystem(preserveAspectRatio=false)), Diagram(
            coordinateSystem(preserveAspectRatio=false)));
    end conVAVBranch;
  end BaseClassesVentilation;

  model HeliosEnvelope

  package MediumA = Buildings.Media.Air
      "Medium model for air";
  package MediumW = Buildings.Media.Water "Medium model";
  parameter Integer n= 3;
  parameter Real winWalRat(
      min=0.01,
      max=0.99)=0.33 "Window to wall ratio for exterior walls";
  parameter Modelica.SIunits.Length hWin = 2.1 "Height of windows";
  parameter Modelica.SIunits.Irradiance IrrdianceThreeshold = 200
      "Threeshold for irradiance on west, east and south surface for the shading";
  parameter Modelica.SIunits.Irradiance IrrdianceThreesholdAtri = 300
      "Threeshold for irradiance on atrium ceilling for the shading";
  constant Modelica.SIunits.Height hRoo=12.8 "Room height";
  parameter Buildings.HeatTransfer.Types.InteriorConvection intConMod=Buildings.HeatTransfer.Types.InteriorConvection.Temperature
      "Convective heat transfer model for room-facing surfaces of opaque constructions";
  parameter Modelica.SIunits.Angle lat=45.5667*3.14159/180 "Latitude";

       // Air flow rate for battery network
    parameter Modelica.SIunits.MassFlowRate mAirBat_S_N3=0.90;
    parameter Modelica.SIunits.MassFlowRate mAirBat_E_N3=0.29;
    parameter Modelica.SIunits.MassFlowRate mAirBat_N_N3=0.87;
    parameter Modelica.SIunits.MassFlowRate mAirBat_W_N3=0.80;
    parameter Modelica.SIunits.MassFlowRate mAirBat_N3 = mAirBat_W_N3 + mAirBat_N_N3 + mAirBat_E_N3 + mAirBat_S_N3;
    parameter Modelica.SIunits.MassFlowRate mAirBat_E_N2=1.3;
    parameter Modelica.SIunits.MassFlowRate mAirBat_N_N2=1.83;
    parameter Modelica.SIunits.MassFlowRate mAirBat_W_N2=1.94;
    parameter Modelica.SIunits.MassFlowRate mAirBat_N2 = mAirBat_W_N2 + mAirBat_N_N2 + mAirBat_E_N2;
    parameter Modelica.SIunits.MassFlowRate mAirBat_E_N1=4.39;
    parameter Modelica.SIunits.MassFlowRate mAirBat_W_N1=1.94;
    parameter Modelica.SIunits.MassFlowRate mAirBat_N1 = mAirBat_W_N1 + mAirBat_E_N1;
    parameter Modelica.SIunits.MassFlowRate mAirBat_S_S2=2.3;
    parameter Modelica.SIunits.MassFlowRate mAirBat_E_S2=2.91;
    parameter Modelica.SIunits.MassFlowRate mAirBat_S2 = mAirBat_S_S2 + mAirBat_E_S2;
    parameter Modelica.SIunits.MassFlowRate mAirBat_S_S1=0.95;
    parameter Modelica.SIunits.MassFlowRate mAirBat_E_S1=1.38;
    parameter Modelica.SIunits.MassFlowRate mAirBat_W_S1=2.31;
    parameter Modelica.SIunits.MassFlowRate mAirBat_S1 = mAirBat_S_S1 + mAirBat_E_S1 + mAirBat_W_S1;

    parameter Buildings.HeatTransfer.Data.Solids.Plywood
                                               matFur(                   x=0.15, nStaRef=
          1) "Material for furniture"
      annotation (Placement(transformation(extent={{74,458},{94,478}})));
    parameter Buildings.HeatTransfer.Data.Solids.Concrete
                                                matCon(
      c=836,
      x=0.25,
      k=1.75,
      d=2400,
      nStaRef=1) "Concrete"
      annotation (Placement(transformation(extent={{-344,414},{-324,434}})));
    parameter Buildings.HeatTransfer.Data.Solids.Plywood
                                               matWoo(
      x=0.01,
      k=0.11,
      d=544,
      nStaRef=1) "Wood for exterior construction"
      annotation (Placement(transformation(extent={{74,398},{94,418}})));
    parameter Buildings.HeatTransfer.Data.Solids.Generic
                                               matIns(
      k=50,
      c=464,
      d=900,
      x=0.001,
      nStaRef=1) "Steelframe construction "
      annotation (Placement(transformation(extent={{-344,348},{-324,368}})));
    parameter Buildings.HeatTransfer.Data.Solids.GypsumBoard
                                                   matGyp(
      x(displayUnit="mm") = 0.0125,
      k=0.25,
      c=1090,
      d=825,
      nStaRef=1) "Gypsum board"
      annotation (Placement(transformation(extent={{72,370},{92,390}})));
    parameter Buildings.HeatTransfer.Data.Solids.GypsumBoard
                                                   matGyp2(
      x=0.025,
      k=0.16,
      c=830,
      d=784,
      nStaRef=1) "Gypsum board"
      annotation (Placement(transformation(extent={{112,370},{132,390}})));
    parameter Buildings.HeatTransfer.Data.OpaqueConstructions.Generic
                                                            conExtWal(final nLay=2,
        material={matIso,matCon})
      "Exterior construction South, East and West, interior with the atrium"
      annotation (Placement(transformation(extent={{214,458},{234,478}})));
    parameter Buildings.HeatTransfer.Data.OpaqueConstructions.Generic
                                                            conIntWal(final nLay=2,
        material={matIso,matCon})
      "Interior wall construction betwen zone and atrium"
      annotation (Placement(transformation(extent={{168,464},{188,484}})));
    parameter Buildings.HeatTransfer.Data.OpaqueConstructions.Generic
                                                            conFlo(
      absSol_a=0.6,
      absSol_b=0.6,
      material={matCon1,matIso},
      final nLay=2) "Floor construction (opa_a is carpet)"
      annotation (Placement(transformation(extent={{214,418},{234,438}})));
    parameter Buildings.HeatTransfer.Data.OpaqueConstructions.Generic
                                                            conFur(final nLay=1, material={
          matFur}) "Construction for internal mass of furniture"
      annotation (Placement(transformation(extent={{254,418},{274,438}})));
    parameter
      Buildings.HeatTransfer.Data.GlazingSystems.DoubleClearAir13Clear
                                                                     glaSys(
      shade=Buildings.HeatTransfer.Data.Shades.Gray(),
      haveInteriorShade=false,
      haveExteriorShade=false,
      UFra=2) "Data record for the glazing system"
      annotation (Placement(transformation(extent={{-346,380},{-326,400}})));
  Buildings.ThermalZones.Detailed.MixedAir sou(
    lat=lat,
    nConExt=1,
    nPorts=6,
    intConMod=intConMod,
    energyDynamics=Modelica.Fluid.Types.Dynamics.FixedInitial,
    redeclare package Medium = MediumA,
    hRoo=12,
    nConExtWin=0,
    m_flow_nominal=mAirBat_S_S1 + mAirBat_S_S2,
    nSurBou=1,
    surBou(
      A={264},
      each absIR=0.9,
      each absSol=0.9,
      til={Buildings.Types.Tilt.Wall}),
    AFlo=350,
    datConExt(
      layers={conExtCell},
      A={350},
      til={Buildings.Types.Tilt.Ceiling},
      azi={Buildings.Types.Azimuth.S}),
    nConBou=3,
    nConPar=3,
    datConPar(
      layers={conFlo,conFlo,conFur},
      A={350,350,450},
      til={Buildings.Types.Tilt.Floor,Buildings.Types.Tilt.Floor,Buildings.Types.Tilt.Wall}),
    T_start(displayUnit="K") = 273.15 + 17.5,
      datConBou(
        layers={conIntWal1,conIntWal1,conFlo},
        A={72,72,350},
        til={Buildings.Types.Tilt.Wall,Buildings.Types.Tilt.Wall,Buildings.Types.Tilt.Floor},
        each stateAtSurface_a=false),
      p_start=98828)
                   "South zone"
    annotation (Placement(transformation(extent={{132,-50},{172,-10}})));

  Buildings.ThermalZones.Detailed.MixedAir eas(
    lat=lat,
    nConExt=1,
    nPorts=10,
    intConMod=intConMod,
    linearizeRadiation=true,
    energyDynamics=Modelica.Fluid.Types.Dynamics.FixedInitial,
    redeclare package Medium = MediumA,
    hRoo=12,
    nConExtWin=0,
    nSurBou=2,
    datConExt(
      layers={conExtCell},
      A={444},
      til={Buildings.Types.Tilt.Ceiling},
      azi={Buildings.Types.Azimuth.E}),
    AFlo=444,
    surBou(
      A={72,438},
      each absIR=0.9,
      each absSol=0.9,
      til={Buildings.Types.Tilt.Wall,Buildings.Types.Tilt.Wall}),
    m_flow_nominal=mAirBat_E_N1 + mAirBat_E_N2 + mAirBat_E_S1 + mAirBat_E_S2
         + mAirBat_N_N2,
    nConBou=1,
    nConPar=3,
    datConPar(
      layers={conFlo,conFlo,conFur},
      A={444,444,500},
      til={Buildings.Types.Tilt.Floor,Buildings.Types.Tilt.Floor,Buildings.Types.Tilt.Wall}),
    T_start(displayUnit="K") = 273.15 + 17.4,
      datConBou(
        layers={conFlo},
        A={444},
        til={Buildings.Types.Tilt.Floor},
        each stateAtSurface_a=false),
      p_start=98828)
                   "East zone"
    annotation (Placement(transformation(extent={{260,90},{300,130}})));
  Buildings.ThermalZones.Detailed.MixedAir wes(
    lat=lat,
    nConExt=1,
    nPorts=7,
    intConMod=intConMod,
    energyDynamics=Modelica.Fluid.Types.Dynamics.FixedInitial,
    redeclare package Medium = MediumA,
    hRoo=12,
    nConExtWin=0,
    m_flow_nominal=mAirBat_W_N1 + mAirBat_W_N2 + mAirBat_W_S1,
    datConExt(
      layers={conExtCell},
      A={510.5},
      til={Buildings.Types.Tilt.Ceiling},
      azi={Buildings.Types.Azimuth.W}),
    AFlo=510.5,
    nSurBou=2,
    surBou(
      A={72,620},
      each absIR=0.9,
      each absSol=0.9,
      til={Buildings.Types.Tilt.Wall,Buildings.Types.Tilt.Wall}),
    nConBou=1,
    datConPar(
      layers={conFlo,conFlo,conFur},
      A={510.5,510.5,550},
      til={Buildings.Types.Tilt.Floor,Buildings.Types.Tilt.Floor,Buildings.Types.Tilt.Wall}),
    nConPar=3,
    T_start(displayUnit="degC") = 273.15 + 17.4,
      datConBou(
        layers={conFlo},
        A={510.5},
        til={Buildings.Types.Tilt.Floor},
        each stateAtSurface_a=false),
      p_start=98828)
                   "West zone"
    annotation (Placement(transformation(extent={{-54,80},{-14,120}})));
    Modelica.Blocks.Math.MatrixGain gai(K=25*[0.4; 0.4; 0.2])
      "Matrix gain to split up heat gain in radiant, convective and latent gain"
      annotation (Placement(transformation(extent={{-220,160},{-200,180}})));
    Buildings.Examples.VAVReheat.ThermalZones.RoomLeakage
                leaSou(
      redeclare package Medium = MediumA,
      VRoo=3504,
      azi=Buildings.Types.Azimuth.S,
      s=50/74) "Model for air infiltration through the envelope"
      annotation (Placement(transformation(extent={{-200,370},{-164,410}})));
    Buildings.Examples.VAVReheat.ThermalZones.RoomLeakage
                leaEas(
      redeclare package Medium = MediumA,
      VRoo=2604,
      azi=Buildings.Types.Azimuth.E,
      s=74/50) "Model for air infiltration through the envelope"
      annotation (Placement(transformation(extent={{-200,322},{-164,362}})));
    Buildings.Examples.VAVReheat.ThermalZones.RoomLeakage
                leaWes(
      redeclare package Medium = MediumA,
      VRoo=3096,
      azi=Buildings.Types.Azimuth.W,
      s=74/50) "Model for air infiltration through the envelope"
      annotation (Placement(transformation(extent={{-200,278},{-164,318}})));
    Modelica.Thermal.HeatTransfer.Sensors.TemperatureSensor temAirSou
      "Air temperature sensor"
      annotation (Placement(transformation(extent={{304,356},{324,376}})));
    Modelica.Thermal.HeatTransfer.Sensors.TemperatureSensor temAirEas
      "Air temperature sensor"
      annotation (Placement(transformation(extent={{304,326},{324,346}})));
    Modelica.Thermal.HeatTransfer.Sensors.TemperatureSensor temAirWes
      "Air temperature sensor"
      annotation (Placement(transformation(extent={{302,296},{322,316}})));
    Modelica.Thermal.HeatTransfer.Sensors.TemperatureSensor temAirPer5
      "Air temperature sensor"
      annotation (Placement(transformation(extent={{84,-144},{104,-124}})));
  Buildings.ThermalZones.Detailed.MixedAir Atri(
    lat=lat,
    nPorts=2,
    intConMod=intConMod,
    energyDynamics=Modelica.Fluid.Types.Dynamics.FixedInitial,
    redeclare package Medium = MediumA,
    nConBou=1,
    T_start(displayUnit="K") = 285.15,
    nConExtWin=1,
    nConExt=1,
    datConExt(
      layers={conExtWalNorth},
      A={240},
      til={Buildings.Types.Tilt.Wall},
      azi={Buildings.Types.Azimuth.N}),
    AFlo=1100,
    nSurBou=0,
    nConPar=2,
    datConPar(
      layers={conExtWal,conExtWal},
      A={22*11,258},
      til={Buildings.Types.Tilt.Wall,Buildings.Types.Tilt.Wall}),
    hRoo=12.5,
      datConBou(
        layers={conFloAtri},
        A={1100},
        til={Buildings.Types.Tilt.Floor},
        each stateAtSurface_a=false),
      datConExtWin(
        layers={conExtCell},
        A={1100},
        glaSys={AtriumV},
        wWin={22},
        hWin={33.18},
        fFra={0.10},
        til={Buildings.Types.Tilt.Ceiling},
        azi={Buildings.Types.Azimuth.S},
        each stateAtSurface_a=true),
      p_start=98828)
                   "Atrium zone"
    annotation (Placement(transformation(extent={{132,92},{172,132}})));
    parameter Buildings.HeatTransfer.Data.Solids.InsulationBoard
                                                       matIso(
      x=0.2,
      c=1000,
      d=28,
      k=0.04,
      nStaRef=1) "Isofacade 32R 200mm"
      annotation (Placement(transformation(extent={{-344,444},{-324,464}})));
    parameter Buildings.HeatTransfer.Data.Solids.InsulationBoard
                                                       matOuat(
      d=28,
      x=0.16,
      c=2000,
      k=0.040,
      nStaRef=1) "Ouate de cellulose pour isolant plafond (homaterm flex cl)"
      annotation (Placement(transformation(extent={{-306,444},{-286,464}})));
    parameter Buildings.HeatTransfer.Data.OpaqueConstructions.Generic
                                                            conExtCell(final nLay=
         2, material={matCon1,matOuat}) "Ceilling constrution"
      annotation (Placement(transformation(extent={{300,458},{320,478}})));
    parameter Buildings.HeatTransfer.Data.OpaqueConstructions.Generic
                                                            conIntWal1(final nLay=
         1, material={matGyp}) "Interior wall construction betwen two zones"
      annotation (Placement(transformation(extent={{300,418},{320,438}})));
    parameter
      Buildings.HeatTransfer.Data.GlazingSystems.DoubleClearAir13Clear
                                                                     glaSysWest(
      haveInteriorShade=false,
      shade=FBM.Examples.BaseClasses.Ventel(),
      haveExteriorShade=true,
      UFra=2) "Data record for the glazing system"
      annotation (Placement(transformation(extent={{-306,382},{-286,402}})));
    parameter
      Buildings.HeatTransfer.Data.GlazingSystems.DoubleClearAir13Clear
                                                                     glaSysSouth(
      haveInteriorShade=false,
      shade=Buildings.HeatTransfer.Data.Shades.Gray(),
      haveExteriorShade=true,
      UFra=2) "Data record for the glazing system"
      annotation (Placement(transformation(extent={{-270,384},{-250,404}})));
    Modelica.Blocks.Sources.CombiTimeTable intGaiFraLabo(extrapolation=
          Modelica.Blocks.Types.Extrapolation.Periodic, table=[0,0.20; 3600*8,
          0.20; (3600*8) + 1,0.375; (8*3600) + 900,0.375; (8*3600) + 901,0.5;
          (8*3600) + 1800,0.5; (8*3600) + 1801,0.75; (8*3600) + 2700,0.75; (8
          *3600) + 2701,1; 9*3600,1; (9*3600) + 1,1; 17*3600,1; (17*3600) + 1,
          0.75; (17*3600) + 900,0.75; (17*3600) + 901,0.5; (17*3600) + 1800,
          0.5; (17*3600) + 1801,0.375; (17*3600) + 2700,0.375; (17*3600) +
          2701,0.20; 24*3600,0.20])
      "Fraction of internal heat gain for the laboratory area"
      annotation (Placement(transformation(extent={{-332,168},{-312,188}})));
    parameter Buildings.HeatTransfer.Data.Solids.GypsumBoard
                                                   matTole(
      x=0.0075,
      k=0.04,
      c=510,
      d=7850,
      nStaRef=1) "Gypsum board"
      annotation (Placement(transformation(extent={{114,402},{134,422}})));
    Buildings.Fluid.Sources.Outside outdoor1(redeclare package Medium =
          MediumA, nPorts=9)
      annotation (Placement(transformation(extent={{704,100},{676,128}})));
    parameter Buildings.HeatTransfer.Data.Solids.Concrete soil(
      x=2,
      c=800,
      k=2.5,
      d=2000,
      nStaRef=1)
      "sol argileux, caractéristique sur http://www.energieplus-lesite.be/index.php?id=18523"
      annotation (Placement(transformation(extent={{164,368},{184,388}})));
  Buildings.ThermalZones.Detailed.MixedAir easD(
    lat=lat,
    intConMod=intConMod,
    energyDynamics=Modelica.Fluid.Types.Dynamics.FixedInitial,
    redeclare package Medium = MediumA,
    nPorts=3,
    hRoo=12,
    nConBou=2,
    AFlo=217,
    nSurBou=1,
    surBou(
      A={72},
      each absIR=0.9,
      each absSol=0.9,
      til={Buildings.Types.Tilt.Wall}),
    m_flow_nominal=mAirBat_E_N3 + (mAirBat_N_N3)/2,
    nConExt=2,
    nConExtWin=1,
    datConExt(
      layers={conExtCell,conExtWalNorth},
      A={217,68},
      til={Buildings.Types.Tilt.Ceiling,Buildings.Types.Tilt.Wall},
      azi={Buildings.Types.Azimuth.E,Buildings.Types.Azimuth.N}),
    datConExtWin(
      layers={conExtWal},
      A={72*hRoo},
      glaSys={glaSysSouth},
      wWin={0.228/hWin*72*hRoo},
      hWin={hWin},
      fFra={0.25},
      til={Buildings.Types.Tilt.Wall},
      azi={Buildings.Types.Azimuth.E}),
    nConPar=3,
    datConPar(
      layers={conFlo,conFlo,conFur},
      A={217,217,400},
      til={Buildings.Types.Tilt.Floor,Buildings.Types.Tilt.Floor,Buildings.Types.Tilt.Wall}),
      T_start(displayUnit="K") = 273.15 + 16.5,
      datConBou(
        layers={conFlo,conFlo},
        A={217,438},
        til={Buildings.Types.Tilt.Floor,Buildings.Types.Tilt.Wall},
        each stateAtSurface_a=false),
      p_start=98828)
                   "East zone"
    annotation (Placement(transformation(extent={{330,96},{370,136}})));
  Buildings.ThermalZones.Detailed.MixedAir souD(
    lat=lat,
    nConExt=1,
    nConExtWin=1,
    nSurBou=0,
    nPorts=3,
    intConMod=intConMod,
    energyDynamics=Modelica.Fluid.Types.Dynamics.FixedInitial,
    redeclare package Medium = MediumA,
    hRoo=12,
    m_flow_nominal=mAirBat_S_N3,
    nConBou=4,
    datConExtWin(
      layers={conExtWal},
      A={50*hRoo},
      glaSys={glaSysSouth},
      wWin={0.277/hWin*50*hRoo},
      each hWin=hWin,
      fFra={0.25},
      til={Buildings.Types.Tilt.Wall},
      azi={Buildings.Types.Azimuth.S}),
    AFlo=400,
    datConExt(
      layers={conExtCell},
      A={400},
      til={Buildings.Types.Tilt.Ceiling},
      azi={Buildings.Types.Azimuth.S}),
    nConPar=3,
    datConPar(
      layers={conFlo,conFlo,conFur},
      A={400,400,450},
      til={Buildings.Types.Tilt.Floor,Buildings.Types.Tilt.Floor,Buildings.Types.Tilt.Wall}),
    T_start(displayUnit="K") = 273.15 + 16.4,
      datConBou(
        layers={conIntWal1,conIntWal1,conFlo,conFlo},
        A={72,72,400,264},
        til={Buildings.Types.Tilt.Wall,Buildings.Types.Tilt.Wall,Buildings.Types.Tilt.Floor,
            Buildings.Types.Tilt.Wall},
        each stateAtSurface_a=false),
      p_start=98828)
                   "South zone"
    annotation (Placement(transformation(extent={{132,-126},{172,-86}})));
  Buildings.ThermalZones.Detailed.MixedAir wesD(
    lat=lat,
    nPorts=3,
    intConMod=intConMod,
    energyDynamics=Modelica.Fluid.Types.Dynamics.FixedInitial,
    redeclare package Medium = MediumA,
    hRoo=12,
    nConBou=2,
    surBou(
      A={72},
      each absIR=0.9,
      each absSol=0.9,
      til={Buildings.Types.Tilt.Wall}),
    AFlo=258,
    nConExt=2,
    nSurBou=1,
    m_flow_nominal=mAirBat_W_N3 + (mAirBat_N_N3)/2,
    nConExtWin=1,
    datConExt(
      layers={conExtCell,conExtWalNorth},
      A={258,68},
      til={Buildings.Types.Tilt.Ceiling,Buildings.Types.Tilt.Wall},
      azi={Buildings.Types.Azimuth.W,Buildings.Types.Azimuth.N}),
    datConExtWin(
      layers={conExtWal},
      A={72*hRoo},
      glaSys={glaSysWest},
      wWin={0.30/hWin*72*hRoo},
      hWin={hWin},
      fFra={0.25},
      til={Buildings.Types.Tilt.Wall},
      azi={Buildings.Types.Azimuth.W}),
    nConPar=3,
    datConPar(
      layers={conFlo,conFlo,conFur},
      A={258,258,400},
      til={Buildings.Types.Tilt.Floor,Buildings.Types.Tilt.Floor,Buildings.Types.Tilt.Wall}),
    T_start(displayUnit="degC") = 273.15 + 16.5,
      datConBou(
        layers={conFlo,conFlo},
        A={258,620},
        til={Buildings.Types.Tilt.Floor,Buildings.Types.Tilt.Wall},
        each stateAtSurface_a=false),
      p_start=98828)
                   "West zone"
    annotation (Placement(transformation(extent={{-112,82},{-72,122}})));
    Modelica.Thermal.HeatTransfer.Sensors.TemperatureSensor temAirSouD
      "Air temperature sensor"
      annotation (Placement(transformation(extent={{362,284},{382,304}})));
    Modelica.Thermal.HeatTransfer.Sensors.TemperatureSensor temAirEasD
      "Air temperature sensor"
      annotation (Placement(transformation(extent={{362,258},{382,278}})));
    Modelica.Thermal.HeatTransfer.Sensors.TemperatureSensor temAirWesD
      "Air temperature sensor"
      annotation (Placement(transformation(extent={{362,228},{382,248}})));
    Modelica.Blocks.Routing.Multiplex3 multiplex3_1
      annotation (Placement(transformation(extent={{338,326},{358,346}})));
    Modelica.Blocks.Routing.Multiplex3 multiplex3_2
      annotation (Placement(transformation(extent={{414,258},{434,278}})));
    FBM.Examples.BaseClasses.BaseClassesVentilation.EastFumeHood eastFumeHood
      annotation (Placement(transformation(extent={{520,-6},{628,96}})));
    FBM.Examples.BaseClasses.BaseClassesVentilation.SouthFumeHood southFumeHood
      annotation (Placement(transformation(extent={{526,-100},{614,-34}})));
    FBM.Examples.BaseClasses.BaseClassesVentilation.WestFumeHood westFumeHood
      annotation (Placement(transformation(extent={{526,120},{628,208}})));
    FBM.Examples.BaseClasses.BaseClassesVentilation.AtriumVentilation
                                             atriumVentilation
      annotation (Placement(transformation(extent={{45,-45},{-45,45}},
          rotation=90,
          origin={375,-171})));
    FBM.Examples.BaseClasses.ShadingAtrium
                  shadingAtrium
      annotation (Placement(transformation(extent={{180,-214},{296,-132}})));
    FBM.Examples.BaseClasses.WallShadding
                 EastShad(
      Start=7,
      Finish=20,
      azi=1.5707963267949) "Shadding of the East wall"
      annotation (Placement(transformation(extent={{-338,-88},{-234,6}})));
    FBM.Examples.BaseClasses.WallShadding
                 SouthShad(
      Start=7,
      Finish=20,
      azi=3.1415926535898) "Shadding of the south wall"
      annotation (Placement(transformation(extent={{-338,-202},{-234,-108}})));
    FBM.Examples.BaseClasses.WallShadding
                 WestShad(
      Start=6,
      Finish=20,
      azi=4.7123889803847) "Shadding of the West wall"
      annotation (Placement(transformation(extent={{-338,20},{-236,106}})));
    parameter
      Buildings.HeatTransfer.Data.GlazingSystems.DoubleClearAir13Clear glaSysNorth(
      shade=Buildings.HeatTransfer.Data.Shades.Gray(),
      haveInteriorShade=true,
      UFra=2) "Data record for the glazing system"
      annotation (Placement(transformation(extent={{-374,380},{-354,400}})));
    parameter Buildings.HeatTransfer.Data.Solids.Concrete
                                                matCon1(
      c=836,
      k=1.75,
      x=0.20,
      d=2400,
      nStaRef=1) "Concrete"
      annotation (Placement(transformation(extent={{-308,414},{-288,434}})));
    parameter Buildings.HeatTransfer.Data.OpaqueConstructions.Generic conExtWalNorth(final
        nLay=2, material={matIso,matCon1})
      "Exterior construction South, East and West, interior with the atrium"
      annotation (Placement(transformation(extent={{242,458},{260,476}})));
    Modelica.Blocks.Math.MatrixGain gai1(K=12*[0.4; 0.4; 0.2])
      "Matrix gain to split up heat gain in radiant, convective and latent gain"
      annotation (Placement(transformation(extent={{-222,192},{-202,212}})));
    Modelica.Blocks.Sources.CombiTimeTable intGaiFraBureau(extrapolation=
          Modelica.Blocks.Types.Extrapolation.Periodic, table=[0,0.03; 3600*8,
          0.03; (3600*8) + 1,0.25; (8*3600) + 900,0.25; (8*3600) + 901,0.5; (
          8*3600) + 1800,0.5; (8*3600) + 1801,0.75; (8*3600) + 2700,0.75; (8*
          3600) + 2701,1; 9*3600,1; (9*3600) + 1,1; 17*3600,1; (17*3600) + 1,
          0.75; (17*3600) + 900,0.75; (17*3600) + 901,0.5; (17*3600) + 1800,
          0.5; (17*3600) + 1801,0.25; (17*3600) + 2700,0.25; (17*3600) + 2701,
          0.03; 24*3600,0.03])
      "Fraction of internal heat gain for the office area"
      annotation (Placement(transformation(extent={{-330,200},{-310,220}})));
    Modelica.Blocks.Routing.Replicator replicator(nout=1)
      annotation (Placement(transformation(extent={{-394,108},{-374,128}})));
    FBM.Examples.BaseClasses.SwitchVectoriel
                    switch1
      annotation (Placement(transformation(extent={{-258,192},{-238,212}})));
    Modelica.Blocks.Sources.Constant Nogain(k=0.035)
      "No internal gain in holiday"
      annotation (Placement(transformation(extent={{-420,108},{-400,128}})));
    FBM.Examples.BaseClasses.SwitchVectoriel
                    switch2
      annotation (Placement(transformation(extent={{-256,160},{-236,180}})));
    FBM.Components.WorkingDayOrWeekEnd
                        workingDayOrWeekEnd1
      annotation (Placement(transformation(extent={{-390,164},{-370,184}})));
    parameter Buildings.HeatTransfer.Data.OpaqueConstructions.Generic conFloAtri(
      absSol_a=0.6,
      absSol_b=0.6,
      final nLay=1,
      material={matCon}) "Floor construction (opa_a is carpet)"
      annotation (Placement(transformation(extent={{214,492},{234,512}})));
    Modelica.Thermal.HeatTransfer.Interfaces.HeatPort_a EastConve
      "Heat port to air volume"
      annotation (Placement(transformation(extent={{142,70},{162,90}}),
          iconTransformation(extent={{142,70},{162,90}})));
    Modelica.Thermal.HeatTransfer.Interfaces.HeatPort_a EastRadia
      "Heat port for radiative heat gain and radiative temperature"
      annotation (Placement(transformation(extent={{144,-26},{164,-6}}),
          iconTransformation(extent={{144,-26},{164,-6}})));
    Modelica.Thermal.HeatTransfer.Interfaces.HeatPort_a SouthRad
      "Heat port for radiative heat gain and radiative temperature"
      annotation (Placement(transformation(extent={{48,-168},{68,-148}}),
          iconTransformation(extent={{48,-168},{68,-148}})));
    Modelica.Thermal.HeatTransfer.Interfaces.HeatPort_a SouthConv
      "Heat port to air volume"
      annotation (Placement(transformation(extent={{-70,-168},{-50,-148}}),
          iconTransformation(extent={{-70,-168},{-50,-148}})));
    Modelica.Thermal.HeatTransfer.Interfaces.HeatPort_a WestConv
      "Heat port to air volume"
      annotation (Placement(transformation(extent={{-158,74},{-138,94}}),
          iconTransformation(extent={{-158,74},{-138,94}})));
    Modelica.Thermal.HeatTransfer.Interfaces.HeatPort_a WestRad
      "Heat port for radiative heat gain and radiative temperature"
      annotation (Placement(transformation(extent={{-156,-26},{-136,-6}}),
          iconTransformation(extent={{-156,-26},{-136,-6}})));
    Modelica.Blocks.Interfaces.RealOutput TLabo[n] annotation (Placement(
          transformation(extent={{180,150},{200,170}}), iconTransformation(extent={{180,150},
              {200,170}})));
    Modelica.Blocks.Interfaces.RealOutput TDesktop[n] annotation (Placement(
          transformation(extent={{180,88},{200,108}}), iconTransformation(extent={
              {180,88},{200,108}})));
    Modelica.Fluid.Interfaces.FluidPort_a WesIn(redeclare package Medium =
          MediumA)
      annotation (Placement(transformation(extent={{-156,144},{-136,164}}),
          iconTransformation(extent={{-156,144},{-136,164}})));
    Modelica.Fluid.Interfaces.FluidPort_b WesOut(redeclare package Medium =
          MediumA)
      annotation (Placement(transformation(extent={{-160,-88},{-140,-68}}),
          iconTransformation(extent={{-160,-88},{-140,-68}})));
    Modelica.Fluid.Interfaces.FluidPort_a EasIn(redeclare package Medium =
          MediumA) annotation (Placement(transformation(extent={{384,146},{404,166}}),
          iconTransformation(extent={{142,144},{162,164}})));
    Modelica.Fluid.Interfaces.FluidPort_b EasOut(redeclare package Medium =
          MediumA) annotation (Placement(transformation(extent={{384,122},{404,142}}),
          iconTransformation(extent={{142,-82},{162,-62}})));
    Modelica.Fluid.Interfaces.FluidPort_a SouIn(redeclare package Medium =
          MediumA) annotation (Placement(transformation(extent={{74,-242},{94,-222}}),
          iconTransformation(extent={{-156,-172},{-136,-152}})));
    Modelica.Fluid.Interfaces.FluidPort_b SouOut(redeclare package Medium =
          MediumA) annotation (Placement(transformation(extent={{146,-244},{166,-224}}),
          iconTransformation(extent={{146,-174},{166,-154}})));
    Modelica.Fluid.Interfaces.FluidPort_a N2_West(redeclare package Medium =
          MediumA) annotation (Placement(transformation(extent={{-20,144},{0,164}}),
          iconTransformation(extent={{-94,142},{-74,162}})));
    Modelica.Fluid.Interfaces.FluidPort_b N2_west(redeclare package Medium =
          MediumA)
      annotation (Placement(transformation(extent={{-18,42},{2,62}}),
          iconTransformation(extent={{-96,-84},{-76,-64}})));
    Modelica.Fluid.Interfaces.FluidPort_a N1_West(redeclare package Medium =
          MediumA) annotation (Placement(transformation(extent={{-20,122},{0,142}}),
          iconTransformation(extent={{-92,90},{-72,110}})));
    Modelica.Fluid.Interfaces.FluidPort_b N1_west(redeclare package Medium =
          MediumA) annotation (Placement(transformation(extent={{-18,14},{2,34}}),
          iconTransformation(extent={{-96,-36},{-76,-16}})));
    Modelica.Fluid.Interfaces.FluidPort_b S2_south(redeclare package Medium =
          MediumA) annotation (Placement(transformation(extent={{16,-62},{36,
              -42}}),
          iconTransformation(extent={{48,-128},{68,-108}})));
    Modelica.Fluid.Interfaces.FluidPort_b S1_south(redeclare package Medium =
          MediumA) annotation (Placement(transformation(extent={{18,-88},{38,-68}}),
          iconTransformation(extent={{118,-130},{138,-110}})));
    Modelica.Fluid.Interfaces.FluidPort_a S2_South(redeclare package Medium =
          MediumA) annotation (Placement(transformation(extent={{50,-62},{70,-42}}),
          iconTransformation(extent={{-122,-128},{-102,-108}})));
    Modelica.Fluid.Interfaces.FluidPort_a S1_South(redeclare package Medium =
          MediumA) annotation (Placement(transformation(extent={{50,-86},{70,
              -66}}),
          iconTransformation(extent={{-66,-130},{-46,-110}})));
    Modelica.Fluid.Interfaces.FluidPort_b S2_eas(redeclare package Medium =
          MediumA) annotation (Placement(transformation(extent={{220,210},{240,230}}),
          iconTransformation(extent={{80,-90},{100,-70}})));
    Modelica.Fluid.Interfaces.FluidPort_b S1_eas(redeclare package Medium =
          MediumA) annotation (Placement(transformation(extent={{222,188},{242,208}}),
          iconTransformation(extent={{80,-58},{100,-38}})));
    Modelica.Fluid.Interfaces.FluidPort_a S2_Eas(redeclare package Medium =
          MediumA) annotation (Placement(transformation(extent={{254,210},{274,230}}),
          iconTransformation(extent={{78,42},{98,62}})));
    Modelica.Fluid.Interfaces.FluidPort_a S1_Eas(redeclare package Medium =
          MediumA) annotation (Placement(transformation(extent={{254,188},{274,208}}),
          iconTransformation(extent={{80,76},{100,96}})));
    Modelica.Fluid.Interfaces.FluidPort_b N2_eas(redeclare package Medium =
          MediumA) annotation (Placement(transformation(extent={{224,168},{244,188}}),
          iconTransformation(extent={{80,8},{100,28}})));
    Modelica.Fluid.Interfaces.FluidPort_b N1_eas(redeclare package Medium =
          MediumA) annotation (Placement(transformation(extent={{224,140},{244,160}}),
          iconTransformation(extent={{80,-24},{100,-4}})));
    Modelica.Fluid.Interfaces.FluidPort_a N2_Eas(redeclare package Medium =
          MediumA) annotation (Placement(transformation(extent={{256,168},{276,188}}),
          iconTransformation(extent={{76,142},{96,162}})));
    Modelica.Fluid.Interfaces.FluidPort_a N1_Eas(redeclare package Medium =
          MediumA) annotation (Placement(transformation(extent={{256,140},{276,160}}),
          iconTransformation(extent={{78,112},{98,132}})));
    Buildings.BoundaryConditions.WeatherData.Bus weaBus annotation (Placement(
          transformation(extent={{-306,294},{-266,334}}), iconTransformation(
            extent={{-14,40},{6,60}})));
    parameter
      Buildings.HeatTransfer.Data.GlazingSystems.DoubleClearAir13Clear
                                                                     AtriumV(
      haveExteriorShade=false,
      UFra=2,
      haveInteriorShade=true,
      shade=FBM.Examples.BaseClasses.TexInov())
              "Data record for the glazing system"
      annotation (Placement(transformation(extent={{-304,348},{-284,368}})));
    Modelica.Thermal.HeatTransfer.Sources.FixedTemperature TSoil(T(displayUnit=
            "K") = 273.15 + 8)
      annotation (Placement(transformation(extent={{-162,-176},{-142,-156}})));
    Modelica.Blocks.Sources.Constant NoGainOrShade(k=0.00)
      annotation (Placement(transformation(extent={{10,144},{30,164}})));
    Modelica.Fluid.Interfaces.FluidPort_a S1_West(redeclare package Medium =
          MediumA) annotation (Placement(transformation(extent={{-20,170},{0,
              190}}), iconTransformation(extent={{-92,54},{-72,74}})));
    Modelica.Fluid.Interfaces.FluidPort_b S1_west(redeclare package Medium =
          MediumA) annotation (Placement(transformation(extent={{-18,66},{2,86}}),
          iconTransformation(extent={{-98,-2},{-78,18}})));
    Modelica.Blocks.Routing.Replicator replicator1(nout=3)
      annotation (Placement(transformation(extent={{104,144},{124,164}})));
    InteriorWall interiorWall(
      A=494,
      til=Buildings.Types.Tilt.Wall,
      AWin=154,
      fFra=0.1,
      steadyStateInitial=true,
      T_a_start=290.65,
      T_b_start=285.15,
      stateAtSurface_a=false,
      stateAtSurface_b=false)
      annotation (Placement(transformation(extent={{24,90},{56,128}})));
    InteriorWall interiorWall1(
      til=Buildings.Types.Tilt.Wall,
      fFra=0.1,
      A=541,
      AWin=211,
      steadyStateInitial=true,
      T_a_start=290.65,
      T_b_start=285.15,
      stateAtSurface_a=false,
      stateAtSurface_b=false)
      annotation (Placement(transformation(extent={{234,104},{202,142}})));
    InteriorWall interiorWall2(
      til=Buildings.Types.Tilt.Wall,
      fFra=0.1,
      A=192,
      AWin=120,
      steadyStateInitial=true,
      stateAtSurface_a=false,
      stateAtSurface_b=false) annotation (Placement(transformation(
          extent={{16,-19},{-16,19}},
          rotation=270,
          origin={118,33})));
  equation
    connect(sou.heaPorAir,temAirSou. port) annotation (Line(
        points={{151,-30},{154,-30},{154,366},{304,366}},
        color={191,0,0},
        smooth=Smooth.None));
    connect(eas.heaPorAir,temAirEas. port) annotation (Line(
        points={{279,110},{280,110},{280,336},{304,336}},
        color={191,0,0},
        smooth=Smooth.None));
    connect(wes.heaPorAir,temAirWes. port) annotation (Line(
        points={{-35,100},{-34,100},{-34,306},{302,306}},
        color={191,0,0},
        smooth=Smooth.None));
    connect(Atri.heaPorAir,temAirPer5. port) annotation (Line(
        points={{151,112},{82,112},{82,-134},{84,-134}},
        color={191,0,0},
        smooth=Smooth.None));
    connect(EastRadia,easD. heaPorRad) annotation (Line(points={{154,-16},{330,-16},
            {330,112.2},{349,112.2}},           color={191,0,0}));
    connect(EastConve,easD. heaPorAir) annotation (Line(points={{152,80},{329,80},
            {329,116},{349,116}},           color={191,0,0}));
    connect(SouthRad,souD. heaPorRad) annotation (Line(points={{58,-158},{142,-158},
            {142,-109.8},{151,-109.8}},   color={191,0,0}));
    connect(SouthConv,souD. heaPorAir) annotation (Line(points={{-60,-158},{122,-158},
            {122,-106},{151,-106}},         color={191,0,0}));
    connect(WestRad,wesD. heaPorRad) annotation (Line(points={{-146,-16},{-98,-16},
            {-98,98.2},{-93,98.2}},     color={191,0,0}));
    connect(WestConv,wesD. heaPorAir) annotation (Line(points={{-148,84},{-98,84},
            {-98,102},{-93,102}},   color={191,0,0}));
    connect(leaWes.port_b,wesD. ports[1]) annotation (Line(points={{-164,298},{
            -164,298},{-112,298},{-112,90},{-107,90},{-107,89.3333}},
                                             color={0,127,255}));
    connect(leaEas.port_b,easD. ports[1]) annotation (Line(points={{-164,342},{
            312,342},{312,103.333},{335,103.333}},
                                            color={0,127,255}));
    connect(leaSou.port_b,souD. ports[1]) annotation (Line(points={{-164,390},{
            -96,390},{-96,-118.667},{137,-118.667}},     color={0,127,255}));
    connect(souD.surf_conBou[4],sou. surf_surBou[1]) annotation (Line(points={{158,
            -121.25},{126,-121.25},{126,-44},{148.2,-44}},      color={191,0,0}));
    connect(souD.heaPorAir,temAirSouD. port) annotation (Line(points={{151,-106},{
            152,-106},{152,294},{362,294}},       color={191,0,0}));
    connect(easD.heaPorAir,temAirEasD. port) annotation (Line(points={{349,116},{350,
            116},{350,268},{362,268}},            color={191,0,0}));
    connect(wesD.heaPorAir,temAirWesD. port) annotation (Line(points={{-93,102},{-90,
            102},{-90,238},{-86,238},{362,238}},
                                     color={191,0,0}));
    connect(temAirSou.T,multiplex3_1. u1[1]) annotation (Line(points={{324,366},{330,
            366},{330,343},{336,343}},            color={0,0,127}));
    connect(temAirEas.T,multiplex3_1. u2[1]) annotation (Line(points={{324,336},{336,
            336}},                    color={0,0,127}));
    connect(temAirWes.T,multiplex3_1. u3[1]) annotation (Line(points={{322,306},{332,
            306},{332,329},{336,329}},            color={0,0,127}));
    connect(temAirSouD.T,multiplex3_2. u1[1]) annotation (Line(points={{382,294},{
            394,294},{394,275},{412,275}},        color={0,0,127}));
    connect(temAirEasD.T,multiplex3_2. u2[1]) annotation (Line(points={{382,268},{
            398,268},{412,268}},      color={0,0,127}));
    connect(temAirWesD.T,multiplex3_2. u3[1]) annotation (Line(points={{382,238},{
            396,238},{396,261},{412,261}},        color={0,0,127}));
    connect(souD.surf_conBou[1],wesD. surf_surBou[1]) annotation (Line(points={{158,
            -122.75},{-96,-122.75},{-96,88},{-95.8,88}},     color={191,0,0}));
    connect(souD.surf_conBou[2],easD. surf_surBou[1]) annotation (Line(points={{158,
            -122.25},{346,-122.25},{346,102},{346.2,102}},      color={191,0,0}));
    connect(wesD.surf_conBou[2],wes. surf_surBou[2]) annotation (Line(points={{-86,
            86.5},{-38,86.5},{-37.8,86.5}},                    color={191,0,0}));
    connect(easD.surf_conBou[2],eas. surf_surBou[2]) annotation (Line(points={{356,
            100.5},{306,100.5},{306,96.5},{276.2,96.5}},          color={191,0,0}));
    connect(eas.ports[1],eastFumeHood.  port_a6) annotation (Line(points={{265,
            96.4},{406,96.4},{406,13.38},{519.46,13.38}},
          color={0,127,255}));
    connect(eastFumeHood.port_a,eas. ports[2])  annotation (Line(points={{520,
            65.4},{408,65.4},{408,97.2},{265,97.2}},                   color=
            {0,127,255}));
    connect(sou.ports[1],southFumeHood. port_a2) annotation (Line(points={{137,
            -43.3333},{280,-43.3333},{280,-53.8},{526.88,-53.8}},
          color={0,127,255}));
    connect(sou.ports[2],southFumeHood. port_a) annotation (Line(points={{137,-42},
            {283.5,-42},{283.5,-86.8},{526.88,-86.8}},
          color={0,127,255}));
    connect(wes.ports[1],westFumeHood. port_a7) annotation (Line(points={{-49,
            86.5714},{490,86.5714},{490,206.24},{526,206.24}},      color={0,
            127,255}));
    connect(wes.ports[1],westFumeHood. port_a3) annotation (Line(points={{-49,
            86.5714},{492,86.5714},{492,156.08},{526,156.08}},      color={0,
            127,255}));
    connect(wes.ports[1],westFumeHood. port_a) annotation (Line(points={{-49,
            86.5714},{494,86.5714},{494,144.64},{526,144.64}},color={0,127,
            255}));
    connect(temAirPer5.T,atriumVentilation. TAtrium) annotation (Line(points={{104,
            -134},{152,-134},{152,-126},{361.05,-126},{361.05,-125.55}},   color={
            0,0,127}));
    connect(Atri.ports[1],atriumVentilation. port_a1) annotation (Line(points={{137,100},
            {319.5,100},{319.5,-144},{330,-144}},                 color={0,127,255}));
    connect(atriumVentilation.port_b,Atri. ports[2]) annotation (Line(points={{330,
            -180},{314,-180},{314,-218},{137,-218},{137,104}},         color={0,127,
            255}));
    connect(temAirPer5.T,shadingAtrium. TAtrium) annotation (Line(points={{104,
            -134},{184,-134},{184,-132},{250.688,-132}},     color={0,0,127}));
    connect(SouthShad.y,souD. uSha) annotation (Line(points={{-227.882,-141.213},
            {-227.882,-88},{130.4,-88}},
                               color={0,0,127}));
    connect(EastShad.y[1],easD. uSha[1]) annotation (Line(points={{-227.882,
            -27.2133},{328.4,-27.2133},{328.4,134}},
                                                  color={0,0,127}));
    connect(WestShad.y[1],wesD. uSha[1]) annotation (Line(points={{-230,75.6133},
            {-152,75.6133},{-152,120},{-113.6,120}},       color={0,0,127}));
    connect(gai.y,wes. qGai_flow) annotation (Line(points={{-199,170},{-128,170},{
            -128,108},{-55.6,108}},
                                  color={0,0,127}));
    connect(gai.y,eas. qGai_flow) annotation (Line(points={{-199,170},{256,170},
            {256,118},{258.4,118}},color={0,0,127}));
    connect(gai.y,sou. qGai_flow) annotation (Line(points={{-199,170},{-62,170},
            {-62,-22},{130.4,-22}},color={0,0,127}));
    connect(gai1.y,wesD. qGai_flow) annotation (Line(points={{-201,202},{-201,203},
            {-113.6,203},{-113.6,110}},color={0,0,127}));
    connect(gai1.y,easD. qGai_flow) annotation (Line(points={{-201,202},{316,202},
            {316,124},{328.4,124}},      color={0,0,127}));
    connect(gai1.y,souD. qGai_flow) annotation (Line(points={{-201,202},{-184,202},
            {-184,-98},{130.4,-98}},    color={0,0,127}));
    connect(shadingAtrium.y,Atri. uSha) annotation (Line(points={{299.988,
            -171.586},{299.988,130},{130.4,130}},
                                                color={0,0,127}));
    connect(sou.surf_conBou[1],wes. surf_surBou[1]) annotation (Line(points={{158,
            -46.6667},{-38,-46.6667},{-38,85.5},{-37.8,85.5}}, color={191,0,0}));
    connect(sou.surf_conBou[2],eas. surf_surBou[1]) annotation (Line(points={{158,-46},
            {276,-46},{276,95.5},{276.2,95.5}},           color={191,0,0}));
    connect(switch1.y,gai1. u) annotation (Line(points={{-237,202},{-230.5,202},{-224,
            202}},      color={0,0,127}));
    connect(Nogain.y,replicator. u) annotation (Line(points={{-399,118},{-396,118}},
                             color={0,0,127}));
    connect(gai.u,switch2. y)
      annotation (Line(points={{-222,170},{-235,170}},
                                                     color={0,0,127}));
    connect(replicator.y,switch2. u3) annotation (Line(points={{-373,118},{-348,118},
            {-348,162},{-258,162}},
                                  color={0,0,127}));
    connect(replicator.y,switch1. u3) annotation (Line(points={{-373,118},{-348,118},
            {-348,194},{-260,194}},
                                  color={0,0,127}));
    connect(intGaiFraBureau.y,switch1. u1) annotation (Line(points={{-309,210},{-284.5,
            210},{-260,210}},color={0,0,127}));
    connect(intGaiFraLabo.y,switch2. u1)
      annotation (Line(points={{-311,178},{-282,178},{-258,178}},
                                                               color={0,0,127}));
    connect(workingDayOrWeekEnd1.y,switch1. u2) annotation (Line(points={{-369,174},
            {-354,174},{-354,202},{-260,202}},   color={255,0,255}));
    connect(workingDayOrWeekEnd1.y,switch2. u2) annotation (Line(points={{-369,174},
            {-354,174},{-354,170},{-258,170}},   color={255,0,255}));
    connect(multiplex3_2.y, TDesktop)
      annotation (Line(points={{435,268},{190,268},{190,98}}, color={0,0,127}));
    connect(multiplex3_1.y, TLabo)
      annotation (Line(points={{359,336},{190,336},{190,160}}, color={0,0,127}));

    connect(weaBus, leaWes.weaBus) annotation (Line(
        points={{-286,314},{-242,314},{-242,298},{-200,298}},
        color={255,204,51},
        thickness=0.5), Text(
        string="%first",
        index=-1,
        extent={{-6,3},{-6,3}}));
    connect(weaBus, leaEas.weaBus) annotation (Line(
        points={{-286,314},{-243,314},{-243,342},{-200,342}},
        color={255,204,51},
        thickness=0.5), Text(
        string="%first",
        index=-1,
        extent={{-6,3},{-6,3}}));
    connect(weaBus, leaSou.weaBus) annotation (Line(
        points={{-286,314},{-244,314},{-244,390},{-200,390}},
        color={255,204,51},
        thickness=0.5), Text(
        string="%first",
        index=-1,
        extent={{-6,3},{-6,3}}));
    connect(weaBus, outdoor1.weaBus) annotation (Line(
        points={{-286,314},{727,314},{727,114.28},{704,114.28}},
        color={255,204,51},
        thickness=0.5), Text(
        string="%first",
        index=-1,
        extent={{-6,3},{-6,3}}));
    connect(weaBus, WestShad.weaBus) annotation (Line(
        points={{-286,314},{-304,314},{-304,87.08},{-320,87.08}},
        color={255,204,51},
        thickness=0.5), Text(
        string="%first",
        index=-1,
        extent={{-6,3},{-6,3}}));
    connect(weaBus, EastShad.weaBus) annotation (Line(
        points={{-286,314},{-286,314},{-302,314},{-302,88},{-319.647,88},{
            -319.647,-14.68}},
        color={255,204,51},
        thickness=0.5), Text(
        string="%first",
        index=-1,
        extent={{-6,3},{-6,3}}));
    connect(weaBus, SouthShad.weaBus) annotation (Line(
        points={{-286,314},{-286,312},{-288,312},{-288,314},{-302,314},{-302,92},
            {-320,92},{-320,-128.68},{-319.647,-128.68}},
        color={255,204,51},
        thickness=0.5), Text(
        string="%first",
        index=-1,
        extent={{-6,3},{-6,3}}));
    connect(weaBus, wesD.weaBus) annotation (Line(
        points={{-286,314},{-74,314},{-74,119.9},{-74.1,119.9}},
        color={255,204,51},
        thickness=0.5), Text(
        string="%first",
        index=-1,
        extent={{-6,3},{-6,3}}));
    connect(weaBus, wes.weaBus) annotation (Line(
        points={{-286,314},{-14,314},{-14,117.9},{-16.1,117.9}},
        color={255,204,51},
        thickness=0.5), Text(
        string="%first",
        index=-1,
        extent={{-6,3},{-6,3}}));
    connect(weaBus, Atri.weaBus) annotation (Line(
        points={{-286,314},{170,314},{170,129.9},{169.9,129.9}},
        color={255,204,51},
        thickness=0.5), Text(
        string="%first",
        index=-1,
        extent={{-6,3},{-6,3}}));
    connect(weaBus, eas.weaBus) annotation (Line(
        points={{-286,314},{297,314},{297,127.9},{297.9,127.9}},
        color={255,204,51},
        thickness=0.5), Text(
        string="%first",
        index=-1,
        extent={{-6,3},{-6,3}}));
    connect(weaBus, easD.weaBus) annotation (Line(
        points={{-286,314},{368,314},{368,133.9},{367.9,133.9}},
        color={255,204,51},
        thickness=0.5), Text(
        string="%first",
        index=-1,
        extent={{-6,3},{-6,3}}));
    connect(weaBus, sou.weaBus) annotation (Line(
        points={{-286,314},{172,314},{172,-12.1},{169.9,-12.1}},
        color={255,204,51},
        thickness=0.5), Text(
        string="%first",
        index=-1,
        extent={{-6,3},{-6,3}}));
    connect(weaBus, souD.weaBus) annotation (Line(
        points={{-286,314},{172,314},{172,-88.1},{169.9,-88.1}},
        color={255,204,51},
        thickness=0.5), Text(
        string="%first",
        index=-1,
        extent={{-6,3},{-6,3}}));
    connect(weaBus, shadingAtrium.weaBus) annotation (Line(
        points={{-286,314},{-304,314},{-304,90},{-320,90},{-320,-144.441},{
            198.488,-144.441}},
        color={255,204,51},
        thickness=0.5), Text(
        string="%first",
        index=-1,
        extent={{-6,3},{-6,3}}));
    connect(weaBus, atriumVentilation.weaBus) annotation (Line(
        points={{-286,314},{-304,314},{-304,90},{-320,90},{-320,-144},{50,-144},
            {50,-130.5},{416.4,-130.5}},
        color={255,204,51},
        thickness=0.5), Text(
        string="%first",
        index=-1,
        extent={{-6,3},{-6,3}}));
    connect(NoGainOrShade.y, replicator1.u)
      annotation (Line(points={{31,154},{31,154},{102,154}}, color={0,0,127}));
    connect(replicator1.y, Atri.qGai_flow) annotation (Line(points={{125,154},{
            125,120},{130.4,120}},       color={0,0,127}));
    connect(westFumeHood.port_b, outdoor1.ports[1]) annotation (Line(points={{628,
            204.48},{628,204.24},{676,204.24},{676,118.978}}, color={0,127,255}));
    connect(westFumeHood.port_b5, outdoor1.ports[2]) annotation (Line(points={{629.02,
            133.2},{676.51,133.2},{676.51,117.733},{676,117.733}}, color={0,127,255}));
    connect(westFumeHood.port_b6, outdoor1.ports[3]) annotation (Line(points={{629.02,
            121.76},{654.51,121.76},{654.51,116.489},{676,116.489}}, color={0,127,
            255}));
    connect(eastFumeHood.port_b, outdoor1.ports[4]) annotation (Line(points={{628,
            64.89},{676,64.89},{676,115.244}}, color={0,127,255}));
    connect(eastFumeHood.port_b6, outdoor1.ports[5]) annotation (Line(points={{628,
            14.4},{628,15.2},{676,15.2},{676,114}}, color={0,127,255}));
    connect(southFumeHood.port_b, outdoor1.ports[6]) annotation (Line(points={{614,
            -40.6},{614,-41.3},{676,-41.3},{676,112.756}}, color={0,127,255}));
    connect(southFumeHood.port_b2, outdoor1.ports[7]) annotation (Line(points={{614,-67},
            {614,-68.5},{676,-68.5},{676,111.511}},      color={0,127,255}));
    connect(atriumVentilation.port_a4, outdoor1.ports[8]) annotation (Line(points={{420,
            -144},{420,-158},{676,-158},{676,110.267}},      color={0,127,255}));
    connect(atriumVentilation.port_b3, outdoor1.ports[9]) annotation (Line(points={{420,
            -180},{420,-194},{676,-194},{676,109.022}},      color={0,127,255}));
    connect(S1_West, wes.ports[2]) annotation (Line(points={{-10,180},{-68,180},
            {-68,87.7143},{-49,87.7143}},
                                     color={0,127,255}));
    connect(N2_West, wes.ports[3]) annotation (Line(points={{-10,154},{-10,154},
            {-49,154},{-49,88.8571}},
                                 color={0,127,255}));
    connect(N1_West, wes.ports[4]) annotation (Line(points={{-10,132},{-48,132},{-48,
            90},{-49,90}}, color={0,127,255}));
    connect(S1_west, wes.ports[5]) annotation (Line(points={{-8,76},{-50,76},{
            -50,91.1429},{-49,91.1429}},
                                     color={0,127,255}));
    connect(N2_west, wes.ports[6]) annotation (Line(points={{-8,52},{-50,52},{
            -50,92.2857},{-49,92.2857}},
                                     color={0,127,255}));
    connect(N1_west, wes.ports[7]) annotation (Line(points={{-8,24},{-50,24},{
            -50,93.4286},{-49,93.4286}},
                                     color={0,127,255}));
    connect(WesIn, wesD.ports[2]) annotation (Line(points={{-146,154},{-150,154},
            {-150,102},{-150,92},{-107,92}}, color={0,127,255}));
    connect(wesD.ports[3], WesOut) annotation (Line(points={{-107,94.6667},{
            -150,94.6667},{-150,-78}}, color={0,127,255}));
    connect(souD.ports[2], SouIn) annotation (Line(points={{137,-116},{110,-116},
            {110,-232},{84,-232}}, color={0,127,255}));
    connect(souD.ports[3], SouOut) annotation (Line(points={{137,-113.333},{130,
            -113.333},{130,-234},{156,-234}}, color={0,127,255}));
    connect(EasOut, easD.ports[2]) annotation (Line(points={{394,132},{406,132},
            {406,106},{335,106}}, color={0,127,255}));
    connect(EasIn, easD.ports[3]) annotation (Line(points={{394,156},{406,156},
            {406,108.667},{335,108.667}}, color={0,127,255}));
    connect(wes.surf_conBou[1], TSoil.port) annotation (Line(points={{-28,84},{
            -28,84},{-28,-166},{-142,-166}}, color={191,0,0}));
    connect(wesD.surf_conBou[1], TSoil.port) annotation (Line(points={{-86,85.5},
            {-86,85.5},{-86,-166},{-142,-166}}, color={191,0,0}));
    connect(sou.surf_conBou[3], TSoil.port) annotation (Line(points={{158,
            -45.3333},{-86,-45.3333},{-86,-166},{-142,-166}}, color={191,0,0}));
    connect(TSoil.port, souD.surf_conBou[3]) annotation (Line(points={{-142,
            -166},{158,-166},{158,-121.75}}, color={191,0,0}));
    connect(Atri.surf_conBou[1], TSoil.port) annotation (Line(points={{158,96},
            {158,96},{158,-166},{-142,-166}}, color={191,0,0}));
    connect(eas.surf_conBou[1], TSoil.port) annotation (Line(points={{286,94},{
            286,94},{286,-166},{-142,-166}}, color={191,0,0}));
    connect(easD.surf_conBou[1], TSoil.port) annotation (Line(points={{356,99.5},
            {356,99.5},{356,-166},{-142,-166}}, color={191,0,0}));
    connect(S2_South, sou.ports[3]) annotation (Line(points={{60,-52},{100,-52},
            {100,-40.6667},{137,-40.6667}}, color={0,127,255}));
    connect(S1_South, sou.ports[4]) annotation (Line(points={{60,-76},{100,-76},
            {100,-39.3333},{137,-39.3333}}, color={0,127,255}));
    connect(S2_south, sou.ports[5]) annotation (Line(points={{26,-52},{82,-52},
            {82,-38},{137,-38}}, color={0,127,255}));
    connect(S1_south, sou.ports[6]) annotation (Line(points={{28,-78},{82,-78},
            {82,-36.6667},{137,-36.6667}}, color={0,127,255}));
    connect(N1_Eas, eas.ports[3]) annotation (Line(points={{266,150},{266,150},
            {266,98},{265,98}}, color={0,127,255}));
    connect(N2_Eas, eas.ports[4]) annotation (Line(points={{266,178},{266,98.8},
            {265,98.8}}, color={0,127,255}));
    connect(S1_Eas, eas.ports[5]) annotation (Line(points={{264,198},{265,198},
            {265,99.6}}, color={0,127,255}));
    connect(S2_Eas, eas.ports[6]) annotation (Line(points={{264,220},{265,220},
            {265,100.4}}, color={0,127,255}));
    connect(N1_eas, eas.ports[7]) annotation (Line(points={{234,150},{250,150},
            {250,101.2},{265,101.2}}, color={0,127,255}));
    connect(N2_eas, eas.ports[8]) annotation (Line(points={{234,178},{250,178},
            {250,102},{265,102}}, color={0,127,255}));
    connect(S1_eas, eas.ports[9]) annotation (Line(points={{232,198},{250,198},
            {250,102.8},{265,102.8}}, color={0,127,255}));
    connect(S2_eas, eas.ports[10]) annotation (Line(points={{230,220},{248,220},
            {248,103.6},{265,103.6}}, color={0,127,255}));
    connect(wes.heaPorAir, interiorWall.port_a) annotation (Line(points={{-35,
            100},{-4,100},{-4,103.832},{24,103.832}}, color={191,0,0}));
    connect(interiorWall.opa_a, wes.heaPorAir) annotation (Line(points={{24,
            118.88},{-6,118.88},{-6,100},{-35,100}}, color={191,0,0}));
    connect(interiorWall.opa_b, Atri.heaPorAir) annotation (Line(points={{56.1067,
            118.88},{103.053,118.88},{103.053,112},{151,112}},         color={
            191,0,0}));
    connect(interiorWall.port_b, Atri.heaPorAir) annotation (Line(points={{56,
            103.832},{104,103.832},{104,112},{151,112}}, color={191,0,0}));
    connect(NoGainOrShade.y, interiorWall.uSha) annotation (Line(points={{31,
            154},{30,154},{30,117.36},{28.48,117.36}}, color={0,0,127}));
    connect(Atri.heaPorAir, interiorWall1.port_b) annotation (Line(points={{151,
            112},{176,112},{176,117.832},{202,117.832}}, color={191,0,0}));
    connect(Atri.heaPorAir, interiorWall1.opa_b) annotation (Line(points={{151,112},
            {176,112},{176,132.88},{201.893,132.88}},      color={191,0,0}));
    connect(interiorWall1.opa_a, eas.heaPorAir) annotation (Line(points={{234,
            132.88},{256,132.88},{256,110},{279,110}}, color={191,0,0}));
    connect(interiorWall1.port_a, eas.heaPorAir) annotation (Line(points={{234,
            117.832},{256,117.832},{256,110},{279,110}}, color={191,0,0}));
    connect(NoGainOrShade.y, interiorWall1.uSha) annotation (Line(points={{31,
            154},{230,154},{230,131.36},{229.52,131.36}}, color={0,0,127}));
    connect(interiorWall2.port_a, sou.heaPorAir) annotation (Line(points={{
            112.832,17},{112.832,-6.5},{151,-6.5},{151,-30}}, color={191,0,0}));
    connect(interiorWall2.opa_a, sou.heaPorAir) annotation (Line(points={{
            127.88,17},{127.88,-6.5},{151,-6.5},{151,-30}}, color={191,0,0}));
    connect(interiorWall2.port_b, Atri.heaPorAir) annotation (Line(points={{
            112.832,49},{112.832,80.5},{151,80.5},{151,112}}, color={191,0,0}));
    connect(interiorWall2.opa_b, Atri.heaPorAir) annotation (Line(points={{127.88,
            49.1067},{127.88,80.5533},{151,80.5533},{151,112}},        color={
            191,0,0}));
    connect(NoGainOrShade.y, interiorWall2.uSha) annotation (Line(points={{31,
            154},{78,154},{78,21.48},{126.36,21.48}}, color={0,0,127}));
    annotation (Icon(coordinateSystem(preserveAspectRatio=false, extent={{-180,-180},
              {180,180}}), graphics={
          Rectangle(
            extent={{-178,178},{-118,-100}},
            lineColor={28,108,200},
            fillColor={175,175,175},
            fillPattern=FillPattern.Solid),
          Rectangle(
            extent={{-118,178},{-58,-100}},
            lineColor={28,108,200},
            fillColor={175,175,175},
            fillPattern=FillPattern.Solid),
          Rectangle(
            extent={{120,180},{180,-98}},
            lineColor={28,108,200},
            fillColor={175,175,175},
            fillPattern=FillPattern.Solid),
          Rectangle(
            extent={{58,180},{118,-98}},
            lineColor={28,108,200},
            fillColor={175,175,175},
            fillPattern=FillPattern.Solid),
          Rectangle(
            extent={{-20.5,179.5},{20.5,-179.5}},
            lineColor={28,108,200},
            fillColor={175,175,175},
            fillPattern=FillPattern.Solid,
            origin={0.5,-160.5},
            rotation=90),
          Rectangle(
            extent={{-20.5,179.5},{20.5,-179.5}},
            lineColor={28,108,200},
            fillColor={175,175,175},
            fillPattern=FillPattern.Solid,
            origin={0.5,-118.5},
            rotation=90),
          Rectangle(
            extent={{-58,178},{58,-98}},
            lineColor={28,108,200},
            fillColor={170,255,255},
            fillPattern=FillPattern.Solid)}),                      Diagram(
          coordinateSystem(preserveAspectRatio=false, extent={{-180,-180},{180,180}})));
  end HeliosEnvelope;

  record Ventel
      extends Modelica.Icons.Record;
   parameter Modelica.SIunits.TransmissionCoefficient tauSol_a=0.50
      "Solar transmissivity of shade surface a (surface that faces the outside or the room)";
   parameter Modelica.SIunits.TransmissionCoefficient tauSol_b=0.50
      "Solar transmissivity of shade surface b (surface that faces the glass)";
   parameter Modelica.SIunits.ReflectionCoefficient rhoSol_a=0.32
      "Solar reflection coefficient of shade surface a (surface that faces the outside or the room)";
   parameter Modelica.SIunits.ReflectionCoefficient rhoSol_b=0.32
      "Solar reflection coefficient of shade surface b (surface that faces the glass)";
   parameter Modelica.SIunits.Emissivity absIR_a=0.62
      "Infrared absorptivity of surface a (surface that faces the outside or the room)";
   parameter Modelica.SIunits.Emissivity absIR_b=0.62
      "Infrared absorptivity of surface b (surface that faces the glass)";
   parameter Modelica.SIunits.TransmissionCoefficient tauIR_a=0
      "Infrared transmissivity of surface a (surface that faces the outside or the room)";
   parameter Modelica.SIunits.TransmissionCoefficient tauIR_b=0
      "Infrared transmissivity of surface b (surface that faces the glass)";

    annotation (
      defaultComponentPrefixes="parameter",
      defaultComponentName="datSha",
      Documentation(info="<html>
Records that implements thermophysical properties for window shades.
</html>",
  revisions="<html>
<ul>
<li>
Sep. 3 2010, by Michael Wetter, Wangda Zuo:<br/>
First implementation.
</li>
</ul>
</html>"));
  end Ventel;

  record TexInov
       extends Modelica.Icons.Record;
   parameter Modelica.SIunits.TransmissionCoefficient tauSol_a=0.15
      "Solar transmissivity of shade surface a (surface that faces the outside or the room)";
   parameter Modelica.SIunits.TransmissionCoefficient tauSol_b=0.15
      "Solar transmissivity of shade surface b (surface that faces the glass)";
   parameter Modelica.SIunits.ReflectionCoefficient rhoSol_a=0.4
      "Solar reflection coefficient of shade surface a (surface that faces the outside or the room)";
   parameter Modelica.SIunits.ReflectionCoefficient rhoSol_b=0.4
      "Solar reflection coefficient of shade surface b (surface that faces the glass)";
   parameter Modelica.SIunits.Emissivity absIR_a=0.45
      "Infrared absorptivity of surface a (surface that faces the outside or the room)";
   parameter Modelica.SIunits.Emissivity absIR_b=0.45
      "Infrared absorptivity of surface b (surface that faces the glass)";
   parameter Modelica.SIunits.TransmissionCoefficient tauIR_a=0.1
      "Infrared transmissivity of surface a (surface that faces the outside or the room)";
   parameter Modelica.SIunits.TransmissionCoefficient tauIR_b=0.1
      "Infrared transmissivity of surface b (surface that faces the glass)";

    annotation (
      defaultComponentPrefixes="parameter",
      defaultComponentName="datSha",
      Documentation(info="<html>
Records that implements thermophysical properties for window shades.
</html>",
  revisions="<html>
<ul>
<li>
Sep. 3 2010, by Michael Wetter, Wangda Zuo:<br/>
First implementation.
</li>
</ul>
</html>"));
  end TexInov;

  model ConV2VSun
    "Command control for isolation valve of the intersaisonal tank"

    Modelica.Blocks.Interfaces.RealInput T7
      "temperature de retour vers le ballon intersaisonnier"
      annotation (Placement(transformation(extent={{-120,30},{-80,70}})));
    Modelica.Blocks.Interfaces.RealInput Tbb
      "Temperature basse du ballon intersaisonier"
      annotation (Placement(transformation(extent={{-120,-70},{-80,-30}})));
  public
    Modelica.Blocks.Interfaces.RealOutput y
      annotation (Placement(transformation(extent={{100,-10},{120,10}})));
    Modelica.Blocks.Sources.Constant V3V3III_I(k=0)
      "Temeprature de bllon inferieurà temperature de retour donc on renvoi le retour vers la chaudière"
      annotation (Placement(transformation(extent={{-26,-80},{-6,-60}})));
    Modelica.Blocks.Logical.Switch switch2
      annotation (Placement(transformation(extent={{48,-10},{68,10}})));
    Modelica.Blocks.Interfaces.RealInput TConsigne
      "Groupement des temperatures de consignes pour la modulation de la vanne V3V3"
      annotation (Placement(transformation(
          extent={{-17,-17},{17,17}},
          rotation=0,
          origin={-101,-89})));
    Modelica.Blocks.Logical.Switch switch1
      annotation (Placement(transformation(extent={{32,26},{52,46}})));
    Modelica.Blocks.Interfaces.RealInput T8
      "Temperature de départ du ballon intersaisonnier vers le circuit EC"
      annotation (Placement(transformation(extent={{-120,-38},{-80,2}})));
    FBM.Components.HystReference hystReference(DHigh=0.5, DLow=0.5)
      annotation (Placement(transformation(extent={{-84,-80},{-64,-60}})));
    Modelica.Blocks.Logical.Not not1
      annotation (Placement(transformation(extent={{-60,-80},{-40,-60}})));
    FBM.Components.HystReference hystReference1(DLow=0.5, DHigh=0.5)
      annotation (Placement(transformation(extent={{-86,8},{-66,28}})));
    Modelica.Blocks.Logical.Not not2
      annotation (Placement(transformation(extent={{-58,8},{-38,28}})));
    Buildings.Controls.Continuous.LimPID conV2VSun(
    Td=60,
    controllerType=Modelica.Blocks.Types.SimpleController.PI,
    Ti=120,
      k=0.1)
            annotation (Placement(transformation(extent={{-32,-18},{-12,2}})));
    Modelica.Blocks.Sources.Constant V3V3III_I1(k=1)
      "Temeprature de bllon inferieurà temperature de retour donc on renvoi le retour vers la chaudière"
      annotation (Placement(transformation(extent={{-24,-48},{-4,-28}})));
    Modelica.Blocks.Logical.Not not3
      annotation (Placement(transformation(extent={{-22,26},{-2,46}})));
  equation
    connect(switch2.y, y)
      annotation (Line(points={{69,0},{78,0},{110,0}}, color={0,0,127}));
    connect(switch1.y, switch2.u1) annotation (Line(points={{53,36},{38,36},{38,
            8},{46,8}},    color={0,0,127}));
    connect(hystReference.y, not1.u) annotation (Line(points={{-63,-70},{-63,
            -70},{-62,-70}}, color={255,0,255}));
    connect(TConsigne, hystReference.u) annotation (Line(points={{-101,-89},{
            -101,-79.5},{-86,-79.5},{-86,-70}}, color={0,0,127}));
    connect(Tbb, hystReference.Ref) annotation (Line(points={{-100,-50},{-94,
            -50},{-94,-76.2},{-86.2,-76.2}}, color={0,0,127}));
    connect(hystReference1.y, not2.u) annotation (Line(points={{-65,18},{
            -62.5,18},{-60,18}}, color={255,0,255}));
    connect(T7, hystReference1.u) annotation (Line(points={{-100,50},{-100,34},
            {-88,34},{-88,18}}, color={0,0,127}));
    connect(Tbb, hystReference1.Ref) annotation (Line(points={{-100,-50},{-96,
            -50},{-96,11.8},{-88.2,11.8}}, color={0,0,127}));
    connect(V3V3III_I.y, switch2.u3) annotation (Line(points={{-5,-70},{20,
            -70},{20,-8},{46,-8}}, color={0,0,127}));
  connect(T8, conV2VSun.u_m) annotation (Line(points={{-100,-18},{-62,-18},{-62,
          -20},{-22,-20}}, color={0,0,127}));
  connect(TConsigne, conV2VSun.u_s) annotation (Line(points={{-101,-89},{-101,
          -88.5},{-34,-88.5},{-34,-8}}, color={0,0,127}));
  connect(conV2VSun.y, switch1.u1) annotation (Line(points={{-11,-8},{14,-8},{
            14,44},{30,44}},color={0,0,127}));
    connect(switch1.u3, V3V3III_I1.y) annotation (Line(points={{30,28},{4,28},{
            4,-38},{-3,-38}},  color={0,0,127}));
    connect(not2.y, switch2.u2) annotation (Line(points={{-37,18},{4,18},{4,0},
            {46,0}}, color={255,0,255}));
    connect(not1.y, not3.u) annotation (Line(points={{-39,-70},{-28,-70},{-28,
            36},{-24,36}}, color={255,0,255}));
    connect(not3.y, switch1.u2)
      annotation (Line(points={{-1,36},{30,36}}, color={255,0,255}));
    annotation (Icon(coordinateSystem(preserveAspectRatio=false), graphics={
            Rectangle(
            extent={{-100,100},{100,-100}},
            lineColor={0,0,127},
            pattern=LinePattern.Dash,
            fillColor={175,175,175},
            fillPattern=FillPattern.Solid), Text(
            extent={{-52,38},{50,-24}},
            lineColor={0,0,127},
            pattern=LinePattern.Dash,
            fillColor={175,175,175},
            fillPattern=FillPattern.Solid,
            textString="Con V2V Solaire")}),
                                      Diagram(coordinateSystem(
            preserveAspectRatio=false)),
  Documentation(info="<html>
<p> See the ControlerGenerale Documentation for the behavior of the hot water network </p> 
       
        
        </html>"));
  end ConV2VSun;

  model ConV2VBoi "Command control for isolation valve of the boiler"

    Modelica.Blocks.Interfaces.RealInput T7
      "temperature de retour vers le ballon intersaisonnier"
      annotation (Placement(transformation(extent={{-120,44},{-80,84}})));
    Modelica.Blocks.Interfaces.RealInput Tbb
      "Temperature basse du ballon intersaisonier"
      annotation (Placement(transformation(extent={{-120,-14},{-80,26}})));
    Modelica.Blocks.Interfaces.RealInput TConsigne
      "Groupement des temperatures de consignes pour la modulation de la vanne V3V3"
      annotation (Placement(transformation(
          extent={{-17,-17},{17,17}},
          rotation=0,
          origin={-101,-41})));
    Modelica.Blocks.Logical.Switch switch2
      annotation (Placement(transformation(extent={{50,14},{70,34}})));
    Modelica.Blocks.Logical.Switch switch1
      annotation (Placement(transformation(extent={{24,-28},{44,-8}})));
  public
    Modelica.Blocks.Interfaces.RealOutput y
      annotation (Placement(transformation(extent={{100,-10},{120,10}})));
    Modelica.Blocks.Sources.Constant V3V3III_I2(k=0)
      "Temeprature de bllon inferieurà temperature de retour donc on renvoi le retour vers la chaudière"
      annotation (Placement(transformation(extent={{-20,-18},{0,2}})));
    FBM.Components.HystReference hystReference(DLow=0.5, DHigh=0.5)
      annotation (Placement(transformation(extent={{-68,28},{-48,48}})));
    Modelica.Blocks.Logical.Not not1
      annotation (Placement(transformation(extent={{-40,28},{-20,48}})));
    FBM.Components.HystReference hystReference1(DHigh=0.5, DLow=0.5)
      annotation (Placement(transformation(extent={{-72,-44},{-52,-24}})));
    Modelica.Blocks.Logical.Not not2
      annotation (Placement(transformation(extent={{-44,-44},{-24,-24}})));
    Modelica.Blocks.Math.RealToBoolean realToBoolean(threshold=0.01)
      annotation (Placement(transformation(extent={{74,-54},{94,-34}})));
    Modelica.Blocks.Interfaces.BooleanOutput y1
      annotation (Placement(transformation(extent={{100,-68},{120,-48}})));
    Buildings.Controls.Continuous.LimPID conV3V(
    Td=60,
    controllerType=Modelica.Blocks.Types.SimpleController.PI,
    Ti=120,
      k=0.05)
    annotation (Placement(transformation(extent={{-20,-74},{0,-54}})));
    Modelica.Blocks.Interfaces.RealInput T8
      "Temperature de départ du ballon intersaisonnier vers le circuit EC"
      annotation (Placement(transformation(extent={{-120,-104},{-80,-64}})));
  equation
    connect(switch2.y, y) annotation (Line(points={{71,24},{80,24},{80,0},{
            110,0}},
          color={0,0,127}));
    connect(switch1.y, switch2.u1) annotation (Line(points={{45,-18},{48,-18},
            {48,32}},     color={0,0,127}));
    connect(hystReference.y, not1.u)
      annotation (Line(points={{-47,38},{-42,38}}, color={255,0,255}));
    connect(T7, hystReference.u) annotation (Line(points={{-100,64},{-86,64},
            {-86,38},{-70,38}}, color={0,0,127}));
    connect(Tbb, hystReference.Ref) annotation (Line(points={{-100,6},{-86,6},
            {-86,31.8},{-70.2,31.8}}, color={0,0,127}));
    connect(not1.y, switch2.u2) annotation (Line(points={{-19,38},{26,38},{26,
            24},{48,24}}, color={255,0,255}));
    connect(hystReference1.y, not2.u) annotation (Line(points={{-51,-34},{-48,
            -34},{-46,-34}}, color={255,0,255}));
    connect(TConsigne, hystReference1.u) annotation (Line(points={{-101,-41},
            {-88.5,-41},{-88.5,-34},{-74,-34}}, color={0,0,127}));
    connect(Tbb, hystReference1.Ref) annotation (Line(points={{-100,6},{-88,6},
            {-88,-40.2},{-74.2,-40.2}}, color={0,0,127}));
    connect(V3V3III_I2.y, switch1.u1) annotation (Line(points={{1,-8},{6,-8},
            {6,-10},{22,-10}}, color={0,0,127}));
    connect(not2.y, switch1.u2) annotation (Line(points={{-23,-34},{0,-34},{0,
            -18},{22,-18}}, color={255,0,255}));
    connect(y1,realToBoolean. y) annotation (Line(points={{110,-58},{98,-58},{
            98,-44},{95,-44}},  color={255,0,255}));
    connect(switch2.y, realToBoolean.u)
      annotation (Line(points={{71,24},{72,24},{72,-44}}, color={0,0,127}));
    connect(conV3V.y, switch1.u3) annotation (Line(points={{1,-64},{12,-64},{12,
            -26},{22,-26}}, color={0,0,127}));
    connect(TConsigne, conV3V.u_s) annotation (Line(points={{-101,-41},{-87.5,
            -41},{-87.5,-64},{-22,-64}}, color={0,0,127}));
    connect(conV3V.u_m, T8) annotation (Line(points={{-10,-76},{-10,-76},{-10,
            -84},{-100,-84}}, color={0,0,127}));
    connect(conV3V.y, switch2.u3) annotation (Line(points={{1,-64},{12,-64},{12,
            16},{48,16}}, color={0,0,127}));
    annotation (Icon(coordinateSystem(preserveAspectRatio=false), graphics={
            Rectangle(
            extent={{-100,100},{100,-100}},
            lineColor={0,0,127},
            pattern=LinePattern.Dash,
            fillColor={175,175,175},
            fillPattern=FillPattern.Solid), Text(
            extent={{-52,38},{50,-24}},
            lineColor={0,0,127},
            pattern=LinePattern.Dash,
            fillColor={175,175,175},
            fillPattern=FillPattern.Solid,
            textString="Con V2V Boiler")}),
                                      Diagram(coordinateSystem(
            preserveAspectRatio=false)),
  Documentation(info="<html>
<p> See the ControlerGenerale Documentation for the behavior of the hot water network </p> 
       
        
        </html>"));
  end ConV2VBoi;

  model ControlerGenerale

    parameter Integer n(min=1) = 3 "Number of heating curve";
    FBM.Examples.BaseClasses.ConV3V2 conV3V2_1(n=n)
      annotation (Placement(transformation(extent={{-60,60},{-20,100}})));
    FBM.Examples.BaseClasses.ConV3V3 conV3V3_1
      annotation (Placement(transformation(extent={{-60,0},{-20,40}})));
    Modelica.Blocks.Interfaces.RealInput T7
      "temperature de retour vers le ballon intersaisonnier"
      annotation (Placement(transformation(extent={{-132,58},{-90,100}}),
          iconTransformation(extent={{-132,58},{-90,100}})));
    Modelica.Blocks.Interfaces.RealInput T8
      "Temperature de départ du ballon intersaisonnier vers le circuit EC"
      annotation (Placement(transformation(extent={{-130,-60},{-90,-20}}),
          iconTransformation(extent={{-130,-60},{-90,-20}})));
    Modelica.Blocks.Interfaces.RealInput Tbb
      "Temperature basse du ballon intersaisonier"
      annotation (Placement(transformation(extent={{-130,0},{-90,40}}),
          iconTransformation(extent={{-130,0},{-90,40}})));
    Modelica.Blocks.Interfaces.RealInput[n] TConsigne
      "Groupement des temperatures de consignes pour la modulation de la vanne V3V2"
      annotation (Placement(transformation(
          extent={{-18,-18},{18,18}},
          rotation=0,
          origin={-160,-90}), iconTransformation(extent={{-134,-108},{-98,-72}})));
  public
    Modelica.Blocks.Interfaces.RealOutput V3V2 annotation (Placement(
          transformation(extent={{140,64},{172,96}}), iconTransformation(extent={{100,14},
              {120,34}})));
  public
    Modelica.Blocks.Interfaces.RealOutput V3V3 annotation (Placement(
          transformation(extent={{140,4},{172,36}}), iconTransformation(extent={{100,74},
              {120,94}})));
    ConV2VBoi conV2VBoi
      annotation (Placement(transformation(extent={{-58,-58},{-18,-22}})));
    Modelica.Blocks.Interfaces.BooleanOutput y1
      annotation (Placement(transformation(extent={{-17,-17},{17,17}},
          rotation=270,
          origin={41,-117})));
    ConV2VSun conV2VSun
      annotation (Placement(transformation(extent={{-56,-96},{-18,-66}})));
  public
    Modelica.Blocks.Interfaces.RealOutput SUN annotation (Placement(
          transformation(extent={{140,-96},{172,-64}}), iconTransformation(
            extent={{100,-80},{120,-60}})));
  public
    Modelica.Blocks.Interfaces.RealOutput BOI annotation (Placement(
          transformation(extent={{140,-42},{172,-10}}), iconTransformation(
            extent={{100,-36},{120,-16}})));
  equation
    connect(TConsigne, conV3V2_1.TConsigne) annotation (Line(points={{-160,-90},{-112,
            -90},{-112,66.2},{-60.2,66.2}}, color={0,0,127}));
    connect(conV3V2_1.TConsigneMax, conV3V3_1.TConsigne) annotation (Line(points={{-17.4,
            63},{-17.4,62},{2,62},{2,-10},{-60.2,-10},{-60.2,6.2}},       color={0,
            0,127}));
    connect(conV3V3_1.y, V3V3)
      annotation (Line(points={{-18.4,20},{156,20}},          color={0,0,127}));
    connect(conV3V2_1.y, V3V2)
      annotation (Line(points={{-18.4,80},{156,80}},          color={0,0,127}));
    connect(T7, conV3V2_1.T7) annotation (Line(points={{-111,79},{-104,79},{
            -104,94},{-60,94}},
                       color={0,0,127}));
    connect(T7, conV3V3_1.T7) annotation (Line(points={{-111,79},{-104,79},{
            -104,34},{-60,34}},
                       color={0,0,127}));
    connect(Tbb, conV3V2_1.Tbb) annotation (Line(points={{-110,20},{-126,20},{
            -126,82.8},{-60,82.8}},
                               color={0,0,127}));
    connect(Tbb, conV3V3_1.Tbb) annotation (Line(points={{-110,20},{-126,20},{
            -126,22},{-94,22},{-94,22.4},{-60,22.4}},
                                                 color={0,0,127}));
    connect(T8, conV3V2_1.T8) annotation (Line(points={{-110,-40},{-120,-40},{
            -120,73.2},{-60,73.2}},
                               color={0,0,127}));
    connect(T8, conV3V3_1.T8) annotation (Line(points={{-110,-40},{-121,-40},{
            -121,13.2},{-60,13.2}},
                               color={0,0,127}));
    connect(T7, conV2VBoi.T7) annotation (Line(points={{-111,79},{-111,5.5},{
            -58,5.5},{-58,-28.48}}, color={0,0,127}));
    connect(Tbb, conV2VBoi.Tbb) annotation (Line(points={{-110,20},{-86,20},{
            -86,-38.92},{-58,-38.92}}, color={0,0,127}));
    connect(conV3V2_1.TConsigneMax, conV2VBoi.TConsigne) annotation (Line(
          points={{-17.4,63},{-17.4,-12.5},{-58.2,-12.5},{-58.2,-47.38}}, color=
           {0,0,127}));
    connect(conV2VBoi.y1, y1) annotation (Line(points={{-16,-50.44},{-16,-50.01},
            {41,-50.01},{41,-117}}, color={255,0,255}));
    connect(T7, conV2VSun.T7) annotation (Line(points={{-111,79},{-111,3.5},{
            -56,3.5},{-56,-73.5}}, color={0,0,127}));
    connect(T8, conV2VSun.T8) annotation (Line(points={{-110,-40},{-84,-40},{
            -84,-83.7},{-56,-83.7}}, color={0,0,127}));
    connect(Tbb, conV2VSun.Tbb) annotation (Line(points={{-110,20},{-84,20},{
            -84,-88.5},{-56,-88.5}}, color={0,0,127}));
    connect(conV3V2_1.TConsigneMax, conV2VSun.TConsigne) annotation (Line(
          points={{-17.4,63},{-17.4,-15.5},{-56.19,-15.5},{-56.19,-94.35}},
          color={0,0,127}));
    connect(conV2VSun.y, SUN) annotation (Line(points={{-16.1,-81},{61.95,-81},
            {61.95,-80},{156,-80}}, color={0,0,127}));
    connect(conV2VBoi.y, BOI) annotation (Line(points={{-16,-40},{62,-40},{62,
            -26},{156,-26}}, color={0,0,127}));
    connect(T8, conV2VBoi.T8) annotation (Line(points={{-110,-40},{-82,-40},{
            -82,-55.12},{-58,-55.12}}, color={0,0,127}));
    annotation (Icon(coordinateSystem(preserveAspectRatio=false), graphics={
            Rectangle(
            extent={{-100,100},{100,-100}},
            lineColor={0,0,127},
            pattern=LinePattern.Dash,
            fillColor={175,175,175},
            fillPattern=FillPattern.Solid), Text(
            extent={{-92,60},{98,-60}},
            lineColor={0,0,127},
            pattern=LinePattern.Dash,
            fillColor={175,175,175},
            fillPattern=FillPattern.Solid,
            textString="Generale controler")}),
                                      Diagram(coordinateSystem(
            preserveAspectRatio=false)),
  Documentation(info="<html>
<p> Le controleur général permet à la fois de réguler la température de départ du réseau secondaire et de valoriser l'énergie contenu dans le ballon
intersaisonnier. Trois modes de fonctionnement sont possibles selon la température du ballon intersaisonnier.</p>
<p> Si la température du ballon est supérieur
à la température de consigne maximale des différents réseaux secondaires alors seul le ballon intersaisonnier alimente le réseau secondaire.La régulation
de la température de départ se fait par recirculation d'une partie du retour grâce à la vanne V3V_2. La vanne V3V_3 et en mode I-III, les vannes d'isolement du solaire sont ouvertes
et celles des chaudières sont fermées</p> 
</p>
<p align=\"center\">
<img alt=\"image\" src=\"modelica://Buildings/Resources/Images/Comis/HotTank.png\" border=\"1\"/>
</p> 
<p> Si la température du ballon est intermédiaire (entre le température de retour et de départ de consigne maximale), le retour repasse par le ballon 
intersaisonnier pour préchauffer l'eau et limiter les apports depuis la chaudière. En conséquence V3V_2 est en I-III et V3V_3 est en régulation (une partie
de l'eau préchauffer est retourné vers les chaudières et passe par le ballon chaudière maintenu à une température constante de 80°C pour faire l'appoint)<br>
Les vannes d'isolement sont toutes ouvertes
</p>
<p align=\"center\">
<img alt=\"image\" src=\"modelica://Buildings/Resources/Images/Comis/Intermediaire.png\" border=\"1\"/>
</p>       
<p> Si la température de ballon est plus froide que la température de retour du circuit secondaire, on contourne le ballon intersaisonnier en fermant V3V_2
(I-II) et V3V_3 en régulation. Le retour passe en partie par le ballon de la chaudière maintenu autour de 80 °C. 
La réguataion de la température autour de la consigne maximum en faisant recirculer une partie du retour.
Les vannes d'isolement du solaire sont fermées et celles des chaidères sont ouvertes</p>    
<p align=\"center\">
<img alt=\"image\" src=\"modelica://Buildings/Resources/Images/Comis/Cold.png\" border=\"1\"/>
</p>     
        </html>"));
  end ControlerGenerale;

  model Building_Test
    Buildings.HeatTransfer.Sources.PrescribedTemperature TWest
      annotation (Placement(transformation(extent={{68,16},{82,30}})));
    Buildings.HeatTransfer.Sources.PrescribedTemperature TSud
      annotation (Placement(transformation(extent={{74,40},{86,52}})));
    Modelica.Blocks.Routing.Multiplex3 multiplex3_2
      annotation (Placement(transformation(extent={{24,36},{36,48}})));
    Modelica.Blocks.Sources.TimeTable West(table=[0,16.76; 600,16.76; 1200,
          16.76; 1800,16.76; 2400,16.76; 3000,16.76; 3600,16.76; 4200,16.73;
          4800,16.74; 5400,16.72; 6000,16.72; 6600,16.72; 7200,16.72; 7800,
          16.72; 8400,16.69; 9000,16.69; 9600,16.68; 10200,16.68; 10800,16.67;
          11400,16.65; 12000,16.64; 12600,16.64; 13200,16.64; 13800,16.64;
          14400,16.64; 15000,16.64; 15600,16.64; 16200,16.63; 16800,16.6; 17400,
          16.6; 18000,16.6; 18600,16.6; 19200,16.6; 19800,16.6; 20400,16.6;
          21000,16.6; 21600,16.6; 22200,16.6; 22800,16.6; 23400,16.59; 24000,
          16.56; 24600,16.56; 25200,16.56; 25800,16.57; 26400,16.56; 27000,
          16.57; 27600,16.55; 28200,16.52; 28800,16.53; 29400,16.52; 30000,
          16.53; 30600,16.52; 31200,16.53; 31800,16.52; 32400,16.52; 33000,
          16.52; 33600,16.52; 34200,16.53; 34800,16.52; 35400,16.58; 36000,
          16.53; 36600,16.56; 37200,16.56; 37800,16.58; 38400,16.58; 39000,16.6;
          39600,16.6; 40200,16.6; 40800,16.6; 41400,16.64; 42000,16.64; 42600,
          16.64; 43200,16.68; 43800,16.72; 44400,16.76; 45000,16.84; 45600,
          16.88; 46200,16.96; 46800,17.01; 47400,17.32; 48000,17.05; 48600,
          17.06; 49200,17.09; 49800,17.13; 50400,17.17; 51000,17.17; 51600,
          17.17; 52200,17.2; 52800,17.21; 53400,17.25; 54000,17.21; 54600,17.21;
          55200,17.21; 55800,17.17; 56400,17.13; 57000,17.09; 57600,17.08;
          58200,17.05; 58800,17.01; 59400,16.97; 60000,16.95; 60600,16.92;
          61200,16.92; 61800,16.9; 62400,16.85; 63000,16.86; 63600,16.8; 64200,
          16.8; 64800,16.82; 65400,16.76; 66000,16.76; 66600,16.72; 67200,16.72;
          67800,16.71; 68400,16.69; 69000,16.69; 69600,16.64; 70200,16.64;
          70800,16.6; 71400,16.6; 72000,16.6; 72600,16.56; 73200,16.56; 73800,
          16.52; 74400,16.52; 75000,16.48; 75600,16.48; 76200,16.44; 76800,
          16.44; 77400,16.44; 78000,16.41; 78600,16.44; 79200,16.4; 79800,16.36;
          80400,16.36; 81000,16.36; 81600,16.32; 82200,16.32; 82800,16.32;
          83400,16.32; 84000,16.3; 84600,16.28; 85200,16.28; 85800,16.27; 86400,
          16.24; 87000,16.24; 87600,16.24; 88200,16.24; 88800,16.24; 89400,
          16.22; 90000,16.19; 90600,16.19; 91200,16.19; 91800,16.18; 92400,
          16.16; 93000,16.15; 93600,16.15; 94200,16.15; 94800,16.15; 95400,
          16.11; 96000,16.11; 96600,16.11; 97200,16.11; 97800,16.11; 98400,
          16.11; 99000,16.11; 99600,16.11; 100200,16.11; 100800,16.07; 101400,
          16.07; 102000,16.07; 102600,16.07; 103200,16.07; 103800,16.07; 104400,
          16.06; 105000,16.03; 105600,16.03; 106200,16.03; 106800,16.03; 107400,
          16.03; 108000,16.02; 108600,15.99; 109200,15.99; 109800,15.99; 110400,
          15.99; 111000,15.99; 111600,15.99; 112200,15.99; 112800,15.95; 113400,
          15.95; 114000,15.95; 114600,15.95; 115200,15.95; 115800,15.95; 116400,
          15.95; 117000,15.95; 117600,15.95; 118200,15.94; 118800,15.96; 119400,
          15.91; 120000,15.92; 120600,15.91; 121200,15.91; 121800,15.91; 122400,
          15.91; 123000,15.91; 123600,16.21; 124200,15.91; 124800,15.91; 125400,
          15.92; 126000,15.94; 126600,15.94; 127200,15.95; 127800,15.95; 128400,
          15.95; 129000,15.95; 129600,15.95; 130200,15.95; 130800,15.95; 131400,
          15.95; 132000,15.95; 132600,15.95; 133200,15.95; 133800,15.95; 134400,
          15.96; 135000,15.96; 135600,15.96; 136200,15.95; 136800,15.95; 137400,
          15.94; 138000,15.91; 138600,15.92; 139200,15.91; 139800,15.91; 140400,
          15.91; 141000,15.91; 141600,15.91; 142200,15.9; 142800,15.87; 143400,
          15.87; 144000,15.87; 144600,15.87; 145200,15.87; 145800,15.87; 146400,
          15.83; 147000,15.83; 147600,15.81; 148200,15.79; 148800,15.79; 149400,
          15.79; 150000,15.79; 150600,15.78; 151200,15.75; 151800,15.75; 152400,
          15.76; 153000,15.74; 153600,15.74; 154200,15.74; 154800,15.74; 155400,
          15.74; 156000,15.74; 156600,15.74; 157200,15.74; 157800,15.74; 158400,
          15.71; 159000,15.7; 159600,15.72; 160200,15.7; 160800,15.7; 161400,
          15.72; 162000,15.66; 162600,15.66; 163200,15.66; 163800,15.66; 164400,
          15.66; 165000,15.66; 165600,15.66; 166200,15.63; 166800,15.62; 167400,
          15.62; 168000,15.62; 168600,15.62; 169200,15.62; 169800,15.62; 170400,
          15.58; 171000,15.58; 171600,15.58; 172200,15.58; 172800,15.6; 173400,
          15.55; 174000,15.58; 174600,15.58; 175200,15.54; 175800,15.54; 176400,
          15.54; 177000,15.54; 177600,15.54; 178200,15.54; 178800,15.54; 179400,
          15.53; 180000,15.5; 180600,15.5; 181200,15.51; 181800,15.5; 182400,
          15.46; 183000,15.48; 183600,15.46; 184200,15.46; 184800,15.46; 185400,
          15.46; 186000,15.46; 186600,15.46; 187200,15.46; 187800,15.46; 188400,
          15.46; 189000,15.42; 189600,15.42; 190200,15.42; 190800,15.42; 191400,
          15.42; 192000,15.42; 192600,15.42; 193200,15.39; 193800,15.39; 194400,
          15.36; 195000,15.34; 195600,15.35; 196200,15.34; 196800,15.3; 197400,
          15.3; 198000,15.3; 198600,15.3; 199200,15.3; 199800,15.28; 200400,
          15.27; 201000,15.29; 201600,15.26; 202200,15.26; 202800,15.26; 203400,
          15.26; 204000,15.25; 204600,15.22; 205200,15.22; 205800,15.22; 206400,
          15.26; 207000,15.27; 207600,15.27; 208200,15.26; 208800,15.3; 209400,
          15.3; 210000,15.31; 210600,15.3; 211200,15.35; 211800,15.34; 212400,
          15.34; 213000,15.34; 213600,15.36; 214200,15.38; 214800,15.42; 215400,
          15.46; 216000,15.46; 216600,15.46; 217200,15.5; 217800,15.5; 218400,
          15.5; 219000,15.52; 219600,15.5; 220200,15.5; 220800,15.5; 221400,
          15.5; 222000,15.5; 222600,15.51; 223200,15.47; 223800,15.47; 224400,
          15.46; 225000,15.46; 225600,15.42; 226200,15.42; 226800,15.38; 227400,
          15.38; 228000,15.34; 228600,15.34; 229200,15.34; 229800,15.34; 230400,
          15.3; 231000,15.3; 231600,15.3; 232200,15.3; 232800,15.26; 233400,
          15.26; 234000,15.26; 234600,15.22; 235200,15.22; 235800,15.22; 236400,
          15.22; 237000,15.18; 237600,15.18; 238200,15.14; 238800,15.14; 239400,
          15.14; 240000,15.14; 240600,15.13; 241200,15.1; 241800,15.1; 242400,
          15.1; 243000,15.1; 243600,15.1; 244200,15.1; 244800,15.1; 245400,15.1;
          246000,15.1; 246600,15.09; 247200,15.06; 247800,15.05; 248400,15.02;
          249000,15.02; 249600,15.01; 250200,15.01; 250800,15; 251400,14.97;
          252000,14.97; 252600,14.97; 253200,14.97; 253800,14.97; 254400,14.94;
          255000,14.93; 255600,14.93; 256200,14.92; 256800,14.89; 257400,14.9;
          258000,14.85; 258600,14.85; 259200,14.85; 259800,14.82; 260400,14.81;
          261000,14.81; 261600,14.81; 262200,14.81; 262800,14.82; 263400,14.77;
          264000,14.77; 264600,14.77; 265200,14.77; 265800,14.73; 266400,14.76;
          267000,14.73; 267600,14.73; 268200,14.73; 268800,14.73; 269400,14.73;
          270000,14.73; 270600,14.73; 271200,14.73; 271800,14.73; 272400,14.73;
          273000,14.7; 273600,14.73; 274200,14.72; 274800,14.73; 275400,14.72;
          276000,14.74; 276600,14.72; 277200,14.69; 277800,14.7; 278400,14.69;
          279000,14.69; 279600,14.69; 280200,14.69; 280800,14.69; 281400,14.69;
          282000,14.66; 282600,14.69; 283200,14.69; 283800,14.65; 284400,14.66;
          285000,14.77; 285600,14.93; 286200,15.01; 286800,15.11; 287400,15.22;
          288000,15.38; 288600,15.46; 289200,15.58; 289800,15.7; 290400,15.83;
          291000,15.91; 291600,15.99; 292200,16.12; 292800,16.24; 293400,16.28;
          294000,16.31; 294600,16.41; 295200,16.48; 295800,16.56; 296400,16.6;
          297000,16.69; 297600,16.72; 298200,16.76; 298800,16.82; 299400,16.88;
          300000,16.93; 300600,16.97; 301200,17.01; 301800,17.01; 302400,17.09;
          303000,17.08; 303600,17.09; 304200,17.13; 304800,17.17; 305400,17.21;
          306000,17.18; 306600,17.22; 307200,17.21; 307800,17.29; 308400,17.31;
          309000,17.38; 309600,17.46; 310200,17.54; 310800,17.62; 311400,17.62;
          312000,17.67; 312600,17.73; 313200,17.78; 313800,17.74; 314400,17.9;
          315000,17.9; 315600,17.9; 316200,18.02; 316800,18.06; 317400,17.94;
          318000,17.9; 318600,17.9; 319200,17.98; 319800,17.94; 320400,17.9;
          321000,17.86; 321600,17.86; 322200,17.82; 322800,17.8; 323400,17.78;
          324000,17.74; 324600,17.74; 325200,17.7; 325800,17.69; 326400,17.66;
          327000,17.62; 327600,17.58; 328200,17.58; 328800,17.62; 329400,17.62;
          330000,17.58; 330600,17.5; 331200,17.42; 331800,17.37; 332400,17.29;
          333000,17.21; 333600,17.17; 334200,17.18; 334800,17.12; 335400,17.09;
          336000,17.09; 336600,17.06; 337200,17.06; 337800,17.05; 338400,17.05;
          339000,17.01; 339600,17.01; 340200,17.02; 340800,16.98; 341400,16.97;
          342000,16.97; 342600,16.93; 343200,16.92; 343800,16.92; 344400,16.9;
          345000,16.88; 345600,16.88; 346200,16.88; 346800,16.88; 347400,16.88;
          348000,16.84; 348600,16.84; 349200,16.84; 349800,16.84; 350400,16.84;
          351000,16.81; 351600,16.81; 352200,16.82; 352800,16.84; 353400,16.84;
          354000,16.84; 354600,16.84; 355200,16.84; 355800,16.86; 356400,16.89;
          357000,16.88; 357600,16.88; 358200,16.88; 358800,16.88; 359400,16.9;
          360000,16.89; 360600,16.92; 361200,16.92; 361800,16.96; 362400,17.17;
          363000,17.42; 363600,17.54; 364200,17.71; 364800,17.84; 365400,17.94;
          366000,17.98; 366600,18.06; 367200,18.1; 367800,18.15; 368400,18.19;
          369000,18.24; 369600,18.27; 370200,18.35; 370800,18.35; 371400,18.35;
          372000,18.44; 372600,18.47; 373200,18.58; 373800,18.67; 374400,18.72;
          375000,18.79; 375600,18.84; 376200,18.92; 376800,18.96; 377400,19.03;
          378000,19.08; 378600,19.16; 379200,19.24; 379800,19.37; 380400,19.4;
          381000,19.47; 381600,19.53; 382200,19.58; 382800,19.61; 383400,19.69;
          384000,19.81; 384600,19.86; 385200,19.94; 385800,19.98; 386400,20.03;
          387000,20.02; 387600,20.1; 388200,20.14; 388800,20.16; 389400,20.23;
          390000,20.29; 390600,20.34; 391200,20.34; 391800,20.42; 392400,20.52;
          393000,20.54; 393600,20.54; 394200,20.51; 394800,20.51; 395400,20.5;
          396000,20.51; 396600,20.51; 397200,20.51; 397800,20.51; 398400,20.47;
          399000,20.5; 399600,20.52; 400200,20.58; 400800,20.59; 401400,20.63;
          402000,20.68; 402600,20.67; 403200,20.67; 403800,20.67; 404400,20.68;
          405000,20.75; 405600,20.8; 406200,20.83; 406800,20.83; 407400,20.83;
          408000,20.87; 408600,20.86; 409200,20.87; 409800,20.86; 410400,20.83;
          411000,20.83; 411600,20.92; 412200,20.87; 412800,20.88; 413400,20.87;
          414000,20.83; 414600,20.83; 415200,20.8; 415800,20.75; 416400,20.62;
          417000,20.49; 417600,20.34; 418200,20.26; 418800,20.14; 419400,20.02;
          420000,19.86; 420600,19.78; 421200,19.65; 421800,19.57; 422400,19.53;
          423000,19.41; 423600,19.34; 424200,19.28; 424800,19.2; 425400,19.16;
          426000,19.12; 426600,19.05; 427200,19; 427800,18.92; 428400,18.88;
          429000,18.88; 429600,18.84; 430200,18.8; 430800,18.76; 431400,18.72;
          432000,18.68; 432600,18.64; 433200,18.64; 433800,18.6; 434400,18.55;
          435000,18.55; 435600,18.51; 436200,18.51; 436800,18.47; 437400,18.47;
          438000,18.43; 438600,18.4; 439200,18.39; 439800,18.35; 440400,18.35;
          441000,18.35; 441600,18.35; 442200,18.35; 442800,18.35; 443400,18.35;
          444000,18.36; 444600,18.35; 445200,18.37; 445800,18.35; 446400,18.35;
          447000,18.38; 447600,18.36; 448200,18.4; 448800,18.55; 449400,18.84;
          450000,19.01; 450600,19.2; 451200,19.37; 451800,19.45; 452400,19.5;
          453000,19.53; 453600,19.57; 454200,19.61; 454800,19.65; 455400,19.69;
          456000,19.74; 456600,19.78; 457200,19.82; 457800,19.86; 458400,19.9;
          459000,19.98; 459600,20.02; 460200,20.06; 460800,20.06; 461400,20.14;
          462000,20.18; 462600,20.27; 463200,20.3; 463800,20.34; 464400,20.44;
          465000,20.46; 465600,20.47; 466200,20.76; 466800,20.56; 467400,20.54;
          468000,20.54; 468600,20.55; 469200,20.59; 469800,20.71; 470400,20.79;
          471000,20.91; 471600,20.98; 472200,21; 472800,21.08; 473400,21.08;
          474000,21.16; 474600,21.24; 475200,21.24; 475800,21.28; 476400,21.16;
          477000,19.86; 477600,20.72; 478200,21.04; 478800,21.15; 479400,21.2;
          480000,21.28; 480600,21.32; 481200,21.32; 481800,21.4; 482400,21.44;
          483000,21.48; 483600,21.48; 484200,21.52; 484800,21.56; 485400,21.6;
          486000,21.6; 486600,21.66; 487200,21.69; 487800,21.73; 488400,21.74;
          489000,21.73; 489600,21.77; 490200,21.81; 490800,21.81; 491400,21.81;
          492000,21.85; 492600,21.93; 493200,21.96; 493800,21.97; 494400,21.97;
          495000,21.97; 495600,21.97; 496200,21.97; 496800,21.97; 497400,21.96;
          498000,21.96; 498600,21.93; 499200,21.93; 499800,21.9; 500400,21.89;
          501000,21.93; 501600,21.89; 502200,21.81; 502800,21.69; 503400,21.62;
          504000,21.49; 504600,21.32; 505200,21.2; 505800,21.08; 506400,20.99;
          507000,20.83; 507600,20.71; 508200,20.63; 508800,20.59; 509400,20.51;
          510000,20.48; 510600,20.42; 511200,20.34; 511800,20.22; 512400,20.18;
          513000,20.18; 513600,20.11; 514200,20.06; 514800,20.02; 515400,19.94;
          516000,19.9; 516600,19.82; 517200,19.78; 517800,19.73; 518400,19.69;
          519000,19.65; 519600,19.65; 520200,19.61; 520800,19.57; 521400,19.57;
          522000,19.53; 522600,19.53; 523200,19.49; 523800,19.49; 524400,19.45;
          525000,19.41; 525600,19.45; 526200,19.57; 526800,19.73; 527400,19.87;
          528000,20.02; 528600,20.18; 529200,20.26; 529800,20.34; 530400,20.46;
          531000,20.55; 531600,20.63; 532200,20.72; 532800,20.77; 533400,20.83;
          534000,20.92; 534600,20.96; 535200,20.99; 535800,21; 536400,21.08;
          537000,21.12; 537600,21.12; 538200,21.15; 538800,21.16; 539400,21.19;
          540000,21.23; 540600,21.24; 541200,21.28; 541800,21.28; 542400,21.32;
          543000,21.32; 543600,21.32; 544200,21.31; 544800,21.28; 545400,21.32;
          546000,21.36; 546600,21.4; 547200,21.46; 547800,21.52; 548400,21.55;
          549000,21.6; 549600,21.6; 550200,21.61; 550800,21.66; 551400,21.73;
          552000,21.77; 552600,21.81; 553200,21.81; 553800,21.93; 554400,21.99;
          555000,22.05; 555600,22.09; 556200,22.1; 556800,22.17; 557400,22.21;
          558000,22.24; 558600,22.36; 559200,22.38; 559800,22.34; 560400,22.34;
          561000,22.38; 561600,22.42; 562200,22.42; 562800,22.42; 563400,22.46;
          564000,22.46; 564600,22.46; 565200,22.5; 565800,22.5; 566400,22.5;
          567000,22.51; 567600,22.48; 568200,22.5; 568800,22.5; 569400,22.5;
          570000,22.5; 570600,22.54; 571200,22.58; 571800,22.58; 572400,22.58;
          573000,22.64; 573600,22.74; 574200,22.78; 574800,22.85; 575400,22.87;
          576000,22.92; 576600,22.95; 577200,23; 577800,23.07; 578400,23.17;
          579000,23.27; 579600,23.27; 580200,23.24; 580800,23.4; 581400,23.44;
          582000,23.48; 582600,23.48; 583200,23.43; 583800,23.4; 584400,23.37;
          585000,23.32; 585600,23.35; 586200,23.4; 586800,23.4; 587400,23.43;
          588000,23.4; 588600,23.32; 589200,23.16; 589800,23.07; 590400,22.94;
          591000,22.78; 591600,22.62; 592200,22.46; 592800,22.34; 593400,22.22;
          594000,22.18; 594600,22.05; 595200,21.93; 595800,21.85; 596400,21.77;
          597000,21.65; 597600,21.6; 598200,21.52; 598800,21.49; 599400,21.4;
          600000,21.36; 600600,21.28; 601200,21.28; 601800,21.2; 602400,21.16;
          603000,21.15; 603600,21.12; 604200,21.08; 604800,21.04; 605400,21;
          606000,20.96; 606600,20.95; 607200,20.9; 607800,20.87; 608400,20.83;
          609000,20.84; 609600,20.83; 610200,20.78; 610800,20.76; 611400,20.75;
          612000,20.79; 612600,20.91; 613200,21.08; 613800,21.2; 614400,21.32;
          615000,21.48; 615600,21.6; 616200,21.69; 616800,21.82; 617400,21.89;
          618000,22.01; 618600,22.09; 619200,22.18; 619800,22.25; 620400,22.33;
          621000,22.38; 621600,22.42; 622200,22.49; 622800,22.5; 623400,22.58;
          624000,22.62; 624600,22.63; 625200,22.7; 625800,22.72; 626400,22.74;
          627000,22.78; 627600,22.82; 628200,22.83; 628800,22.86; 629400,22.87;
          630000,22.91; 630600,22.79; 631200,22.74; 631800,22.7; 632400,22.7;
          633000,22.78; 633600,22.91; 634200,23.03; 634800,23.11; 635400,23.18;
          636000,23.24; 636600,23.22; 637200,23.15; 637800,23.06; 638400,22.99;
          639000,23; 639600,22.91; 640200,22.91; 640800,22.78; 641400,22.87;
          642000,23.03; 642600,23.04; 643200,22.99; 643800,23.04; 644400,23.03;
          645000,23.12; 645600,23.11; 646200,23.11; 646800,23.12; 647400,23.11;
          648000,23.03; 648600,22.88; 649200,22.82; 649800,22.78; 650400,22.83;
          651000,22.96; 651600,22.92; 652200,23.03; 652800,23.08; 653400,23.13;
          654000,23.11; 654600,23.15; 655200,23.12; 655800,23.15; 656400,23.2;
          657000,23.19; 657600,23.24; 658200,23.27; 658800,23.28; 659400,23.27;
          660000,23.28; 660600,23.27; 661200,23.27; 661800,23.27; 662400,23.23;
          663000,23.27; 663600,23.27; 664200,23.27; 664800,23.31; 665400,23.32;
          666000,23.32; 666600,23.28; 667200,23.19; 667800,23.05; 668400,22.95;
          669000,22.83; 669600,22.74; 670200,22.7; 670800,22.62; 671400,22.58;
          672000,22.54; 672600,22.48; 673200,22.42; 673800,22.34; 674400,22.3;
          675000,22.27; 675600,22.22; 676200,22.14; 676800,22.05; 677400,21.97;
          678000,21.93; 678600,21.85; 679200,21.81; 679800,21.77; 680400,21.72;
          681000,21.65; 681600,21.6; 682200,21.52; 682800,21.48; 683400,21.44;
          684000,21.4; 684600,21.4; 685200,21.32; 685800,21.32; 686400,21.29;
          687000,21.24; 687600,21.2; 688200,21.16; 688800,21.15; 689400,21.12;
          690000,21.08; 690600,21.07; 691200,21.04; 691800,21; 692400,21;
          693000,21; 693600,20.96; 694200,20.91; 694800,20.92; 695400,20.91;
          696000,20.88; 696600,20.88; 697200,20.87; 697800,20.83; 698400,20.83;
          699000,20.83; 699600,20.79; 700200,20.79; 700800,20.8; 701400,20.76;
          702000,20.78; 702600,20.75; 703200,20.75; 703800,20.75; 704400,20.71;
          705000,20.71; 705600,20.7; 706200,20.67; 706800,20.67; 707400,20.67;
          708000,20.65; 708600,20.63; 709200,20.63; 709800,20.63; 710400,20.63;
          711000,20.63; 711600,20.59; 712200,20.59; 712800,20.59; 713400,20.56;
          714000,20.55; 714600,20.55; 715200,20.55; 715800,20.56; 716400,20.51;
          717000,20.51; 717600,20.52; 718200,20.51; 718800,20.52; 719400,20.51;
          720000,20.48; 720600,20.5; 721200,20.5; 721800,20.48; 722400,20.46;
          723000,20.46; 723600,20.46; 724200,20.46; 724800,20.48; 725400,20.44;
          726000,20.46; 726600,20.42; 727200,20.42; 727800,20.42; 728400,20.46;
          729000,20.42; 729600,20.46; 730200,20.42; 730800,20.42; 731400,20.42;
          732000,20.42; 732600,20.42; 733200,20.42; 733800,20.42; 734400,20.42;
          735000,20.38; 735600,20.38; 736200,20.4; 736800,20.38; 737400,20.38;
          738000,20.38; 738600,20.4; 739200,20.38; 739800,20.38; 740400,20.34;
          741000,20.34; 741600,20.34; 742200,20.34; 742800,20.34; 743400,20.34;
          744000,20.34; 744600,20.34; 745200,20.38; 745800,20.38; 746400,20.38;
          747000,20.38; 747600,20.34; 748200,20.34; 748800,20.36; 749400,20.32;
          750000,20.3; 750600,20.32; 751200,20.3; 751800,20.3; 752400,20.26;
          753000,20.26; 753600,20.24; 754200,20.26; 754800,20.22; 755400,20.23;
          756000,20.22; 756600,20.21; 757200,20.18; 757800,20.18; 758400,20.18;
          759000,20.18; 759600,20.18; 760200,20.14; 760800,20.14; 761400,20.14;
          762000,20.1; 762600,20.1; 763200,20.1; 763800,20.09; 764400,20.06;
          765000,20.06; 765600,20.06; 766200,20.04; 766800,20.02; 767400,20.02;
          768000,20.02; 768600,19.98; 769200,19.98; 769800,19.98; 770400,19.94;
          771000,19.94; 771600,19.94; 772200,19.9; 772800,19.9; 773400,19.86;
          774000,19.86; 774600,19.86; 775200,19.87; 775800,19.82; 776400,19.82;
          777000,19.81; 777600,19.78; 778200,19.78; 778800,19.75; 779400,19.73;
          780000,19.73; 780600,19.73; 781200,19.73; 781800,19.74; 782400,19.72;
          783000,19.73; 783600,19.7; 784200,19.69; 784800,19.72; 785400,19.69;
          786000,19.69; 786600,19.65; 787200,19.65; 787800,19.65; 788400,19.65;
          789000,19.65; 789600,19.65; 790200,19.65; 790800,19.61; 791400,19.62;
          792000,19.62; 792600,19.61; 793200,19.61; 793800,19.62; 794400,19.61;
          795000,19.61; 795600,19.61; 796200,19.61; 796800,19.57; 797400,19.61;
          798000,19.6; 798600,19.59; 799200,19.57; 799800,19.57; 800400,19.57;
          801000,19.57; 801600,19.57; 802200,19.57; 802800,19.58; 803400,19.57;
          804000,19.57; 804600,19.57; 805200,19.57; 805800,19.57; 806400,19.57;
          807000,19.57; 807600,19.57; 808200,19.57; 808800,19.57; 809400,19.57;
          810000,19.57; 810600,19.58; 811200,19.61; 811800,19.61; 812400,19.61;
          813000,19.62; 813600,19.61; 814200,19.64; 814800,19.65; 815400,19.65;
          816000,19.65; 816600,19.66; 817200,19.66; 817800,19.69; 818400,19.7;
          819000,19.73; 819600,19.73; 820200,19.77; 820800,19.78; 821400,19.78;
          822000,19.78; 822600,19.78; 823200,19.83; 823800,19.82; 824400,19.82;
          825000,19.83; 825600,19.82; 826200,19.84; 826800,19.83; 827400,19.83;
          828000,19.82; 828600,19.82; 829200,19.82; 829800,19.82; 830400,19.82;
          831000,19.82; 831600,19.82; 832200,19.82; 832800,19.82; 833400,19.82;
          834000,19.82; 834600,19.82; 835200,19.82; 835800,19.82; 836400,19.82;
          837000,19.82; 837600,19.82; 838200,19.8; 838800,19.78; 839400,19.78;
          840000,19.78; 840600,19.78; 841200,19.78; 841800,19.78; 842400,19.78;
          843000,19.77; 843600,19.73; 844200,19.76; 844800,19.73; 845400,19.73;
          846000,19.73; 846600,19.73; 847200,19.73; 847800,19.74; 848400,19.73;
          849000,19.73; 849600,19.69; 850200,19.69; 850800,19.69; 851400,19.69;
          852000,19.7; 852600,19.73; 853200,19.73; 853800,19.73; 854400,19.73;
          855000,19.74; 855600,19.73; 856200,19.73; 856800,19.73; 857400,19.73;
          858000,19.73; 858600,19.69; 859200,19.69; 859800,19.7; 860400,19.7;
          861000,19.69; 861600,19.69; 862200,19.7; 862800,19.69; 863400,19.69;
          864000,19.67; 864600,19.66; 865200,19.66; 865800,19.65; 866400,19.65;
          867000,19.66; 867600,19.65; 868200,19.65; 868800,19.61; 869400,19.65;
          870000,19.65; 870600,19.65; 871200,19.65; 871800,19.65; 872400,19.66;
          873000,19.65; 873600,19.65; 874200,19.65; 874800,19.61; 875400,19.61;
          876000,19.63; 876600,19.61; 877200,19.61; 877800,19.65; 878400,19.65;
          879000,19.66; 879600,19.65; 880200,19.65; 880800,19.65; 881400,19.66;
          882000,19.65; 882600,19.65; 883200,19.65; 883800,19.65; 884400,19.65;
          885000,19.65; 885600,19.65; 886200,19.65; 886800,19.68; 887400,19.65;
          888000,19.65; 888600,19.81; 889200,20.02; 889800,20.18; 890400,20.26;
          891000,20.42; 891600,20.58; 892200,20.71; 892800,20.83; 893400,20.96;
          894000,21; 894600,21.08; 895200,21.17; 895800,21.2; 896400,21.32;
          897000,21.46; 897600,21.56; 898200,21.65; 898800,21.69; 899400,21.77;
          900000,21.84; 900600,21.89; 901200,22.01; 901800,22.09; 902400,22.17;
          903000,22.26; 903600,22.38; 904200,22.51; 904800,22.59; 905400,22.62;
          906000,22.66; 906600,22.7; 907200,22.7; 907800,22.71; 908400,22.76;
          909000,22.74; 909600,22.75; 910200,22.83; 910800,22.91; 911400,22.94;
          912000,22.94; 912600,23.03; 913200,23.07; 913800,23.11; 914400,23.11;
          915000,23.15; 915600,23.27; 916200,23.4; 916800,23.49; 917400,23.56;
          918000,23.6; 918600,23.64; 919200,23.72; 919800,23.76; 920400,23.88;
          921000,23.84; 921600,23.76; 922200,23.73; 922800,23.72; 923400,23.68;
          924000,23.68; 924600,23.68; 925200,23.67; 925800,23.68; 926400,23.65;
          927000,23.64; 927600,23.64; 928200,23.68; 928800,23.72; 929400,23.72;
          930000,23.72; 930600,23.72; 931200,23.72; 931800,23.72; 932400,23.72;
          933000,23.72; 933600,23.72; 934200,23.65; 934800,23.48; 935400,23.36;
          936000,23.18; 936600,23.03; 937200,22.91; 937800,22.78; 938400,22.67;
          939000,22.57; 939600,22.46; 940200,22.38; 940800,22.26; 941400,22.18;
          942000,22.09; 942600,22.02; 943200,21.97; 943800,21.89; 944400,21.85;
          945000,21.81; 945600,21.77; 946200,21.69; 946800,21.65; 947400,21.61;
          948000,21.6; 948600,21.6; 949200,21.56; 949800,21.56; 950400,21.52;
          951000,21.51; 951600,21.44; 952200,21.44; 952800,21.39; 953400,21.4;
          954000,21.36; 954600,21.36; 955200,21.32; 955800,21.28; 956400,21.32;
          957000,21.32; 957600,21.32; 958200,21.44; 958800,21.6; 959400,21.73;
          960000,21.89; 960600,22.05; 961200,22.18; 961800,22.3; 962400,22.44;
          963000,22.58; 963600,22.7; 964200,22.78; 964800,22.83; 965400,22.91;
          966000,22.99; 966600,23.03; 967200,23.07; 967800,23.11; 968400,23.11;
          969000,23.15; 969600,23.23; 970200,23.25; 970800,23.27; 971400,23.32;
          972000,23.35; 972600,23.36; 973200,23.36; 973800,23.4; 974400,23.4;
          975000,23.4; 975600,23.36; 976200,23.27; 976800,23.32; 977400,23.32;
          978000,23.27; 978600,23.23; 979200,23.19; 979800,23.16; 980400,23.11;
          981000,23.14; 981600,23.08; 982200,23.07; 982800,23.03; 983400,23.03;
          984000,23.03; 984600,23.03; 985200,22.95; 985800,22.95; 986400,22.95;
          987000,22.99; 987600,22.99; 988200,22.95; 988800,23.03; 989400,23.07;
          990000,23.07; 990600,23.1; 991200,23.11; 991800,23.11; 992400,23.12;
          993000,23.19; 993600,23.19; 994200,23.12; 994800,23.11; 995400,23.06;
          996000,23.08; 996600,23.15; 997200,23.24; 997800,23.23; 998400,23.2;
          999000,23.2; 999600,23.15; 1000200,23.19; 1000800,23.19; 1001400,
          23.23; 1002000,23.24; 1002600,23.27; 1003200,23.32; 1003800,23.23;
          1004400,23.23; 1005000,23.27; 1005600,23.24; 1006200,23.27; 1006800,
          23.24; 1007400,23.28; 1008000,23.27; 1008600,23.27; 1009200,23.24;
          1009800,23.2; 1010400,23.19; 1011000,23.07; 1011600,23.03; 1012200,
          22.92; 1012800,22.91; 1013400,22.83; 1014000,22.79; 1014600,22.66;
          1015200,22.58; 1015800,22.5; 1016400,22.5; 1017000,22.42; 1017600,
          22.35; 1018200,22.26; 1018800,22.26; 1019400,22.21; 1020000,22.14;
          1020600,22.09; 1021200,22.04; 1021800,22.02; 1022400,21.97; 1023000,
          21.89; 1023600,21.81; 1024200,21.77; 1024800,21.69; 1025400,21.7;
          1026000,21.62; 1026600,21.6; 1027200,21.6; 1027800,21.56; 1028400,
          21.48; 1029000,21.48; 1029600,21.4; 1030200,21.4; 1030800,21.36;
          1031400,21.32; 1032000,21.32; 1032600,21.28; 1033200,21.28; 1033800,
          21.25; 1034400,21.2; 1035000,21.16; 1035600,21.16; 1036200,21.12;
          1036800,21.12; 1037400,21.08; 1038000,21.08; 1038600,21.07; 1039200,
          21.04; 1039800,21; 1040400,20.99; 1041000,20.96; 1041600,20.96;
          1042200,20.96; 1042800,20.95; 1043400,20.91; 1044000,20.87; 1044600,
          20.87; 1045200,20.91; 1045800,20.96; 1046400,20.91; 1047000,20.96;
          1047600,20.96; 1048200,20.96; 1048800,20.96; 1049400,20.96; 1050000,
          20.96; 1050600,21; 1051200,20.99; 1051800,20.96; 1052400,20.96;
          1053000,20.96; 1053600,20.96; 1054200,20.96; 1054800,20.96; 1055400,
          20.96; 1056000,20.96; 1056600,20.95; 1057200,20.94; 1057800,20.94;
          1058400,20.95; 1059000,20.91; 1059600,20.95; 1060200,20.92; 1060800,
          20.96; 1061400,20.96; 1062000,21; 1062600,21.16; 1063200,21.27;
          1063800,21.36; 1064400,21.44; 1065000,21.48; 1065600,21.56; 1066200,
          21.68; 1066800,21.81; 1067400,21.94; 1068000,22.01; 1068600,22.1;
          1069200,22.18; 1069800,22.22; 1070400,22.22; 1071000,22.22; 1071600,
          22.23; 1072200,22.26; 1072800,22.3; 1073400,22.38; 1074000,22.42;
          1074600,22.47; 1075200,22.54; 1075800,22.58; 1076400,22.7; 1077000,
          22.78; 1077600,22.83; 1078200,22.83; 1078800,22.87; 1079400,22.83;
          1080000,22.78; 1080600,22.78; 1081200,22.82; 1081800,22.91; 1082400,
          22.88; 1083000,22.87; 1083600,22.87; 1084200,22.96; 1084800,22.96;
          1085400,22.99; 1086000,23.03; 1086600,23.07; 1087200,23.16; 1087800,
          23.23; 1088400,23.15; 1089000,23.16; 1089600,23.23; 1090200,23.27;
          1090800,23.28; 1091400,23.31; 1092000,23.32; 1092600,23.36; 1093200,
          23.36; 1093800,23.34; 1094400,23.36; 1095000,23.39; 1095600,23.4;
          1096200,23.32; 1096800,23.27; 1097400,23.23; 1098000,23.18; 1098600,
          23.11; 1099200,23.07; 1099800,23; 1100400,22.87; 1101000,22.7;
          1101600,22.58; 1102200,22.46; 1102800,22.4; 1103400,22.3; 1104000,
          22.22; 1104600,22.14; 1105200,22.05; 1105800,21.97; 1106400,21.89;
          1107000,21.81; 1107600,21.77; 1108200,21.69; 1108800,21.6; 1109400,
          21.56; 1110000,21.48; 1110600,21.44; 1111200,21.41; 1111800,21.32;
          1112400,21.24; 1113000,21.2; 1113600,21.16; 1114200,21.08; 1114800,
          21.02; 1115400,20.99; 1116000,20.93; 1116600,20.87; 1117200,20.83;
          1117800,20.79; 1118400,20.79; 1119000,20.75; 1119600,20.71; 1120200,
          20.67; 1120800,20.64; 1121400,20.63; 1122000,20.59; 1122600,20.55;
          1123200,20.51; 1123800,20.51; 1124400,20.46; 1125000,20.44; 1125600,
          20.42; 1126200,20.38; 1126800,20.36; 1127400,20.34; 1128000,20.33;
          1128600,20.3; 1129200,20.26; 1129800,20.26; 1130400,20.23; 1131000,
          20.22; 1131600,20.22; 1132200,20.18; 1132800,20.18; 1133400,20.18;
          1134000,20.14; 1134600,20.14; 1135200,20.1; 1135800,20.1; 1136400,
          20.06; 1137000,20.06; 1137600,20.02; 1138200,20.02; 1138800,20.02;
          1139400,20.02; 1140000,20.02; 1140600,19.98; 1141200,19.98; 1141800,
          19.98; 1142400,19.99; 1143000,19.98; 1143600,19.98; 1144200,19.98;
          1144800,19.97; 1145400,19.94; 1146000,19.96; 1146600,19.94; 1147200,
          19.94; 1147800,19.94; 1148400,20.02; 1149000,20.3; 1149600,20.47;
          1150200,20.63; 1150800,20.88; 1151400,20.87; 1152000,21.04; 1152600,
          21.11; 1153200,21.16; 1153800,21.26; 1154400,21.32; 1155000,21.36;
          1155600,21.33; 1156200,21.38; 1156800,21.73; 1157400,22.06; 1158000,
          22.38; 1158600,22.58; 1159200,22.78; 1159800,22.97; 1160400,23.11;
          1161000,23.27; 1161600,23.44; 1162200,23.56; 1162800,23.73; 1163400,
          23.84; 1164000,23.77; 1164600,23.72; 1165200,23.72; 1165800,23.72;
          1166400,23.8; 1167000,23.82; 1167600,23.84; 1168200,23.72; 1168800,
          23.8; 1169400,23.8; 1170000,23.88; 1170600,23.93; 1171200,24.01;
          1171800,24.09; 1172400,24.18; 1173000,24.32; 1173600,24.38; 1174200,
          24.37; 1174800,24.37; 1175400,24.29; 1176000,24.16; 1176600,23.98;
          1177200,23.93; 1177800,23.79; 1178400,23.68; 1179000,23.58; 1179600,
          23.44; 1180200,23.43; 1180800,23.47; 1181400,23.44; 1182000,23.45;
          1182600,23.44; 1183200,23.4; 1183800,23.35; 1184400,23.24; 1185000,
          23.24; 1185600,23.17; 1186200,23.11; 1186800,23.07; 1187400,22.99;
          1188000,22.87; 1188600,22.74; 1189200,22.62; 1189800,22.5; 1190400,
          22.42; 1191000,22.34; 1191600,22.26; 1192200,22.18; 1192800,22.09;
          1193400,22.05; 1194000,21.97; 1194600,21.89; 1195200,21.81; 1195800,
          21.81; 1196400,21.77; 1197000,21.69; 1197600,21.65; 1198200,21.6;
          1198800,21.48; 1199400,21.44; 1200000,21.41; 1200600,21.33; 1201200,
          21.28; 1201800,21.24; 1202400,21.16; 1203000,21.12; 1203600,21.12;
          1204200,21.04; 1204800,21; 1205400,20.96; 1206000,20.96; 1206600,
          20.91; 1207200,20.88; 1207800,20.83; 1208400,20.79; 1209000,20.79;
          1209600,20.75; 1210200,20.71; 1210800,20.67; 1211400,20.67; 1212000,
          20.63; 1212600,20.63; 1213200,20.59; 1213800,20.55; 1214400,20.54;
          1215000,20.51; 1215600,20.51; 1216200,20.48; 1216800,20.46; 1217400,
          20.46; 1218000,20.42; 1218600,20.42; 1219200,20.42; 1219800,20.39;
          1220400,20.38; 1221000,20.38; 1221600,20.34; 1222200,20.34; 1222800,
          20.34; 1223400,20.34; 1224000,20.34; 1224600,20.34; 1225200,20.36;
          1225800,20.3; 1226400,20.3; 1227000,20.3; 1227600,20.3; 1228200,20.3;
          1228800,20.3; 1229400,20.3; 1230000,20.29; 1230600,20.26; 1231200,
          20.26; 1231800,20.26; 1232400,20.26; 1233000,20.24; 1233600,20.22;
          1234200,20.22; 1234800,20.34; 1235400,20.51; 1236000,20.67; 1236600,
          20.75; 1237200,20.87; 1237800,20.95; 1238400,21.07; 1239000,21.16;
          1239600,21.22; 1240200,21.32; 1240800,21.36; 1241400,21.44; 1242000,
          21.5; 1242600,21.6; 1243200,21.65; 1243800,21.69; 1244400,21.76;
          1245000,21.85; 1245600,21.85; 1246200,21.93; 1246800,21.97; 1247400,
          22.01; 1248000,22.09; 1248600,22.1; 1249200,22.14; 1249800,22.18;
          1250400,22.27; 1251000,22.29; 1251600,22.42; 1252200,22.46; 1252800,
          22.5; 1253400,22.5; 1254000,22.5; 1254600,22.54; 1255200,22.58;
          1255800,22.54; 1256400,22.54; 1257000,22.5; 1257600,22.54; 1258200,
          22.66; 1258800,22.7; 1259400,22.7; 1260000,22.74; 1260600,22.75;
          1261200,22.83; 1261800,22.89; 1262400,22.8; 1263000,22.76; 1263600,
          22.7; 1264200,22.78; 1264800,22.78; 1265400,22.78; 1266000,22.78;
          1266600,22.75; 1267200,22.77; 1267800,22.82; 1268400,22.83; 1269000,
          22.78; 1269600,22.74; 1270200,22.7; 1270800,22.66; 1271400,22.64;
          1272000,22.58; 1272600,22.58; 1273200,22.54; 1273800,22.54; 1274400,
          22.5; 1275000,22.51; 1275600,22.46; 1276200,22.42; 1276800,22.42;
          1277400,22.35; 1278000,22.23; 1278600,22.15; 1279200,22.05; 1279800,
          21.97; 1280400,21.89; 1281000,21.82; 1281600,21.75; 1282200,21.72;
          1282800,21.65; 1283400,21.6; 1284000,21.52; 1284600,21.44; 1285200,
          21.4; 1285800,21.32; 1286400,21.28; 1287000,21.2; 1287600,21.16;
          1288200,21.12; 1288800,21.04; 1289400,21; 1290000,20.97; 1290600,
          20.88; 1291200,20.83; 1291800,20.79; 1292400,20.75; 1293000,20.72;
          1293600,20.67; 1294200,20.63; 1294800,20.59; 1295400,20.58; 1296000,
          20.55; 1296600,20.51; 1297200,20.49; 1297800,20.46; 1298400,20.42;
          1299000,20.38; 1299600,20.38; 1300200,20.34; 1300800,20.33; 1301400,
          20.3; 1302000,20.26; 1302600,20.26; 1303200,20.22; 1303800,20.23;
          1304400,20.19; 1305000,20.18; 1305600,20.14; 1306200,20.14; 1306800,
          20.11; 1307400,20.1; 1308000,20.1; 1308600,20.06; 1309200,20.05;
          1309800,20.02; 1310400,20.02; 1311000,19.99; 1311600,19.98; 1312200,
          19.98; 1312800,19.94; 1313400,19.94; 1314000,19.9; 1314600,19.9;
          1315200,19.9; 1315800,19.86; 1316400,19.86; 1317000,19.85; 1317600,
          19.82; 1318200,19.82; 1318800,19.82; 1319400,19.78; 1320000,19.78;
          1320600,19.78; 1321200,19.78; 1321800,19.73; 1322400,19.73; 1323000,
          19.73; 1323600,19.73; 1324200,19.97; 1324800,19.69; 1325400,19.69;
          1326000,19.69; 1326600,19.69; 1327200,19.65; 1327800,19.65; 1328400,
          19.65; 1329000,19.65; 1329600,19.66; 1330200,19.65; 1330800,19.69;
          1331400,19.69; 1332000,19.74; 1332600,19.69; 1333200,19.73; 1333800,
          19.74; 1334400,19.73; 1335000,19.76; 1335600,19.78; 1336200,19.78;
          1336800,19.78; 1337400,19.78; 1338000,19.78; 1338600,19.78; 1339200,
          19.78; 1339800,19.82; 1340400,19.82; 1341000,19.82; 1341600,19.82;
          1342200,19.86; 1342800,19.85; 1343400,19.86; 1344000,19.9; 1344600,
          19.9; 1345200,19.98; 1345800,19.98; 1346400,20.02; 1347000,20.02;
          1347600,19.98; 1348200,19.94; 1348800,19.9; 1349400,19.88; 1350000,
          19.86; 1350600,19.82; 1351200,19.82; 1351800,19.78; 1352400,19.78;
          1353000,19.73; 1353600,19.73; 1354200,19.7; 1354800,19.69; 1355400,
          19.65; 1356000,19.65; 1356600,19.61; 1357200,19.57; 1357800,19.57;
          1358400,19.53; 1359000,19.53; 1359600,19.53; 1360200,19.5; 1360800,
          19.49; 1361400,19.47; 1362000,19.45; 1362600,19.45; 1363200,19.42;
          1363800,19.41; 1364400,19.37; 1365000,19.37; 1365600,19.37; 1366200,
          19.34; 1366800,19.34; 1367400,19.33; 1368000,19.32; 1368600,19.28;
          1369200,19.28; 1369800,19.28; 1370400,19.24; 1371000,19.24; 1371600,
          19.24; 1372200,19.24; 1372800,19.2; 1373400,19.2; 1374000,19.21;
          1374600,19.2; 1375200,19.16; 1375800,19.16; 1376400,19.16; 1377000,
          19.18; 1377600,19.16; 1378200,19.12; 1378800,19.12; 1379400,19.08;
          1380000,19.08; 1380600,19.06; 1381200,19.04; 1381800,19.04; 1382400,
          19.04; 1383000,19.02; 1383600,19; 1384200,19; 1384800,19; 1385400,19;
          1386000,18.98; 1386600,18.96; 1387200,18.96; 1387800,18.96; 1388400,
          18.96; 1389000,18.97; 1389600,18.94; 1390200,18.92; 1390800,18.92;
          1391400,18.92; 1392000,18.92; 1392600,18.92; 1393200,18.91; 1393800,
          18.91; 1394400,18.88; 1395000,18.89; 1395600,18.88; 1396200,18.88;
          1396800,18.88; 1397400,18.88; 1398000,18.89; 1398600,18.89; 1399200,
          18.86; 1399800,18.84; 1400400,18.84; 1401000,18.84; 1401600,18.85;
          1402200,18.84; 1402800,18.84; 1403400,18.81; 1404000,18.82; 1404600,
          18.8; 1405200,18.81; 1405800,18.8; 1406400,18.8; 1407000,18.8;
          1407600,18.8; 1408200,18.8; 1408800,18.8; 1409400,18.76; 1410000,
          18.76; 1410600,18.76; 1411200,18.77; 1411800,18.76; 1412400,18.77;
          1413000,18.76; 1413600,18.76; 1414200,18.76; 1414800,18.78; 1415400,
          18.8; 1416000,18.8; 1416600,18.82; 1417200,18.84; 1417800,18.84;
          1418400,18.85; 1419000,18.88; 1419600,18.88; 1420200,18.89; 1420800,
          18.92; 1421400,18.92; 1422000,18.96; 1422600,19; 1423200,19; 1423800,
          19.04; 1424400,19.04; 1425000,19.08; 1425600,19.12; 1426200,19.15;
          1426800,19.16; 1427400,19.2; 1428000,19.2; 1428600,19.24; 1429200,
          19.24; 1429800,19.29; 1430400,19.33; 1431000,19.37; 1431600,19.37;
          1432200,19.4; 1432800,19.45; 1433400,19.45; 1434000,19.49; 1434600,
          19.5; 1435200,19.53; 1435800,19.53; 1436400,19.57; 1437000,19.53;
          1437600,19.53; 1438200,19.52; 1438800,19.49; 1439400,19.45; 1440000,
          19.41; 1440600,19.37; 1441200,19.37; 1441800,19.33; 1442400,19.28;
          1443000,19.24; 1443600,19.2; 1444200,19.2; 1444800,19.16; 1445400,
          19.14; 1446000,19.12; 1446600,19.08; 1447200,19.08; 1447800,19.04;
          1448400,19.04; 1449000,19; 1449600,19; 1450200,18.96; 1450800,18.93;
          1451400,18.93; 1452000,18.88; 1452600,18.88; 1453200,18.88; 1453800,
          18.85; 1454400,18.84; 1455000,18.84; 1455600,18.8; 1456200,18.8;
          1456800,18.8; 1457400,18.77; 1458000,18.76; 1458600,18.72; 1459200,
          18.72; 1459800,18.72; 1460400,18.68; 1461000,18.68; 1461600,18.68;
          1462200,18.65; 1462800,18.64; 1463400,18.64; 1464000,18.61; 1464600,
          18.6; 1465200,18.6; 1465800,18.6; 1466400,18.56; 1467000,18.55;
          1467600,18.56; 1468200,18.52; 1468800,18.51; 1469400,18.51; 1470000,
          18.51; 1470600,18.51; 1471200,18.51; 1471800,18.47; 1472400,18.47;
          1473000,18.47; 1473600,18.47; 1474200,18.43; 1474800,18.43; 1475400,
          18.43; 1476000,18.43; 1476600,18.43; 1477200,18.4; 1477800,18.39;
          1478400,18.39; 1479000,18.39; 1479600,18.39; 1480200,18.35; 1480800,
          18.35; 1481400,18.35; 1482000,18.36; 1482600,18.32; 1483200,18.31;
          1483800,18.31; 1484400,18.31; 1485000,18.32; 1485600,18.34; 1486200,
          18.35; 1486800,18.35; 1487400,18.35; 1488000,18.35; 1488600,18.35;
          1489200,18.35; 1489800,18.35; 1490400,18.35; 1491000,18.35; 1491600,
          18.35; 1492200,18.33; 1492800,18.35; 1493400,18.35; 1494000,18.35;
          1494600,18.65; 1495200,18.88; 1495800,19.06; 1496400,19.38; 1497000,
          19.62; 1497600,19.69; 1498200,19.73; 1498800,19.83; 1499400,20.22;
          1500000,20.59; 1500600,20.91; 1501200,21.13; 1501800,21.36; 1502400,
          21.56; 1503000,21.74; 1503600,21.9; 1504200,21.93; 1504800,22.06;
          1505400,22.14; 1506000,22.26; 1506600,22.38; 1507200,22.42; 1507800,
          22.46; 1508400,22.54; 1509000,22.66; 1509600,22.77; 1510200,22.84;
          1510800,22.83; 1511400,22.78; 1512000,22.75; 1512600,22.74; 1513200,
          22.72; 1513800,22.74; 1514400,22.87; 1515000,22.94; 1515600,22.91;
          1516200,22.86; 1516800,22.78; 1517400,22.78; 1518000,22.72; 1518600,
          22.62; 1519200,22.54; 1519800,22.46; 1520400,22.43; 1521000,22.38;
          1521600,22.34; 1522200,22.3; 1522800,22.3; 1523400,22.22; 1524000,
          22.22; 1524600,22.18; 1525200,22.18; 1525800,22.14; 1526400,22.18;
          1527000,22.14; 1527600,22.1; 1528200,22.09; 1528800,22.05; 1529400,
          22.01; 1530000,21.97; 1530600,21.89; 1531200,21.86; 1531800,21.97;
          1532400,21.93; 1533000,21.97; 1533600,21.85; 1534200,21.73; 1534800,
          21.6; 1535400,21.52; 1536000,21.44; 1536600,21.46; 1537200,21.44;
          1537800,21.4; 1538400,21.32; 1539000,21.2; 1539600,21.08; 1540200,
          21.03; 1540800,20.99; 1541400,20.96; 1542000,20.91; 1542600,20.87;
          1543200,20.83; 1543800,20.83; 1544400,20.82; 1545000,20.75; 1545600,
          20.71; 1546200,20.67; 1546800,20.63; 1547400,20.59; 1548000,20.55;
          1548600,20.51; 1549200,20.51; 1549800,20.5; 1550400,20.44; 1551000,
          20.42; 1551600,20.38; 1552200,20.38; 1552800,20.34; 1553400,20.34;
          1554000,20.3; 1554600,20.3; 1555200,20.26; 1555800,20.28; 1556400,
          20.26; 1557000,20.25; 1557600,20.22; 1558200,20.22; 1558800,20.22;
          1559400,20.18; 1560000,20.18; 1560600,20.19; 1561200,20.18; 1561800,
          20.18; 1562400,20.18; 1563000,20.14; 1563600,20.14; 1564200,20.14;
          1564800,20.14; 1565400,20.14; 1566000,20.15; 1566600,20.14; 1567200,
          20.1; 1567800,20.11; 1568400,20.1; 1569000,20.1; 1569600,20.1;
          1570200,20.1; 1570800,20.1; 1571400,20.13; 1572000,20.14; 1572600,
          20.1; 1573200,20.06; 1573800,20.02; 1574400,20.01; 1575000,20.02;
          1575600,20.07; 1576200,20.1; 1576800,20.02; 1577400,19.98; 1578000,
          19.98; 1578600,19.98; 1579200,20.02; 1579800,20.11; 1580400,20.06;
          1581000,20.02; 1581600,20.02; 1582200,20.03; 1582800,20.05; 1583400,
          20.19; 1584000,20.42; 1584600,20.59; 1585200,20.71; 1585800,20.83;
          1586400,20.91; 1587000,20.96; 1587600,21.07; 1588200,21.12; 1588800,
          21.24; 1589400,21.32; 1590000,21.36; 1590600,21.44; 1591200,21.56;
          1591800,21.65; 1592400,21.73; 1593000,21.65; 1593600,21.74; 1594200,
          21.69; 1594800,21.75; 1595400,21.81; 1596000,21.93; 1596600,21.93;
          1597200,21.9; 1597800,21.89; 1598400,21.85; 1599000,21.85; 1599600,
          21.86; 1600200,21.88; 1600800,22.01; 1601400,22.09; 1602000,22.17;
          1602600,22.22; 1603200,22.22; 1603800,22.3; 1604400,22.34; 1605000,
          22.46; 1605600,22.46; 1606200,22.44; 1606800,22.46; 1607400,22.5;
          1608000,22.56; 1608600,22.58; 1609200,22.62; 1609800,22.61; 1610400,
          22.54; 1611000,22.58; 1611600,22.62; 1612200,22.66; 1612800,22.66;
          1613400,22.7; 1614000,22.62; 1614600,22.58; 1615200,22.54; 1615800,
          22.62; 1616400,22.51; 1617000,22.27; 1617600,22.22; 1618200,22.26;
          1618800,22.29; 1619400,22.23; 1620000,22.18; 1620600,22.26; 1621200,
          22.3; 1621800,22.22; 1622400,22.1; 1623000,21.97; 1623600,21.89;
          1624200,21.86; 1624800,21.81; 1625400,21.81; 1626000,21.81; 1626600,
          21.81; 1627200,21.74; 1627800,21.6; 1628400,21.52; 1629000,21.44;
          1629600,21.36; 1630200,21.32; 1630800,21.32; 1631400,21.28; 1632000,
          21.2; 1632600,21.16; 1633200,21.12; 1633800,21.08; 1634400,21;
          1635000,21; 1635600,20.96; 1636200,20.87; 1636800,20.83; 1637400,
          20.83; 1638000,20.79; 1638600,20.75; 1639200,20.75; 1639800,20.71;
          1640400,20.68; 1641000,20.67; 1641600,20.67; 1642200,20.63; 1642800,
          20.59; 1643400,20.6; 1644000,20.59; 1644600,20.55; 1645200,20.52;
          1645800,20.52; 1646400,20.51; 1647000,20.51; 1647600,20.46; 1648200,
          20.46; 1648800,20.46; 1649400,20.51; 1650000,20.59; 1650600,20.63;
          1651200,20.63; 1651800,20.63; 1652400,20.63; 1653000,20.55; 1653600,
          20.55; 1654200,20.51; 1654800,20.51; 1655400,20.46; 1656000,20.44;
          1656600,20.38; 1657200,20.38; 1657800,20.42; 1658400,20.42; 1659000,
          20.42; 1659600,20.42; 1660200,20.38; 1660800,20.34; 1661400,20.34;
          1662000,20.39; 1662600,20.46; 1663200,20.52; 1663800,20.48; 1664400,
          20.42; 1665000,20.42; 1665600,20.38; 1666200,20.38; 1666800,20.48;
          1667400,20.67; 1668000,20.87; 1668600,20.96; 1669200,21.04; 1669800,
          21.11; 1670400,21.24; 1671000,21.32; 1671600,21.47; 1672200,21.56;
          1672800,21.56; 1673400,21.7; 1674000,22.01; 1674600,22.26; 1675200,
          22.42; 1675800,22.59; 1676400,22.7; 1677000,22.87; 1677600,22.99;
          1678200,23.07; 1678800,23.23; 1679400,23.38; 1680000,23.48; 1680600,
          23.6; 1681200,23.68; 1681800,23.8; 1682400,23.84; 1683000,23.88;
          1683600,23.92; 1684200,23.9; 1684800,23.92; 1685400,23.92; 1686000,
          23.89; 1686600,23.88; 1687200,23.96; 1687800,24.04; 1688400,24.12;
          1689000,24.21; 1689600,24.21; 1690200,24.18; 1690800,24.12; 1691400,
          24.09; 1692000,24.09; 1692600,24.09; 1693200,24.09; 1693800,24.08;
          1694400,24.09; 1695000,24.1; 1695600,24.05; 1696200,23.96; 1696800,
          23.88; 1697400,23.88; 1698000,23.72; 1698600,23.76; 1699200,23.8;
          1699800,23.72; 1700400,23.62; 1701000,23.6; 1701600,23.52; 1702200,
          23.52; 1702800,23.44; 1703400,23.4; 1704000,23.36; 1704600,23.36;
          1705200,23.23; 1705800,23.2; 1706400,23.15; 1707000,23.11; 1707600,
          23.04; 1708200,23.03; 1708800,22.99; 1709400,22.94; 1710000,22.91;
          1710600,22.84; 1711200,22.7; 1711800,22.58; 1712400,22.46; 1713000,
          22.41; 1713600,22.3; 1714200,22.22; 1714800,22.14; 1715400,22.05;
          1716000,21.97; 1716600,21.89; 1717200,21.81; 1717800,21.73; 1718400,
          21.68; 1719000,21.6; 1719600,21.53; 1720200,21.5; 1720800,21.45;
          1721400,21.39; 1722000,21.32; 1722600,21.28; 1723200,21.24; 1723800,
          21.2; 1724400,21.16; 1725000,21.12; 1725600,21.08; 1726200,21.04;
          1726800,21; 1727400,20.96; 1728000,20.95; 1728600,20.92; 1729200,
          20.87; 1729800,20.84; 1730400,20.83; 1731000,20.79; 1731600,20.79;
          1732200,20.75; 1732800,20.71; 1733400,20.72; 1734000,20.7; 1734600,
          20.67; 1735200,20.65; 1735800,20.63; 1736400,20.63; 1737000,20.64;
          1737600,20.59; 1738200,20.59; 1738800,20.59; 1739400,20.55; 1740000,
          20.51; 1740600,20.52; 1741200,20.51; 1741800,20.51; 1742400,20.46;
          1743000,20.46; 1743600,20.46; 1744200,20.48; 1744800,20.46; 1745400,
          20.42; 1746000,20.42; 1746600,20.41; 1747200,20.38; 1747800,20.38;
          1748400,20.38; 1749000,20.38; 1749600,20.34; 1750200,20.34; 1750800,
          20.36; 1751400,20.34; 1752000,20.32; 1752600,20.3; 1753200,20.3;
          1753800,20.3; 1754400,20.38; 1755000,20.55; 1755600,20.67; 1756200,
          20.79; 1756800,20.84; 1757400,20.87; 1758000,20.91; 1758600,21;
          1759200,21.09; 1759800,21.16; 1760400,21.24; 1761000,21.32; 1761600,
          21.36; 1762200,21.45; 1762800,21.44; 1763400,21.58; 1764000,21.65;
          1764600,21.78; 1765200,21.74; 1765800,21.72; 1766400,21.81; 1767000,
          21.81; 1767600,21.97; 1768200,21.94; 1768800,21.93; 1769400,22.05;
          1770000,22.09; 1770600,22.17; 1771200,22.18; 1771800,22.19; 1772400,
          22.09; 1773000,22.09; 1773600,22.13; 1774200,22.14; 1774800,22.14;
          1775400,22.13; 1776000,22.17; 1776600,22.14; 1777200,22.18; 1777800,
          22.18; 1778400,22.22; 1779000,22.22; 1779600,22.22; 1780200,22.23;
          1780800,22.3; 1781400,22.38; 1782000,22.46; 1782600,22.5; 1783200,
          22.47; 1783800,22.54; 1784400,22.58; 1785000,22.5; 1785600,22.54;
          1786200,22.59; 1786800,22.62; 1787400,22.7; 1788000,22.67; 1788600,
          22.66; 1789200,22.58; 1789800,22.46; 1790400,22.39; 1791000,22.33;
          1791600,22.3; 1792200,22.22; 1792800,22.19; 1793400,22.1; 1794000,
          22.05; 1794600,21.98; 1795200,21.96; 1795800,21.89; 1796400,21.81;
          1797000,21.77; 1797600,21.73; 1798200,21.65; 1798800,21.6; 1799400,
          21.56; 1800000,21.48; 1800600,21.44; 1801200,21.4; 1801800,21.35;
          1802400,21.28; 1803000,21.24; 1803600,21.2; 1804200,21.16; 1804800,
          21.1; 1805400,21.08; 1806000,21; 1806600,21; 1807200,20.96; 1807800,
          20.91; 1808400,20.86; 1809000,20.83; 1809600,20.79; 1810200,20.79;
          1810800,20.75; 1811400,20.71; 1812000,20.67; 1812600,20.63; 1813200,
          20.63; 1813800,20.59; 1814400,20.55; 1815000,20.51; 1815600,20.51;
          1816200,20.48; 1816800,20.43; 1817400,20.42; 1818000,20.38; 1818600,
          20.34; 1819200,20.34; 1819800,20.3; 1820400,20.26; 1821000,20.26;
          1821600,20.22; 1822200,20.21; 1822800,20.18; 1823400,20.15; 1824000,
          20.14; 1824600,20.14; 1825200,20.1; 1825800,20.1; 1826400,20.07;
          1827000,20.06; 1827600,20.06; 1828200,20.02; 1828800,20.02; 1829400,
          20.02; 1830000,19.99; 1830600,19.98; 1831200,19.98; 1831800,19.97;
          1832400,19.94; 1833000,19.94; 1833600,19.94; 1834200,19.9; 1834800,
          19.9; 1835400,19.9; 1836000,19.9; 1836600,19.88; 1837200,19.86;
          1837800,19.86; 1838400,19.86; 1839000,19.86; 1839600,19.82; 1840200,
          19.78; 1840800,20; 1841400,20.18; 1842000,20.3; 1842600,20.46;
          1843200,20.55; 1843800,20.67; 1844400,20.83; 1845000,20.91; 1845600,
          21.01; 1846200,21.16; 1846800,21.28; 1847400,21.4; 1848000,21.48;
          1848600,21.57; 1849200,21.65; 1849800,21.77; 1850400,21.81; 1851000,
          21.93; 1851600,21.97; 1852200,22.02; 1852800,22.08; 1853400,22.12;
          1854000,22.14; 1854600,22.26; 1855200,22.36; 1855800,22.42; 1856400,
          22.26; 1857000,22.18; 1857600,22.14; 1858200,22.1; 1858800,22.09;
          1859400,22.1; 1860000,21.9; 1860600,22.04; 1861200,22.3; 1861800,
          22.46; 1862400,22.54; 1863000,22.58; 1863600,22.62; 1864200,22.7;
          1864800,22.78; 1865400,23.05; 1866000,22.87; 1866600,22.91; 1867200,
          22.99; 1867800,22.99; 1868400,23.03; 1869000,23.03; 1869600,23.03;
          1870200,22.95; 1870800,22.91; 1871400,22.87; 1872000,22.91; 1872600,
          22.95; 1873200,22.9; 1873800,22.83; 1874400,22.83; 1875000,22.78;
          1875600,22.78; 1876200,22.74; 1876800,22.75; 1877400,22.62; 1878000,
          22.56; 1878600,22.46; 1879200,22.38; 1879800,22.3; 1880400,22.25;
          1881000,22.17; 1881600,22.09; 1882200,22.01; 1882800,21.94; 1883400,
          21.85; 1884000,21.81; 1884600,21.73; 1885200,21.7; 1885800,21.61;
          1886400,21.56; 1887000,21.49; 1887600,21.44; 1888200,21.4; 1888800,
          21.37; 1889400,21.33; 1890000,21.28; 1890600,21.21; 1891200,21.16;
          1891800,21.12; 1892400,21.08; 1893000,21.07; 1893600,21.01; 1894200,
          20.97; 1894800,20.96; 1895400,20.91; 1896000,20.87; 1896600,20.88;
          1897200,20.83; 1897800,20.82; 1898400,20.79; 1899000,20.75; 1899600,
          20.76; 1900200,20.71; 1900800,20.68; 1901400,20.68; 1902000,20.67;
          1902600,20.65; 1903200,20.63; 1903800,20.61; 1904400,20.59; 1905000,
          20.55; 1905600,20.55; 1906200,20.54; 1906800,20.51; 1907400,20.51;
          1908000,20.5; 1908600,20.46; 1909200,20.46; 1909800,20.46; 1910400,
          20.44; 1911000,20.42; 1911600,20.42; 1912200,20.38; 1912800,20.37;
          1913400,20.34; 1914000,20.34; 1914600,20.34; 1915200,20.31; 1915800,
          20.3; 1916400,20.3; 1917000,20.3; 1917600,20.3; 1918200,20.27;
          1918800,20.26; 1919400,20.24; 1920000,20.23; 1920600,20.22; 1921200,
          20.22; 1921800,20.23; 1922400,20.22; 1923000,20.22; 1923600,20.22;
          1924200,20.23; 1924800,20.18; 1925400,20.18; 1926000,20.18; 1926600,
          20.18; 1927200,20.18; 1927800,20.17; 1928400,20.15; 1929000,20.14;
          1929600,20.15; 1930200,20.14; 1930800,20.14; 1931400,20.14; 1932000,
          20.15; 1932600,20.14; 1933200,20.18; 1933800,20.16; 1934400,20.14;
          1935000,20.18; 1935600,20.18; 1936200,20.18; 1936800,20.18; 1937400,
          20.22; 1938000,20.22; 1938600,20.22; 1939200,20.22; 1939800,20.26;
          1940400,20.26; 1941000,20.3; 1941600,20.3; 1942200,20.34; 1942800,
          20.36; 1943400,20.38; 1944000,20.42; 1944600,20.46; 1945200,20.46;
          1945800,20.5; 1946400,20.56; 1947000,20.59; 1947600,20.65; 1948200,
          20.67; 1948800,20.71; 1949400,20.75; 1950000,20.81; 1950600,20.87;
          1951200,20.97; 1951800,21.04; 1952400,21.08; 1953000,21.12; 1953600,
          21.13; 1954200,21.17; 1954800,21.16; 1955400,21.24; 1956000,21.3;
          1956600,21.32; 1957200,21.2; 1957800,21.2; 1958400,21.2; 1959000,
          21.16; 1959600,21.12; 1960200,21.08; 1960800,21.07; 1961400,21;
          1962000,20.96; 1962600,20.96; 1963200,20.91; 1963800,20.83; 1964400,
          20.83; 1965000,20.8; 1965600,20.75; 1966200,20.71; 1966800,20.67;
          1967400,20.63; 1968000,20.59; 1968600,20.56; 1969200,20.55; 1969800,
          20.51; 1970400,20.47; 1971000,20.46; 1971600,20.42; 1972200,20.42;
          1972800,20.38; 1973400,20.36; 1974000,20.33; 1974600,20.3; 1975200,
          20.26; 1975800,20.26; 1976400,20.22; 1977000,20.21; 1977600,20.18;
          1978200,20.14; 1978800,20.14; 1979400,20.1; 1980000,20.06; 1980600,
          20.06; 1981200,20.02; 1981800,19.98; 1982400,19.98; 1983000,19.94;
          1983600,19.91; 1984200,19.9; 1984800,19.86; 1985400,19.86; 1986000,
          19.82; 1986600,19.82; 1987200,19.78; 1987800,19.78; 1988400,19.73;
          1989000,19.7; 1989600,19.69; 1990200,19.69; 1990800,19.65; 1991400,
          19.65; 1992000,19.65; 1992600,19.62; 1993200,19.59; 1993800,19.57;
          1994400,19.57; 1995000,19.57; 1995600,19.56; 1996200,19.53; 1996800,
          19.53; 1997400,19.5; 1998000,19.49; 1998600,19.49; 1999200,19.48;
          1999800,19.45; 2000400,19.45; 2001000,19.45; 2001600,19.43; 2002200,
          19.41; 2002800,19.41; 2003400,19.37; 2004000,19.37; 2004600,19.37;
          2005200,19.37; 2005800,19.37; 2006400,19.33; 2007000,19.34; 2007600,
          19.33; 2008200,19.34; 2008800,19.28; 2009400,19.28; 2010000,19.28;
          2010600,19.26; 2011200,19.25; 2011800,19.24; 2012400,19.24; 2013000,
          19.22; 2013600,19.24; 2014200,19.22; 2014800,19.2; 2015400,19.2;
          2016000,19.21; 2016600,19.21; 2017200,19.2; 2017800,19.22; 2018400,
          19.22; 2019000,19.24; 2019600,19.26; 2020200,19.24; 2020800,19.24;
          2021400,19.24; 2022000,19.28; 2022600,19.28; 2023200,19.34; 2023800,
          19.33; 2024400,19.38; 2025000,19.38; 2025600,19.41; 2026200,19.41;
          2026800,19.45; 2027400,19.49; 2028000,19.53; 2028600,19.57; 2029200,
          19.61; 2029800,19.66; 2030400,19.69; 2031000,19.73; 2031600,19.78;
          2032200,19.82; 2032800,19.9; 2033400,19.94; 2034000,19.98; 2034600,
          20.02; 2035200,20.1; 2035800,20.14; 2036400,20.21; 2037000,20.5;
          2037600,20.3; 2038200,20.38; 2038800,20.42; 2039400,20.43; 2040000,
          20.49; 2040600,20.56; 2041200,20.63; 2041800,20.71; 2042400,20.75;
          2043000,20.79; 2043600,20.67; 2044200,20.67; 2044800,20.67; 2045400,
          20.63; 2046000,20.59; 2046600,20.58; 2047200,20.55; 2047800,20.51;
          2048400,20.46; 2049000,20.42; 2049600,20.4; 2050200,20.34; 2050800,
          20.3; 2051400,20.26; 2052000,20.27; 2052600,20.22; 2053200,20.18;
          2053800,20.14; 2054400,20.11; 2055000,20.06; 2055600,20.02; 2056200,
          20.02; 2056800,19.98; 2057400,19.94; 2058000,19.9; 2058600,19.86;
          2059200,19.86; 2059800,19.82; 2060400,19.81; 2061000,19.78; 2061600,
          19.73; 2062200,19.73; 2062800,19.69; 2063400,19.65; 2064000,19.65;
          2064600,19.61; 2065200,19.59; 2065800,19.57; 2066400,19.56; 2067000,
          19.53; 2067600,19.53; 2068200,19.52; 2068800,19.49; 2069400,19.45;
          2070000,19.45; 2070600,19.44; 2071200,19.41; 2071800,19.38; 2072400,
          19.37; 2073000,19.37; 2073600,19.37; 2074200,19.33; 2074800,19.33;
          2075400,19.33; 2076000,19.28; 2076600,19.28; 2077200,19.26; 2077800,
          19.24; 2078400,19.24; 2079000,19.24; 2079600,19.21; 2080200,19.2;
          2080800,19.2; 2081400,19.2; 2082000,19.2; 2082600,19.16; 2083200,
          19.16; 2083800,19.16; 2084400,19.16; 2085000,19.12; 2085600,19.12;
          2086200,19.12; 2086800,19.1; 2087400,19.08; 2088000,19.08; 2088600,
          19.08; 2089200,19.04; 2089800,19.04; 2090400,19.04; 2091000,19.04;
          2091600,19; 2092200,19.04; 2092800,19.04; 2093400,19.05; 2094000,
          19.04; 2094600,19.01; 2095200,19; 2095800,19; 2096400,19.01; 2097000,
          18.96; 2097600,18.96; 2098200,18.96; 2098800,18.96; 2099400,18.92;
          2100000,19.18; 2100600,19.42; 2101200,19.53; 2101800,19.65; 2102400,
          19.81; 2103000,19.9; 2103600,20.02; 2104200,20.1; 2104800,20.22;
          2105400,20.3; 2106000,20.42; 2106600,20.55; 2107200,20.63; 2107800,
          20.74; 2108400,20.79; 2109000,20.87; 2109600,20.98; 2110200,21.08;
          2110800,21.16; 2111400,21.24; 2112000,21.32; 2112600,21.32; 2113200,
          21.44; 2113800,21.54; 2114400,21.65; 2115000,21.7; 2115600,21.69;
          2116200,21.72; 2116800,21.73; 2117400,21.61; 2118000,21.68; 2118600,
          21.82; 2119200,21.48; 2119800,21.66; 2120400,21.69; 2121000,21.72;
          2121600,21.76; 2122200,21.81; 2122800,21.81; 2123400,21.85; 2124000,
          21.9; 2124600,21.93; 2125200,21.97; 2125800,22.05; 2126400,22.14;
          2127000,22.14; 2127600,22.22; 2128200,22.27; 2128800,22.34; 2129400,
          22.26; 2130000,22.38; 2130600,22.46; 2131200,22.45; 2131800,22.38;
          2132400,22.3; 2133000,22.17; 2133600,22.05; 2134200,21.97; 2134800,
          21.97; 2135400,22.05; 2136000,22.05; 2136600,22.06; 2137200,22.09;
          2137800,22.09; 2138400,22.13; 2139000,22.14; 2139600,22.09; 2140200,
          22.05; 2140800,22.09; 2141400,22.01; 2142000,21.93; 2142600,21.85;
          2143200,21.81; 2143800,21.73; 2144400,21.65; 2145000,21.6; 2145600,
          21.52; 2146200,21.44; 2146800,21.36; 2147400,21.32; 2148000,21.23;
          2148600,21.16; 2149200,21.08; 2149800,21.04; 2150400,20.96; 2151000,
          20.89; 2151600,20.83; 2152200,20.79; 2152800,20.75; 2153400,20.67;
          2154000,20.63; 2154600,20.63; 2155200,20.55; 2155800,20.51; 2156400,
          20.46; 2157000,20.46; 2157600,20.38; 2158200,20.34; 2158800,20.34;
          2159400,20.3; 2160000,20.27; 2160600,20.26; 2161200,20.22; 2161800,
          20.18; 2162400,20.19; 2163000,20.16; 2163600,20.1; 2164200,20.1;
          2164800,20.09; 2165400,20.02; 2166000,20.02; 2166600,20.02; 2167200,
          19.98; 2167800,19.98; 2168400,19.94; 2169000,19.94; 2169600,19.9;
          2170200,19.9; 2170800,19.88; 2171400,19.86; 2172000,19.86; 2172600,
          19.82; 2173200,19.82; 2173800,19.82; 2174400,19.82; 2175000,19.78;
          2175600,19.78; 2176200,19.77; 2176800,19.74; 2177400,19.73; 2178000,
          19.73; 2178600,19.71; 2179200,19.69; 2179800,19.69; 2180400,19.69;
          2181000,19.7; 2181600,19.69; 2182200,19.69; 2182800,19.69; 2183400,
          19.7; 2184000,19.66; 2184600,19.69; 2185200,19.69; 2185800,19.78;
          2186400,20.02; 2187000,20.14; 2187600,20.26; 2188200,20.38; 2188800,
          20.5; 2189400,20.59; 2190000,20.67; 2190600,20.79; 2191200,20.83;
          2191800,20.87; 2192400,20.95; 2193000,21.04; 2193600,21.16; 2194200,
          21.16; 2194800,21.24; 2195400,21.28; 2196000,21.36; 2196600,21.44;
          2197200,21.52; 2197800,21.64; 2198400,21.77; 2199000,21.93; 2199600,
          22.05; 2200200,22.09; 2200800,22.22; 2201400,22.34; 2202000,22.3;
          2202600,22.26; 2203200,22.26; 2203800,22.33; 2204400,22.35; 2205000,
          22.38; 2205600,22.38; 2206200,22.58; 2206800,22.66; 2207400,22.62;
          2208000,22.78; 2208600,22.83; 2209200,22.87; 2209800,22.92; 2210400,
          22.84; 2211000,22.95; 2211600,22.91; 2212200,22.85; 2212800,22.78;
          2213400,22.83; 2214000,22.82; 2214600,22.78; 2215200,22.83; 2215800,
          22.91; 2216400,22.91; 2217000,22.91; 2217600,22.91; 2218200,22.95;
          2218800,22.99; 2219400,23.03; 2220000,22.99; 2220600,23.03; 2221200,
          22.99; 2221800,22.94; 2222400,22.87; 2223000,22.88; 2223600,22.84;
          2224200,22.83; 2224800,22.7; 2225400,22.64; 2226000,22.54; 2226600,
          22.46; 2227200,22.39; 2227800,22.3; 2228400,22.22; 2229000,22.14;
          2229600,22.05; 2230200,22.01; 2230800,21.93; 2231400,21.85; 2232000,
          21.77; 2232600,21.73; 2233200,21.65; 2233800,21.61; 2234400,21.52;
          2235000,21.44; 2235600,21.4; 2236200,21.36; 2236800,21.28; 2237400,
          21.24; 2238000,21.2; 2238600,21.12; 2239200,21.08; 2239800,21.04;
          2240400,21; 2241000,20.96; 2241600,20.91; 2242200,20.87; 2242800,
          20.83; 2243400,20.81; 2244000,20.78; 2244600,20.75; 2245200,20.71;
          2245800,20.68; 2246400,20.68; 2247000,20.67; 2247600,20.63; 2248200,
          20.6; 2248800,20.56; 2249400,20.55; 2250000,20.51; 2250600,20.51;
          2251200,20.46; 2251800,20.46; 2252400,20.42; 2253000,20.42; 2253600,
          20.38; 2254200,20.36; 2254800,20.34; 2255400,20.3; 2256000,20.3;
          2256600,20.28; 2257200,20.26; 2257800,20.26; 2258400,20.26; 2259000,
          20.26; 2259600,20.22; 2260200,20.23; 2260800,20.22; 2261400,20.22;
          2262000,20.22; 2262600,20.18; 2263200,20.18; 2263800,20.18; 2264400,
          20.18; 2265000,20.18; 2265600,20.18; 2266200,20.18; 2266800,20.14;
          2267400,20.14; 2268000,20.14; 2268600,20.14; 2269200,20.14; 2269800,
          20.14; 2270400,20.15; 2271000,20.13; 2271600,20.26; 2272200,20.46;
          2272800,20.64; 2273400,20.75; 2274000,20.87; 2274600,20.96; 2275200,
          21.04; 2275800,21.2; 2276400,21.37; 2277000,21.44; 2277600,21.6;
          2278200,21.73; 2278800,21.85; 2279400,21.93; 2280000,21.93; 2280600,
          21.93; 2281200,22.02; 2281800,22.09; 2282400,22.09; 2283000,22.13;
          2283600,22.26; 2284200,22.26; 2284800,22.26; 2285400,22.31; 2286000,
          22.41; 2286600,22.45; 2287200,22.62; 2287800,22.59; 2288400,22.58;
          2289000,22.58; 2289600,22.46; 2290200,22.46; 2290800,22.72; 2291400,
          22.58; 2292000,22.7; 2292600,22.83; 2293200,23; 2293800,23.12;
          2294400,23.15; 2295000,23.19; 2295600,23.32; 2296200,23.28; 2296800,
          23.39; 2297400,23.44; 2298000,23.52; 2298600,23.55; 2299200,23.6;
          2299800,23.68; 2300400,23.68; 2301000,23.68; 2301600,23.72; 2302200,
          23.73; 2302800,23.68; 2303400,23.68; 2304000,23.68; 2304600,23.72;
          2305200,23.72; 2305800,23.68; 2306400,23.57; 2307000,23.52; 2307600,
          23.48; 2308200,23.44; 2308800,23.4; 2309400,23.36; 2310000,23.31;
          2310600,23.28; 2311200,23.27; 2311800,23.27; 2312400,23.15; 2313000,
          23.11; 2313600,23.03; 2314200,22.95; 2314800,22.87; 2315400,22.78;
          2316000,22.7; 2316600,22.62; 2317200,22.5; 2317800,22.42; 2318400,
          22.34; 2319000,22.26; 2319600,22.23; 2320200,22.14; 2320800,22.09;
          2321400,22.01; 2322000,21.93; 2322600,21.89; 2323200,21.81; 2323800,
          21.73; 2324400,21.69; 2325000,21.6; 2325600,21.58; 2326200,21.52;
          2326800,21.48; 2327400,21.4; 2328000,21.38; 2328600,21.32; 2329200,
          21.3; 2329800,21.25; 2330400,21.2; 2331000,21.16; 2331600,21.12;
          2332200,21.12; 2332800,21.09; 2333400,21.04; 2334000,21; 2334600,
          21.21; 2335200,20.97; 2335800,20.92; 2336400,20.89; 2337000,20.87;
          2337600,20.83; 2338200,20.83; 2338800,20.79; 2339400,20.79; 2340000,
          20.78; 2340600,20.75; 2341200,20.74; 2341800,20.71; 2342400,20.71;
          2343000,20.67; 2343600,20.67; 2344200,20.67; 2344800,20.67; 2345400,
          20.63; 2346000,20.63; 2346600,20.63; 2347200,20.61; 2347800,20.59;
          2348400,20.59; 2349000,20.59; 2349600,20.59; 2350200,20.58; 2350800,
          20.55; 2351400,20.55; 2352000,20.55; 2352600,20.55; 2353200,20.55;
          2353800,20.54; 2354400,20.51; 2355000,20.51; 2355600,20.51; 2356200,
          20.51; 2356800,20.51; 2357400,20.51; 2358000,20.51; 2358600,20.72;
          2359200,20.8; 2359800,20.96; 2360400,21.08; 2361000,21.2; 2361600,
          21.32; 2362200,21.44; 2362800,21.57; 2363400,21.68; 2364000,21.69;
          2364600,21.72; 2365200,21.77; 2365800,21.85; 2366400,21.89; 2367000,
          21.97; 2367600,22.02; 2368200,22.09; 2368800,22.14; 2369400,22.18;
          2370000,22.26; 2370600,22.26; 2371200,22.3; 2371800,22.3; 2372400,
          22.38; 2373000,22.47; 2373600,22.56; 2374200,22.57; 2374800,22.66;
          2375400,22.68; 2376000,22.7; 2376600,22.72; 2377200,22.66; 2377800,
          22.66; 2378400,22.7; 2379000,22.7; 2379600,22.74; 2380200,22.88;
          2380800,23.03; 2381400,23.16; 2382000,23.15; 2382600,23.17; 2383200,
          23.32; 2383800,23.44; 2384400,23.28; 2385000,23.07; 2385600,23.03;
          2386200,22.95; 2386800,22.91; 2387400,23; 2388000,23.07; 2388600,
          23.03; 2389200,23.03; 2389800,22.99; 2390400,22.99; 2391000,23.12;
          2391600,23.03; 2392200,22.91; 2392800,23.14; 2393400,23.27; 2394000,
          23.32; 2394600,23.4; 2395200,23.44; 2395800,23.4; 2396400,23.37;
          2397000,23.27; 2397600,23.19; 2398200,23.11; 2398800,23.03; 2399400,
          22.95; 2400000,22.91; 2400600,22.83; 2401200,22.74; 2401800,22.7;
          2402400,22.64; 2403000,22.58; 2403600,22.5; 2404200,22.46; 2404800,
          22.38; 2405400,22.34; 2406000,22.26; 2406600,22.22; 2407200,22.19;
          2407800,22.11; 2408400,22.09; 2409000,22.01; 2409600,21.98; 2410200,
          21.93; 2410800,21.89; 2411400,21.85; 2412000,21.81; 2412600,21.78;
          2413200,21.73; 2413800,21.72; 2414400,21.65; 2415000,21.65; 2415600,
          21.6; 2416200,21.6; 2416800,21.56; 2417400,21.53; 2418000,21.52;
          2418600,21.48; 2419200,21.48; 2419800,21.48; 2420400,21.46; 2421000,
          21.44; 2421600,21.41; 2422200,21.4; 2422800,21.36; 2423400,21.36;
          2424000,21.36; 2424600,21.32; 2425200,21.32; 2425800,21.32; 2426400,
          21.32; 2427000,21.32; 2427600,21.28; 2428200,21.24; 2428800,21.24;
          2429400,21.24; 2430000,21.23; 2430600,21.22; 2431200,21.23; 2431800,
          21.24; 2432400,21.2; 2433000,21.2; 2433600,21.21; 2434200,21.2;
          2434800,21.2; 2435400,21.2; 2436000,21.2; 2436600,21.2; 2437200,21.2;
          2437800,21.16; 2438400,21.16; 2439000,21.18; 2439600,21.16; 2440200,
          21.16; 2440800,21.16; 2441400,21.16; 2442000,21.16; 2442600,21.16;
          2443200,21.16; 2443800,21.15; 2444400,21.19; 2445000,21.32; 2445600,
          21.44; 2446200,21.52; 2446800,21.64; 2447400,21.73; 2448000,21.81;
          2448600,21.93; 2449200,22.09; 2449800,22.18; 2450400,22.29; 2451000,
          22.38; 2451600,22.46; 2452200,22.5; 2452800,22.58; 2453400,22.7;
          2454000,22.74; 2454600,22.78; 2455200,22.87; 2455800,22.95; 2456400,
          23.02; 2457000,23.07; 2457600,23.11; 2458200,23.19; 2458800,23.19;
          2459400,23.2; 2460000,23.26; 2460600,23.27; 2461200,23.27; 2461800,
          23.27; 2462400,23.23; 2463000,23.31; 2463600,23.32; 2464200,23.32;
          2464800,23.32; 2465400,23.32; 2466000,23.32; 2466600,23.4; 2467200,
          23.36; 2467800,23.35; 2468400,23.47; 2469000,23.48; 2469600,23.44;
          2470200,23.48; 2470800,23.56; 2471400,23.6; 2472000,23.65; 2472600,
          23.64; 2473200,23.64; 2473800,23.74; 2474400,23.77; 2475000,23.64;
          2475600,23.64; 2476200,23.68; 2476800,23.73; 2477400,23.68; 2478000,
          23.68; 2478600,23.68; 2479200,23.68; 2479800,23.71; 2480400,23.6;
          2481000,23.61; 2481600,23.72; 2482200,23.74; 2482800,23.73; 2483400,
          23.71; 2484000,23.56; 2484600,23.48; 2485200,23.4; 2485800,23.32;
          2486400,23.27; 2487000,23.15; 2487600,23.11; 2488200,23.03; 2488800,
          22.95; 2489400,22.9; 2490000,22.8; 2490600,22.74; 2491200,22.7;
          2491800,22.62; 2492400,22.54; 2493000,22.47; 2493600,22.43; 2494200,
          22.34; 2494800,22.27; 2495400,22.22; 2496000,22.18; 2496600,22.09;
          2497200,22.05; 2497800,22.01; 2498400,21.97; 2499000,21.89; 2499600,
          21.85; 2500200,21.81; 2500800,21.8; 2501400,21.76; 2502000,21.73;
          2502600,21.69; 2503200,21.65; 2503800,21.64; 2504400,21.6; 2505000,
          21.58; 2505600,21.53; 2506200,21.52; 2506800,21.51; 2507400,21.48;
          2508000,21.48; 2508600,21.44; 2509200,21.42; 2509800,21.4; 2510400,
          21.4; 2511000,21.37; 2511600,21.36; 2512200,21.32; 2512800,21.32;
          2513400,21.32; 2514000,21.28; 2514600,21.28; 2515200,21.24; 2515800,
          21.24; 2516400,21.21; 2517000,21.2; 2517600,21.19; 2518200,21.16;
          2518800,21.15; 2519400,21.12; 2520000,21.12; 2520600,21.12; 2521200,
          21.08; 2521800,21.08; 2522400,21.07; 2523000,21.04; 2523600,21.05;
          2524200,21.01; 2524800,21; 2525400,20.98; 2526000,20.96; 2526600,
          20.96; 2527200,20.92; 2527800,20.91; 2528400,20.92; 2529000,20.88;
          2529600,20.87; 2530200,20.87; 2530800,20.83; 2531400,20.83; 2532000,
          20.83; 2532600,20.83; 2533200,20.83; 2533800,20.8; 2534400,20.8;
          2535000,20.79; 2535600,20.79; 2536200,20.79; 2536800,20.79; 2537400,
          20.8; 2538000,20.8; 2538600,20.79; 2539200,20.84; 2539800,20.83;
          2540400,20.83; 2541000,20.83; 2541600,20.87; 2542200,20.87; 2542800,
          20.91; 2543400,20.96; 2544000,21; 2544600,21; 2545200,21; 2545800,
          21.04; 2546400,21.04; 2547000,21.08; 2547600,21.12; 2548200,21.12;
          2548800,21.12; 2549400,21.12; 2550000,21.16; 2550600,21.16; 2551200,
          21.2; 2551800,21.28; 2552400,21.32; 2553000,21.4; 2553600,21.44;
          2554200,21.49; 2554800,21.52; 2555400,21.56; 2556000,21.63; 2556600,
          21.64; 2557200,21.65; 2557800,21.74; 2558400,21.71; 2559000,21.69;
          2559600,21.69; 2560200,21.68; 2560800,21.65; 2561400,21.6; 2562000,
          21.56; 2562600,21.56; 2563200,21.52; 2563800,21.5; 2564400,21.48;
          2565000,21.44; 2565600,21.44; 2566200,21.43; 2566800,21.4; 2567400,
          21.38; 2568000,21.32; 2568600,21.32; 2569200,21.32; 2569800,21.31;
          2570400,21.28; 2571000,21.28; 2571600,21.27; 2572200,21.24; 2572800,
          21.2; 2573400,21.2; 2574000,21.2; 2574600,21.16; 2575200,21.16;
          2575800,21.12; 2576400,21.12; 2577000,21.08; 2577600,21.07; 2578200,
          21.04; 2578800,21.03; 2579400,21; 2580000,21; 2580600,20.96; 2581200,
          20.96; 2581800,20.96; 2582400,20.91; 2583000,20.91; 2583600,20.91;
          2584200,20.87; 2584800,20.87; 2585400,20.83; 2586000,20.83; 2586600,
          20.83; 2587200,20.83; 2587800,20.79; 2588400,20.79; 2589000,20.79;
          2589600,20.76; 2590200,20.75; 2590800,20.76; 2591400,20.71; 2505600,
          20.71; 2506200,20.68; 2506800,20.67; 2507400,20.67; 2508000,20.67;
          2508600,20.63; 2509200,20.63; 2509800,20.63; 2510400,20.63; 2511000,
          20.63; 2511600,20.64; 2512200,20.6; 2512800,20.59; 2513400,20.59;
          2514000,20.57; 2514600,20.55; 2515200,20.55; 2515800,20.55; 2516400,
          20.55; 2517000,20.55; 2517600,20.54; 2518200,20.51; 2518800,20.51;
          2519400,20.51; 2520000,20.51; 2520600,20.51; 2521200,20.51; 2521800,
          20.5; 2522400,20.52; 2523000,20.5; 2523600,20.49; 2524200,20.46;
          2524800,20.46; 2525400,20.48; 2526000,20.46; 2526600,20.46; 2527200,
          20.46; 2527800,20.46; 2528400,20.46; 2529000,20.46; 2529600,20.46;
          2530200,20.43; 2530800,20.42; 2531400,20.44; 2532000,20.44; 2532600,
          20.44; 2533200,20.42; 2533800,20.42; 2534400,20.42; 2535000,20.44;
          2535600,20.42; 2536200,20.42; 2536800,20.42; 2537400,20.42; 2538000,
          20.42; 2538600,20.42; 2539200,20.42; 2539800,20.45; 2540400,20.46;
          2541000,20.46; 2541600,20.46; 2542200,20.46; 2542800,20.46; 2543400,
          20.46; 2544000,20.46; 2544600,20.46; 2545200,20.5; 2545800,20.5;
          2546400,20.46; 2547000,20.46; 2547600,20.46; 2548200,20.46; 2548800,
          20.46; 2549400,20.46; 2550000,20.46; 2550600,20.46; 2551200,20.43;
          2551800,20.46; 2552400,20.46; 2553000,20.46; 2553600,20.46; 2554200,
          20.46; 2554800,20.46; 2555400,20.46; 2556000,20.46; 2556600,20.46;
          2557200,20.46; 2557800,20.46; 2558400,20.46; 2559000,20.46; 2559600,
          20.45; 2560200,20.42; 2560800,20.42; 2561400,20.42; 2562000,20.42;
          2562600,20.42; 2563200,20.42; 2563800,20.42; 2564400,20.41; 2565000,
          20.42; 2565600,20.38; 2566200,20.38; 2566800,20.38; 2567400,20.4;
          2568000,20.34; 2568600,20.34; 2569200,20.34; 2569800,20.34; 2570400,
          20.34; 2571000,20.34; 2571600,20.35; 2572200,20.32; 2572800,20.33;
          2573400,20.3; 2574000,20.31; 2574600,20.32; 2575200,20.32; 2575800,
          20.3; 2576400,20.3; 2577000,20.3; 2577600,20.3; 2578200,20.3; 2578800,
          20.3; 2579400,20.3; 2580000,20.3; 2580600,20.3; 2581200,20.3; 2581800,
          20.3; 2582400,20.3; 2583000,20.3; 2583600,20.32; 2584200,20.3;
          2584800,20.3; 2585400,20.31; 2586000,20.3; 2586600,20.3; 2587200,20.3;
          2587800,20.3; 2588400,20.33; 2589000,20.32; 2589600,20.34; 2590200,
          20.34; 2590800,20.33; 2591400,20.36; 2592000,20.34; 2592600,20.34;
          2593200,20.34; 2593800,20.34; 2594400,20.34; 2595000,20.34; 2595600,
          20.34; 2596200,20.34; 2596800,20.34; 2597400,20.34; 2598000,20.34;
          2598600,20.34; 2599200,20.34; 2599800,20.34; 2600400,20.34; 2601000,
          20.34; 2601600,20.34; 2602200,20.34; 2602800,20.34; 2603400,20.34;
          2604000,20.34; 2604600,20.34; 2605200,20.34; 2605800,20.34; 2606400,
          20.34; 2607000,20.34; 2607600,20.34; 2608200,20.34; 2608800,20.34;
          2609400,20.34; 2610000,20.35; 2610600,20.38; 2611200,20.38; 2611800,
          20.38; 2612400,20.38; 2613000,20.39; 2613600,20.42; 2614200,20.42;
          2614800,20.42; 2615400,20.42; 2616000,20.42; 2616600,20.39; 2617200,
          20.55; 2617800,20.75; 2618400,20.87; 2619000,21.01; 2619600,21.12;
          2620200,21.2; 2620800,21.32; 2621400,21.43; 2622000,21.58; 2622600,
          21.64; 2623200,21.6; 2623800,21.65; 2624400,21.69; 2625000,21.78;
          2625600,21.93; 2626200,22.01; 2626800,22.05; 2627400,22.14; 2628000,
          22.17; 2628600,22.29; 2629200,22.34; 2629800,22.41; 2630400,22.47;
          2631000,22.7; 2631600,22.82; 2632200,22.91; 2632800,22.95; 2633400,
          22.99; 2634000,23; 2634600,22.91; 2635200,22.83; 2635800,22.62;
          2636400,21.8; 2637000,22.16; 2637600,22.14; 2638200,22.42; 2638800,
          22.54; 2639400,22.58; 2640000,22.72; 2640600,22.8; 2641200,22.79;
          2641800,22.91; 2642400,23.02; 2643000,23.15; 2643600,23.23; 2644200,
          23.27; 2644800,23.32; 2645400,23.27; 2646000,23.39; 2646600,23.44;
          2647200,23.49; 2647800,23.52; 2648400,23.57; 2649000,23.6; 2649600,
          23.6; 2650200,23.6; 2650800,23.52; 2651400,23.52; 2652000,23.4;
          2652600,23.27; 2653200,23.24; 2653800,23.27; 2654400,23.24; 2655000,
          23.23; 2655600,23.19; 2656200,23.16; 2656800,23.15; 2657400,23.12;
          2658000,23.11; 2658600,23.07; 2659200,22.99; 2659800,22.91; 2660400,
          22.8; 2661000,22.74; 2661600,22.66; 2662200,22.58; 2662800,22.5;
          2663400,22.42; 2664000,22.38; 2664600,22.3; 2665200,22.26; 2665800,
          22.18; 2666400,22.09; 2667000,22.05; 2667600,22.02; 2668200,21.93;
          2668800,21.89; 2669400,21.84; 2670000,21.77; 2670600,21.73; 2671200,
          21.69; 2671800,21.65; 2672400,21.6; 2673000,21.56; 2673600,21.52;
          2674200,21.48; 2674800,21.44; 2675400,21.4; 2676000,21.36; 2676600,
          21.32; 2677200,21.32; 2677800,21.28; 2678400,21.28; 2679000,21.24;
          2679600,21.2; 2680200,21.2; 2680800,21.16; 2681400,21.12; 2682000,
          21.12; 2682600,21.12; 2683200,21.08; 2683800,21.09; 2684400,21.07;
          2685000,21.04; 2685600,21.04; 2686200,21.01; 2686800,21; 2687400,
          20.99; 2688000,20.96; 2688600,20.96; 2689200,20.96; 2689800,20.96;
          2690400,20.96; 2691000,20.95; 2691600,20.95; 2692200,20.94; 2692800,
          20.92; 2693400,20.92; 2694000,20.91; 2694600,20.91; 2695200,20.92;
          2695800,20.91; 2696400,20.91; 2697000,20.91; 2697600,20.9; 2698200,
          20.89; 2698800,20.87; 2699400,20.88; 2700000,20.87; 2700600,20.87;
          2701200,20.87; 2701800,20.88; 2702400,20.87; 2703000,20.87; 2703600,
          20.96; 2704200,21.16; 2704800,21.3; 2705400,21.36; 2706000,21.44;
          2706600,21.49; 2707200,21.65; 2707800,21.81; 2708400,21.86; 2709000,
          21.93; 2709600,21.97; 2710200,22.06; 2710800,22.14; 2711400,22.24;
          2712000,22.3; 2712600,22.38; 2713200,22.44; 2713800,22.5; 2714400,
          22.55; 2715000,22.62; 2715600,22.66; 2716200,22.64; 2716800,22.78;
          2717400,22.87; 2718000,22.91; 2718600,22.95; 2719200,23.07; 2719800,
          23.08; 2720400,23.07; 2721000,23.11; 2721600,23.11; 2722200,23.15;
          2722800,23.15; 2723400,23.31; 2724000,23.4; 2724600,23.55; 2725200,
          23.6; 2725800,23.68; 2726400,23.69; 2727000,23.72; 2727600,23.75;
          2728200,23.8; 2728800,23.8; 2729400,23.84; 2730000,23.9; 2730600,
          23.92; 2731200,23.91; 2731800,24.01; 2732400,24.01; 2733000,23.94;
          2733600,23.88; 2734200,23.84; 2734800,23.88; 2735400,23.94; 2736000,
          24.01; 2736600,24; 2737200,24.02; 2737800,24.02; 2738400,23.96;
          2739000,24.01; 2739600,23.96; 2740200,23.85; 2740800,23.72; 2741400,
          23.72; 2742000,23.67; 2742600,23.71; 2743200,23.68; 2743800,23.56;
          2744400,23.44; 2745000,23.4; 2745600,23.32; 2746200,23.23; 2746800,
          23.15; 2747400,23.11; 2748000,23.03; 2748600,22.95; 2749200,22.91;
          2749800,22.82; 2750400,22.75; 2751000,22.69; 2751600,22.62; 2752200,
          22.54; 2752800,22.5; 2753400,22.42; 2754000,22.39; 2754600,22.3;
          2755200,22.26; 2755800,22.22; 2756400,22.18; 2757000,22.1; 2757600,
          22.05; 2758200,22.01; 2758800,21.97; 2759400,21.94; 2760000,21.89;
          2760600,21.85; 2761200,21.81; 2761800,21.8; 2762400,21.73; 2763000,
          21.74; 2763600,21.69; 2764200,21.65; 2764800,21.64; 2765400,21.6;
          2766000,21.6; 2766600,21.56; 2767200,21.56; 2767800,21.52; 2768400,
          21.5; 2769000,21.48; 2769600,21.44; 2770200,21.44; 2770800,21.46;
          2771400,21.42; 2772000,21.4; 2772600,21.4; 2773200,21.38; 2773800,
          21.36; 2774400,21.37; 2775000,21.32; 2775600,21.32; 2776200,21.32;
          2776800,21.3; 2777400,21.28; 2778000,21.28; 2778600,21.26; 2779200,
          21.25; 2779800,21.24; 2780400,21.24; 2781000,21.22; 2781600,21.2;
          2782200,21.2; 2782800,21.2; 2783400,21.16; 2784000,21.16; 2784600,
          21.16; 2785200,21.16; 2785800,21.16; 2786400,21.16; 2787000,21.16;
          2787600,21.16; 2788200,21.17; 2788800,21.16; 2789400,21.16; 2790000,
          21.16; 2790600,21.16; 2791200,21.36; 2791800,21.52; 2792400,21.65;
          2793000,21.77; 2793600,21.89; 2794200,21.97; 2794800,22.01; 2795400,
          22.08; 2796000,22.22; 2796600,22.3; 2797200,22.42; 2797800,22.49;
          2798400,22.5; 2799000,22.54; 2799600,22.62; 2800200,22.62; 2800800,
          22.74; 2801400,22.78; 2802000,22.88; 2802600,22.87; 2803200,22.92;
          2803800,22.95; 2804400,23; 2805000,23.03; 2805600,23.11; 2806200,
          23.11; 2806800,23.11; 2807400,23.15; 2808000,23.16; 2808600,23.15;
          2809200,23.16; 2809800,23.19; 2810400,23.19; 2811000,23.15; 2811600,
          23.11; 2812200,23.11; 2812800,23.03; 2813400,23.06; 2814000,23.19;
          2814600,23.23; 2815200,23.2; 2815800,23.25; 2816400,23.28; 2817000,
          23.2; 2817600,23.36; 2818200,23.4; 2818800,23.4; 2819400,23.44;
          2820000,23.44; 2820600,23.48; 2821200,23.47; 2821800,23.48; 2822400,
          23.48; 2823000,23.52; 2823600,23.57; 2824200,23.55; 2824800,23.53;
          2825400,23.49; 2826000,23.52; 2826600,23.56; 2827200,23.53; 2827800,
          23.44; 2828400,23.36; 2829000,23.27; 2829600,23.23; 2830200,23.23;
          2830800,23.19; 2831400,23.14; 2832000,23.11; 2832600,23.03; 2833200,
          22.92; 2833800,22.83; 2834400,22.74; 2835000,22.64; 2835600,22.58;
          2836200,22.5; 2836800,22.42; 2837400,22.38; 2838000,22.3; 2838600,
          22.22; 2839200,22.14; 2839800,22.08; 2840400,22.01; 2841000,21.97;
          2841600,21.89; 2842200,21.81; 2842800,21.77; 2843400,21.73; 2844000,
          21.65; 2844600,21.61; 2845200,21.6; 2845800,21.56; 2846400,21.48;
          2847000,21.46; 2847600,21.4; 2848200,21.4; 2848800,21.36; 2849400,
          21.32; 2850000,21.28; 2850600,21.28; 2851200,21.24; 2851800,21.2;
          2852400,21.16; 2853000,21.16; 2853600,21.12; 2854200,21.12; 2854800,
          21.08; 2855400,21.08; 2856000,21.07; 2856600,21.04; 2857200,21;
          2857800,21; 2858400,20.99; 2859000,20.96; 2859600,20.96; 2860200,
          20.94; 2860800,20.91; 2861400,20.91; 2862000,20.88; 2862600,20.87;
          2863200,20.88; 2863800,20.87; 2864400,20.87; 2865000,20.83; 2865600,
          20.84; 2866200,20.83; 2866800,20.83; 2867400,20.83; 2868000,20.83;
          2868600,20.83; 2869200,20.8; 2869800,20.79; 2870400,20.82; 2871000,
          20.79; 2871600,20.8; 2872200,20.79; 2872800,20.79; 2873400,20.79;
          2874000,20.79; 2874600,20.8; 2875200,20.79; 2875800,20.76; 2876400,
          20.75; 2877000,20.75; 2877600,20.99; 2878200,21.16; 2878800,21.44;
          2879400,21.52; 2880000,21.56; 2880600,21.65; 2881200,21.65; 2881800,
          21.69; 2882400,21.77; 2883000,21.81; 2883600,21.93; 2884200,22.09;
          2884800,22.18; 2885400,22.26; 2886000,22.39; 2886600,22.5; 2887200,
          22.58; 2887800,22.62; 2888400,22.7; 2889000,22.78; 2889600,22.82;
          2890200,22.86; 2890800,22.94; 2891400,23.03; 2892000,23.03; 2892600,
          23.12; 2893200,23.15; 2893800,23.15; 2894400,23.15; 2895000,23.11;
          2895600,23.07; 2896200,23.03; 2896800,23.03; 2897400,23.08; 2898000,
          23.18; 2898600,23.23; 2899200,23.24; 2899800,23.23; 2900400,23.2;
          2901000,23.24; 2901600,23.32; 2902200,23.4; 2902800,23.4; 2903400,
          23.4; 2904000,23.48; 2904600,23.56; 2905200,23.55; 2905800,23.56;
          2906400,23.56; 2907000,23.6; 2907600,23.57; 2908200,23.56; 2908800,
          23.56; 2909400,23.6; 2910000,23.64; 2910600,23.64; 2911200,23.6;
          2911800,23.56; 2912400,23.52; 2913000,23.48; 2913600,23.4; 2914200,
          23.27; 2914800,23.16; 2915400,23.11; 2916000,23.03; 2916600,22.95;
          2917200,22.9; 2917800,22.83; 2918400,22.78; 2919000,22.7; 2919600,
          22.62; 2920200,22.58; 2920800,22.5; 2921400,22.42; 2922000,22.38;
          2922600,22.3; 2923200,22.26; 2923800,22.22; 2924400,22.14; 2925000,
          22.09; 2925600,22.05; 2926200,22.01; 2926800,21.94; 2927400,21.89;
          2928000,21.85; 2928600,21.81; 2929200,21.78; 2929800,21.73; 2930400,
          21.69; 2931000,21.65; 2931600,21.6; 2932200,21.56; 2932800,21.52;
          2933400,21.52; 2934000,21.48; 2934600,21.44; 2935200,21.42; 2935800,
          21.4; 2936400,21.36; 2937000,21.33; 2937600,21.32; 2938200,21.32;
          2938800,21.29; 2939400,21.24; 2940000,21.24; 2940600,21.2; 2941200,
          21.2; 2941800,21.2; 2942400,21.16; 2943000,21.16; 2943600,21.13;
          2944200,21.12; 2944800,21.12; 2945400,21.13; 2946000,21.08; 2946600,
          21.08; 2947200,21.08; 2947800,21.08; 2948400,21.07; 2949000,21.04;
          2949600,21.04; 2950200,21.05; 2950800,21.04; 2951400,21.04; 2952000,
          21.04; 2952600,21.03; 2953200,21.02; 2953800,21; 2954400,21; 2955000,
          21; 2955600,21; 2956200,21; 2956800,20.99; 2957400,21; 2958000,20.98;
          2958600,20.96; 2959200,20.96; 2959800,20.96; 2960400,20.97; 2961000,
          20.96; 2961600,20.96; 2962200,20.96; 2962800,20.95; 2963400,20.92;
          2964000,20.91; 2964600,20.96; 2965200,21.12; 2965800,21.28; 2966400,
          21.4; 2967000,21.56; 2967600,21.65; 2968200,21.6; 2968800,21.77;
          2969400,21.93; 2970000,22.01; 2970600,22.09; 2971200,22.18; 2971800,
          22.26; 2972400,22.38; 2973000,22.46; 2973600,22.58; 2974200,22.62;
          2974800,22.72; 2975400,22.78; 2976000,22.83; 2976600,22.91; 2977200,
          22.94; 2977800,23.04; 2978400,23.07; 2979000,23.12; 2979600,23.15;
          2980200,23.11; 2980800,23.07; 2981400,23.07; 2982000,23.19; 2982600,
          23.27; 2983200,23.32; 2983800,23.36; 2984400,22.91; 2985000,19.82;
          2985600,20.14; 2986200,19.17; 2986800,21.07; 2987400,22.02; 2988000,
          22.38; 2988600,22.58; 2989200,22.74; 2989800,22.83; 2990400,22.91;
          2991000,23; 2991600,23.02; 2992200,23.07; 2992800,23.08; 2993400,
          23.15; 2994000,23.19; 2994600,23.19; 2995200,23.19; 2995800,23.15;
          2996400,23.12; 2997000,23.19; 2997600,23.19; 2998200,23.15; 2998800,
          23.11; 2999400,23.11; 3000000,23.11; 3000600,23.11; 3001200,23.15;
          3001800,23.16; 3002400,23.19; 3003000,23.16; 3003600,23.08; 3004200,
          23.03; 3004800,22.95; 3005400,22.91; 3006000,22.83; 3006600,22.78;
          3007200,22.7; 3007800,22.66; 3008400,22.59; 3009000,22.5; 3009600,
          22.46; 3010200,22.38; 3010800,22.34; 3011400,22.27; 3012000,22.22;
          3012600,22.14; 3013200,22.09; 3013800,22.05; 3014400,21.97; 3015000,
          21.93; 3015600,21.88; 3016200,21.84; 3016800,21.81; 3017400,21.73;
          3018000,21.74; 3018600,21.65; 3019200,21.63; 3019800,21.6; 3020400,
          21.58; 3021000,21.52; 3021600,21.5; 3022200,21.44; 3022800,21.4;
          3023400,21.36; 3024000,21.36; 3024600,21.32; 3025200,21.29; 3025800,
          21.25; 3026400,21.25; 3027000,21.2; 3027600,21.16; 3028200,21.12;
          3028800,21.12; 3029400,21.1; 3030000,21.08; 3030600,21.08; 3031200,
          21.04; 3031800,21; 3032400,21; 3033000,20.97; 3033600,20.95; 3034200,
          20.91; 3034800,20.88; 3035400,20.87; 3036000,20.86; 3036600,20.83;
          3037200,20.83; 3037800,20.79; 3038400,20.79; 3039000,20.75; 3039600,
          20.75; 3040200,20.71; 3040800,20.71; 3041400,20.67; 3042000,20.67;
          3042600,20.67; 3043200,20.63; 3043800,20.63; 3044400,20.63; 3045000,
          20.59; 3045600,20.58; 3046200,20.55; 3046800,20.55; 3047400,20.55;
          3048000,20.53; 3048600,20.51; 3049200,20.51; 3049800,20.51; 3050400,
          20.51; 3051000,20.51; 3051600,20.52; 3052200,20.46; 3052800,20.46;
          3053400,20.46; 3054000,20.5; 3054600,20.46; 3055200,20.48; 3055800,
          20.52; 3056400,20.51; 3057000,20.51; 3057600,20.54; 3058200,20.55;
          3058800,20.55; 3059400,20.6; 3060000,20.59; 3060600,20.63; 3061200,
          20.63; 3061800,20.67; 3062400,20.67; 3063000,20.71; 3063600,20.74;
          3064200,20.75; 3064800,20.79; 3065400,20.83; 3066000,20.86; 3066600,
          20.87; 3067200,20.91; 3067800,20.95; 3068400,20.97; 3069000,21.04;
          3069600,21.08; 3070200,21.12; 3070800,21.16; 3071400,21.2; 3072000,
          21.28; 3072600,21.33; 3073200,21.4; 3073800,21.48; 3074400,21.56;
          3075000,21.6; 3075600,21.62; 3076200,21.69; 3076800,21.73; 3077400,
          21.77; 3078000,21.81; 3078600,21.85; 3079200,21.89; 3079800,21.93;
          3080400,21.92; 3081000,21.89; 3081600,21.88; 3082200,21.89; 3082800,
          21.85; 3083400,21.81; 3084000,21.8; 3084600,21.73; 3085200,21.7;
          3085800,21.65; 3086400,21.64; 3087000,21.6; 3087600,21.53; 3088200,
          21.5; 3088800,21.48; 3089400,21.46; 3090000,21.4; 3090600,21.36;
          3091200,21.32; 3091800,21.28; 3092400,21.28; 3093000,21.24; 3093600,
          21.21; 3094200,21.16; 3094800,21.13; 3095400,21.12; 3096000,21.08;
          3096600,21.05; 3097200,21; 3097800,20.98; 3098400,20.96; 3099000,
          20.92; 3099600,20.91; 3100200,20.88; 3100800,20.83; 3101400,20.83;
          3102000,20.79; 3102600,20.76; 3103200,20.76; 3103800,20.73; 3104400,
          20.71; 3105000,20.67; 3105600,20.67; 3106200,20.67; 3106800,20.63;
          3107400,20.61; 3108000,20.59; 3108600,20.6; 3109200,20.55; 3109800,
          20.55; 3110400,20.51; 3111000,20.51; 3111600,20.51; 3112200,20.5;
          3112800,20.5; 3113400,20.47; 3114000,20.46; 3114600,20.46; 3115200,
          20.42; 3115800,20.42; 3116400,20.42; 3117000,20.42; 3117600,20.39;
          3118200,20.38; 3118800,20.38; 3119400,20.38; 3120000,20.38; 3120600,
          20.36; 3121200,20.34; 3121800,20.34; 3122400,20.34; 3123000,20.36;
          3123600,20.31; 3124200,20.3; 3124800,20.3; 3125400,20.3; 3126000,20.3;
          3126600,20.32; 3127200,20.3; 3127800,20.31; 3128400,20.29; 3129000,
          20.31; 3129600,20.3; 3130200,20.3; 3130800,20.28; 3131400,20.26;
          3132000,20.26; 3132600,20.26; 3133200,20.26; 3133800,20.26; 3134400,
          20.26; 3135000,20.26; 3135600,20.26; 3136200,20.26; 3136800,20.26;
          3137400,20.26; 3138000,20.26; 3138600,20.26; 3139200,20.26; 3139800,
          20.26; 3140400,20.26; 3141000,20.26; 3141600,20.26; 3142200,20.27;
          3142800,20.3; 3143400,20.3; 3144000,20.31; 3144600,20.3; 3145200,20.3;
          3145800,20.3; 3146400,20.3; 3147000,20.32; 3147600,20.3; 3148200,20.3;
          3148800,20.3; 3149400,20.3; 3150000,20.3; 3150600,20.3; 3151200,20.31;
          3151800,20.31; 3152400,20.26; 3153000,20.26; 3153600,20.26; 3154200,
          20.26; 3154800,20.24; 3155400,20.22; 3156000,20.22; 3156600,20.22;
          3157200,20.22; 3157800,20.18; 3158400,20.19; 3159000,20.22; 3159600,
          20.18; 3160200,20.18; 3160800,20.18; 3161400,20.18; 3162000,20.18;
          3162600,20.18; 3163200,20.18; 3163800,20.18; 3164400,20.2; 3165000,
          20.22; 3165600,20.2; 3166200,20.18; 3166800,20.18; 3167400,20.18;
          3168000,20.18; 3168600,20.19; 3169200,20.18; 3169800,20.18; 3170400,
          20.14; 3171000,20.14; 3171600,20.14; 3172200,20.15; 3172800,20.13;
          3173400,20.1; 3174000,20.1; 3174600,20.1; 3175200,20.1; 3175800,20.1;
          3176400,20.06; 3177000,20.06; 3177600,20.05; 3178200,20.06; 3178800,
          20.03; 3179400,20.02; 3180000,20.02; 3180600,20.02; 3181200,20.02;
          3181800,20; 3182400,19.99; 3183000,19.98; 3183600,19.98; 3184200,
          19.98; 3184800,19.98; 3185400,19.99; 3186000,19.94; 3186600,19.94;
          3187200,19.9; 3187800,19.91; 3188400,19.9; 3189000,19.9; 3189600,19.9;
          3190200,19.89; 3190800,19.86; 3191400,19.86; 3192000,19.86; 3192600,
          19.86; 3193200,19.82; 3193800,19.82; 3194400,19.82; 3195000,19.78;
          3195600,19.81; 3196200,19.78; 3196800,19.78; 3197400,19.78; 3198000,
          19.75; 3198600,19.73; 3199200,19.73; 3199800,19.7; 3200400,19.69;
          3201000,19.69; 3201600,19.7; 3202200,19.67; 3202800,19.66; 3203400,
          19.65; 3204000,19.65; 3204600,19.65; 3205200,19.61; 3205800,19.61;
          3206400,19.57; 3207000,19.57; 3207600,19.55; 3208200,19.53; 3208800,
          19.53; 3209400,19.53; 3210000,19.53; 3210600,19.53; 3211200,19.53;
          3211800,19.5; 3212400,19.5; 3213000,19.49; 3213600,19.49; 3214200,
          19.49; 3214800,19.49; 3215400,19.49; 3216000,19.49; 3216600,19.49;
          3217200,19.49; 3217800,19.49; 3218400,19.5; 3219000,19.49; 3219600,
          19.49; 3220200,19.49; 3220800,19.49; 3221400,19.49; 3222000,19.46;
          3222600,19.7; 3223200,19.9; 3223800,20.08; 3224400,20.34; 3225000,
          20.75; 3225600,20.87; 3226200,21; 3226800,21.08; 3227400,21.12;
          3228000,21.15; 3228600,21.28; 3229200,21.33; 3229800,21.44; 3230400,
          21.52; 3231000,21.6; 3231600,21.69; 3232200,21.74; 3232800,21.76;
          3233400,21.84; 3234000,21.93; 3234600,21.97; 3235200,21.97; 3235800,
          22.01; 3236400,22.01; 3237000,22.02; 3237600,22.05; 3238200,22.01;
          3238800,21.97; 3239400,21.97; 3240000,21.97; 3240600,21.97; 3241200,
          21.96; 3241800,21.85; 3242400,21.77; 3243000,21.85; 3243600,21.85;
          3244200,21.9; 3244800,21.97; 3245400,22.14; 3246000,22.06; 3246600,
          22.08; 3247200,22.18; 3247800,22.18; 3248400,22.18; 3249000,22.27;
          3249600,22.3; 3250200,22.36; 3250800,22.42; 3251400,22.46; 3252000,
          22.46; 3252600,22.5; 3253200,22.5; 3253800,22.54; 3254400,22.58;
          3255000,22.55; 3255600,22.42; 3256200,22.46; 3256800,22.38; 3257400,
          22.31; 3258000,22.26; 3258600,22.18; 3259200,22.15; 3259800,22.09;
          3260400,22.09; 3261000,22.05; 3261600,22; 3262200,21.97; 3262800,
          21.93; 3263400,21.89; 3264000,21.85; 3264600,21.81; 3265200,21.81;
          3265800,21.77; 3266400,21.69; 3267000,21.65; 3267600,21.65; 3268200,
          21.6; 3268800,21.6; 3269400,21.53; 3270000,21.48; 3270600,21.44;
          3271200,21.4; 3271800,21.36; 3272400,21.32; 3273000,21.28; 3273600,
          21.24; 3274200,21.2; 3274800,21.16; 3275400,21.12; 3276000,21.08;
          3276600,21.08; 3277200,21; 3277800,20.98; 3278400,20.96; 3279000,
          20.96; 3279600,20.91; 3280200,20.91; 3280800,20.87; 3281400,20.83;
          3282000,20.83; 3282600,20.83; 3283200,20.79; 3283800,20.79; 3284400,
          20.75; 3285000,20.75; 3285600,20.75; 3286200,20.71; 3286800,20.71;
          3287400,20.67; 3288000,20.67; 3288600,20.67; 3289200,20.67; 3289800,
          20.66; 3290400,20.63; 3291000,20.63; 3291600,20.59; 3292200,20.59;
          3292800,20.59; 3293400,20.55; 3294000,20.55; 3294600,20.51; 3295200,
          20.53; 3295800,20.53; 3296400,20.51; 3297000,20.5; 3297600,20.5;
          3298200,20.46; 3298800,20.46; 3299400,20.46; 3300000,20.42; 3300600,
          20.42; 3301200,20.42; 3301800,20.42; 3302400,20.42; 3303000,20.42;
          3303600,20.42; 3304200,20.42; 3304800,20.44; 3305400,20.42; 3306000,
          20.42; 3306600,20.39; 3307200,20.42; 3307800,20.42; 3308400,20.42;
          3309000,20.55; 3309600,20.79; 3310200,20.91; 3310800,21.04; 3311400,
          21.16; 3312000,21.25; 3312600,21.36; 3313200,21.4; 3313800,21.45;
          3314400,21.46; 3315000,21.44; 3315600,21.52; 3316200,21.58; 3316800,
          21.6; 3317400,21.6; 3318000,21.64; 3318600,21.69; 3319200,21.69;
          3319800,21.77; 3320400,21.77; 3321000,21.81; 3321600,21.85; 3322200,
          21.81; 3322800,21.85; 3323400,21.85; 3324000,21.85; 3324600,21.89;
          3325200,21.9; 3325800,21.9; 3326400,21.93; 3327000,21.93; 3327600,
          21.94; 3328200,21.93; 3328800,21.98; 3329400,22.05; 3330000,22.22;
          3330600,22.18; 3331200,22.38; 3331800,22.46; 3332400,22.54; 3333000,
          22.62; 3333600,22.66; 3334200,22.74; 3334800,22.78; 3335400,22.78;
          3336000,22.78; 3336600,22.91; 3337200,22.99; 3337800,22.95; 3338400,
          22.99; 3339000,23.03; 3339600,23.15; 3340200,23.11; 3340800,23.06;
          3341400,23.07; 3342000,23.11; 3342600,23.11; 3343200,23.15; 3343800,
          23.16; 3344400,23.19; 3345000,23.19; 3345600,23.15; 3346200,23.2;
          3346800,23.23; 3347400,23.15; 3348000,23.15; 3348600,23.2; 3349200,
          23.17; 3349800,23.11; 3350400,23.03; 3351000,22.91; 3351600,22.8;
          3352200,22.67; 3352800,22.58; 3353400,22.5; 3354000,22.42; 3354600,
          22.34; 3355200,22.26; 3355800,22.22; 3356400,22.13; 3357000,22.06;
          3357600,21.97; 3358200,21.93; 3358800,21.85; 3359400,21.81; 3360000,
          21.76; 3360600,21.69; 3361200,21.64; 3361800,21.59; 3362400,21.54;
          3363000,21.48; 3363600,21.44; 3364200,21.4; 3364800,21.36; 3365400,
          21.32; 3366000,21.28; 3366600,21.22; 3367200,21.2; 3367800,21.2;
          3368400,21.16; 3369000,21.12; 3369600,21.11; 3370200,21.08; 3370800,
          21.04; 3371400,21.04; 3372000,21.01; 3372600,20.98; 3373200,20.96;
          3373800,20.96; 3374400,20.91; 3375000,20.9; 3375600,20.87; 3376200,
          20.87; 3376800,20.84; 3377400,20.83; 3378000,20.82; 3378600,20.79;
          3379200,20.79; 3379800,20.78; 3380400,20.75; 3381000,20.75; 3381600,
          20.76; 3382200,20.75; 3382800,20.71; 3383400,20.67; 3384000,20.68;
          3384600,20.69; 3385200,20.67; 3385800,20.67; 3386400,20.67; 3387000,
          20.68; 3387600,20.67; 3388200,20.63; 3388800,20.64; 3389400,20.63;
          3390000,20.63; 3390600,20.63; 3391200,20.63; 3391800,20.63; 3392400,
          20.63; 3393000,20.63; 3393600,20.62; 3394200,20.62; 3394800,20.63;
          3395400,20.58; 3396000,20.83; 3396600,20.96; 3397200,21.12; 3397800,
          21.2; 3398400,21.28; 3399000,21.36; 3399600,21.4; 3400200,21.48;
          3400800,21.52; 3401400,21.6; 3402000,21.65; 3402600,21.72; 3403200,
          21.76; 3403800,21.81; 3404400,21.85; 3405000,21.85; 3405600,21.94;
          3406200,22; 3406800,21.97; 3407400,21.98; 3408000,22.05; 3408600,
          22.05; 3409200,22.09; 3409800,22.14; 3410400,22.22; 3411000,22.22;
          3411600,22.18; 3412200,22.22; 3412800,22.3; 3413400,22.34; 3414000,
          22.34; 3414600,22.26; 3415200,22.34; 3415800,22.38; 3416400,22.42;
          3417000,22.46; 3417600,22.46; 3418200,22.42; 3418800,22.47; 3419400,
          22.47; 3420000,22.49; 3420600,22.5; 3421200,22.54; 3421800,22.58;
          3422400,22.58; 3423000,22.63; 3423600,22.58; 3424200,22.58; 3424800,
          22.55; 3425400,22.54; 3426000,22.6; 3426600,22.54; 3427200,22.62;
          3427800,22.74; 3428400,22.74; 3429000,22.83; 3429600,22.78; 3430200,
          22.87; 3430800,22.84; 3431400,22.78; 3432000,22.78; 3432600,22.74;
          3433200,22.78; 3433800,22.74; 3434400,22.74; 3435000,22.74; 3435600,
          22.74; 3436200,22.7; 3436800,22.65; 3437400,22.64; 3438000,22.52;
          3438600,22.42; 3439200,22.34; 3439800,22.26; 3440400,22.22; 3441000,
          22.14; 3441600,22.05; 3442200,21.97; 3442800,21.93; 3443400,21.85;
          3444000,21.81; 3444600,21.73; 3445200,21.66; 3445800,21.64; 3446400,
          21.56; 3447000,21.48; 3447600,21.44; 3448200,21.4; 3448800,21.36;
          3449400,21.32; 3450000,21.28; 3450600,21.24; 3451200,21.2; 3451800,
          21.16; 3452400,21.13; 3453000,21.12; 3453600,21.04; 3454200,21.02;
          3454800,20.99; 3455400,20.96; 3456000,20.92; 3456600,20.89; 3457200,
          20.87; 3457800,20.83; 3458400,20.83; 3459000,20.79; 3459600,20.78;
          3460200,20.75; 3460800,20.76; 3461400,20.71; 3462000,20.67; 3462600,
          20.67; 3463200,20.67; 3463800,20.63; 3464400,20.63; 3465000,20.59;
          3465600,20.59; 3466200,20.59; 3466800,20.55; 3467400,20.55; 3468000,
          20.55; 3468600,20.55; 3469200,20.51; 3469800,20.51; 3470400,20.51;
          3471000,20.51; 3471600,20.5; 3472200,20.49; 3472800,20.46; 3473400,
          20.46; 3474000,20.46; 3474600,20.43; 3475200,20.44; 3475800,20.42;
          3476400,20.42; 3477000,20.42; 3477600,20.42; 3478200,20.42; 3478800,
          20.38; 3479400,20.4; 3480000,20.38; 3480600,20.38; 3481200,20.38;
          3481800,20.51; 3482400,21.07; 3483000,21.36; 3483600,21.6; 3484200,
          21.73; 3484800,21.86; 3485400,21.89; 3486000,21.81; 3486600,21.85;
          3487200,21.89; 3487800,21.96; 3488400,22.1; 3489000,22.18; 3489600,
          22.26; 3490200,22.34; 3490800,22.3; 3491400,22.26; 3492000,22.34;
          3492600,22.43; 3493200,22.54; 3493800,22.5; 3494400,22.61; 3495000,
          22.7; 3495600,22.78; 3496200,22.82; 3496800,22.87; 3497400,22.83;
          3498000,22.74; 3498600,22.75; 3499200,22.83; 3499800,22.83; 3500400,
          22.83; 3501000,22.87; 3501600,23.03; 3502200,23.11; 3502800,23.22;
          3503400,23.27; 3504000,23.2; 3504600,23.27; 3505200,23.27; 3505800,
          23.31; 3506400,23.32; 3507000,23.27; 3507600,23.27; 3508200,23.27;
          3508800,23.23; 3509400,23.23; 3510000,23.23; 3510600,23.23; 3511200,
          23.24; 3511800,23.27; 3512400,23.27; 3513000,23.44; 3513600,23.61;
          3514200,23.76; 3514800,23.88; 3515400,23.92; 3516000,23.96; 3516600,
          23.94; 3517200,23.92; 3517800,23.84; 3518400,23.76; 3519000,23.76;
          3519600,23.76; 3520200,23.76; 3520800,23.76; 3521400,23.7; 3522000,
          23.72; 3522600,23.72; 3523200,23.68; 3523800,23.68; 3524400,23.6;
          3525000,23.6; 3525600,23.56; 3526200,23.48; 3526800,23.4; 3527400,
          23.36; 3528000,23.27; 3528600,23.11; 3529200,23.03; 3529800,22.95;
          3530400,22.95; 3531000,22.88; 3531600,22.83; 3532200,22.76; 3532800,
          22.7; 3533400,22.62; 3534000,22.54; 3534600,22.51; 3535200,22.42;
          3535800,22.34; 3536400,22.3; 3537000,22.26; 3537600,22.22; 3538200,
          22.19; 3538800,22.14; 3539400,22.09; 3540000,22.31; 3540600,22.05;
          3541200,22.01; 3541800,21.97; 3542400,21.97; 3543000,21.93; 3543600,
          21.93; 3544200,21.9; 3544800,21.85; 3545400,21.85; 3546000,21.81;
          3546600,21.81; 3547200,21.77; 3547800,21.74; 3548400,21.77; 3549000,
          21.73; 3549600,21.74; 3550200,21.89; 3550800,22.05; 3551400,22.18;
          3552000,22.26; 3552600,22.38; 3553200,22.46; 3553800,22.54; 3554400,
          22.63; 3555000,22.62; 3555600,22.66; 3556200,22.66; 3556800,22.62;
          3557400,22.62; 3558000,22.64; 3558600,22.62; 3559200,22.62; 3559800,
          22.62; 3560400,22.62; 3561000,22.66; 3561600,22.66; 3562200,22.66;
          3562800,22.67; 3563400,22.62; 3564000,22.64; 3564600,22.62; 3565200,
          22.62; 3565800,22.66; 3566400,22.74; 3567000,22.78; 3567600,22.75;
          3568200,22.74; 3568800,22.84; 3569400,22.96; 3570000,23.03; 3570600,
          23.11; 3571200,23.15; 3571800,23.16; 3572400,23.32; 3573000,23.35;
          3573600,23.4; 3574200,23.48; 3574800,23.56; 3575400,23.68; 3576000,
          23.72; 3576600,23.8; 3577200,23.81; 3577800,23.84; 3578400,23.89;
          3579000,23.84; 3579600,23.88; 3580200,23.88; 3580800,23.92; 3581400,
          23.94; 3582000,23.92; 3582600,23.96; 3583200,23.88; 3583800,23.8;
          3584400,23.77; 3585000,23.77; 3585600,23.76; 3586200,23.73; 3586800,
          23.72; 3587400,23.74; 3588000,23.76; 3588600,23.78; 3589200,23.8;
          3589800,23.86; 3590400,23.84; 3591000,23.88; 3591600,23.86; 3592200,
          23.88; 3592800,23.88; 3593400,23.92; 3594000,23.92; 3594600,23.96;
          3595200,23.93; 3595800,24.01; 3596400,24.01; 3597000,24.1; 3597600,
          24.09; 3598200,24.21; 3598800,24.33; 3599400,24.41; 3600000,24.41;
          3600600,24.45; 3601200,24.46; 3601800,24.45; 3602400,24.37; 3603000,
          24.37; 3603600,24.37; 3604200,24.41; 3604800,24.49; 3605400,24.5;
          3606000,24.54; 3606600,24.57; 3607200,24.58; 3607800,24.58; 3608400,
          24.58; 3609000,24.58; 3609600,24.58; 3610200,24.58; 3610800,24.58;
          3611400,24.58; 3612000,24.58; 3612600,24.54; 3613200,24.45; 3613800,
          24.37; 3614400,24.21; 3615000,24.05; 3615600,23.92; 3616200,23.8;
          3616800,23.72; 3617400,23.66; 3618000,23.56; 3618600,23.48; 3619200,
          23.4; 3619800,23.3; 3620400,23.19; 3621000,23.11; 3621600,23.07;
          3622200,23.03; 3622800,22.96; 3623400,22.91; 3624000,22.83; 3624600,
          22.78; 3625200,22.74; 3625800,22.7; 3626400,22.66; 3627000,22.58;
          3627600,22.5; 3628200,22.46; 3628800,22.42; 3629400,22.38; 3630000,
          22.34; 3630600,22.3; 3631200,22.26; 3631800,22.22; 3632400,22.18;
          3633000,22.14; 3633600,22.1; 3634200,22.09; 3634800,22.03; 3635400,
          22.01; 3636000,21.97; 3636600,21.95; 3637200,21.94; 3637800,21.89;
          3638400,21.85; 3639000,21.81; 3639600,21.81; 3640200,21.79; 3640800,
          21.77; 3641400,21.73; 3642000,21.73; 3642600,21.69; 3643200,21.69;
          3643800,21.65; 3644400,21.66; 3645000,21.6; 3645600,21.6; 3646200,
          21.6; 3646800,21.56; 3647400,21.56; 3648000,21.52; 3648600,21.48;
          3649200,21.48; 3649800,21.44; 3650400,21.45; 3651000,21.4; 3651600,
          21.4; 3652200,21.4; 3652800,21.36; 3653400,21.32; 3654000,21.28;
          3654600,21.24; 3655200,21.2; 3655800,21.2; 3656400,21.16; 3657000,
          21.17; 3657600,21.12; 3658200,21.13; 3658800,21.12; 3659400,21.12;
          3660000,21.08; 3660600,21.08; 3661200,21.04; 3661800,21.05; 3662400,
          21.04; 3663000,21; 3663600,21; 3664200,21; 3664800,20.99; 3665400,
          20.96; 3666000,20.91; 3666600,20.91; 3667200,20.91; 3667800,20.88;
          3668400,20.91; 3669000,20.91; 3669600,20.96; 3670200,20.99; 3670800,
          21; 3671400,21; 3672000,21.04; 3672600,21.04; 3673200,21.08; 3673800,
          21.12; 3674400,21.16; 3675000,21.25; 3675600,21.28; 3676200,21.28;
          3676800,21.24; 3677400,21.24; 3678000,21.28; 3678600,21.28; 3679200,
          21.25; 3679800,21.2; 3680400,21.21; 3681000,21.2; 3681600,21.21;
          3682200,21.2; 3682800,21.2; 3683400,21.2; 3684000,21.2; 3684600,21.2;
          3685200,21.2; 3685800,21.2; 3686400,21.16; 3687000,21.12; 3687600,
          21.12; 3688200,21.12; 3688800,21.08; 3689400,21.08; 3690000,21.08;
          3690600,21.07; 3691200,21.09; 3691800,21.04; 3692400,21.04; 3693000,
          21.03; 3693600,21.02; 3694200,21.04; 3694800,21; 3695400,21; 3696000,
          21; 3696600,21; 3697200,20.99; 3697800,20.96; 3698400,20.98; 3699000,
          20.97; 3699600,20.98; 3700200,20.96; 3700800,20.96; 3701400,20.96;
          3702000,20.96; 3702600,20.96; 3703200,20.97; 3703800,20.96; 3704400,
          20.96; 3705000,20.96; 3705600,20.93; 3706200,20.92; 3706800,20.92;
          3707400,20.91; 3708000,20.91; 3708600,20.92; 3709200,20.91; 3709800,
          20.91; 3710400,20.91; 3711000,20.87; 3711600,20.87; 3712200,20.87;
          3712800,20.87; 3713400,20.88; 3714000,20.94; 3714600,20.98; 3715200,
          21; 3715800,21.04; 3716400,21.05; 3717000,21.08; 3717600,21.12;
          3718200,21.12; 3718800,21.15; 3719400,21.16; 3720000,21.16; 3720600,
          21.21; 3721200,21.2; 3721800,21.2; 3722400,21.2; 3723000,21.24;
          3723600,21.24; 3724200,21.28; 3724800,21.32; 3725400,21.36; 3726000,
          21.36; 3726600,21.36; 3727200,21.4; 3727800,21.4; 3728400,21.4;
          3729000,21.44; 3729600,21.45; 3730200,21.44; 3730800,21.44; 3731400,
          21.44; 3732000,21.47; 3732600,21.48; 3733200,21.49; 3733800,21.48;
          3734400,21.48; 3735000,21.48; 3735600,21.48; 3736200,21.48; 3736800,
          21.52; 3737400,21.52; 3738000,21.52; 3738600,21.54; 3739200,21.49;
          3739800,21.52; 3740400,21.52; 3741000,21.52; 3741600,21.52; 3742200,
          21.52; 3742800,21.52; 3743400,21.52; 3744000,21.52; 3744600,21.52;
          3745200,21.48; 3745800,21.44; 3746400,21.44; 3747000,21.4; 3747600,
          21.44; 3748200,21.44; 3748800,21.44; 3749400,21.44; 3750000,21.44;
          3750600,21.48; 3751200,21.48; 3751800,21.54; 3752400,21.56; 3753000,
          21.6; 3753600,21.6; 3754200,21.64; 3754800,21.65; 3755400,21.67;
          3756000,21.73; 3756600,21.77; 3757200,21.82; 3757800,21.85; 3758400,
          21.89; 3759000,21.97; 3759600,22.06; 3760200,22.05; 3760800,22.05;
          3761400,22.05; 3762000,22.06; 3762600,22.1; 3763200,22.14; 3763800,
          22.13; 3764400,22.14; 3765000,22.14; 3765600,22.17; 3766200,22.18;
          3766800,22.18; 3767400,22.21; 3768000,22.32; 3768600,22.36; 3769200,
          22.42; 3769800,22.46; 3770400,22.46; 3771000,22.42; 3771600,22.42;
          3772200,22.42; 3772800,22.42; 3773400,22.42; 3774000,22.42; 3774600,
          22.41; 3775200,22.38; 3775800,22.34; 3776400,22.34; 3777000,22.3;
          3777600,22.26; 3778200,22.26; 3778800,22.24; 3779400,22.22; 3780000,
          22.18; 3780600,22.18; 3781200,22.14; 3781800,22.14; 3782400,22.13;
          3783000,22.09; 3783600,22.09; 3784200,22.09; 3784800,22.09; 3785400,
          22.05; 3786000,22.05; 3786600,22.03; 3787200,22.01; 3787800,22.01;
          3788400,21.97; 3789000,21.97; 3789600,21.97; 3790200,21.97; 3790800,
          21.93; 3791400,21.93; 3792000,21.93; 3792600,21.93; 3793200,21.93;
          3793800,21.89; 3794400,21.89; 3795000,21.88; 3795600,21.85; 3796200,
          21.85; 3796800,21.85; 3797400,21.85; 3798000,21.84; 3798600,21.81;
          3799200,21.81; 3799800,21.81; 3800400,21.81; 3801000,21.81; 3801600,
          21.81; 3802200,21.81; 3802800,21.77; 3803400,21.79; 3804000,21.77;
          3804600,21.78; 3805200,21.77; 3805800,21.77; 3806400,21.77; 3807000,
          21.77; 3807600,21.77; 3808200,21.73; 3808800,21.77; 3809400,21.75;
          3810000,21.76; 3810600,21.77; 3811200,21.77; 3811800,21.76; 3812400,
          21.78; 3813000,21.76; 3813600,21.73; 3814200,21.73; 3814800,21.77;
          3815400,21.76; 3816000,21.77; 3816600,21.73; 3817200,21.73; 3817800,
          21.89; 3818400,22.18; 3819000,22.3; 3819600,22.46; 3820200,22.66;
          3820800,22.88; 3821400,22.95; 3822000,22.99; 3822600,23; 3823200,
          23.03; 3823800,23.07; 3824400,23.11; 3825000,23.11; 3825600,23.15;
          3826200,23.19; 3826800,23.23; 3827400,23.28; 3828000,23.31; 3828600,
          23.27; 3829200,23.23; 3829800,23.28; 3830400,23.33; 3831000,23.4;
          3831600,23.44; 3832200,23.48; 3832800,23.56; 3833400,23.6; 3834000,
          23.69; 3834600,23.72; 3835200,23.76; 3835800,23.8; 3836400,23.84;
          3837000,23.92; 3837600,23.94; 3838200,23.96; 3838800,24.01; 3839400,
          24.05; 3840000,24.09; 3840600,24.09; 3841200,24.09; 3841800,24.09;
          3842400,24.05; 3843000,24.1; 3843600,24.09; 3844200,24.09; 3844800,
          24.09; 3845400,24.09; 3846000,24.13; 3846600,24.13; 3847200,24.17;
          3847800,24.17; 3848400,24.17; 3849000,24.2; 3849600,24.21; 3850200,
          24.22; 3850800,24.21; 3851400,24.22; 3852000,24.25; 3852600,24.3;
          3853200,24.21; 3853800,24.25; 3854400,24.21; 3855000,24.21; 3855600,
          24.17; 3856200,24.17; 3856800,24.17; 3857400,24.16; 3858000,24.14;
          3858600,24.13; 3859200,24.13; 3859800,24.13; 3860400,24.13; 3861000,
          24.06; 3861600,24.01; 3862200,23.96; 3862800,23.96; 3863400,23.96;
          3864000,23.92; 3864600,23.88; 3865200,23.88; 3865800,23.88; 3866400,
          23.84; 3867000,23.8; 3867600,23.8; 3868200,23.76; 3868800,23.72;
          3869400,23.68; 3870000,23.68; 3870600,23.65; 3871200,23.64; 3871800,
          23.54; 3872400,23.4; 3873000,23.28; 3873600,23.18; 3874200,23.07;
          3874800,22.99; 3875400,22.91; 3876000,22.79; 3876600,22.7; 3877200,
          22.58; 3877800,22.52; 3878400,22.46; 3879000,22.42; 3879600,22.34;
          3880200,22.3; 3880800,22.22; 3881400,22.19; 3882000,22.14; 3882600,
          22.09; 3883200,22.05; 3883800,22.01; 3884400,21.97; 3885000,21.94;
          3885600,21.89; 3886200,21.89; 3886800,21.85; 3887400,21.81; 3888000,
          21.81; 3888600,21.79; 3889200,21.77; 3889800,21.77; 3890400,21.73;
          3891000,21.69; 3891600,21.69; 3892200,21.69; 3892800,21.65; 3893400,
          21.65; 3894000,21.63; 3894600,21.65; 3895200,21.65; 3895800,21.65;
          3896400,21.65; 3897000,21.65; 3897600,21.65; 3898200,21.65; 3898800,
          21.65; 3899400,21.65; 3900000,21.65; 3900600,21.65; 3901200,21.65;
          3901800,21.66; 3902400,21.65; 3903000,21.65; 3903600,21.65; 3904200,
          21.72; 3904800,21.94; 3905400,22.09; 3906000,22.26; 3906600,22.42;
          3907200,22.54; 3907800,22.6; 3908400,22.58; 3909000,22.6; 3909600,
          22.58; 3910200,22.62; 3910800,22.62; 3911400,22.62; 3912000,22.64;
          3912600,22.66; 3913200,22.74; 3913800,22.77; 3914400,22.78; 3915000,
          22.83; 3915600,22.91; 3916200,23.03; 3916800,23.15; 3917400,23.2;
          3918000,23.27; 3918600,23.4; 3919200,23.48; 3919800,23.56; 3920400,
          23.64; 3921000,23.72; 3921600,23.72; 3922200,23.8; 3922800,23.88;
          3923400,23.95; 3924000,24.01; 3924600,24.05; 3925200,24.1; 3925800,
          24.17; 3926400,24.21; 3927000,24.21; 3927600,24.25; 3928200,24.25;
          3928800,24.25; 3929400,24.25; 3930000,24.21; 3930600,24.21; 3931200,
          24.21; 3931800,24.21; 3932400,24.22; 3933000,24.21; 3933600,24.21;
          3934200,24.21; 3934800,24.13; 3935400,24.21; 3936000,24.25; 3936600,
          24.25; 3937200,24.3; 3937800,24.34; 3938400,24.34; 3939000,24.41;
          3939600,24.62; 3940200,24.74; 3940800,24.86; 3941400,24.9; 3942000,
          24.9; 3942600,24.9; 3943200,24.9; 3943800,24.86; 3944400,24.86;
          3945000,24.85; 3945600,24.89; 3946200,24.86; 3946800,24.87; 3947400,
          24.78; 3948000,24.71; 3948600,24.66; 3949200,24.58; 3949800,24.57;
          3950400,24.54; 3951000,24.5; 3951600,24.45; 3952200,24.45; 3952800,
          24.44; 3953400,24.41; 3954000,24.41; 3954600,24.41; 3955200,24.38;
          3955800,24.37; 3956400,24.33; 3957000,24.33; 3957600,24.3; 3958200,
          24.22; 3958800,24.14; 3959400,24.05; 3960000,23.92; 3960600,23.84;
          3961200,23.72; 3961800,23.64; 3962400,23.52; 3963000,23.44; 3963600,
          23.36; 3964200,23.36; 3964800,23.27; 3965400,23.25; 3966000,23.19;
          3966600,23.15; 3967200,23.11; 3967800,23.07; 3968400,23.03; 3969000,
          23.03; 3969600,22.95; 3970200,22.95; 3970800,22.91; 3971400,22.92;
          3972000,22.91; 3972600,22.87; 3973200,22.86; 3973800,22.83; 3974400,
          22.83; 3975000,22.78; 3975600,22.74; 3976200,22.74; 3976800,22.74;
          3977400,22.74; 3978000,22.72; 3978600,22.7; 3979200,22.7; 3979800,
          22.7; 3980400,22.7; 3981000,22.66; 3981600,22.66; 3982200,22.66;
          3982800,22.68; 3983400,22.66; 3984000,22.66; 3984600,22.62; 3985200,
          22.64; 3985800,22.62; 3986400,22.62; 3987000,22.62; 3987600,22.62;
          3988200,22.62; 3988800,22.62; 3989400,22.62; 3990000,22.62; 3990600,
          22.66; 3991200,22.91; 3991800,23.12; 3992400,23.36; 3993000,23.56;
          3993600,23.69; 3994200,23.68; 3994800,23.6; 3995400,23.56; 3996000,
          23.44; 3996600,23.4; 3997200,23.39; 3997800,23.4; 3998400,23.48;
          3999000,23.51; 3999600,23.56; 4000200,23.56; 4000800,23.58; 4001400,
          23.56; 4002000,23.48; 4002600,23.4; 4003200,23.36; 4003800,23.36;
          4004400,23.4; 4005000,23.48; 4005600,23.58; 4006200,23.64; 4006800,
          23.68; 4007400,23.7; 4008000,23.68; 4008600,23.68; 4009200,23.68;
          4009800,23.72; 4010400,23.72; 4011000,23.72; 4011600,23.72; 4012200,
          23.77; 4012800,23.8; 4013400,23.8; 4014000,23.84; 4014600,23.88;
          4015200,23.92; 4015800,23.9; 4016400,23.84; 4017000,23.8; 4017600,
          23.85; 4018200,23.96; 4018800,23.96; 4019400,23.96; 4020000,23.94;
          4020600,24; 4021200,24.01; 4021800,24.01; 4022400,24.05; 4023000,
          24.05; 4023600,24.06; 4024200,24.05; 4024800,24.06; 4025400,24.08;
          4026000,24.01; 4026600,24.04; 4027200,24.05; 4027800,24.09; 4028400,
          24.12; 4029000,24.12; 4029600,24.08; 4030200,24.09; 4030800,24.09;
          4031400,24.13; 4032000,24.13; 4032600,24.13; 4033200,24.12; 4033800,
          24.09; 4034400,24.01; 4035000,23.96; 4035600,23.92; 4036200,23.92;
          4036800,23.84; 4037400,23.81; 4038000,23.76; 4038600,23.76; 4039200,
          23.68; 4039800,23.68; 4040400,23.6; 4041000,23.6; 4041600,23.56;
          4042200,23.57; 4042800,23.52; 4043400,23.49; 4044000,23.48; 4044600,
          23.44; 4045200,23.41; 4045800,23.36; 4046400,23.35; 4047000,23.32;
          4047600,23.27; 4048200,23.16; 4048800,23.07; 4049400,23.03; 4050000,
          22.99; 4050600,22.94; 4051200,22.94; 4051800,22.91; 4052400,22.88;
          4053000,22.83; 4053600,22.78; 4054200,22.78; 4054800,22.74; 4055400,
          22.74; 4056000,22.7; 4056600,22.66; 4057200,22.63; 4057800,22.64;
          4058400,22.62; 4059000,22.58; 4059600,22.58; 4060200,22.54; 4060800,
          22.5; 4061400,22.5; 4062000,22.46; 4062600,22.46; 4063200,22.46;
          4063800,22.42; 4064400,22.42; 4065000,22.42; 4065600,22.42; 4066200,
          22.38; 4066800,22.38; 4067400,22.42; 4068000,22.42; 4068600,22.42;
          4069200,22.46; 4069800,22.46; 4070400,22.46; 4071000,22.46; 4071600,
          22.48; 4072200,22.5; 4072800,22.5; 4073400,22.5; 4074000,22.5;
          4074600,22.5; 4075200,22.5; 4075800,22.5; 4076400,22.5; 4077000,22.67;
          4077600,22.91; 4078200,23.15; 4078800,23.23; 4079400,23.27; 4080000,
          23.23; 4080600,23.15; 4081200,23.03; 4081800,22.96; 4082400,22.87;
          4083000,22.87; 4083600,22.95; 4084200,23.03; 4084800,23.12; 4085400,
          23.11; 4086000,23.11; 4086600,23.1; 4087200,23.07; 4087800,23.11;
          4088400,23.11; 4089000,23.15; 4089600,23.15; 4090200,23.2; 4090800,
          23.28; 4091400,23.4; 4092000,23.48; 4092600,23.52; 4093200,23.56;
          4093800,23.68; 4094400,23.68; 4095000,23.76; 4095600,23.8; 4096200,
          23.92; 4096800,23.92; 4097400,23.96; 4098000,24.04; 4098600,24.01;
          4099200,24.12; 4099800,24.13; 4100400,24.13; 4101000,24.09; 4101600,
          24.17; 4102200,24.2; 4102800,24.17; 4103400,24.17; 4104000,24.13;
          4104600,24.13; 4105200,24.05; 4105800,24.09; 4106400,24.13; 4107000,
          24.17; 4107600,24.26; 4108200,24.25; 4108800,24.31; 4109400,24.41;
          4110000,24.41; 4110600,24.5; 4111200,24.5; 4111800,24.5; 4112400,
          24.45; 4113000,24.49; 4113600,24.46; 4114200,24.5; 4114800,24.54;
          4115400,24.54; 4116000,24.54; 4116600,24.58; 4117200,24.54; 4117800,
          24.54; 4118400,24.62; 4119000,24.58; 4119600,24.58; 4120200,24.61;
          4120800,24.61; 4121400,24.54; 4122000,24.58; 4122600,24.5; 4123200,
          24.45; 4123800,24.41; 4124400,24.37; 4125000,24.37; 4125600,24.29;
          4126200,24.25; 4126800,24.17; 4127400,24.13; 4128000,24.08; 4128600,
          24.05; 4129200,24.21; 4129800,24.01; 4130400,24.01; 4131000,23.92;
          4131600,23.8; 4132200,23.76; 4132800,23.68; 4133400,23.6; 4134000,
          23.56; 4134600,23.48; 4135200,23.49; 4135800,23.44; 4136400,23.4;
          4137000,23.32; 4137600,23.27; 4138200,23.23; 4138800,23.15; 4139400,
          23.11; 4140000,23.11; 4140600,22.99; 4141200,22.95; 4141800,22.91;
          4142400,22.91; 4143000,22.87; 4143600,22.87; 4144200,22.83; 4144800,
          22.78; 4145400,22.78; 4146000,22.77; 4146600,22.75; 4147200,22.74;
          4147800,22.7; 4148400,22.66; 4149000,22.66; 4149600,22.62; 4150200,
          22.62; 4150800,22.58; 4151400,22.58; 4152000,22.55; 4152600,22.54;
          4153200,22.55; 4153800,22.59; 4154400,22.55; 4155000,22.58; 4155600,
          22.58; 4156200,22.58; 4156800,22.62; 4157400,22.59; 4158000,22.62;
          4158600,22.62; 4159200,22.63; 4159800,22.62; 4160400,22.62; 4161000,
          22.64; 4161600,22.62; 4162200,22.62; 4162800,22.62; 4163400,22.62;
          4164000,22.89; 4164600,23.07; 4165200,23.23; 4165800,23.37; 4166400,
          23.37; 4167000,23.35; 4167600,23.24; 4168200,23.15; 4168800,23.07;
          4169400,22.99; 4170000,23.03; 4170600,23.11; 4171200,23.19; 4171800,
          23.23; 4172400,23.24; 4173000,23.24; 4173600,23.19; 4174200,23.15;
          4174800,23.11; 4175400,23.11; 4176000,23.11; 4176600,23.19; 4177200,
          23.21; 4177800,23.36; 4178400,23.45; 4179000,23.52; 4179600,23.59;
          4180200,23.56; 4180800,23.6; 4181400,23.64; 4182000,23.64; 4182600,
          23.69; 4183200,23.72; 4183800,23.73; 4184400,23.77; 4185000,23.77;
          4185600,23.84; 4186200,23.92; 4186800,23.93; 4187400,23.88; 4188000,
          23.92; 4188600,23.93; 4189200,23.92; 4189800,23.92; 4190400,23.92;
          4191000,23.92; 4191600,23.92; 4192200,23.92; 4192800,23.92; 4193400,
          23.97; 4194000,24; 4194600,24.09; 4195200,24.17; 4195800,24.22;
          4196400,24.29; 4197000,24.34; 4197600,24.41; 4198200,24.4; 4198800,
          24.37; 4199400,24.41; 4200000,24.42; 4200600,24.41; 4201200,24.41;
          4201800,24.41; 4202400,24.37; 4203000,24.29; 4203600,24.21; 4204200,
          24.22; 4204800,24.17; 4205400,24.17; 4206000,24.25; 4206600,24.17;
          4207200,24.17; 4207800,24.21; 4208400,24.13; 4209000,24.2; 4209600,
          24.21; 4210200,24.17; 4210800,24.17; 4211400,24.13; 4212000,24.09;
          4212600,24.05; 4213200,24.01; 4213800,23.98; 4214400,23.93; 4215000,
          23.9; 4215600,23.84; 4216200,23.8; 4216800,23.76; 4217400,23.72;
          4218000,23.68; 4218600,23.6; 4219200,23.56; 4219800,23.48; 4220400,
          23.4; 4221000,23.32; 4221600,23.24; 4222200,23.15; 4222800,23.08;
          4223400,23.03; 4224000,22.91; 4224600,22.95; 4225200,22.9; 4225800,
          22.84; 4226400,22.8; 4227000,22.78; 4227600,22.74; 4228200,22.71;
          4228800,22.66; 4229400,22.62; 4230000,22.58; 4230600,22.54; 4231200,
          22.5; 4231800,22.46; 4232400,22.42; 4233000,22.34; 4233600,22.3])
      annotation (Placement(transformation(extent={{-88,16},{-78,26}})));
    Modelica.Blocks.Sources.TimeTable South(table=[0,16.68; 600,16.68; 1200,
          16.68; 1800,16.68; 2400,16.68; 3000,16.68; 3600,16.68; 4200,16.68;
          4800,16.68; 5400,16.67; 6000,16.62; 6600,16.6; 7200,16.6; 7800,16.6;
          8400,16.6; 9000,16.6; 9600,16.6; 10200,16.6; 10800,16.6; 11400,16.6;
          12000,16.6; 12600,16.6; 13200,16.6; 13800,16.6; 14400,16.6; 15000,
          16.6; 15600,16.6; 16200,16.6; 16800,16.6; 17400,16.6; 18000,16.59;
          18600,16.59; 19200,16.59; 19800,16.58; 20400,16.52; 21000,16.51;
          21600,16.51; 22200,16.5; 22800,16.5; 23400,16.5; 24000,16.5; 24600,
          16.5; 25200,16.5; 25800,16.5; 26400,16.5; 27000,16.5; 27600,16.5;
          28200,16.5; 28800,16.5; 29400,16.5; 30000,16.5; 30600,16.5; 31200,
          16.5; 31800,16.5; 32400,16.5; 33000,16.5; 33600,16.5; 34200,16.5;
          34800,16.5; 35400,16.5; 36000,16.5; 36600,16.5; 37200,16.5; 37800,
          16.51; 38400,16.5; 39000,16.5; 39600,16.5; 40200,16.58; 40800,16.59;
          41400,16.59; 42000,16.59; 42600,16.59; 43200,16.6; 43800,16.68; 44400,
          16.77; 45000,16.86; 45600,16.94; 46200,17.03; 46800,17.12; 47400,
          17.21; 48000,17.3; 48600,17.34; 49200,17.39; 49800,17.48; 50400,17.48;
          51000,17.56; 51600,17.56; 52200,17.56; 52800,17.56; 53400,17.56;
          54000,17.56; 54600,17.52; 55200,17.48; 55800,17.48; 56400,17.39;
          57000,17.39; 57600,17.3; 58200,17.3; 58800,17.29; 59400,17.21; 60000,
          17.21; 60600,17.13; 61200,17.08; 61800,17.04; 62400,17.04; 63000,
          16.94; 63600,16.94; 64200,16.94; 64800,16.86; 65400,16.86; 66000,
          16.83; 66600,16.77; 67200,16.77; 67800,16.76; 68400,16.68; 69000,
          16.68; 69600,16.66; 70200,16.6; 70800,16.6; 71400,16.6; 72000,16.5;
          72600,16.5; 73200,16.46; 73800,16.41; 74400,16.41; 75000,16.33; 75600,
          16.33; 76200,16.33; 76800,16.33; 77400,16.26; 78000,16.24; 78600,
          16.24; 79200,16.24; 79800,16.15; 80400,16.15; 81000,16.15; 81600,
          16.07; 82200,16.06; 82800,16.06; 83400,16.06; 84000,16.06; 84600,
          15.97; 85200,15.97; 85800,15.97; 86400,15.97; 87000,15.97; 87600,
          15.97; 88200,15.89; 88800,15.88; 89400,15.88; 90000,15.88; 90600,
          15.88; 91200,15.88; 91800,15.88; 92400,15.88; 93000,15.88; 93600,
          15.88; 94200,15.88; 94800,15.88; 95400,15.88; 96000,15.88; 96600,
          15.86; 97200,15.79; 97800,15.79; 98400,15.79; 99000,15.79; 99600,
          15.79; 100200,15.79; 100800,15.79; 101400,15.79; 102000,15.79; 102600,
          15.79; 103200,15.79; 103800,15.79; 104400,15.79; 105000,15.79; 105600,
          15.79; 106200,15.79; 106800,15.79; 107400,15.75; 108000,15.71; 108600,
          15.71; 109200,15.71; 109800,15.71; 110400,15.71; 111000,15.7; 111600,
          15.62; 112200,15.62; 112800,15.62; 113400,15.62; 114000,15.62; 114600,
          15.62; 115200,15.62; 115800,15.62; 116400,15.62; 117000,15.62; 117600,
          15.62; 118200,15.62; 118800,15.62; 119400,15.62; 120000,15.62; 120600,
          15.62; 121200,15.62; 121800,15.62; 122400,15.62; 123000,15.62; 123600,
          15.62; 124200,15.62; 124800,15.62; 125400,15.62; 126000,15.62; 126600,
          15.62; 127200,15.62; 127800,15.62; 128400,15.62; 129000,15.62; 129600,
          15.67; 130200,15.71; 130800,15.7; 131400,15.7; 132000,15.7; 132600,
          15.71; 133200,15.71; 133800,15.69; 134400,15.71; 135000,15.71; 135600,
          15.71; 136200,15.71; 136800,15.71; 137400,15.71; 138000,15.71; 138600,
          15.66; 139200,15.62; 139800,15.62; 140400,15.62; 141000,15.62; 141600,
          15.61; 142200,15.53; 142800,15.53; 143400,15.53; 144000,15.53; 144600,
          15.53; 145200,15.53; 145800,15.53; 146400,15.52; 147000,15.5; 147600,
          15.45; 148200,15.44; 148800,15.44; 149400,15.44; 150000,15.44; 150600,
          15.44; 151200,15.44; 151800,15.44; 152400,15.43; 153000,15.4; 153600,
          15.41; 154200,15.42; 154800,15.42; 155400,15.39; 156000,15.41; 156600,
          15.42; 157200,15.41; 157800,15.4; 158400,15.37; 159000,15.36; 159600,
          15.35; 160200,15.35; 160800,15.35; 161400,15.35; 162000,15.35; 162600,
          15.35; 163200,15.35; 163800,15.35; 164400,15.35; 165000,15.35; 165600,
          15.33; 166200,15.28; 166800,15.26; 167400,15.26; 168000,15.26; 168600,
          15.26; 169200,15.26; 169800,15.26; 170400,15.26; 171000,15.26; 171600,
          15.26; 172200,15.26; 172800,15.2; 173400,15.18; 174000,15.18; 174600,
          15.18; 175200,15.18; 175800,15.18; 176400,15.18; 177000,15.18; 177600,
          15.18; 178200,15.18; 178800,15.18; 179400,15.18; 180000,15.18; 180600,
          15.18; 181200,15.18; 181800,15.18; 182400,15.15; 183000,15.1; 183600,
          15.09; 184200,15.09; 184800,15.09; 185400,15.09; 186000,15.09; 186600,
          15.09; 187200,15.09; 187800,15.09; 188400,15.08; 189000,15.04; 189600,
          15; 190200,15; 190800,15; 191400,15; 192000,15; 192600,14.98; 193200,
          14.91; 193800,14.91; 194400,14.91; 195000,14.91; 195600,14.82; 196200,
          14.82; 196800,14.82; 197400,14.74; 198000,14.73; 198600,14.69; 199200,
          14.64; 199800,14.64; 200400,14.64; 201000,14.64; 201600,14.64; 202200,
          14.64; 202800,14.64; 203400,14.64; 204000,14.64; 204600,14.64; 205200,
          14.64; 205800,14.64; 206400,14.72; 207000,14.73; 207600,14.73; 208200,
          14.73; 208800,14.73; 209400,14.73; 210000,14.73; 210600,14.82; 211200,
          14.82; 211800,14.82; 212400,14.82; 213000,14.82; 213600,14.91; 214200,
          14.91; 214800,14.91; 215400,14.99; 216000,15.08; 216600,15.08; 217200,
          15.08; 217800,15.08; 218400,15.09; 219000,15.09; 219600,15.09; 220200,
          15.09; 220800,15.09; 221400,15.09; 222000,15.09; 222600,15.09; 223200,
          15.08; 223800,15; 224400,15; 225000,15; 225600,14.99; 226200,14.91;
          226800,14.91; 227400,14.91; 228000,14.91; 228600,14.82; 229200,14.82;
          229800,14.82; 230400,14.82; 231000,14.73; 231600,14.73; 232200,14.73;
          232800,14.73; 233400,14.64; 234000,14.64; 234600,14.64; 235200,14.56;
          235800,14.56; 236400,14.56; 237000,14.56; 237600,14.51; 238200,14.47;
          238800,14.47; 239400,14.47; 240000,14.47; 240600,14.44; 241200,14.37;
          241800,14.37; 242400,14.37; 243000,14.37; 243600,14.37; 244200,14.37;
          244800,14.37; 245400,14.37; 246000,14.37; 246600,14.37; 247200,14.29;
          247800,14.29; 248400,14.29; 249000,14.29; 249600,14.22; 250200,14.2;
          250800,14.2; 251400,14.2; 252000,14.2; 252600,14.11; 253200,14.11;
          253800,14.11; 254400,14.1; 255000,14.03; 255600,14.03; 256200,13.93;
          256800,13.93; 257400,13.93; 258000,13.84; 258600,13.84; 259200,13.84;
          259800,13.75; 260400,13.75; 261000,13.75; 261600,13.75; 262200,13.75;
          262800,13.75; 263400,13.71; 264000,13.67; 264600,13.67; 265200,13.67;
          265800,13.67; 266400,13.67; 267000,13.67; 267600,13.58; 268200,13.58;
          268800,13.58; 269400,13.58; 270000,13.58; 270600,13.52; 271200,13.49;
          271800,13.57; 272400,13.49; 273000,13.49; 273600,13.49; 274200,13.49;
          274800,13.49; 275400,13.49; 276000,13.49; 276600,13.49; 277200,13.49;
          277800,13.49; 278400,13.49; 279000,13.49; 279600,13.49; 280200,13.48;
          280800,13.48; 281400,13.48; 282000,13.48; 282600,13.48; 283200,13.48;
          283800,13.48; 284400,13.49; 285000,13.49; 285600,13.49; 286200,13.67;
          286800,13.84; 287400,13.84; 288000,13.93; 288600,14.02; 289200,14.11;
          289800,14.29; 290400,14.37; 291000,14.47; 291600,14.64; 292200,14.73;
          292800,14.91; 293400,14.99; 294000,15.08; 294600,15.26; 295200,15.26;
          295800,15.35; 296400,15.35; 297000,15.49; 297600,15.52; 298200,15.61;
          298800,15.61; 299400,15.61; 300000,15.79; 300600,15.79; 301200,15.79;
          301800,15.88; 302400,15.88; 303000,15.88; 303600,15.87; 304200,15.85;
          304800,15.85; 305400,15.88; 306000,15.88; 306600,15.88; 307200,15.88;
          307800,15.88; 308400,15.97; 309000,15.99; 309600,16.14; 310200,16.24;
          310800,16.31; 311400,16.31; 312000,16.33; 312600,16.33; 313200,16.41;
          313800,16.41; 314400,16.41; 315000,16.59; 315600,16.55; 316200,16.59;
          316800,16.59; 317400,16.59; 318000,16.6; 318600,16.6; 319200,16.68;
          319800,16.67; 320400,16.6; 321000,16.54; 321600,16.5; 322200,16.5;
          322800,16.5; 323400,16.42; 324000,16.41; 324600,16.41; 325200,16.41;
          325800,16.41; 326400,16.41; 327000,16.39; 327600,16.41; 328200,16.41;
          328800,16.5; 329400,16.5; 330000,16.41; 330600,16.33; 331200,16.33;
          331800,16.24; 332400,16.24; 333000,16.15; 333600,16.15; 334200,16.15;
          334800,16.15; 335400,16.15; 336000,16.15; 336600,16.15; 337200,16.15;
          337800,16.15; 338400,16.15; 339000,16.15; 339600,16.15; 340200,16.14;
          340800,16.06; 341400,16.06; 342000,16.06; 342600,16.06; 343200,16.06;
          343800,16.02; 344400,15.97; 345000,15.97; 345600,15.97; 346200,15.97;
          346800,15.97; 347400,15.97; 348000,15.88; 348600,15.88; 349200,15.88;
          349800,15.84; 350400,15.79; 351000,15.72; 351600,15.79; 352200,15.79;
          352800,15.71; 353400,15.79; 354000,15.79; 354600,15.71; 355200,15.65;
          355800,15.71; 356400,15.62; 357000,15.62; 357600,15.62; 358200,15.63;
          358800,15.71; 359400,15.71; 360000,15.71; 360600,15.71; 361200,15.79;
          361800,15.94; 362400,16.14; 363000,16.33; 363600,16.41; 364200,16.59;
          364800,16.68; 365400,16.77; 366000,16.81; 366600,16.86; 367200,16.94;
          367800,16.94; 368400,16.94; 369000,17.03; 369600,17.03; 370200,17.04;
          370800,17.2; 371400,17.28; 372000,17.3; 372600,17.3; 373200,17.3;
          373800,17.3; 374400,17.39; 375000,17.56; 375600,17.65; 376200,17.68;
          376800,17.75; 377400,17.92; 378000,18; 378600,18.01; 379200,18.1;
          379800,18.19; 380400,18.28; 381000,18.37; 381600,18.54; 382200,18.63;
          382800,18.72; 383400,18.72; 384000,18.81; 384600,18.81; 385200,18.81;
          385800,18.81; 386400,18.81; 387000,18.9; 387600,18.98; 388200,18.98;
          388800,19.06; 389400,19.07; 390000,19.16; 390600,19.16; 391200,19.25;
          391800,19.25; 392400,19.27; 393000,19.34; 393600,19.43; 394200,19.52;
          394800,19.52; 395400,19.52; 396000,19.6; 396600,19.6; 397200,19.69;
          397800,19.69; 398400,19.69; 399000,19.69; 399600,19.69; 400200,19.87;
          400800,20.05; 401400,20.05; 402000,20.22; 402600,20.14; 403200,20.05;
          403800,20.05; 404400,19.96; 405000,20.05; 405600,20.05; 406200,20.05;
          406800,20.05; 407400,20.05; 408000,20.05; 408600,20.03; 409200,19.96;
          409800,19.96; 410400,19.87; 411000,19.87; 411600,19.87; 412200,19.86;
          412800,19.79; 413400,19.79; 414000,19.79; 414600,19.79; 415200,19.79;
          415800,19.68; 416400,19.52; 417000,19.43; 417600,19.25; 418200,19.17;
          418800,18.98; 419400,18.81; 420000,18.64; 420600,18.45; 421200,18.37;
          421800,18.19; 422400,18.19; 423000,18.1; 423600,18.1; 424200,18.01;
          424800,18.01; 425400,18.01; 426000,17.92; 426600,17.92; 427200,17.91;
          427800,17.83; 428400,17.83; 429000,17.83; 429600,17.75; 430200,17.75;
          430800,17.75; 431400,17.75; 432000,17.75; 432600,17.67; 433200,17.66;
          433800,17.66; 434400,17.57; 435000,17.48; 435600,17.48; 436200,17.47;
          436800,17.39; 437400,17.39; 438000,17.39; 438600,17.36; 439200,17.3;
          439800,17.3; 440400,17.3; 441000,17.3; 441600,17.3; 442200,17.3;
          442800,17.3; 443400,17.3; 444000,17.3; 444600,17.3; 445200,17.3;
          445800,17.3; 446400,17.3; 447000,17.32; 447600,17.36; 448200,17.39;
          448800,17.65; 449400,17.83; 450000,18.1; 450600,18.33; 451200,18.54;
          451800,18.63; 452400,18.71; 453000,18.72; 453600,18.81; 454200,18.81;
          454800,18.9; 455400,18.9; 456000,18.98; 456600,18.98; 457200,19.07;
          457800,19.08; 458400,19.16; 459000,19.16; 459600,19.25; 460200,19.25;
          460800,19.43; 461400,19.79; 462000,20.13; 462600,20.13; 463200,20.4;
          463800,20.4; 464400,20.54; 465000,20.58; 465600,20.5; 466200,20.49;
          466800,20.4; 467400,20.32; 468000,20.23; 468600,20.14; 469200,20.14;
          469800,20.14; 470400,20.14; 471000,20.49; 471600,20.75; 472200,20.88;
          472800,21.02; 473400,21.2; 474000,21.38; 474600,21.55; 475200,21.64;
          475800,21.73; 476400,21.74; 477000,21.83; 477600,21.83; 478200,21.83;
          478800,21.74; 479400,21.74; 480000,21.74; 480600,21.65; 481200,21.73;
          481800,21.73; 482400,21.73; 483000,21.74; 483600,21.82; 484200,21.74;
          484800,21.73; 485400,21.65; 486000,21.64; 486600,21.64; 487200,21.65;
          487800,21.83; 488400,21.82; 489000,22.01; 489600,22.27; 490200,22.53;
          490800,22.71; 491400,22.8; 492000,22.71; 492600,22.62; 493200,22.53;
          493800,22.44; 494400,22.36; 495000,22.27; 495600,22.18; 496200,22.08;
          496800,22; 497400,21.91; 498000,21.83; 498600,21.74; 499200,21.65;
          499800,21.55; 500400,21.47; 501000,21.47; 501600,21.38; 502200,21.29;
          502800,21.21; 503400,21.02; 504000,20.85; 504600,20.67; 505200,20.49;
          505800,20.32; 506400,20.14; 507000,19.96; 507600,19.79; 508200,19.7;
          508800,19.61; 509400,19.52; 510000,19.43; 510600,19.34; 511200,19.23;
          511800,19.17; 512400,19.08; 513000,18.98; 513600,18.9; 514200,18.81;
          514800,18.81; 515400,18.72; 516000,18.64; 516600,18.64; 517200,18.54;
          517800,18.46; 518400,18.45; 519000,18.37; 519600,18.37; 520200,18.37;
          520800,18.28; 521400,18.28; 522000,18.22; 522600,18.19; 523200,18.19;
          523800,18.14; 524400,18.1; 525000,18.1; 525600,18.18; 526200,18.37;
          526800,18.54; 527400,18.72; 528000,18.9; 528600,19.07; 529200,19.16;
          529800,19.34; 530400,19.43; 531000,19.52; 531600,19.6; 532200,19.69;
          532800,19.79; 533400,19.79; 534000,19.87; 534600,19.87; 535200,19.87;
          535800,19.96; 536400,19.96; 537000,19.96; 537600,19.98; 538200,19.96;
          538800,20.04; 539400,20.05; 540000,20.05; 540600,20.05; 541200,20.05;
          541800,20.12; 542400,20.13; 543000,20.06; 543600,20.05; 544200,20.05;
          544800,20.05; 545400,20.05; 546000,20.05; 546600,19.96; 547200,19.87;
          547800,19.87; 548400,19.87; 549000,19.87; 549600,19.87; 550200,19.87;
          550800,19.87; 551400,19.87; 552000,19.87; 552600,19.87; 553200,19.79;
          553800,19.86; 554400,19.86; 555000,19.8; 555600,19.87; 556200,19.87;
          556800,20.05; 557400,20.22; 558000,20.32; 558600,20.58; 559200,20.75;
          559800,20.85; 560400,21.02; 561000,21.2; 561600,21.29; 562200,21.38;
          562800,21.55; 563400,21.64; 564000,21.64; 564600,21.73; 565200,21.83;
          565800,22; 566400,21.74; 567000,21.65; 567600,21.65; 568200,21.65;
          568800,21.55; 569400,21.82; 570000,21.91; 570600,22.26; 571200,22.27;
          571800,22.54; 572400,22.71; 573000,22.89; 573600,22.97; 574200,23.06;
          574800,23.32; 575400,23.42; 576000,23.6; 576600,23.65; 577200,23.33;
          577800,23.15; 578400,23.06; 579000,23.06; 579600,22.98; 580200,22.98;
          580800,22.98; 581400,22.98; 582000,22.89; 582600,22.8; 583200,22.71;
          583800,22.63; 584400,22.62; 585000,22.53; 585600,22.53; 586200,22.53;
          586800,22.44; 587400,22.44; 588000,22.44; 588600,22.36; 589200,22.27;
          589800,22.18; 590400,22; 591000,21.83; 591600,21.65; 592200,21.53;
          592800,21.29; 593400,21.21; 594000,21.02; 594600,20.94; 595200,20.85;
          595800,20.76; 596400,20.67; 597000,20.58; 597600,20.49; 598200,20.4;
          598800,20.32; 599400,20.23; 600000,20.15; 600600,20.14; 601200,20.13;
          601800,20.05; 602400,20.05; 603000,20.05; 603600,19.96; 604200,19.96;
          604800,19.87; 605400,19.87; 606000,19.87; 606600,19.84; 607200,19.87;
          607800,19.84; 608400,19.79; 609000,19.79; 609600,19.79; 610200,19.79;
          610800,19.79; 611400,19.78; 612000,19.79; 612600,19.96; 613200,20.13;
          613800,20.32; 614400,20.49; 615000,20.67; 615600,20.84; 616200,20.94;
          616800,21.02; 617400,21.2; 618000,21.29; 618600,21.38; 619200,21.47;
          619800,21.55; 620400,21.64; 621000,21.73; 621600,21.83; 622200,21.91;
          622800,21.98; 623400,22; 624000,22.09; 624600,22.09; 625200,22.17;
          625800,22.17; 626400,22.18; 627000,22.26; 627600,22.26; 628200,22.26;
          628800,22.26; 629400,22.26; 630000,22.28; 630600,22.36; 631200,22.36;
          631800,22.27; 632400,22.27; 633000,22.27; 633600,22.36; 634200,22.27;
          634800,22.27; 635400,22.27; 636000,22.27; 636600,22.27; 637200,22.27;
          637800,22.26; 638400,22.18; 639000,22.18; 639600,22.18; 640200,22.18;
          640800,22.18; 641400,22.13; 642000,22.18; 642600,22.18; 643200,22.26;
          643800,22.27; 644400,22.27; 645000,22.36; 645600,22.36; 646200,22.36;
          646800,22.44; 647400,22.44; 648000,22.39; 648600,22.37; 649200,22.44;
          649800,22.44; 650400,22.44; 651000,22.44; 651600,22.44; 652200,22.44;
          652800,22.53; 653400,22.62; 654000,22.62; 654600,22.71; 655200,23.15;
          655800,23.42; 656400,23.15; 657000,23.06; 657600,23.06; 658200,23.06;
          658800,23.06; 659400,23.06; 660000,22.98; 660600,22.98; 661200,23.06;
          661800,23.06; 662400,22.98; 663000,22.98; 663600,23.08; 664200,23.07;
          664800,23.06; 665400,22.98; 666000,23.06; 666600,23.06; 667200,23.06;
          667800,23.06; 668400,23.09; 669000,23.11; 669600,23.06; 670200,23.06;
          670800,23.06; 671400,23.06; 672000,23.06; 672600,23.06; 673200,23.06;
          673800,23.06; 674400,23.06; 675000,22.98; 675600,22.8; 676200,22.62;
          676800,22.44; 677400,22.36; 678000,22.18; 678600,22; 679200,21.91;
          679800,21.74; 680400,21.65; 681000,21.55; 681600,21.42; 682200,21.29;
          682800,21.21; 683400,21.21; 684000,21.11; 684600,21.02; 685200,20.94;
          685800,20.89; 686400,20.85; 687000,20.76; 687600,20.76; 688200,20.67;
          688800,20.67; 689400,20.58; 690000,20.58; 690600,20.58; 691200,20.58;
          691800,20.58; 692400,20.49; 693000,20.49; 693600,20.4; 694200,20.4;
          694800,20.4; 695400,20.4; 696000,20.38; 696600,20.32; 697200,20.32;
          697800,20.32; 698400,20.32; 699000,20.32; 699600,20.32; 700200,20.3;
          700800,20.3; 701400,20.31; 702000,20.24; 702600,20.23; 703200,20.23;
          703800,20.23; 704400,20.23; 705000,20.22; 705600,20.15; 706200,20.14;
          706800,20.14; 707400,20.14; 708000,20.14; 708600,20.14; 709200,20.14;
          709800,20.14; 710400,20.14; 711000,20.14; 711600,20.14; 712200,20.14;
          712800,20.14; 713400,20.13; 714000,20.13; 714600,20.11; 715200,20.13;
          715800,20.13; 716400,20.13; 717000,20.13; 717600,20.13; 718200,20.13;
          718800,20.13; 719400,20.13; 720000,20.13; 720600,20.13; 721200,20.13;
          721800,20.13; 722400,20.13; 723000,20.13; 723600,20.13; 724200,20.13;
          724800,20.13; 725400,20.13; 726000,20.13; 726600,20.13; 727200,20.13;
          727800,20.13; 728400,20.13; 729000,20.13; 729600,20.13; 730200,20.13;
          730800,20.13; 731400,20.13; 732000,20.13; 732600,20.13; 733200,20.13;
          733800,20.13; 734400,20.13; 735000,20.13; 735600,20.13; 736200,20.13;
          736800,20.08; 737400,20.05; 738000,20.05; 738600,19.96; 739200,19.96;
          739800,19.87; 740400,19.87; 741000,19.87; 741600,19.87; 742200,19.87;
          742800,19.87; 743400,19.87; 744000,19.83; 744600,19.87; 745200,19.87;
          745800,19.87; 746400,19.86; 747000,19.79; 747600,19.79; 748200,19.79;
          748800,19.79; 749400,19.79; 750000,19.79; 750600,19.76; 751200,19.73;
          751800,19.7; 752400,19.7; 753000,19.7; 753600,19.7; 754200,19.64;
          754800,19.61; 755400,19.61; 756000,19.61; 756600,19.61; 757200,19.61;
          757800,19.58; 758400,19.52; 759000,19.52; 759600,19.52; 760200,19.52;
          760800,19.43; 761400,19.43; 762000,19.37; 762600,19.34; 763200,19.27;
          763800,19.25; 764400,19.25; 765000,19.17; 765600,19.17; 766200,19.17;
          766800,19.17; 767400,19.16; 768000,19.08; 768600,19.08; 769200,19.08;
          769800,19.08; 770400,19.08; 771000,19.08; 771600,19.08; 772200,19.07;
          772800,18.98; 773400,18.98; 774000,18.94; 774600,18.98; 775200,18.98;
          775800,18.98; 776400,19.07; 777000,19.07; 777600,19.16; 778200,19.17;
          778800,19.25; 779400,19.32; 780000,19.34; 780600,19.34; 781200,19.43;
          781800,19.43; 782400,19.43; 783000,19.52; 783600,19.52; 784200,19.52;
          784800,19.52; 785400,19.52; 786000,19.52; 786600,19.6; 787200,19.6;
          787800,19.6; 788400,19.6; 789000,19.6; 789600,19.6; 790200,19.6;
          790800,19.63; 791400,19.69; 792000,19.79; 792600,19.79; 793200,19.79;
          793800,19.79; 794400,19.79; 795000,19.79; 795600,19.79; 796200,19.79;
          796800,19.8; 797400,19.79; 798000,19.79; 798600,19.79; 799200,19.79;
          799800,19.79; 800400,19.79; 801000,19.87; 801600,19.87; 802200,19.87;
          802800,19.96; 803400,19.96; 804000,20.05; 804600,20.05; 805200,20.05;
          805800,20.13; 806400,20.13; 807000,20.13; 807600,20.2; 808200,20.22;
          808800,20.22; 809400,20.22; 810000,20.32; 810600,20.32; 811200,20.32;
          811800,20.33; 812400,20.4; 813000,20.4; 813600,20.49; 814200,20.49;
          814800,20.49; 815400,20.49; 816000,20.58; 816600,20.58; 817200,20.58;
          817800,20.58; 818400,20.67; 819000,20.67; 819600,20.67; 820200,20.75;
          820800,20.75; 821400,20.75; 822000,20.75; 822600,20.76; 823200,20.85;
          823800,20.85; 824400,20.85; 825000,20.85; 825600,20.85; 826200,20.85;
          826800,20.85; 827400,20.85; 828000,20.85; 828600,20.85; 829200,20.85;
          829800,20.85; 830400,20.85; 831000,20.85; 831600,20.85; 832200,20.85;
          832800,20.85; 833400,20.85; 834000,20.85; 834600,20.8; 835200,20.76;
          835800,20.76; 836400,20.67; 837000,20.67; 837600,20.59; 838200,20.58;
          838800,20.58; 839400,20.58; 840000,20.54; 840600,20.49; 841200,20.49;
          841800,20.49; 842400,20.46; 843000,20.4; 843600,20.4; 844200,20.4;
          844800,20.4; 845400,20.32; 846000,20.32; 846600,20.32; 847200,20.31;
          847800,20.23; 848400,20.23; 849000,20.23; 849600,20.14; 850200,20.14;
          850800,20.05; 851400,20.05; 852000,20.04; 852600,19.96; 853200,19.96;
          853800,19.96; 854400,19.96; 855000,20.05; 855600,20.05; 856200,20.05;
          856800,20.13; 857400,20.13; 858000,20.13; 858600,20.13; 859200,20.13;
          859800,20.13; 860400,20.13; 861000,20.13; 861600,20.13; 862200,20.14;
          862800,20.14; 863400,20.14; 864000,20.18; 864600,20.2; 865200,20.14;
          865800,20.18; 866400,20.22; 867000,20.22; 867600,20.22; 868200,20.22;
          868800,20.22; 869400,20.22; 870000,20.24; 870600,20.31; 871200,20.23;
          871800,20.23; 872400,20.23; 873000,20.23; 873600,20.24; 874200,20.23;
          874800,20.23; 875400,20.24; 876000,20.31; 876600,20.32; 877200,20.4;
          877800,20.4; 878400,20.49; 879000,20.49; 879600,20.49; 880200,20.67;
          880800,20.85; 881400,21.02; 882000,21.23; 882600,21.47; 883200,21.73;
          883800,21.85; 884400,21.91; 885000,22; 885600,21.92; 886200,22;
          886800,22; 887400,22; 888000,22; 888600,22; 889200,22; 889800,21.91;
          890400,21.91; 891000,21.91; 891600,21.91; 892200,21.91; 892800,22;
          893400,21.91; 894000,21.99; 894600,22; 895200,22.01; 895800,22.14;
          896400,21.91; 897000,21.83; 897600,21.91; 898200,21.91; 898800,21.91;
          899400,21.91; 900000,22.09; 900600,22.26; 901200,22.18; 901800,22.18;
          902400,22.35; 903000,22.53; 903600,22.62; 904200,22.53; 904800,22.45;
          905400,22.44; 906000,22.53; 906600,22.38; 907200,22.36; 907800,22.36;
          908400,22.36; 909000,22.36; 909600,22.36; 910200,22.27; 910800,22.36;
          911400,22.27; 912000,22.27; 912600,22.27; 913200,22.18; 913800,22.09;
          914400,22.09; 915000,22.09; 915600,22.09; 916200,22.09; 916800,22.09;
          917400,22.17; 918000,22.26; 918600,22.26; 919200,22.26; 919800,22.36;
          920400,22.36; 921000,22.28; 921600,22.27; 922200,22.27; 922800,22.44;
          923400,22.44; 924000,22.44; 924600,22.44; 925200,22.44; 925800,22.36;
          926400,22.36; 927000,22.3; 927600,22.27; 928200,22.27; 928800,22.18;
          929400,22.18; 930000,22.12; 930600,22.09; 931200,22.09; 931800,22;
          932400,22; 933000,22; 933600,22; 934200,21.91; 934800,21.74; 935400,
          21.59; 936000,21.47; 936600,21.28; 937200,21.02; 937800,20.94; 938400,
          20.81; 939000,20.67; 939600,20.58; 940200,20.52; 940800,20.49; 941400,
          20.32; 942000,20.23; 942600,20.15; 943200,20.22; 943800,20.14; 944400,
          20.14; 945000,20.14; 945600,20.05; 946200,20.05; 946800,19.96; 947400,
          19.87; 948000,19.87; 948600,19.86; 949200,19.79; 949800,19.71; 950400,
          19.61; 951000,19.61; 951600,19.61; 952200,19.6; 952800,19.53; 953400,
          19.52; 954000,19.52; 954600,19.52; 955200,19.43; 955800,19.34; 956400,
          19.25; 957000,19.25; 957600,19.25; 958200,19.43; 958800,19.52; 959400,
          19.81; 960000,20.13; 960600,20.32; 961200,20.58; 961800,20.75; 962400,
          20.94; 963000,21.11; 963600,21.29; 964200,21.47; 964800,21.55; 965400,
          21.64; 966000,21.73; 966600,21.83; 967200,21.91; 967800,22; 968400,
          22.09; 969000,22.17; 969600,22.17; 970200,22.18; 970800,22.09; 971400,
          22; 972000,21.91; 972600,21.83; 973200,21.74; 973800,21.74; 974400,
          21.74; 975000,21.74; 975600,21.83; 976200,21.83; 976800,21.83; 977400,
          21.83; 978000,21.76; 978600,21.74; 979200,21.74; 979800,21.83; 980400,
          22; 981000,22.09; 981600,22.26; 982200,22.36; 982800,22.36; 983400,
          22.62; 984000,22.71; 984600,22.97; 985200,22.96; 985800,23.05; 986400,
          23.15; 987000,23.32; 987600,23.25; 988200,23.32; 988800,23.33; 989400,
          23.42; 990000,23.52; 990600,23.68; 991200,23.59; 991800,23.77; 992400,
          23.77; 993000,23.86; 993600,23.95; 994200,23.95; 994800,24.04; 995400,
          24.04; 996000,24.04; 996600,24.13; 997200,24.13; 997800,24.13; 998400,
          24.13; 999000,24.04; 999600,24.05; 1000200,23.98; 1000800,23.96;
          1001400,24.04; 1002000,23.95; 1002600,23.97; 1003200,24.03; 1003800,
          24.13; 1004400,24.13; 1005000,24.3; 1005600,24.3; 1006200,24.22;
          1006800,24.22; 1007400,24.4; 1008000,24.35; 1008600,24.4; 1009200,
          24.3; 1009800,24.21; 1010400,23.86; 1011000,23.78; 1011600,23.78;
          1012200,23.78; 1012800,23.69; 1013400,23.69; 1014000,23.59; 1014600,
          23.56; 1015200,23.57; 1015800,23.59; 1016400,23.51; 1017000,23.42;
          1017600,23.42; 1018200,23.33; 1018800,23.33; 1019400,23.33; 1020000,
          23.19; 1020600,23.11; 1021200,22.98; 1021800,22.89; 1022400,22.71;
          1023000,22.62; 1023600,22.44; 1024200,22.36; 1024800,22.27; 1025400,
          22.18; 1026000,22.1; 1026600,22; 1027200,22; 1027800,21.91; 1028400,
          21.89; 1029000,21.83; 1029600,21.74; 1030200,21.74; 1030800,21.67;
          1031400,21.65; 1032000,21.56; 1032600,21.55; 1033200,21.47; 1033800,
          21.47; 1034400,21.47; 1035000,21.38; 1035600,21.38; 1036200,21.38;
          1036800,21.29; 1037400,21.29; 1038000,21.29; 1038600,21.29; 1039200,
          21.29; 1039800,21.21; 1040400,21.21; 1041000,21.21; 1041600,21.21;
          1042200,21.21; 1042800,21.16; 1043400,21.11; 1044000,21.19; 1044600,
          21.38; 1045200,21.55; 1045800,21.75; 1046400,22; 1047000,22.17;
          1047600,22.36; 1048200,22.53; 1048800,22.71; 1049400,22.89; 1050000,
          22.98; 1050600,23.15; 1051200,23.24; 1051800,23.32; 1052400,23.42;
          1053000,23.51; 1053600,23.59; 1054200,23.68; 1054800,23.77; 1055400,
          23.77; 1056000,23.86; 1056600,23.86; 1057200,23.86; 1057800,23.86;
          1058400,23.86; 1059000,23.86; 1059600,23.93; 1060200,23.95; 1060800,
          23.95; 1061400,24.04; 1062000,24.04; 1062600,24.04; 1063200,24.04;
          1063800,24.13; 1064400,24.13; 1065000,24.13; 1065600,24.13; 1066200,
          24.21; 1066800,24.22; 1067400,24.28; 1068000,24.4; 1068600,24.38;
          1069200,24.4; 1069800,24.48; 1070400,24.48; 1071000,24.57; 1071600,
          24.54; 1072200,24.74; 1072800,24.83; 1073400,24.88; 1074000,25.1;
          1074600,25.28; 1075200,25.2; 1075800,25.1; 1076400,25.13; 1077000,
          25.21; 1077600,25.23; 1078200,25.28; 1078800,25.28; 1079400,25.31;
          1080000,25.36; 1080600,25.36; 1081200,25.38; 1081800,25.37; 1082400,
          25.37; 1083000,25.43; 1083600,25.45; 1084200,25.28; 1084800,25.19;
          1085400,25.28; 1086000,25.28; 1086600,25.28; 1087200,25.45; 1087800,
          25.46; 1088400,25.46; 1089000,25.46; 1089600,25.45; 1090200,25.37;
          1090800,25.46; 1091400,25.55; 1092000,25.62; 1092600,25.55; 1093200,
          25.55; 1093800,25.51; 1094400,25.63; 1095000,25.57; 1095600,25.63;
          1096200,25.54; 1096800,25.55; 1097400,25.55; 1098000,25.55; 1098600,
          25.54; 1099200,25.55; 1099800,25.5; 1100400,25.46; 1101000,25.46;
          1101600,25.46; 1102200,25.46; 1102800,25.37; 1103400,25.41; 1104000,
          25.37; 1104600,25.37; 1105200,25.37; 1105800,25.37; 1106400,25.28;
          1107000,25.19; 1107600,25.05; 1108200,24.84; 1108800,24.63; 1109400,
          24.4; 1110000,24.13; 1110600,23.98; 1111200,23.86; 1111800,23.74;
          1112400,23.59; 1113000,23.51; 1113600,23.42; 1114200,23.33; 1114800,
          23.16; 1115400,23.1; 1116000,22.99; 1116600,22.98; 1117200,22.89;
          1117800,22.8; 1118400,22.71; 1119000,22.62; 1119600,22.62; 1120200,
          22.53; 1120800,22.44; 1121400,22.36; 1122000,22.35; 1122600,22.27;
          1123200,22.18; 1123800,22.09; 1124400,22; 1125000,21.91; 1125600,
          21.91; 1126200,21.83; 1126800,21.83; 1127400,21.74; 1128000,21.69;
          1128600,21.65; 1129200,21.65; 1129800,21.65; 1130400,21.65; 1131000,
          21.62; 1131600,21.64; 1132200,21.64; 1132800,21.64; 1133400,21.64;
          1134000,21.64; 1134600,21.64; 1135200,21.64; 1135800,21.64; 1136400,
          21.64; 1137000,21.69; 1137600,21.73; 1138200,21.73; 1138800,21.88;
          1139400,22.09; 1140000,22.36; 1140600,22.62; 1141200,22.97; 1141800,
          23.24; 1142400,23.42; 1143000,23.52; 1143600,23.6; 1144200,23.73;
          1144800,23.77; 1145400,23.86; 1146000,23.86; 1146600,23.95; 1147200,
          24.04; 1147800,24.04; 1148400,24.04; 1149000,24.04; 1149600,24.04;
          1150200,24.04; 1150800,24.04; 1151400,24.08; 1152000,24.2; 1152600,
          24.04; 1153200,24.04; 1153800,24.04; 1154400,24.04; 1155000,24.13;
          1155600,24.3; 1156200,24.48; 1156800,24.48; 1157400,24.48; 1158000,
          24.48; 1158600,24.48; 1159200,24.57; 1159800,24.74; 1160400,24.82;
          1161000,24.93; 1161600,25.01; 1162200,25.01; 1162800,25.01; 1163400,
          25.1; 1164000,25.24; 1164600,25.1; 1165200,25.1; 1165800,25.1;
          1166400,25.1; 1167000,25.01; 1167600,24.93; 1168200,24.84; 1168800,
          24.84; 1169400,24.84; 1170000,24.84; 1170600,24.84; 1171200,24.84;
          1171800,24.94; 1172400,25.01; 1173000,25.19; 1173600,25.1; 1174200,
          25.19; 1174800,25.28; 1175400,25.36; 1176000,25.29; 1176600,25.37;
          1177200,25.37; 1177800,25.37; 1178400,25.46; 1179000,25.46; 1179600,
          25.4; 1180200,25.46; 1180800,25.45; 1181400,25.34; 1182000,25.42;
          1182600,25.28; 1183200,25.35; 1183800,25.36; 1184400,25.28; 1185000,
          25.36; 1185600,25.36; 1186200,25.36; 1186800,25.37; 1187400,25.37;
          1188000,25.43; 1188600,25.46; 1189200,25.46; 1189800,25.46; 1190400,
          25.46; 1191000,25.46; 1191600,25.46; 1192200,25.46; 1192800,25.42;
          1193400,25.28; 1194000,25.19; 1194600,25.01; 1195200,24.75; 1195800,
          24.48; 1196400,24.31; 1197000,24.13; 1197600,23.95; 1198200,23.78;
          1198800,23.69; 1199400,23.51; 1200000,23.42; 1200600,23.33; 1201200,
          23.15; 1201800,23.06; 1202400,22.98; 1203000,22.98; 1203600,22.89;
          1204200,22.8; 1204800,22.72; 1205400,22.71; 1206000,22.62; 1206600,
          22.62; 1207200,22.54; 1207800,22.53; 1208400,22.44; 1209000,22.44;
          1209600,22.36; 1210200,22.35; 1210800,22.27; 1211400,22.18; 1212000,
          22.18; 1212600,22.1; 1213200,22.09; 1213800,22.09; 1214400,22;
          1215000,22; 1215600,22; 1216200,21.97; 1216800,22.03; 1217400,22.26;
          1218000,22.53; 1218600,22.71; 1219200,22.98; 1219800,23.15; 1220400,
          23.42; 1221000,23.59; 1221600,23.77; 1222200,23.95; 1222800,24.13;
          1223400,24.3; 1224000,24.46; 1224600,24.48; 1225200,24.66; 1225800,
          24.74; 1226400,24.83; 1227000,24.93; 1227600,25.01; 1228200,25.1;
          1228800,25.1; 1229400,25.12; 1230000,25.13; 1230600,25.19; 1231200,
          25.19; 1231800,25.19; 1232400,25.19; 1233000,25.19; 1233600,25.19;
          1234200,25.19; 1234800,25.28; 1235400,25.28; 1236000,25.28; 1236600,
          25.28; 1237200,25.28; 1237800,25.36; 1238400,25.51; 1239000,25.73;
          1239600,25.73; 1240200,25.99; 1240800,26.16; 1241400,26.25; 1242000,
          26.34; 1242600,26.61; 1243200,26.87; 1243800,27.05; 1244400,27.23;
          1245000,27.32; 1245600,27.39; 1246200,27.41; 1246800,27.59; 1247400,
          27.5; 1248000,27.5; 1248600,27.5; 1249200,27.37; 1249800,27.41;
          1250400,27.67; 1251000,27.41; 1251600,27.4; 1252200,27.24; 1252800,
          27.23; 1253400,27.39; 1254000,27.4; 1254600,27.4; 1255200,27.4;
          1255800,27.4; 1256400,27.4; 1257000,27.4; 1257600,27.41; 1258200,27.5;
          1258800,27.14; 1259400,27.05; 1260000,26.97; 1260600,26.88; 1261200,
          26.88; 1261800,26.79; 1262400,26.78; 1263000,26.71; 1263600,26.61;
          1264200,26.61; 1264800,26.61; 1265400,26.61; 1266000,26.53; 1266600,
          26.52; 1267200,26.44; 1267800,26.52; 1268400,26.52; 1269000,26.52;
          1269600,26.52; 1270200,26.52; 1270800,26.52; 1271400,26.51; 1272000,
          26.44; 1272600,26.44; 1273200,26.44; 1273800,26.26; 1274400,26.17;
          1275000,26.08; 1275600,25.99; 1276200,25.84; 1276800,25.72; 1277400,
          25.46; 1278000,25.3; 1278600,25.1; 1279200,24.84; 1279800,24.57;
          1280400,24.48; 1281000,24.31; 1281600,24.22; 1282200,24.13; 1282800,
          24.04; 1283400,23.95; 1284000,23.86; 1284600,23.78; 1285200,23.69;
          1285800,23.59; 1286400,23.51; 1287000,23.42; 1287600,23.39; 1288200,
          23.33; 1288800,23.25; 1289400,23.15; 1290000,23.06; 1290600,22.98;
          1291200,22.98; 1291800,22.93; 1292400,22.89; 1293000,22.89; 1293600,
          22.8; 1294200,22.71; 1294800,22.71; 1295400,22.62; 1296000,22.53;
          1296600,22.44; 1297200,22.36; 1297800,22.33; 1298400,22.27; 1299000,
          22.18; 1299600,22.09; 1300200,22; 1300800,21.97; 1301400,21.91;
          1302000,21.83; 1302600,21.74; 1303200,21.74; 1303800,21.7; 1304400,
          21.65; 1305000,21.65; 1305600,21.56; 1306200,21.55; 1306800,21.55;
          1307400,21.47; 1308000,21.47; 1308600,21.38; 1309200,21.38; 1309800,
          21.29; 1310400,21.29; 1311000,21.29; 1311600,21.29; 1312200,21.23;
          1312800,21.21; 1313400,21.21; 1314000,21.21; 1314600,21.21; 1315200,
          21.19; 1315800,21.11; 1316400,21.11; 1317000,21.11; 1317600,21.02;
          1318200,21.02; 1318800,21.02; 1319400,21.02; 1320000,20.94; 1320600,
          20.94; 1321200,20.94; 1321800,20.85; 1322400,20.85; 1323000,20.85;
          1323600,20.85; 1324200,20.85; 1324800,20.83; 1325400,20.78; 1326000,
          20.76; 1326600,20.76; 1327200,20.76; 1327800,20.75; 1328400,20.74;
          1329000,20.67; 1329600,20.72; 1330200,20.75; 1330800,20.75; 1331400,
          20.75; 1332000,20.75; 1332600,20.75; 1333200,20.75; 1333800,20.75;
          1334400,20.75; 1335000,20.75; 1335600,20.75; 1336200,20.76; 1336800,
          20.85; 1337400,20.85; 1338000,20.85; 1338600,20.85; 1339200,20.85;
          1339800,20.9; 1340400,20.94; 1341000,20.94; 1341600,20.94; 1342200,
          20.95; 1342800,21.02; 1343400,21.02; 1344000,21.02; 1344600,21.02;
          1345200,21.11; 1345800,21.2; 1346400,21.2; 1347000,21.2; 1347600,21.2;
          1348200,21.2; 1348800,21.2; 1349400,21.18; 1350000,21.11; 1350600,
          21.11; 1351200,21.11; 1351800,21.11; 1352400,21.02; 1353000,21.02;
          1353600,21.02; 1354200,20.98; 1354800,20.94; 1355400,20.94; 1356000,
          20.94; 1356600,20.85; 1357200,20.85; 1357800,20.85; 1358400,20.85;
          1359000,20.85; 1359600,20.82; 1360200,20.76; 1360800,20.76; 1361400,
          20.76; 1362000,20.76; 1362600,20.74; 1363200,20.67; 1363800,20.67;
          1364400,20.67; 1365000,20.66; 1365600,20.58; 1366200,20.58; 1366800,
          20.58; 1367400,20.58; 1368000,20.58; 1368600,20.58; 1369200,20.58;
          1369800,20.58; 1370400,20.58; 1371000,20.58; 1371600,20.58; 1372200,
          20.57; 1372800,20.51; 1373400,20.49; 1374000,20.49; 1374600,20.49;
          1375200,20.49; 1375800,20.49; 1376400,20.47; 1377000,20.4; 1377600,
          20.4; 1378200,20.4; 1378800,20.32; 1379400,20.32; 1380000,20.23;
          1380600,20.32; 1381200,20.49; 1381800,20.58; 1382400,20.67; 1383000,
          20.75; 1383600,20.85; 1384200,20.85; 1384800,20.94; 1385400,20.94;
          1386000,21.02; 1386600,21.02; 1387200,21.02; 1387800,21.11; 1388400,
          21.12; 1389000,21.19; 1389600,21.2; 1390200,21.2; 1390800,21.2;
          1391400,21.2; 1392000,21.28; 1392600,21.29; 1393200,21.29; 1393800,
          21.29; 1394400,21.29; 1395000,21.29; 1395600,21.29; 1396200,21.29;
          1396800,21.29; 1397400,21.3; 1398000,21.36; 1398600,21.36; 1399200,
          21.37; 1399800,21.38; 1400400,21.38; 1401000,21.38; 1401600,21.38;
          1402200,21.38; 1402800,21.38; 1403400,21.38; 1404000,21.38; 1404600,
          21.38; 1405200,21.38; 1405800,21.38; 1406400,21.38; 1407000,21.38;
          1407600,21.38; 1408200,21.38; 1408800,21.38; 1409400,21.38; 1410000,
          21.38; 1410600,21.38; 1411200,21.38; 1411800,21.38; 1412400,21.41;
          1413000,21.47; 1413600,21.47; 1414200,21.47; 1414800,21.47; 1415400,
          21.47; 1416000,21.47; 1416600,21.47; 1417200,21.47; 1417800,21.55;
          1418400,21.55; 1419000,21.55; 1419600,21.55; 1420200,21.58; 1420800,
          21.64; 1421400,21.64; 1422000,21.64; 1422600,21.64; 1423200,21.72;
          1423800,21.73; 1424400,21.74; 1425000,21.77; 1425600,21.83; 1426200,
          21.83; 1426800,21.89; 1427400,21.91; 1428000,21.91; 1428600,21.91;
          1429200,22; 1429800,22; 1430400,22; 1431000,22.01; 1431600,22.09;
          1432200,22.09; 1432800,22.17; 1433400,22.17; 1434000,22.17; 1434600,
          22.26; 1435200,22.26; 1435800,22.34; 1436400,22.36; 1437000,22.36;
          1437600,22.36; 1438200,22.27; 1438800,22.27; 1439400,22.27; 1440000,
          22.26; 1440600,22.18; 1441200,22.18; 1441800,22.17; 1442400,22.09;
          1443000,22.09; 1443600,22; 1444200,22; 1444800,22; 1445400,21.92;
          1446000,21.91; 1446600,21.91; 1447200,21.91; 1447800,21.83; 1448400,
          21.83; 1449000,21.79; 1449600,21.74; 1450200,21.74; 1450800,21.74;
          1451400,21.74; 1452000,21.73; 1452600,21.73; 1453200,21.65; 1453800,
          21.65; 1454400,21.65; 1455000,21.65; 1455600,21.65; 1456200,21.65;
          1456800,21.64; 1457400,21.55; 1458000,21.55; 1458600,21.55; 1459200,
          21.55; 1459800,21.55; 1460400,21.55; 1461000,21.55; 1461600,21.54;
          1462200,21.48; 1462800,21.47; 1463400,21.47; 1464000,21.47; 1464600,
          21.47; 1465200,21.38; 1465800,21.38; 1466400,21.38; 1467000,21.38;
          1467600,21.38; 1468200,21.38; 1468800,21.32; 1469400,21.29; 1470000,
          21.29; 1470600,21.29; 1471200,21.29; 1471800,21.29; 1472400,21.21;
          1473000,21.21; 1473600,21.21; 1474200,21.21; 1474800,21.21; 1475400,
          21.21; 1476000,21.21; 1476600,21.21; 1477200,21.21; 1477800,21.21;
          1478400,21.21; 1479000,21.21; 1479600,21.2; 1480200,21.2; 1480800,
          21.15; 1481400,21.11; 1482000,21.11; 1482600,21.11; 1483200,21.11;
          1483800,21.12; 1484400,21.29; 1485000,21.55; 1485600,21.73; 1486200,
          22; 1486800,22.17; 1487400,22.36; 1488000,22.44; 1488600,22.53;
          1489200,22.53; 1489800,22.58; 1490400,22.62; 1491000,22.62; 1491600,
          22.62; 1492200,22.62; 1492800,22.62; 1493400,22.62; 1494000,22.62;
          1494600,22.79; 1495200,22.8; 1495800,22.79; 1496400,22.74; 1497000,
          22.71; 1497600,22.79; 1498200,22.8; 1498800,22.8; 1499400,22.8;
          1500000,22.89; 1500600,22.89; 1501200,22.98; 1501800,22.98; 1502400,
          23.06; 1503000,23.15; 1503600,23.25; 1504200,23.33; 1504800,23.51;
          1505400,23.68; 1506000,23.6; 1506600,23.69; 1507200,23.71; 1507800,
          23.69; 1508400,23.42; 1509000,23.25; 1509600,23.16; 1510200,23.32;
          1510800,23.42; 1511400,23.3; 1512000,23.32; 1512600,23.42; 1513200,
          23.42; 1513800,23.42; 1514400,23.45; 1515000,23.51; 1515600,23.51;
          1516200,23.51; 1516800,23.51; 1517400,23.68; 1518000,23.77; 1518600,
          23.77; 1519200,23.74; 1519800,23.69; 1520400,23.69; 1521000,23.69;
          1521600,23.68; 1522200,23.65; 1522800,23.59; 1523400,23.59; 1524000,
          23.59; 1524600,23.59; 1525200,23.59; 1525800,23.68; 1526400,23.66;
          1527000,23.77; 1527600,23.69; 1528200,23.86; 1528800,23.86; 1529400,
          23.69; 1530000,23.77; 1530600,23.59; 1531200,23.68; 1531800,23.68;
          1532400,23.68; 1533000,23.59; 1533600,23.59; 1534200,23.51; 1534800,
          23.51; 1535400,23.51; 1536000,23.49; 1536600,23.46; 1537200,23.42;
          1537800,23.42; 1538400,23.39; 1539000,23.07; 1539600,22.89; 1540200,
          22.71; 1540800,22.62; 1541400,22.44; 1542000,22.36; 1542600,22.27;
          1543200,22.27; 1543800,22.18; 1544400,22.18; 1545000,22.09; 1545600,
          22.08; 1546200,22; 1546800,22; 1547400,22; 1548000,21.91; 1548600,
          21.91; 1549200,21.9; 1549800,21.83; 1550400,21.83; 1551000,21.74;
          1551600,21.74; 1552200,21.74; 1552800,21.73; 1553400,21.65; 1554000,
          21.65; 1554600,21.65; 1555200,21.65; 1555800,21.65; 1556400,21.65;
          1557000,21.65; 1557600,21.59; 1558200,21.55; 1558800,21.55; 1559400,
          21.55; 1560000,21.55; 1560600,21.55; 1561200,21.55; 1561800,21.55;
          1562400,21.55; 1563000,21.55; 1563600,21.55; 1564200,21.52; 1564800,
          21.47; 1565400,21.47; 1566000,21.47; 1566600,21.47; 1567200,21.47;
          1567800,21.47; 1568400,21.47; 1569000,21.47; 1569600,21.47; 1570200,
          21.47; 1570800,21.55; 1571400,21.73; 1572000,21.95; 1572600,22.09;
          1573200,22.26; 1573800,22.44; 1574400,22.62; 1575000,22.62; 1575600,
          22.7; 1576200,22.71; 1576800,22.63; 1577400,22.71; 1578000,22.71;
          1578600,22.71; 1579200,22.75; 1579800,22.71; 1580400,22.73; 1581000,
          22.79; 1581600,22.89; 1582200,22.89; 1582800,22.98; 1583400,22.98;
          1584000,22.98; 1584600,22.98; 1585200,22.98; 1585800,22.99; 1586400,
          23.24; 1587000,23.31; 1587600,23.33; 1588200,23.52; 1588800,23.59;
          1589400,23.59; 1590000,23.68; 1590600,23.68; 1591200,23.77; 1591800,
          23.78; 1592400,23.78; 1593000,23.83; 1593600,23.86; 1594200,23.86;
          1594800,23.95; 1595400,24.06; 1596000,24.13; 1596600,24.13; 1597200,
          24.04; 1597800,24.04; 1598400,23.95; 1599000,24.04; 1599600,24.04;
          1600200,24.04; 1600800,24.01; 1601400,23.95; 1602000,23.95; 1602600,
          23.86; 1603200,23.88; 1603800,23.86; 1604400,23.86; 1605000,23.95;
          1605600,23.95; 1606200,23.95; 1606800,24.12; 1607400,24.05; 1608000,
          23.95; 1608600,24.13; 1609200,23.95; 1609800,23.95; 1610400,23.95;
          1611000,23.95; 1611600,23.95; 1612200,23.89; 1612800,23.94; 1613400,
          23.86; 1614000,23.86; 1614600,23.94; 1615200,23.86; 1615800,23.95;
          1616400,24.04; 1617000,24.04; 1617600,24.04; 1618200,24.04; 1618800,
          24.04; 1619400,24.04; 1620000,24.04; 1620600,24.04; 1621200,24.04;
          1621800,24.04; 1622400,23.97; 1623000,23.95; 1623600,23.95; 1624200,
          23.95; 1624800,23.86; 1625400,23.78; 1626000,23.69; 1626600,23.51;
          1627200,23.33; 1627800,23.18; 1628400,23.06; 1629000,22.98; 1629600,
          22.89; 1630200,22.8; 1630800,22.71; 1631400,22.62; 1632000,22.53;
          1632600,22.44; 1633200,22.36; 1633800,22.34; 1634400,22.27; 1635000,
          22.18; 1635600,22.17; 1636200,22.09; 1636800,22; 1637400,22; 1638000,
          21.99; 1638600,21.91; 1639200,21.91; 1639800,21.83; 1640400,21.83;
          1641000,21.74; 1641600,21.74; 1642200,21.74; 1642800,21.73; 1643400,
          21.72; 1644000,21.65; 1644600,21.65; 1645200,21.65; 1645800,21.65;
          1646400,21.55; 1647000,21.55; 1647600,21.55; 1648200,21.55; 1648800,
          21.55; 1649400,21.7; 1650000,21.86; 1650600,22; 1651200,22.17;
          1651800,22.36; 1652400,22.53; 1653000,22.7; 1653600,22.81; 1654200,
          22.98; 1654800,23.06; 1655400,23.15; 1656000,23.24; 1656600,23.25;
          1657200,23.32; 1657800,23.42; 1658400,23.42; 1659000,23.42; 1659600,
          23.51; 1660200,23.51; 1660800,23.59; 1661400,23.59; 1662000,23.59;
          1662600,23.59; 1663200,23.59; 1663800,23.59; 1664400,23.59; 1665000,
          23.59; 1665600,23.59; 1666200,23.68; 1666800,23.68; 1667400,23.68;
          1668000,23.68; 1668600,23.68; 1669200,23.68; 1669800,23.68; 1670400,
          23.68; 1671000,23.77; 1671600,23.86; 1672200,23.86; 1672800,23.86;
          1673400,23.86; 1674000,23.94; 1674600,23.95; 1675200,23.95; 1675800,
          23.95; 1676400,24.04; 1677000,24.04; 1677600,24.13; 1678200,24.21;
          1678800,24.21; 1679400,24.3; 1680000,24.3; 1680600,24.38; 1681200,
          24.4; 1681800,24.4; 1682400,24.4; 1683000,24.4; 1683600,24.4; 1684200,
          24.48; 1684800,24.48; 1685400,24.48; 1686000,24.53; 1686600,24.57;
          1687200,24.57; 1687800,24.57; 1688400,24.57; 1689000,24.65; 1689600,
          24.66; 1690200,24.66; 1690800,24.66; 1691400,24.66; 1692000,24.66;
          1692600,24.66; 1693200,24.66; 1693800,24.66; 1694400,24.6; 1695000,
          24.63; 1695600,24.66; 1696200,24.66; 1696800,24.74; 1697400,24.62;
          1698000,24.58; 1698600,24.57; 1699200,24.57; 1699800,24.57; 1700400,
          24.57; 1701000,24.57; 1701600,24.57; 1702200,24.57; 1702800,24.57;
          1703400,24.57; 1704000,24.57; 1704600,24.48; 1705200,24.54; 1705800,
          24.48; 1706400,24.48; 1707000,24.48; 1707600,24.48; 1708200,24.48;
          1708800,24.48; 1709400,24.48; 1710000,24.48; 1710600,24.48; 1711200,
          24.4; 1711800,24.31; 1712400,24.22; 1713000,24.13; 1713600,24.04;
          1714200,23.86; 1714800,23.69; 1715400,23.59; 1716000,23.42; 1716600,
          23.31; 1717200,23.15; 1717800,23.06; 1718400,22.98; 1719000,22.98;
          1719600,22.89; 1720200,22.8; 1720800,22.78; 1721400,22.71; 1722000,
          22.62; 1722600,22.62; 1723200,22.62; 1723800,22.53; 1724400,22.52;
          1725000,22.44; 1725600,22.44; 1726200,22.36; 1726800,22.36; 1727400,
          22.36; 1728000,22.34; 1728600,22.27; 1729200,22.27; 1729800,22.27;
          1730400,22.18; 1731000,22.18; 1731600,22.18; 1732200,22.18; 1732800,
          22.13; 1733400,22.09; 1734000,22.09; 1734600,22.01; 1735200,22.17;
          1735800,22.35; 1736400,22.44; 1737000,22.62; 1737600,22.89; 1738200,
          23.04; 1738800,23.15; 1739400,23.32; 1740000,23.51; 1740600,23.68;
          1741200,23.77; 1741800,23.86; 1742400,23.86; 1743000,23.86; 1743600,
          23.86; 1744200,23.95; 1744800,23.95; 1745400,23.95; 1746000,24.02;
          1746600,24.04; 1747200,24.04; 1747800,24.04; 1748400,23.95; 1749000,
          23.95; 1749600,23.96; 1750200,24; 1750800,24.02; 1751400,24.04;
          1752000,24.04; 1752600,24.04; 1753200,24.04; 1753800,24.04; 1754400,
          24.04; 1755000,24.06; 1755600,24.1; 1756200,24.13; 1756800,24.13;
          1757400,24.27; 1758000,24.3; 1758600,24.31; 1759200,24.31; 1759800,
          24.31; 1760400,24.31; 1761000,24.3; 1761600,24.3; 1762200,24.3;
          1762800,24.31; 1763400,24.4; 1764000,24.48; 1764600,24.48; 1765200,
          24.57; 1765800,24.74; 1766400,24.93; 1767000,24.84; 1767600,24.84;
          1768200,24.94; 1768800,24.84; 1769400,24.84; 1770000,24.84; 1770600,
          24.84; 1771200,24.84; 1771800,24.84; 1772400,24.83; 1773000,24.84;
          1773600,24.92; 1774200,24.84; 1774800,24.84; 1775400,24.96; 1776000,
          25.01; 1776600,25.1; 1777200,25.06; 1777800,25.1; 1778400,25.18;
          1779000,25.11; 1779600,25.2; 1780200,25.28; 1780800,25.12; 1781400,
          25.1; 1782000,25.19; 1782600,25.05; 1783200,25.1; 1783800,25.1;
          1784400,25.1; 1785000,25.01; 1785600,24.84; 1786200,24.67; 1786800,
          24.83; 1787400,24.57; 1788000,24.4; 1788600,24.31; 1789200,24.13;
          1789800,24.04; 1790400,23.95; 1791000,23.86; 1791600,23.78; 1792200,
          23.78; 1792800,23.69; 1793400,23.59; 1794000,23.59; 1794600,23.51;
          1795200,23.47; 1795800,23.42; 1796400,23.42; 1797000,23.34; 1797600,
          23.33; 1798200,23.32; 1798800,23.25; 1799400,23.15; 1800000,23.15;
          1800600,23.06; 1801200,22.98; 1801800,22.98; 1802400,22.89; 1803000,
          22.83; 1803600,22.79; 1804200,22.71; 1804800,22.62; 1805400,22.62;
          1806000,22.62; 1806600,22.53; 1807200,22.44; 1807800,22.44; 1808400,
          22.37; 1809000,22.36; 1809600,22.35; 1810200,22.27; 1810800,22.18;
          1811400,22.18; 1812000,22.09; 1812600,22.04; 1813200,22; 1813800,22;
          1814400,21.91; 1815000,21.91; 1815600,21.83; 1816200,21.76; 1816800,
          21.74; 1817400,21.74; 1818000,21.65; 1818600,21.65; 1819200,21.65;
          1819800,21.58; 1820400,21.55; 1821000,21.55; 1821600,21.55; 1822200,
          21.64; 1822800,21.73; 1823400,21.73; 1824000,21.73; 1824600,21.73;
          1825200,21.69; 1825800,21.65; 1826400,21.65; 1827000,21.65; 1827600,
          21.65; 1828200,21.65; 1828800,21.65; 1829400,21.65; 1830000,21.65;
          1830600,21.65; 1831200,21.65; 1831800,21.65; 1832400,21.65; 1833000,
          21.65; 1833600,21.65; 1834200,21.65; 1834800,21.65; 1835400,21.65;
          1836000,21.65; 1836600,21.62; 1837200,21.55; 1837800,21.55; 1838400,
          21.55; 1839000,21.55; 1839600,21.55; 1840200,21.55; 1840800,21.55;
          1841400,21.55; 1842000,21.55; 1842600,21.64; 1843200,21.91; 1843800,
          22.17; 1844400,22.45; 1845000,22.62; 1845600,22.89; 1846200,23.07;
          1846800,23.24; 1847400,23.5; 1848000,23.95; 1848600,24.48; 1849200,25;
          1849800,25.26; 1850400,25.45; 1851000,25.48; 1851600,25.55; 1852200,
          25.63; 1852800,25.72; 1853400,25.72; 1854000,25.81; 1854600,25.82;
          1855200,25.82; 1855800,25.82; 1856400,25.82; 1857000,25.9; 1857600,
          25.9; 1858200,25.99; 1858800,26.07; 1859400,26.08; 1860000,26.17;
          1860600,26.25; 1861200,26.33; 1861800,26.34; 1862400,26.34; 1863000,
          26.26; 1863600,26.26; 1864200,26.34; 1864800,26.34; 1865400,26.34;
          1866000,26.34; 1866600,26.26; 1867200,26.08; 1867800,26.25; 1868400,
          26.37; 1869000,26.51; 1869600,26.53; 1870200,26.17; 1870800,26.02;
          1871400,25.82; 1872000,25.8; 1872600,25.81; 1873200,25.63; 1873800,
          25.55; 1874400,25.37; 1875000,25.29; 1875600,25.19; 1876200,25.01;
          1876800,24.84; 1877400,24.57; 1878000,24.4; 1878600,24.31; 1879200,
          24.13; 1879800,24.04; 1880400,23.95; 1881000,23.86; 1881600,23.78;
          1882200,23.69; 1882800,23.59; 1883400,23.51; 1884000,23.42; 1884600,
          23.33; 1885200,23.32; 1885800,23.22; 1886400,23.15; 1887000,23.06;
          1887600,22.98; 1888200,22.98; 1888800,22.89; 1889400,22.84; 1890000,
          22.8; 1890600,22.71; 1891200,22.71; 1891800,22.7; 1892400,22.62;
          1893000,22.62; 1893600,22.53; 1894200,22.53; 1894800,22.44; 1895400,
          22.44; 1896000,22.44; 1896600,22.36; 1897200,22.36; 1897800,22.36;
          1898400,22.27; 1899000,22.27; 1899600,22.18; 1900200,22.18; 1900800,
          22.09; 1901400,22.09; 1902000,22; 1902600,22; 1903200,22; 1903800,
          21.91; 1904400,21.91; 1905000,21.91; 1905600,21.83; 1906200,21.83;
          1906800,21.74; 1907400,21.74; 1908000,21.74; 1908600,21.65; 1909200,
          21.65; 1909800,21.65; 1910400,21.65; 1911000,21.64; 1911600,21.55;
          1912200,21.55; 1912800,21.55; 1913400,21.55; 1914000,21.55; 1914600,
          21.47; 1915200,21.47; 1915800,21.47; 1916400,21.47; 1917000,21.38;
          1917600,21.38; 1918200,21.38; 1918800,21.29; 1919400,21.29; 1920000,
          21.29; 1920600,21.29; 1921200,21.29; 1921800,21.27; 1922400,21.21;
          1923000,21.21; 1923600,21.21; 1924200,21.21; 1924800,21.21; 1925400,
          21.21; 1926000,21.21; 1926600,21.21; 1927200,21.21; 1927800,21.21;
          1928400,21.2; 1929000,21.16; 1929600,21.11; 1930200,21.11; 1930800,
          21.11; 1931400,21.11; 1932000,21.11; 1932600,21.13; 1933200,21.2;
          1933800,21.2; 1934400,21.2; 1935000,21.2; 1935600,21.2; 1936200,21.2;
          1936800,21.2; 1937400,21.21; 1938000,21.29; 1938600,21.38; 1939200,
          21.47; 1939800,21.47; 1940400,21.55; 1941000,21.64; 1941600,21.73;
          1942200,21.83; 1942800,21.91; 1943400,22; 1944000,22; 1944600,22.09;
          1945200,22.17; 1945800,22.25; 1946400,22.26; 1947000,22.36; 1947600,
          22.36; 1948200,22.44; 1948800,22.44; 1949400,22.53; 1950000,22.53;
          1950600,22.62; 1951200,22.62; 1951800,22.62; 1952400,22.62; 1953000,
          22.62; 1953600,22.62; 1954200,22.62; 1954800,22.62; 1955400,22.62;
          1956000,22.62; 1956600,22.62; 1957200,22.55; 1957800,22.53; 1958400,
          22.44; 1959000,22.44; 1959600,22.36; 1960200,22.36; 1960800,22.27;
          1961400,22.18; 1962000,22.17; 1962600,22.09; 1963200,22; 1963800,
          21.91; 1964400,21.91; 1965000,21.83; 1965600,21.74; 1966200,21.73;
          1966800,21.65; 1967400,21.65; 1968000,21.55; 1968600,21.55; 1969200,
          21.55; 1969800,21.47; 1970400,21.47; 1971000,21.47; 1971600,21.38;
          1972200,21.38; 1972800,21.38; 1973400,21.29; 1974000,21.29; 1974600,
          21.29; 1975200,21.21; 1975800,21.21; 1976400,21.21; 1977000,21.2;
          1977600,21.11; 1978200,21.02; 1978800,21.02; 1979400,20.94; 1980000,
          20.94; 1980600,20.85; 1981200,20.85; 1981800,20.76; 1982400,20.74;
          1983000,20.67; 1983600,20.67; 1984200,20.58; 1984800,20.58; 1985400,
          20.58; 1986000,20.67; 1986600,20.75; 1987200,20.75; 1987800,20.85;
          1988400,20.85; 1989000,20.85; 1989600,20.85; 1990200,20.86; 1990800,
          20.94; 1991400,20.94; 1992000,20.94; 1992600,20.94; 1993200,20.94;
          1993800,20.94; 1994400,20.94; 1995000,20.94; 1995600,20.94; 1996200,
          20.94; 1996800,20.94; 1997400,20.94; 1998000,20.94; 1998600,20.94;
          1999200,20.94; 1999800,20.94; 2000400,21.02; 2001000,21.02; 2001600,
          21.02; 2002200,21.02; 2002800,21.02; 2003400,21.02; 2004000,21.02;
          2004600,21.02; 2005200,21.02; 2005800,21.02; 2006400,21.02; 2007000,
          21.02; 2007600,21.02; 2008200,21.02; 2008800,21.02; 2009400,21.02;
          2010000,21.02; 2010600,21.02; 2011200,21.02; 2011800,21.02; 2012400,
          21.02; 2013000,21.02; 2013600,21.02; 2014200,21.02; 2014800,21.02;
          2015400,21.02; 2016000,21.2; 2016600,21.47; 2017200,21.64; 2017800,
          21.73; 2018400,21.91; 2019000,22.17; 2019600,22.36; 2020200,22.53;
          2020800,22.68; 2021400,22.89; 2022000,23.05; 2022600,23.15; 2023200,
          23.23; 2023800,23.24; 2024400,23.32; 2025000,23.32; 2025600,23.32;
          2026200,23.32; 2026800,23.32; 2027400,23.32; 2028000,23.32; 2028600,
          23.25; 2029200,23.25; 2029800,23.25; 2030400,23.24; 2031000,23.15;
          2031600,23.15; 2032200,23.15; 2032800,23.06; 2033400,23.06; 2034000,
          23.06; 2034600,22.99; 2035200,23.03; 2035800,23.03; 2036400,23.03;
          2037000,22.98; 2037600,22.98; 2038200,22.98; 2038800,22.89; 2039400,
          22.89; 2040000,22.89; 2040600,22.84; 2041200,22.84; 2041800,22.81;
          2042400,22.81; 2043000,22.8; 2043600,22.73; 2044200,22.72; 2044800,
          22.71; 2045400,22.71; 2046000,22.71; 2046600,22.66; 2047200,22.62;
          2047800,22.62; 2048400,22.62; 2049000,22.53; 2049600,22.53; 2050200,
          22.44; 2050800,22.36; 2051400,22.27; 2052000,22.26; 2052600,22.18;
          2053200,22.17; 2053800,22.09; 2054400,22; 2055000,22; 2055600,21.91;
          2056200,21.91; 2056800,21.83; 2057400,21.78; 2058000,21.74; 2058600,
          21.74; 2059200,21.71; 2059800,21.65; 2060400,21.65; 2061000,21.65;
          2061600,21.57; 2062200,21.55; 2062800,21.55; 2063400,21.55; 2064000,
          21.48; 2064600,21.47; 2065200,21.47; 2065800,21.47; 2066400,21.47;
          2067000,21.47; 2067600,21.47; 2068200,21.47; 2068800,21.47; 2069400,
          21.47; 2070000,21.47; 2070600,21.38; 2071200,21.29; 2071800,21.29;
          2072400,21.29; 2073000,21.23; 2073600,21.22; 2074200,21.21; 2074800,
          21.21; 2075400,21.21; 2076000,21.21; 2076600,21.21; 2077200,21.21;
          2077800,21.21; 2078400,21.21; 2079000,21.21; 2079600,21.21; 2080200,
          21.2; 2080800,21.17; 2081400,21.11; 2082000,21.11; 2082600,21.11;
          2083200,21.11; 2083800,21.11; 2084400,21.11; 2085000,21.11; 2085600,
          21.06; 2086200,21.02; 2086800,21.02; 2087400,21.02; 2088000,21.02;
          2088600,21.02; 2089200,21.02; 2089800,21.11; 2090400,21.29; 2091000,
          21.55; 2091600,21.73; 2092200,21.91; 2092800,21.99; 2093400,21.77;
          2094000,21.74; 2094600,21.65; 2095200,21.55; 2095800,21.47; 2096400,
          21.47; 2097000,21.55; 2097600,21.55; 2098200,21.55; 2098800,21.7;
          2099400,22; 2100000,22.17; 2100600,22.26; 2101200,22.3; 2101800,22.36;
          2102400,22.53; 2103000,22.71; 2103600,22.95; 2104200,23.15; 2104800,
          23.24; 2105400,23.32; 2106000,23.51; 2106600,23.68; 2107200,23.77;
          2107800,23.95; 2108400,24.04; 2109000,24.21; 2109600,24.56; 2110200,
          24.6; 2110800,24.72; 2111400,24.74; 2112000,24.66; 2112600,24.72;
          2113200,24.74; 2113800,24.57; 2114400,24.48; 2115000,24.4; 2115600,
          24.34; 2116200,24.22; 2116800,24.13; 2117400,24.04; 2118000,24.04;
          2118600,23.95; 2119200,23.95; 2119800,23.86; 2120400,23.86; 2121000,
          23.86; 2121600,24.04; 2122200,24.04; 2122800,24.04; 2123400,24.12;
          2124000,24.12; 2124600,24.04; 2125200,24.3; 2125800,24.13; 2126400,
          24.21; 2127000,24.13; 2127600,24.04; 2128200,24.31; 2128800,24.04;
          2129400,24.04; 2130000,23.94; 2130600,23.86; 2131200,23.86; 2131800,
          23.78; 2132400,23.69; 2133000,23.77; 2133600,23.69; 2134200,23.59;
          2134800,23.51; 2135400,23.42; 2136000,23.33; 2136600,23.24; 2137200,
          23.12; 2137800,22.98; 2138400,22.98; 2139000,22.89; 2139600,22.87;
          2140200,22.8; 2140800,22.71; 2141400,22.62; 2142000,22.62; 2142600,
          22.53; 2143200,22.5; 2143800,22.44; 2144400,22.36; 2145000,22.36;
          2145600,22.27; 2146200,22.19; 2146800,22.18; 2147400,22.1; 2148000,
          22.09; 2148600,22.09; 2149200,22.09; 2149800,22.09; 2150400,22.09;
          2151000,22.09; 2151600,22.09; 2152200,22.09; 2152800,22.09; 2153400,
          22.03; 2154000,22; 2154600,22; 2155200,22; 2155800,22; 2156400,22;
          2157000,21.99; 2157600,21.91; 2158200,21.91; 2158800,21.91; 2159400,
          21.91; 2160000,21.91; 2160600,21.83; 2161200,21.83; 2161800,21.74;
          2162400,21.74; 2163000,21.74; 2163600,21.73; 2164200,21.69; 2164800,
          21.65; 2165400,21.65; 2166000,21.65; 2166600,21.65; 2167200,21.65;
          2167800,21.65; 2168400,21.65; 2169000,21.65; 2169600,21.64; 2170200,
          21.55; 2170800,21.55; 2171400,21.55; 2172000,21.55; 2172600,21.55;
          2173200,21.55; 2173800,21.55; 2174400,21.55; 2175000,21.5; 2175600,
          21.47; 2176200,21.73; 2176800,22; 2177400,22.26; 2178000,22.27;
          2178600,22.43; 2179200,22.44; 2179800,22.36; 2180400,22.18; 2181000,
          21.91; 2181600,21.74; 2182200,21.65; 2182800,21.64; 2183400,21.55;
          2184000,21.55; 2184600,21.47; 2185200,21.47; 2185800,21.45; 2186400,
          21.38; 2187000,21.34; 2187600,21.29; 2188200,21.47; 2188800,21.64;
          2189400,21.83; 2190000,22.09; 2190600,22.26; 2191200,22.36; 2191800,
          22.44; 2192400,22.62; 2193000,22.71; 2193600,22.79; 2194200,22.89;
          2194800,22.98; 2195400,23.15; 2196000,23.24; 2196600,23.32; 2197200,
          23.42; 2197800,23.42; 2198400,23.51; 2199000,23.55; 2199600,23.59;
          2200200,23.59; 2200800,23.59; 2201400,23.59; 2202000,23.59; 2202600,
          23.59; 2203200,23.59; 2203800,23.59; 2204400,23.59; 2205000,23.59;
          2205600,23.68; 2206200,23.68; 2206800,23.68; 2207400,23.68; 2208000,
          23.72; 2208600,23.77; 2209200,23.77; 2209800,23.77; 2210400,23.75;
          2211000,23.69; 2211600,23.69; 2212200,23.69; 2212800,23.6; 2213400,
          23.59; 2214000,23.51; 2214600,23.42; 2215200,23.42; 2215800,23.39;
          2216400,23.33; 2217000,23.25; 2217600,23.25; 2218200,23.24; 2218800,
          23.15; 2219400,23.15; 2220000,23.08; 2220600,23.06; 2221200,23.06;
          2221800,22.98; 2222400,22.98; 2223000,22.98; 2223600,22.89; 2224200,
          22.89; 2224800,22.88; 2225400,22.8; 2226000,22.8; 2226600,22.71;
          2227200,22.71; 2227800,22.62; 2228400,22.62; 2229000,22.62; 2229600,
          22.53; 2230200,22.44; 2230800,22.44; 2231400,22.44; 2232000,22.36;
          2232600,22.36; 2233200,22.36; 2233800,22.36; 2234400,22.27; 2235000,
          22.27; 2235600,22.19; 2236200,22.18; 2236800,22.18; 2237400,22.17;
          2238000,22.09; 2238600,22.09; 2239200,22.01; 2239800,22; 2240400,22;
          2241000,22; 2241600,21.92; 2242200,21.91; 2242800,21.91; 2243400,
          21.91; 2244000,21.83; 2244600,21.83; 2245200,21.74; 2245800,21.74;
          2246400,21.74; 2247000,21.65; 2247600,21.65; 2248200,21.65; 2248800,
          21.65; 2249400,21.65; 2250000,21.64; 2250600,21.62; 2251200,21.56;
          2251800,21.55; 2252400,21.55; 2253000,21.55; 2253600,21.64; 2254200,
          21.74; 2254800,22; 2255400,22.17; 2256000,22.35; 2256600,22.35;
          2257200,22.29; 2257800,22.36; 2258400,22.69; 2259000,22.53; 2259600,
          22.18; 2260200,22; 2260800,21.97; 2261400,21.91; 2262000,21.91;
          2262600,21.83; 2263200,21.83; 2263800,21.82; 2264400,21.74; 2265000,
          21.74; 2265600,21.74; 2266200,21.74; 2266800,21.74; 2267400,21.74;
          2268000,21.74; 2268600,21.73; 2269200,21.73; 2269800,21.71; 2270400,
          21.65; 2271000,21.65; 2271600,21.65; 2272200,21.65; 2272800,21.65;
          2273400,21.65; 2274000,21.65; 2274600,21.65; 2275200,22; 2275800,
          22.26; 2276400,22.61; 2277000,22.63; 2277600,22.91; 2278200,23.15;
          2278800,23.39; 2279400,23.59; 2280000,23.77; 2280600,23.86; 2281200,
          23.95; 2281800,23.95; 2282400,23.98; 2283000,24.04; 2283600,24.04;
          2284200,24.04; 2284800,24.04; 2285400,24.04; 2286000,24.04; 2286600,
          24.04; 2287200,24.04; 2287800,24.04; 2288400,23.95; 2289000,23.95;
          2289600,23.86; 2290200,23.86; 2290800,23.86; 2291400,23.86; 2292000,
          23.79; 2292600,23.78; 2293200,23.82; 2293800,23.86; 2294400,23.86;
          2295000,23.86; 2295600,23.86; 2296200,23.86; 2296800,23.86; 2297400,
          23.86; 2298000,23.86; 2298600,23.86; 2299200,23.86; 2299800,23.89;
          2300400,23.95; 2301000,23.86; 2301600,23.78; 2302200,23.78; 2302800,
          23.69; 2303400,23.69; 2304000,23.59; 2304600,23.59; 2305200,23.61;
          2305800,23.67; 2306400,23.59; 2307000,23.59; 2307600,23.59; 2308200,
          23.51; 2308800,23.42; 2309400,23.33; 2310000,23.31; 2310600,23.24;
          2311200,23.15; 2311800,23.06; 2312400,23.06; 2313000,22.98; 2313600,
          22.98; 2314200,22.98; 2314800,22.89; 2315400,22.89; 2316000,22.8;
          2316600,22.79; 2317200,22.71; 2317800,22.62; 2318400,22.62; 2319000,
          22.53; 2319600,22.53; 2320200,22.53; 2320800,22.44; 2321400,22.36;
          2322000,22.36; 2322600,22.36; 2323200,22.27; 2323800,22.27; 2324400,
          22.25; 2325000,22.18; 2325600,22.18; 2326200,22.18; 2326800,22.1;
          2327400,22.09; 2328000,22.09; 2328600,22; 2329200,22; 2329800,22;
          2330400,22; 2331000,21.91; 2331600,21.91; 2332200,21.91; 2332800,
          21.91; 2333400,21.91; 2334000,21.85; 2334600,21.83; 2335200,21.83;
          2335800,21.83; 2336400,21.81; 2337000,21.74; 2337600,21.74; 2338200,
          21.74; 2338800,21.74; 2339400,21.74; 2340000,21.91; 2340600,22.12;
          2341200,22.36; 2341800,22.45; 2342400,22.62; 2343000,22.62; 2343600,
          22.53; 2344200,22.44; 2344800,22.44; 2345400,22.44; 2346000,22.71;
          2346600,22.36; 2347200,22.26; 2347800,22.18; 2348400,22.1; 2349000,
          22.09; 2349600,22.08; 2350200,22; 2350800,22; 2351400,22; 2352000,22;
          2352600,21.96; 2353200,21.91; 2353800,21.91; 2354400,21.91; 2355000,
          21.91; 2355600,21.91; 2356200,21.91; 2356800,21.91; 2357400,21.91;
          2358000,21.91; 2358600,21.91; 2359200,21.98; 2359800,22; 2360400,22;
          2361000,22; 2361600,22.03; 2362200,22.09; 2362800,22.26; 2363400,
          22.35; 2364000,22.36; 2364600,22.44; 2365200,22.62; 2365800,22.79;
          2366400,22.89; 2367000,22.98; 2367600,23.06; 2368200,23.15; 2368800,
          23.29; 2369400,23.51; 2370000,23.59; 2370600,23.59; 2371200,23.69;
          2371800,23.77; 2372400,23.78; 2373000,23.92; 2373600,23.86; 2374200,
          23.86; 2374800,23.86; 2375400,23.95; 2376000,23.95; 2376600,24.04;
          2377200,24.04; 2377800,24.04; 2378400,24.04; 2379000,24.04; 2379600,
          24.04; 2380200,23.96; 2380800,23.95; 2381400,23.9; 2382000,23.95;
          2382600,24.02; 2383200,24.13; 2383800,24.21; 2384400,24.04; 2385000,
          24.04; 2385600,24.05; 2386200,24.13; 2386800,23.95; 2387400,24.04;
          2388000,24.01; 2388600,24.04; 2389200,24.01; 2389800,24.04; 2390400,
          24.13; 2391000,24.28; 2391600,24.13; 2392200,24.04; 2392800,24.04;
          2393400,23.95; 2394000,23.86; 2394600,23.78; 2395200,23.69; 2395800,
          23.59; 2396400,23.59; 2397000,23.46; 2397600,23.42; 2398200,23.33;
          2398800,23.32; 2399400,23.24; 2400000,23.15; 2400600,23.06; 2401200,
          23.06; 2401800,22.98; 2402400,22.98; 2403000,22.98; 2403600,22.89;
          2404200,22.89; 2404800,22.8; 2405400,22.75; 2406000,22.71; 2406600,
          22.62; 2407200,22.62; 2407800,22.62; 2408400,22.62; 2409000,22.55;
          2409600,22.53; 2410200,22.53; 2410800,22.53; 2411400,22.52; 2412000,
          22.47; 2412600,22.44; 2413200,22.44; 2413800,22.44; 2414400,22.44;
          2415000,22.36; 2415600,22.36; 2416200,22.36; 2416800,22.36; 2417400,
          22.36; 2418000,22.29; 2418600,22.27; 2419200,22.26; 2419800,22.2;
          2420400,22.22; 2421000,22.18; 2421600,22.18; 2422200,22.18; 2422800,
          22.18; 2423400,22.18; 2424000,22.18; 2424600,22.18; 2425200,22.18;
          2425800,22.18; 2426400,22.36; 2427000,22.53; 2427600,22.71; 2428200,
          22.89; 2428800,22.98; 2429400,23.15; 2430000,23.17; 2430600,23.24;
          2431200,23.24; 2431800,23.24; 2432400,23.24; 2433000,23.25; 2433600,
          23.32; 2434200,23.32; 2434800,23.25; 2435400,23.32; 2436000,23.25;
          2436600,23.24; 2437200,23.25; 2437800,23.25; 2438400,23.15; 2439000,
          23.15; 2439600,23.07; 2440200,23.06; 2440800,22.98; 2441400,23.06;
          2442000,22.98; 2442600,22.98; 2443200,22.96; 2443800,22.89; 2444400,
          22.98; 2445000,22.89; 2445600,22.97; 2446200,22.89; 2446800,22.89;
          2447400,22.89; 2448000,22.89; 2448600,22.98; 2449200,22.89; 2449800,
          22.91; 2450400,22.89; 2451000,22.98; 2451600,22.89; 2452200,22.97;
          2452800,23.12; 2453400,23.06; 2454000,23.24; 2454600,23.32; 2455200,
          23.5; 2455800,23.6; 2456400,23.69; 2457000,23.78; 2457600,24.04;
          2458200,24.04; 2458800,24.04; 2459400,24.24; 2460000,24.57; 2460600,
          24.75; 2461200,24.84; 2461800,24.84; 2462400,24.84; 2463000,24.75;
          2463600,24.75; 2464200,24.75; 2464800,24.75; 2465400,24.75; 2466000,
          24.67; 2466600,24.66; 2467200,24.6; 2467800,24.57; 2468400,24.57;
          2469000,24.44; 2469600,24.39; 2470200,24.31; 2470800,24.4; 2471400,
          24.31; 2472000,24.31; 2472600,24.22; 2473200,24.22; 2473800,24.3;
          2474400,24.3; 2475000,24.3; 2475600,24.22; 2476200,24.3; 2476800,
          24.33; 2477400,24.45; 2478000,24.31; 2478600,24.13; 2479200,24.04;
          2479800,23.95; 2480400,23.86; 2481000,23.78; 2481600,23.78; 2482200,
          23.69; 2482800,23.66; 2483400,23.59; 2484000,23.51; 2484600,23.51;
          2485200,23.42; 2485800,23.42; 2486400,23.33; 2487000,23.33; 2487600,
          23.25; 2488200,23.24; 2488800,23.15; 2489400,23.11; 2490000,23.06;
          2490600,22.98; 2491200,22.98; 2491800,22.89; 2492400,22.8; 2493000,
          22.79; 2493600,22.71; 2494200,22.62; 2494800,22.62; 2495400,22.62;
          2496000,22.62; 2496600,22.57; 2497200,22.53; 2497800,22.53; 2498400,
          22.44; 2499000,22.44; 2499600,22.44; 2500200,22.44; 2500800,22.37;
          2501400,22.36; 2502000,22.36; 2502600,22.36; 2503200,22.36; 2503800,
          22.36; 2504400,22.3; 2505000,22.27; 2505600,22.27; 2506200,22.18;
          2506800,22.18; 2507400,22.18; 2508000,22.09; 2508600,22.09; 2509200,
          22.04; 2509800,22; 2510400,22; 2511000,22; 2511600,22; 2512200,21.91;
          2512800,21.91; 2513400,21.91; 2514000,21.89; 2514600,21.83; 2515200,
          21.83; 2515800,21.74; 2516400,21.74; 2517000,21.65; 2517600,21.65;
          2518200,21.65; 2518800,21.65; 2519400,21.56; 2520000,21.55; 2520600,
          21.55; 2521200,21.55; 2521800,21.55; 2522400,21.47; 2523000,21.47;
          2523600,21.47; 2524200,21.47; 2524800,21.47; 2525400,21.47; 2526000,
          21.42; 2526600,21.38; 2527200,21.38; 2527800,21.38; 2528400,21.36;
          2529000,21.29; 2529600,21.29; 2530200,21.29; 2530800,21.29; 2531400,
          21.29; 2532000,21.29; 2532600,21.21; 2533200,21.21; 2533800,21.21;
          2534400,21.21; 2535000,21.21; 2535600,21.21; 2536200,21.29; 2536800,
          21.55; 2537400,21.73; 2538000,21.91; 2538600,22.09; 2539200,22.26;
          2539800,22.44; 2540400,22.62; 2541000,22.71; 2541600,22.88; 2542200,
          22.89; 2542800,22.98; 2543400,22.98; 2544000,22.96; 2544600,22.89;
          2545200,22.8; 2545800,22.71; 2546400,22.62; 2547000,22.53; 2547600,
          22.53; 2548200,22.44; 2548800,22.44; 2549400,22.44; 2550000,22.37;
          2550600,22.36; 2551200,22.36; 2551800,22.36; 2552400,22.36; 2553000,
          22.36; 2553600,22.36; 2554200,22.36; 2554800,22.36; 2555400,22.37;
          2556000,22.44; 2556600,22.44; 2557200,22.44; 2557800,22.44; 2558400,
          22.37; 2559000,22.37; 2559600,22.36; 2560200,22.36; 2560800,22.36;
          2561400,22.27; 2562000,22.27; 2562600,22.18; 2563200,22.18; 2563800,
          22.16; 2564400,22.09; 2565000,22.09; 2565600,22.09; 2566200,22;
          2566800,22; 2567400,21.91; 2568000,21.83; 2568600,21.74; 2569200,
          21.66; 2569800,21.65; 2570400,21.65; 2571000,21.65; 2571600,21.65;
          2572200,21.65; 2572800,21.65; 2573400,21.65; 2574000,21.65; 2574600,
          21.55; 2575200,21.55; 2575800,21.47; 2576400,21.38; 2577000,21.29;
          2577600,21.21; 2578200,21.21; 2578800,21.2; 2579400,21.11; 2580000,
          21.02; 2580600,21.06; 2581200,21.11; 2581800,21.11; 2582400,21.11;
          2583000,21.11; 2583600,21.1; 2584200,21.03; 2584800,21.03; 2585400,
          21.02; 2586000,21.02; 2586600,21.02; 2587200,21.02; 2587800,21.02;
          2588400,20.95; 2589000,20.94; 2589600,20.94; 2590200,20.94; 2590800,
          21.02; 2591400,21.11; 2505600,21.2; 2506200,21.2; 2506800,21.2;
          2507400,21.2; 2508000,21.2; 2508600,21.2; 2509200,21.24; 2509800,
          21.29; 2510400,21.29; 2511000,21.29; 2511600,21.29; 2512200,21.29;
          2512800,21.29; 2513400,21.29; 2514000,21.22; 2514600,21.21; 2515200,
          21.21; 2515800,21.21; 2516400,21.21; 2517000,21.21; 2517600,21.21;
          2518200,21.21; 2518800,21.21; 2519400,21.21; 2520000,21.21; 2520600,
          21.2; 2521200,21.2; 2521800,21.2; 2522400,21.13; 2523000,21.11;
          2523600,21.11; 2524200,21.11; 2524800,21.11; 2525400,21.11; 2526000,
          21.02; 2526600,21.02; 2527200,21.02; 2527800,21.02; 2528400,21.11;
          2529000,21.11; 2529600,21.1; 2530200,21.1; 2530800,21.11; 2531400,
          21.11; 2532000,21.11; 2532600,21.14; 2533200,21.2; 2533800,21.2;
          2534400,21.2; 2535000,21.2; 2535600,21.2; 2536200,21.2; 2536800,21.2;
          2537400,21.2; 2538000,21.2; 2538600,21.2; 2539200,21.2; 2539800,21.27;
          2540400,21.29; 2541000,21.29; 2541600,21.38; 2542200,21.38; 2542800,
          21.47; 2543400,21.47; 2544000,21.47; 2544600,21.47; 2545200,21.47;
          2545800,21.47; 2546400,21.47; 2547000,21.47; 2547600,21.47; 2548200,
          21.47; 2548800,21.47; 2549400,21.47; 2550000,21.47; 2550600,21.55;
          2551200,21.55; 2551800,21.55; 2552400,21.55; 2553000,21.55; 2553600,
          21.55; 2554200,21.59; 2554800,21.64; 2555400,21.64; 2556000,21.55;
          2556600,21.55; 2557200,21.64; 2557800,21.64; 2558400,21.64; 2559000,
          21.64; 2559600,21.64; 2560200,21.64; 2560800,21.64; 2561400,21.64;
          2562000,21.64; 2562600,21.64; 2563200,21.64; 2563800,21.64; 2564400,
          21.67; 2565000,21.71; 2565600,21.73; 2566200,21.73; 2566800,21.66;
          2567400,21.65; 2568000,21.65; 2568600,21.65; 2569200,21.65; 2569800,
          21.65; 2570400,21.65; 2571000,21.64; 2571600,21.64; 2572200,21.64;
          2572800,21.64; 2573400,21.64; 2574000,21.64; 2574600,21.64; 2575200,
          21.64; 2575800,21.64; 2576400,21.64; 2577000,21.64; 2577600,21.64;
          2578200,21.64; 2578800,21.64; 2579400,21.64; 2580000,21.64; 2580600,
          21.73; 2581200,21.73; 2581800,21.73; 2582400,21.73; 2583000,21.74;
          2583600,21.82; 2584200,21.83; 2584800,21.83; 2585400,21.83; 2586000,
          21.91; 2586600,21.91; 2587200,21.91; 2587800,21.91; 2588400,21.91;
          2589000,21.91; 2589600,21.91; 2590200,21.93; 2590800,21.92; 2591400,
          21.95; 2592000,22; 2592600,22; 2593200,22; 2593800,22; 2594400,22;
          2595000,22; 2595600,22; 2596200,22; 2596800,22; 2597400,22; 2598000,
          22; 2598600,22; 2599200,22; 2599800,22; 2600400,22; 2601000,21.99;
          2601600,22; 2602200,22; 2602800,22; 2603400,22; 2604000,22; 2604600,
          22; 2605200,22; 2605800,22; 2606400,22; 2607000,22; 2607600,22;
          2608200,22.09; 2608800,22.36; 2609400,22.53; 2610000,22.71; 2610600,
          22.79; 2611200,22.87; 2611800,22.84; 2612400,22.89; 2613000,22.89;
          2613600,22.8; 2614200,22.8; 2614800,22.8; 2615400,22.8; 2616000,22.89;
          2616600,22.98; 2617200,22.98; 2617800,22.98; 2618400,22.98; 2619000,
          22.98; 2619600,22.97; 2620200,22.89; 2620800,22.89; 2621400,22.71;
          2622000,22.71; 2622600,22.62; 2623200,22.62; 2623800,22.62; 2624400,
          22.81; 2625000,22.98; 2625600,22.98; 2626200,23.09; 2626800,23.07;
          2627400,23.16; 2628000,23.18; 2628600,23.25; 2629200,23.25; 2629800,
          23.42; 2630400,23.42; 2631000,23.77; 2631600,23.98; 2632200,24.13;
          2632800,24.4; 2633400,24.4; 2634000,24.4; 2634600,24.4; 2635200,24.4;
          2635800,24.4; 2636400,24.4; 2637000,24.39; 2637600,24.31; 2638200,
          24.39; 2638800,24.47; 2639400,24.4; 2640000,24.48; 2640600,24.56;
          2641200,24.48; 2641800,24.65; 2642400,24.58; 2643000,24.57; 2643600,
          24.67; 2644200,24.69; 2644800,24.75; 2645400,24.83; 2646000,24.75;
          2646600,24.75; 2647200,24.75; 2647800,24.83; 2648400,24.75; 2649000,
          24.66; 2649600,24.66; 2650200,24.58; 2650800,24.57; 2651400,24.6;
          2652000,24.66; 2652600,24.74; 2653200,24.74; 2653800,24.74; 2654400,
          24.83; 2655000,24.83; 2655600,24.83; 2656200,24.83; 2656800,24.85;
          2657400,24.93; 2658000,25.01; 2658600,25.01; 2659200,25.01; 2659800,
          25.1; 2660400,25.1; 2661000,25.19; 2661600,25.19; 2662200,25.1;
          2662800,25.01; 2663400,24.84; 2664000,24.74; 2664600,24.57; 2665200,
          24.47; 2665800,24.31; 2666400,24.13; 2667000,23.95; 2667600,23.78;
          2668200,23.69; 2668800,23.59; 2669400,23.42; 2670000,23.42; 2670600,
          23.33; 2671200,23.25; 2671800,23.15; 2672400,23.1; 2673000,23.06;
          2673600,22.98; 2674200,22.98; 2674800,22.89; 2675400,22.89; 2676000,
          22.85; 2676600,22.8; 2677200,22.71; 2677800,22.71; 2678400,22.71;
          2679000,22.62; 2679600,22.62; 2680200,22.62; 2680800,22.62; 2681400,
          22.62; 2682000,22.53; 2682600,22.53; 2683200,22.53; 2683800,22.47;
          2684400,22.44; 2685000,22.44; 2685600,22.62; 2686200,22.89; 2686800,
          23.11; 2687400,23.42; 2688000,23.65; 2688600,23.86; 2689200,24.04;
          2689800,24.21; 2690400,24.4; 2691000,24.57; 2691600,24.74; 2692200,
          24.89; 2692800,25.01; 2693400,25.1; 2694000,25.19; 2694600,25.28;
          2695200,25.36; 2695800,25.36; 2696400,25.41; 2697000,25.46; 2697600,
          25.54; 2698200,25.49; 2698800,25.46; 2699400,25.46; 2700000,25.46;
          2700600,25.46; 2701200,25.46; 2701800,25.46; 2702400,25.46; 2703000,
          25.46; 2703600,25.46; 2704200,25.46; 2704800,25.46; 2705400,25.55;
          2706000,25.55; 2706600,25.55; 2707200,25.55; 2707800,25.55; 2708400,
          25.55; 2709000,25.63; 2709600,25.63; 2710200,25.69; 2710800,25.72;
          2711400,25.72; 2712000,25.79; 2712600,25.73; 2713200,25.72; 2713800,
          25.63; 2714400,25.56; 2715000,25.55; 2715600,25.46; 2716200,25.37;
          2716800,25.37; 2717400,25.28; 2718000,25.28; 2718600,25.19; 2719200,
          25.19; 2719800,25.19; 2720400,25.19; 2721000,25.1; 2721600,25.1;
          2722200,25.19; 2722800,25.19; 2723400,25.1; 2724000,25.07; 2724600,
          25.01; 2725200,24.97; 2725800,24.93; 2726400,24.84; 2727000,24.84;
          2727600,24.84; 2728200,24.84; 2728800,24.84; 2729400,24.84; 2730000,
          24.75; 2730600,24.74; 2731200,24.66; 2731800,24.74; 2732400,24.58;
          2733000,24.83; 2733600,24.93; 2734200,25.01; 2734800,25.1; 2735400,
          25.19; 2736000,25.19; 2736600,25.28; 2737200,25.28; 2737800,25.28;
          2738400,25.28; 2739000,25.28; 2739600,25.28; 2740200,25.19; 2740800,
          25.19; 2741400,25.12; 2742000,25.19; 2742600,25.19; 2743200,25.19;
          2743800,25.14; 2744400,25.18; 2745000,25.18; 2745600,25.19; 2746200,
          25.19; 2746800,25.19; 2747400,25.11; 2748000,25.1; 2748600,25.01;
          2749200,24.93; 2749800,24.84; 2750400,24.75; 2751000,24.66; 2751600,
          24.57; 2752200,24.4; 2752800,24.22; 2753400,24.13; 2754000,24.04;
          2754600,24.04; 2755200,23.95; 2755800,23.86; 2756400,23.78; 2757000,
          23.86; 2757600,23.86; 2758200,23.86; 2758800,23.86; 2759400,23.86;
          2760000,23.86; 2760600,23.86; 2761200,23.86; 2761800,23.78; 2762400,
          23.78; 2763000,23.78; 2763600,23.78; 2764200,23.69; 2764800,23.69;
          2765400,23.69; 2766000,23.69; 2766600,23.69; 2767200,23.68; 2767800,
          23.68; 2768400,23.68; 2769000,23.62; 2769600,23.59; 2770200,23.5;
          2770800,23.42; 2771400,23.42; 2772000,23.51; 2772600,23.51; 2773200,
          23.51; 2773800,23.51; 2774400,23.51; 2775000,23.51; 2775600,23.51;
          2776200,23.51; 2776800,23.51; 2777400,23.51; 2778000,23.42; 2778600,
          23.33; 2779200,23.42; 2779800,23.42; 2780400,23.42; 2781000,23.42;
          2781600,23.68; 2782200,23.86; 2782800,24.13; 2783400,24.3; 2784000,
          24.4; 2784600,24.4; 2785200,24.4; 2785800,24.36; 2786400,24.31;
          2787000,24.22; 2787600,24.22; 2788200,24.3; 2788800,24.3; 2789400,
          24.31; 2790000,24.34; 2790600,24.31; 2791200,24.31; 2791800,24.31;
          2792400,24.31; 2793000,24.3; 2793600,24.3; 2794200,24.27; 2794800,
          24.31; 2795400,24.3; 2796000,24.31; 2796600,24.27; 2797200,24.22;
          2797800,24.21; 2798400,24.21; 2799000,24.05; 2799600,24.13; 2800200,
          24.27; 2800800,24.47; 2801400,24.83; 2802000,25.01; 2802600,25.28;
          2803200,25.28; 2803800,25.1; 2804400,24.93; 2805000,24.84; 2805600,
          24.84; 2806200,24.63; 2806800,24.48; 2807400,24.4; 2808000,24.34;
          2808600,24.3; 2809200,24.13; 2809800,23.95; 2810400,23.86; 2811000,
          23.84; 2811600,23.69; 2812200,23.68; 2812800,23.59; 2813400,23.59;
          2814000,23.65; 2814600,23.64; 2815200,23.68; 2815800,23.59; 2816400,
          23.52; 2817000,23.51; 2817600,23.51; 2818200,23.51; 2818800,23.42;
          2819400,23.42; 2820000,23.42; 2820600,23.42; 2821200,23.33; 2821800,
          23.33; 2822400,23.32; 2823000,23.32; 2823600,23.32; 2824200,23.32;
          2824800,23.25; 2825400,23.25; 2826000,23.19; 2826600,23.15; 2827200,
          23.15; 2827800,23.06; 2828400,23.06; 2829000,22.98; 2829600,22.98;
          2830200,22.98; 2830800,22.89; 2831400,22.89; 2832000,22.8; 2832600,
          22.8; 2833200,22.8; 2833800,22.71; 2834400,22.71; 2835000,22.71;
          2835600,22.62; 2836200,22.62; 2836800,22.62; 2837400,22.62; 2838000,
          22.56; 2838600,22.53; 2839200,22.44; 2839800,22.44; 2840400,22.44;
          2841000,22.36; 2841600,22.36; 2842200,22.36; 2842800,22.27; 2843400,
          22.27; 2844000,22.27; 2844600,22.18; 2845200,22.18; 2845800,22.09;
          2846400,22.03; 2847000,22; 2847600,22; 2848200,22; 2848800,22;
          2849400,22; 2850000,21.97; 2850600,21.91; 2851200,21.91; 2851800,
          21.91; 2852400,21.91; 2853000,21.91; 2853600,21.91; 2854200,21.88;
          2854800,21.83; 2855400,21.83; 2856000,21.83; 2856600,21.79; 2857200,
          21.74; 2857800,21.74; 2858400,21.74; 2859000,21.83; 2859600,21.83;
          2860200,21.83; 2860800,21.91; 2861400,21.91; 2862000,21.91; 2862600,
          21.98; 2863200,22; 2863800,22; 2864400,22.09; 2865000,22.09; 2865600,
          22.09; 2866200,22.09; 2866800,22.09; 2867400,22.09; 2868000,22.09;
          2868600,22.09; 2869200,22.09; 2869800,22.09; 2870400,22.09; 2871000,
          22.09; 2871600,22.09; 2872200,22.09; 2872800,22.09; 2873400,22.09;
          2874000,22.09; 2874600,22.09; 2875200,22.01; 2875800,22; 2876400,22;
          2877000,22; 2877600,22; 2878200,22.01; 2878800,22.08; 2879400,22.17;
          2880000,22.36; 2880600,22.71; 2881200,23.23; 2881800,23.62; 2882400,
          23.78; 2883000,24.04; 2883600,24.13; 2884200,24.33; 2884800,24.4;
          2885400,24.3; 2886000,24.4; 2886600,24.65; 2887200,24.62; 2887800,
          24.74; 2888400,24.74; 2889000,24.75; 2889600,24.75; 2890200,24.77;
          2890800,24.88; 2891400,24.92; 2892000,24.93; 2892600,24.93; 2893200,
          24.84; 2893800,24.84; 2894400,24.84; 2895000,24.78; 2895600,24.75;
          2896200,24.75; 2896800,24.75; 2897400,24.74; 2898000,24.74; 2898600,
          24.76; 2899200,24.74; 2899800,24.49; 2900400,24.4; 2901000,24.39;
          2901600,24.14; 2902200,24.04; 2902800,24.13; 2903400,24.13; 2904000,
          24.13; 2904600,24.39; 2905200,24.68; 2905800,24.79; 2906400,24.83;
          2907000,24.75; 2907600,24.75; 2908200,24.74; 2908800,24.66; 2909400,
          24.48; 2910000,24.36; 2910600,24.4; 2911200,24.27; 2911800,24.04;
          2912400,23.86; 2913000,23.78; 2913600,23.68; 2914200,23.51; 2914800,
          23.42; 2915400,23.33; 2916000,23.25; 2916600,23.15; 2917200,23.06;
          2917800,22.98; 2918400,22.89; 2919000,22.8; 2919600,22.71; 2920200,
          22.62; 2920800,22.54; 2921400,22.44; 2922000,22.44; 2922600,22.36;
          2923200,22.27; 2923800,22.18; 2924400,22.09; 2925000,22; 2925600,22;
          2926200,21.91; 2926800,21.91; 2927400,21.91; 2928000,21.91; 2928600,
          21.91; 2929200,21.91; 2929800,21.9; 2930400,21.89; 2931000,21.88;
          2931600,21.83; 2932200,21.83; 2932800,21.83; 2933400,21.83; 2934000,
          21.83; 2934600,21.83; 2935200,21.83; 2935800,21.83; 2936400,21.83;
          2937000,21.83; 2937600,21.83; 2938200,21.83; 2938800,21.83; 2939400,
          21.83; 2940000,21.83; 2940600,21.83; 2941200,21.83; 2941800,21.83;
          2942400,21.82; 2943000,21.82; 2943600,21.81; 2944200,21.82; 2944800,
          21.83; 2945400,21.91; 2946000,21.91; 2946600,21.91; 2947200,21.91;
          2947800,21.91; 2948400,21.91; 2949000,22; 2949600,22; 2950200,22;
          2950800,22; 2951400,22; 2952000,22; 2952600,22; 2953200,22.02;
          2953800,22.06; 2954400,22.01; 2955000,22; 2955600,22; 2956200,22;
          2956800,22; 2957400,22; 2958000,22; 2958600,22; 2959200,22; 2959800,
          22; 2960400,21.95; 2961000,21.91; 2961600,21.91; 2962200,21.91;
          2962800,21.91; 2963400,21.83; 2964000,21.83; 2964600,21.83; 2965200,
          21.83; 2965800,21.83; 2966400,21.86; 2967000,21.91; 2967600,22;
          2968200,22.09; 2968800,22.17; 2969400,22.44; 2970000,22.62; 2970600,
          22.71; 2971200,22.89; 2971800,23.03; 2972400,23.15; 2973000,23.24;
          2973600,23.32; 2974200,23.42; 2974800,23.42; 2975400,23.51; 2976000,
          23.59; 2976600,23.68; 2977200,23.68; 2977800,23.68; 2978400,23.77;
          2979000,23.78; 2979600,23.78; 2980200,23.78; 2980800,23.86; 2981400,
          23.86; 2982000,23.86; 2982600,23.86; 2983200,23.86; 2983800,23.86;
          2984400,23.86; 2985000,23.86; 2985600,23.93; 2986200,23.95; 2986800,
          23.95; 2987400,23.95; 2988000,23.95; 2988600,24.04; 2989200,24.04;
          2989800,24.05; 2990400,24.04; 2991000,24.04; 2991600,24.04; 2992200,
          24.04; 2992800,24.04; 2993400,24.04; 2994000,24.01; 2994600,24.13;
          2995200,24.3; 2995800,24.13; 2996400,24.04; 2997000,24.04; 2997600,
          23.95; 2998200,23.86; 2998800,23.78; 2999400,23.77; 3000000,23.69;
          3000600,23.59; 3001200,23.51; 3001800,23.42; 3002400,23.42; 3003000,
          23.33; 3003600,23.25; 3004200,23.15; 3004800,23.11; 3005400,23.06;
          3006000,22.98; 3006600,22.91; 3007200,22.89; 3007800,22.8; 3008400,
          22.78; 3009000,22.71; 3009600,22.62; 3010200,22.62; 3010800,22.53;
          3011400,22.44; 3012000,22.44; 3012600,22.36; 3013200,22.36; 3013800,
          22.27; 3014400,22.27; 3015000,22.18; 3015600,22.18; 3016200,22.18;
          3016800,22.09; 3017400,22.09; 3018000,22.01; 3018600,22; 3019200,22;
          3019800,22; 3020400,21.91; 3021000,21.91; 3021600,21.91; 3022200,
          21.89; 3022800,21.83; 3023400,21.75; 3024000,21.74; 3024600,21.74;
          3025200,21.65; 3025800,21.65; 3026400,21.56; 3027000,21.55; 3027600,
          21.55; 3028200,21.47; 3028800,21.47; 3029400,21.38; 3030000,21.38;
          3030600,21.38; 3031200,21.29; 3031800,21.29; 3032400,21.29; 3033000,
          21.21; 3033600,21.21; 3034200,21.21; 3034800,21.11; 3035400,21.11;
          3036000,21.05; 3036600,21.02; 3037200,21.02; 3037800,21.02; 3038400,
          20.94; 3039000,20.94; 3039600,20.94; 3040200,20.9; 3040800,20.85;
          3041400,20.85; 3042000,20.85; 3042600,20.85; 3043200,20.76; 3043800,
          20.76; 3044400,20.76; 3045000,20.75; 3045600,20.67; 3046200,20.67;
          3046800,20.67; 3047400,20.67; 3048000,20.62; 3048600,20.58; 3049200,
          20.58; 3049800,20.58; 3050400,20.58; 3051000,20.58; 3051600,20.58;
          3052200,20.58; 3052800,20.58; 3053400,20.58; 3054000,20.58; 3054600,
          20.58; 3055200,20.58; 3055800,20.58; 3056400,20.58; 3057000,20.58;
          3057600,20.58; 3058200,20.58; 3058800,20.58; 3059400,20.58; 3060000,
          20.58; 3060600,20.63; 3061200,20.67; 3061800,20.67; 3062400,20.75;
          3063000,20.75; 3063600,20.75; 3064200,20.85; 3064800,20.85; 3065400,
          20.94; 3066000,21.02; 3066600,21.11; 3067200,21.2; 3067800,21.27;
          3068400,21.3; 3069000,21.47; 3069600,21.55; 3070200,21.55; 3070800,
          21.64; 3071400,21.73; 3072000,21.83; 3072600,21.91; 3073200,22;
          3073800,22.09; 3074400,22.17; 3075000,22.23; 3075600,22.26; 3076200,
          22.36; 3076800,22.36; 3077400,22.37; 3078000,22.44; 3078600,22.44;
          3079200,22.44; 3079800,22.51; 3080400,22.46; 3081000,22.44; 3081600,
          22.44; 3082200,22.44; 3082800,22.36; 3083400,22.36; 3084000,22.36;
          3084600,22.27; 3085200,22.27; 3085800,22.18; 3086400,22.17; 3087000,
          22.09; 3087600,22; 3088200,22; 3088800,21.91; 3089400,21.91; 3090000,
          21.83; 3090600,21.79; 3091200,21.74; 3091800,21.69; 3092400,21.65;
          3093000,21.64; 3093600,21.55; 3094200,21.55; 3094800,21.47; 3095400,
          21.47; 3096000,21.47; 3096600,21.38; 3097200,21.38; 3097800,21.38;
          3098400,21.29; 3099000,21.29; 3099600,21.29; 3100200,21.28; 3100800,
          21.21; 3101400,21.21; 3102000,21.21; 3102600,21.21; 3103200,21.2;
          3103800,21.13; 3104400,21.11; 3105000,21.11; 3105600,21.11; 3106200,
          21.02; 3106800,21.02; 3107400,21.02; 3108000,21.02; 3108600,21.11;
          3109200,21.2; 3109800,21.29; 3110400,21.38; 3111000,21.47; 3111600,
          21.47; 3112200,21.49; 3112800,21.55; 3113400,21.55; 3114000,21.59;
          3114600,21.64; 3115200,21.64; 3115800,21.64; 3116400,21.64; 3117000,
          21.65; 3117600,21.7; 3118200,21.73; 3118800,21.72; 3119400,21.71;
          3120000,21.66; 3120600,21.65; 3121200,21.65; 3121800,21.65; 3122400,
          21.71; 3123000,21.71; 3123600,21.72; 3124200,21.73; 3124800,21.73;
          3125400,21.73; 3126000,21.73; 3126600,21.73; 3127200,21.73; 3127800,
          21.73; 3128400,21.73; 3129000,21.73; 3129600,21.73; 3130200,21.73;
          3130800,21.73; 3131400,21.73; 3132000,21.73; 3132600,21.73; 3133200,
          21.73; 3133800,21.73; 3134400,21.73; 3135000,21.73; 3135600,21.73;
          3136200,21.73; 3136800,21.74; 3137400,21.81; 3138000,21.83; 3138600,
          21.83; 3139200,21.83; 3139800,21.83; 3140400,21.88; 3141000,21.91;
          3141600,21.91; 3142200,21.91; 3142800,21.91; 3143400,21.91; 3144000,
          21.91; 3144600,21.91; 3145200,21.92; 3145800,22; 3146400,22; 3147000,
          22; 3147600,22; 3148200,22.06; 3148800,22; 3149400,21.96; 3150000,
          21.91; 3150600,21.91; 3151200,21.91; 3151800,21.91; 3152400,21.84;
          3153000,21.83; 3153600,21.74; 3154200,21.74; 3154800,21.69; 3155400,
          21.65; 3156000,21.65; 3156600,21.65; 3157200,21.65; 3157800,21.65;
          3158400,21.65; 3159000,21.65; 3159600,21.65; 3160200,21.65; 3160800,
          21.65; 3161400,21.65; 3162000,21.65; 3162600,21.65; 3163200,21.65;
          3163800,21.65; 3164400,21.65; 3165000,21.64; 3165600,21.55; 3166200,
          21.55; 3166800,21.57; 3167400,21.64; 3168000,21.64; 3168600,21.64;
          3169200,21.64; 3169800,21.64; 3170400,21.64; 3171000,21.64; 3171600,
          21.64; 3172200,21.64; 3172800,21.64; 3173400,21.64; 3174000,21.64;
          3174600,21.64; 3175200,21.64; 3175800,21.64; 3176400,21.64; 3177000,
          21.64; 3177600,21.64; 3178200,21.64; 3178800,21.64; 3179400,21.64;
          3180000,21.64; 3180600,21.64; 3181200,21.64; 3181800,21.64; 3182400,
          21.6; 3183000,21.55; 3183600,21.55; 3184200,21.49; 3184800,21.47;
          3185400,21.47; 3186000,21.47; 3186600,21.47; 3187200,21.38; 3187800,
          21.38; 3188400,21.38; 3189000,21.38; 3189600,21.38; 3190200,21.29;
          3190800,21.29; 3191400,21.29; 3192000,21.29; 3192600,21.26; 3193200,
          21.21; 3193800,21.21; 3194400,21.11; 3195000,21.11; 3195600,21.11;
          3196200,21.05; 3196800,21.02; 3197400,20.96; 3198000,21.02; 3198600,
          21.02; 3199200,21.02; 3199800,21.02; 3200400,21.02; 3201000,20.99;
          3201600,20.94; 3202200,20.94; 3202800,20.94; 3203400,20.94; 3204000,
          20.94; 3204600,20.94; 3205200,20.85; 3205800,20.85; 3206400,20.81;
          3207000,20.76; 3207600,20.7; 3208200,20.67; 3208800,20.6; 3209400,
          20.58; 3210000,20.58; 3210600,20.58; 3211200,20.49; 3211800,20.49;
          3212400,20.32; 3213000,20.48; 3213600,20.75; 3214200,20.94; 3214800,
          21.2; 3215400,21.29; 3216000,21.21; 3216600,21.11; 3217200,21.02;
          3217800,20.94; 3218400,20.76; 3219000,20.58; 3219600,20.58; 3220200,
          20.67; 3220800,20.85; 3221400,20.94; 3222000,20.94; 3222600,20.85;
          3223200,20.76; 3223800,20.67; 3224400,20.59; 3225000,20.58; 3225600,
          20.49; 3226200,20.58; 3226800,20.75; 3227400,21.11; 3228000,21.47;
          3228600,21.65; 3229200,21.83; 3229800,21.91; 3230400,22; 3231000,
          22.09; 3231600,22.09; 3232200,22.17; 3232800,22.17; 3233400,22.26;
          3234000,22.36; 3234600,22.44; 3235200,22.44; 3235800,22.53; 3236400,
          22.71; 3237000,22.8; 3237600,22.98; 3238200,23.07; 3238800,23.16;
          3239400,23.29; 3240000,23.15; 3240600,23.25; 3241200,23.33; 3241800,
          23.42; 3242400,23.51; 3243000,23.51; 3243600,23.63; 3244200,23.68;
          3244800,23.59; 3245400,23.69; 3246000,23.74; 3246600,23.86; 3247200,
          24.04; 3247800,23.95; 3248400,23.95; 3249000,24.05; 3249600,24.04;
          3250200,24.13; 3250800,24.13; 3251400,24.04; 3252000,23.93; 3252600,
          23.86; 3253200,24.04; 3253800,24.04; 3254400,23.99; 3255000,23.96;
          3255600,23.95; 3256200,24.03; 3256800,23.95; 3257400,24.04; 3258000,
          24.04; 3258600,24.05; 3259200,24.04; 3259800,23.95; 3260400,23.86;
          3261000,23.78; 3261600,23.69; 3262200,23.69; 3262800,23.51; 3263400,
          23.42; 3264000,23.42; 3264600,23.42; 3265200,23.33; 3265800,23.33;
          3266400,23.15; 3267000,22.93; 3267600,22.8; 3268200,22.71; 3268800,
          22.62; 3269400,22.44; 3270000,22.36; 3270600,22.36; 3271200,22.27;
          3271800,22.18; 3272400,22.09; 3273000,22; 3273600,21.91; 3274200,
          21.83; 3274800,21.83; 3275400,21.91; 3276000,21.91; 3276600,21.83;
          3277200,21.83; 3277800,21.74; 3278400,21.65; 3279000,21.55; 3279600,
          21.55; 3280200,21.55; 3280800,21.55; 3281400,21.55; 3282000,21.55;
          3282600,21.55; 3283200,21.55; 3283800,21.55; 3284400,21.55; 3285000,
          21.55; 3285600,21.55; 3286200,21.55; 3286800,21.55; 3287400,21.55;
          3288000,21.47; 3288600,21.47; 3289200,21.47; 3289800,21.47; 3290400,
          21.47; 3291000,21.47; 3291600,21.47; 3292200,21.47; 3292800,21.47;
          3293400,21.47; 3294000,21.42; 3294600,21.38; 3295200,21.38; 3295800,
          21.38; 3296400,21.29; 3297000,21.29; 3297600,21.29; 3298200,21.29;
          3298800,21.29; 3299400,21.29; 3300000,21.55; 3300600,21.91; 3301200,
          22.17; 3301800,22.36; 3302400,22.53; 3303000,22.62; 3303600,22.71;
          3304200,22.71; 3304800,22.79; 3305400,22.89; 3306000,22.96; 3306600,
          22.98; 3307200,22.98; 3307800,22.98; 3308400,23.06; 3309000,23.06;
          3309600,23.15; 3310200,23.15; 3310800,23.24; 3311400,23.32; 3312000,
          23.32; 3312600,23.42; 3313200,23.42; 3313800,23.64; 3314400,23.68;
          3315000,23.68; 3315600,23.77; 3316200,23.74; 3316800,23.75; 3317400,
          23.69; 3318000,23.78; 3318600,23.93; 3319200,23.83; 3319800,23.86;
          3320400,23.95; 3321000,23.86; 3321600,23.86; 3322200,24.03; 3322800,
          24.04; 3323400,23.86; 3324000,23.86; 3324600,23.95; 3325200,23.86;
          3325800,23.86; 3326400,23.86; 3327000,23.86; 3327600,23.78; 3328200,
          23.78; 3328800,23.68; 3329400,23.59; 3330000,23.59; 3330600,23.59;
          3331200,23.42; 3331800,23.43; 3332400,23.51; 3333000,23.69; 3333600,
          23.59; 3334200,23.59; 3334800,23.66; 3335400,23.68; 3336000,23.59;
          3336600,23.44; 3337200,23.42; 3337800,23.42; 3338400,23.51; 3339000,
          23.51; 3339600,23.59; 3340200,23.59; 3340800,23.68; 3341400,23.78;
          3342000,23.86; 3342600,23.78; 3343200,23.69; 3343800,23.69; 3344400,
          23.66; 3345000,23.69; 3345600,23.69; 3346200,23.59; 3346800,23.42;
          3347400,23.33; 3348000,23.42; 3348600,23.42; 3349200,23.42; 3349800,
          23.35; 3350400,23.25; 3351000,23.25; 3351600,23.25; 3352200,23.15;
          3352800,23.23; 3353400,23.15; 3354000,23.15; 3354600,23.06; 3355200,
          22.98; 3355800,22.8; 3356400,22.71; 3357000,22.62; 3357600,22.44;
          3358200,22.36; 3358800,22.18; 3359400,22; 3360000,21.74; 3360600,
          21.73; 3361200,21.65; 3361800,21.55; 3362400,21.47; 3363000,21.29;
          3363600,21.21; 3364200,21.21; 3364800,21.21; 3365400,21.12; 3366000,
          21.2; 3366600,21.2; 3367200,21.2; 3367800,21.2; 3368400,21.2; 3369000,
          21.2; 3369600,21.21; 3370200,21.21; 3370800,21.28; 3371400,21.29;
          3372000,21.21; 3372600,21.21; 3373200,21.21; 3373800,21.21; 3374400,
          21.21; 3375000,21.21; 3375600,21.28; 3376200,21.21; 3376800,21.29;
          3377400,21.55; 3378000,21.73; 3378600,21.91; 3379200,22.09; 3379800,
          22.27; 3380400,22.53; 3381000,22.66; 3381600,22.79; 3382200,22.89;
          3382800,22.89; 3383400,22.89; 3384000,22.91; 3384600,22.98; 3385200,
          23.15; 3385800,23.06; 3386400,22.98; 3387000,22.98; 3387600,22.89;
          3388200,22.8; 3388800,22.64; 3389400,22.62; 3390000,22.62; 3390600,
          22.62; 3391200,22.71; 3391800,22.71; 3392400,22.89; 3393000,22.98;
          3393600,22.98; 3394200,22.89; 3394800,22.8; 3395400,22.8; 3396000,
          22.78; 3396600,22.79; 3397200,22.72; 3397800,22.72; 3398400,22.71;
          3399000,22.79; 3399600,22.72; 3400200,22.8; 3400800,22.98; 3401400,
          23.32; 3402000,23.5; 3402600,23.57; 3403200,23.68; 3403800,23.69;
          3404400,23.68; 3405000,23.59; 3405600,23.42; 3406200,23.42; 3406800,
          23.42; 3407400,23.69; 3408000,23.95; 3408600,24.21; 3409200,24.3;
          3409800,24.37; 3410400,24.42; 3411000,24.47; 3411600,24.4; 3412200,
          24.48; 3412800,24.57; 3413400,24.71; 3414000,24.74; 3414600,24.83;
          3415200,24.83; 3415800,24.87; 3416400,24.84; 3417000,24.84; 3417600,
          24.83; 3418200,24.81; 3418800,24.75; 3419400,24.68; 3420000,24.66;
          3420600,24.74; 3421200,24.71; 3421800,24.58; 3422400,24.67; 3423000,
          24.75; 3423600,24.75; 3424200,24.74; 3424800,24.75; 3425400,24.75;
          3426000,24.57; 3426600,24.4; 3427200,24.3; 3427800,24.04; 3428400,
          24.02; 3429000,23.86; 3429600,23.78; 3430200,23.69; 3430800,23.59;
          3431400,23.59; 3432000,23.51; 3432600,23.42; 3433200,23.36; 3433800,
          23.33; 3434400,23.25; 3435000,23.15; 3435600,23.06; 3436200,22.98;
          3436800,22.98; 3437400,22.89; 3438000,22.82; 3438600,22.71; 3439200,
          22.71; 3439800,22.78; 3440400,22.74; 3441000,22.71; 3441600,22.71;
          3442200,22.62; 3442800,22.62; 3443400,22.53; 3444000,22.44; 3444600,
          22.44; 3445200,22.36; 3445800,22.36; 3446400,22.36; 3447000,22.36;
          3447600,22.27; 3448200,22.27; 3448800,22.27; 3449400,22.27; 3450000,
          22.18; 3450600,22.18; 3451200,22.17; 3451800,22.09; 3452400,22.09;
          3453000,22; 3453600,22; 3454200,22; 3454800,22; 3455400,21.91;
          3456000,21.91; 3456600,21.87; 3457200,21.83; 3457800,21.74; 3458400,
          21.74; 3459000,21.66; 3459600,21.65; 3460200,21.65; 3460800,21.65;
          3461400,21.65; 3462000,21.65; 3462600,21.63; 3463200,21.71; 3463800,
          21.91; 3464400,22.17; 3465000,22.36; 3465600,22.57; 3466200,22.8;
          3466800,22.98; 3467400,23.06; 3468000,23.15; 3468600,23.15; 3469200,
          23.06; 3469800,23.06; 3470400,23.06; 3471000,23.15; 3471600,23.24;
          3472200,23.32; 3472800,23.32; 3473400,23.32; 3474000,23.32; 3474600,
          23.25; 3475200,23.21; 3475800,23.15; 3476400,23.09; 3477000,23.06;
          3477600,23.15; 3478200,23.3; 3478800,23.32; 3479400,23.25; 3480000,
          23.25; 3480600,23.24; 3481200,23.15; 3481800,23.24; 3482400,23.21;
          3483000,23.15; 3483600,23.15; 3484200,23.06; 3484800,23.06; 3485400,
          23.07; 3486000,23.15; 3486600,23.32; 3487200,23.32; 3487800,23.33;
          3488400,23.36; 3489000,23.33; 3489600,23.21; 3490200,23.24; 3490800,
          23.15; 3491400,23.16; 3492000,23.23; 3492600,23.24; 3493200,23.15;
          3493800,23.32; 3494400,23.34; 3495000,23.51; 3495600,23.69; 3496200,
          23.92; 3496800,24.05; 3497400,24.04; 3498000,24.04; 3498600,24.13;
          3499200,24.13; 3499800,24.21; 3500400,24.22; 3501000,24.3; 3501600,
          24.13; 3502200,24.21; 3502800,24.22; 3503400,24.18; 3504000,24.31;
          3504600,24.31; 3505200,24.49; 3505800,24.57; 3506400,24.57; 3507000,
          24.66; 3507600,24.66; 3508200,24.58; 3508800,24.66; 3509400,24.48;
          3510000,24.6; 3510600,24.56; 3511200,24.48; 3511800,24.48; 3512400,
          24.49; 3513000,24.48; 3513600,24.66; 3514200,24.83; 3514800,24.8;
          3515400,24.83; 3516000,24.83; 3516600,24.75; 3517200,24.66; 3517800,
          24.48; 3518400,24.31; 3519000,24.31; 3519600,24.3; 3520200,24.22;
          3520800,24.15; 3521400,24.13; 3522000,24.04; 3522600,24.04; 3523200,
          23.96; 3523800,23.86; 3524400,23.86; 3525000,23.83; 3525600,23.78;
          3526200,23.69; 3526800,23.6; 3527400,23.51; 3528000,23.25; 3528600,
          23.06; 3529200,22.98; 3529800,22.89; 3530400,22.71; 3531000,22.62;
          3531600,22.62; 3532200,22.53; 3532800,22.44; 3533400,22.44; 3534000,
          22.36; 3534600,22.36; 3535200,22.27; 3535800,22.27; 3536400,22.27;
          3537000,22.18; 3537600,22.18; 3538200,22.18; 3538800,22.17; 3539400,
          22.09; 3540000,22.09; 3540600,22.09; 3541200,22.04; 3541800,22;
          3542400,22; 3543000,22; 3543600,22; 3544200,21.96; 3544800,21.91;
          3545400,21.91; 3546000,21.83; 3546600,21.83; 3547200,21.74; 3547800,
          21.71; 3548400,21.65; 3549000,21.65; 3549600,21.73; 3550200,22;
          3550800,22.17; 3551400,22.36; 3552000,22.53; 3552600,22.71; 3553200,
          22.89; 3553800,23.06; 3554400,22.89; 3555000,22.67; 3555600,22.53;
          3556200,22.44; 3556800,22.27; 3557400,22.18; 3558000,22.41; 3558600,
          22.71; 3559200,22.62; 3559800,22.53; 3560400,22.44; 3561000,22.36;
          3561600,22.27; 3562200,22.18; 3562800,22.18; 3563400,22.25; 3564000,
          22.36; 3564600,22.36; 3565200,22.36; 3565800,22.43; 3566400,22.44;
          3567000,22.44; 3567600,22.44; 3568200,22.44; 3568800,22.36; 3569400,
          22.37; 3570000,22.44; 3570600,22.44; 3571200,22.44; 3571800,22.44;
          3572400,22.44; 3573000,22.47; 3573600,22.54; 3574200,22.62; 3574800,
          22.7; 3575400,22.71; 3576000,22.78; 3576600,22.89; 3577200,22.8;
          3577800,22.8; 3578400,22.89; 3579000,22.89; 3579600,22.92; 3580200,
          23.06; 3580800,23.15; 3581400,23.31; 3582000,23.16; 3582600,23.21;
          3583200,23.18; 3583800,23.22; 3584400,23.32; 3585000,23.32; 3585600,
          23.32; 3586200,23.25; 3586800,23.21; 3587400,23.15; 3588000,23.15;
          3588600,23.27; 3589200,23.25; 3589800,23.25; 3590400,23.32; 3591000,
          23.25; 3591600,23.42; 3592200,23.43; 3592800,23.64; 3593400,23.59;
          3594000,23.77; 3594600,23.83; 3595200,23.74; 3595800,23.69; 3596400,
          23.59; 3597000,23.51; 3597600,23.56; 3598200,23.78; 3598800,23.96;
          3599400,23.95; 3600000,24.13; 3600600,24.31; 3601200,24.31; 3601800,
          24.31; 3602400,24.31; 3603000,24.31; 3603600,24.22; 3604200,24.22;
          3604800,24.22; 3605400,24.21; 3606000,24.13; 3606600,24.13; 3607200,
          24.13; 3607800,24.13; 3608400,24.04; 3609000,24.13; 3609600,24.13;
          3610200,24.13; 3610800,24.13; 3611400,24.13; 3612000,24.04; 3612600,
          23.86; 3613200,23.6; 3613800,23.42; 3614400,23.25; 3615000,23.06;
          3615600,22.91; 3616200,22.8; 3616800,22.67; 3617400,22.44; 3618000,
          22.27; 3618600,22.27; 3619200,22.09; 3619800,22; 3620400,21.98;
          3621000,21.91; 3621600,21.91; 3622200,21.83; 3622800,21.83; 3623400,
          21.83; 3624000,21.74; 3624600,21.74; 3625200,21.74; 3625800,21.73;
          3626400,21.65; 3627000,21.65; 3627600,21.55; 3628200,21.49; 3628800,
          21.47; 3629400,21.47; 3630000,21.47; 3630600,21.47; 3631200,21.38;
          3631800,21.38; 3632400,21.33; 3633000,21.29; 3633600,21.29; 3634200,
          21.29; 3634800,21.29; 3635400,21.22; 3636000,21.21; 3636600,21.21;
          3637200,21.21; 3637800,21.21; 3638400,21.21; 3639000,21.21; 3639600,
          21.21; 3640200,21.21; 3640800,21.2; 3641400,21.14; 3642000,21.17;
          3642600,21.16; 3643200,21.12; 3643800,21.11; 3644400,21.11; 3645000,
          21.11; 3645600,21.11; 3646200,21.08; 3646800,21.02; 3647400,21.02;
          3648000,21.02; 3648600,20.94; 3649200,20.94; 3649800,20.94; 3650400,
          20.85; 3651000,20.85; 3651600,20.81; 3652200,20.76; 3652800,20.67;
          3653400,20.67; 3654000,20.58; 3654600,20.58; 3655200,20.49; 3655800,
          20.49; 3656400,20.4; 3657000,20.49; 3657600,20.46; 3658200,20.47;
          3658800,20.42; 3659400,20.4; 3660000,20.4; 3660600,20.4; 3661200,
          20.32; 3661800,20.32; 3662400,20.32; 3663000,20.32; 3663600,20.23;
          3664200,20.15; 3664800,20.14; 3665400,20.14; 3666000,20.14; 3666600,
          20.05; 3667200,20.05; 3667800,19.96; 3668400,19.96; 3669000,20.05;
          3669600,20.05; 3670200,20.05; 3670800,20.13; 3671400,20.13; 3672000,
          20.21; 3672600,20.22; 3673200,20.23; 3673800,20.32; 3674400,20.32;
          3675000,20.32; 3675600,20.32; 3676200,20.32; 3676800,20.32; 3677400,
          20.4; 3678000,20.4; 3678600,20.49; 3679200,20.49; 3679800,20.49;
          3680400,20.49; 3681000,20.49; 3681600,20.42; 3682200,20.4; 3682800,
          20.49; 3683400,20.42; 3684000,20.4; 3684600,20.37; 3685200,20.4;
          3685800,20.4; 3686400,20.4; 3687000,20.32; 3687600,20.23; 3688200,
          20.14; 3688800,20.14; 3689400,20.09; 3690000,20.13; 3690600,20.13;
          3691200,20.05; 3691800,19.99; 3692400,20.05; 3693000,20.05; 3693600,
          20.05; 3694200,20.05; 3694800,20.05; 3695400,20.05; 3696000,20.05;
          3696600,20.05; 3697200,19.97; 3697800,19.96; 3698400,19.96; 3699000,
          19.96; 3699600,19.87; 3700200,19.87; 3700800,19.79; 3701400,19.79;
          3702000,19.79; 3702600,19.79; 3703200,19.79; 3703800,19.79; 3704400,
          19.79; 3705000,19.87; 3705600,19.87; 3706200,19.87; 3706800,19.87;
          3707400,19.87; 3708000,19.87; 3708600,19.87; 3709200,19.96; 3709800,
          20.05; 3710400,20.05; 3711000,20.05; 3711600,20.13; 3712200,20.13;
          3712800,20.13; 3713400,20.22; 3714000,20.22; 3714600,20.32; 3715200,
          20.32; 3715800,20.36; 3716400,20.4; 3717000,20.49; 3717600,20.49;
          3718200,20.58; 3718800,20.58; 3719400,20.67; 3720000,20.67; 3720600,
          20.75; 3721200,20.75; 3721800,20.75; 3722400,20.85; 3723000,20.85;
          3723600,20.94; 3724200,20.94; 3724800,21.02; 3725400,21.02; 3726000,
          21.02; 3726600,21.11; 3727200,21.11; 3727800,21.11; 3728400,21.11;
          3729000,21.02; 3729600,21.02; 3730200,21.02; 3730800,21.02; 3731400,
          21.02; 3732000,20.98; 3732600,20.94; 3733200,20.94; 3733800,20.94;
          3734400,20.94; 3735000,20.94; 3735600,20.94; 3736200,20.94; 3736800,
          20.94; 3737400,20.9; 3738000,20.87; 3738600,20.85; 3739200,20.85;
          3739800,20.85; 3740400,20.85; 3741000,20.85; 3741600,20.85; 3742200,
          20.85; 3742800,20.81; 3743400,20.76; 3744000,20.67; 3744600,20.58;
          3745200,20.58; 3745800,20.67; 3746400,20.68; 3747000,20.75; 3747600,
          20.78; 3748200,20.85; 3748800,20.85; 3749400,20.89; 3750000,20.94;
          3750600,20.94; 3751200,21.02; 3751800,21.06; 3752400,21.11; 3753000,
          21.2; 3753600,21.2; 3754200,21.2; 3754800,21.2; 3755400,21.29;
          3756000,21.29; 3756600,21.47; 3757200,21.55; 3757800,21.64; 3758400,
          21.73; 3759000,21.83; 3759600,21.91; 3760200,21.99; 3760800,22;
          3761400,22; 3762000,22; 3762600,22; 3763200,22.04; 3763800,22.09;
          3764400,22.09; 3765000,22.09; 3765600,22.15; 3766200,22.17; 3766800,
          22.17; 3767400,22.18; 3768000,22.26; 3768600,22.36; 3769200,22.36;
          3769800,22.41; 3770400,22.36; 3771000,22.36; 3771600,22.36; 3772200,
          22.36; 3772800,22.36; 3773400,22.36; 3774000,22.36; 3774600,22.36;
          3775200,22.33; 3775800,22.27; 3776400,22.27; 3777000,22.27; 3777600,
          22.23; 3778200,22.18; 3778800,22.18; 3779400,22.18; 3780000,22.09;
          3780600,22.09; 3781200,22.09; 3781800,22; 3782400,22; 3783000,22;
          3783600,22; 3784200,21.98; 3784800,21.91; 3785400,21.91; 3786000,
          21.91; 3786600,21.91; 3787200,21.9; 3787800,21.83; 3788400,21.83;
          3789000,21.83; 3789600,21.8; 3790200,21.74; 3790800,21.74; 3791400,
          21.74; 3792000,21.74; 3792600,21.74; 3793200,21.68; 3793800,21.65;
          3794400,21.65; 3795000,21.65; 3795600,21.65; 3796200,21.65; 3796800,
          21.65; 3797400,21.65; 3798000,21.65; 3798600,21.63; 3799200,21.57;
          3799800,21.55; 3800400,21.56; 3801000,21.55; 3801600,21.55; 3802200,
          21.55; 3802800,21.55; 3803400,21.55; 3804000,21.55; 3804600,21.55;
          3805200,21.55; 3805800,21.55; 3806400,21.55; 3807000,21.55; 3807600,
          21.55; 3808200,21.55; 3808800,21.55; 3809400,21.55; 3810000,21.55;
          3810600,21.55; 3811200,21.55; 3811800,21.55; 3812400,21.55; 3813000,
          21.55; 3813600,21.55; 3814200,21.55; 3814800,21.55; 3815400,21.58;
          3816000,21.6; 3816600,21.56; 3817200,21.64; 3817800,21.91; 3818400,
          22.09; 3819000,22.27; 3819600,22.53; 3820200,22.71; 3820800,22.98;
          3821400,23.06; 3822000,23.15; 3822600,23.24; 3823200,23.31; 3823800,
          23.32; 3824400,23.42; 3825000,23.42; 3825600,23.51; 3826200,23.51;
          3826800,23.59; 3827400,23.68; 3828000,23.7; 3828600,23.77; 3829200,
          23.77; 3829800,23.86; 3830400,23.95; 3831000,24.04; 3831600,24.04;
          3832200,24.22; 3832800,24.47; 3833400,24.42; 3834000,24.4; 3834600,
          24.54; 3835200,24.63; 3835800,24.51; 3836400,24.48; 3837000,24.48;
          3837600,24.48; 3838200,24.48; 3838800,24.57; 3839400,24.57; 3840000,
          24.57; 3840600,24.74; 3841200,24.73; 3841800,24.75; 3842400,24.83;
          3843000,24.83; 3843600,24.83; 3844200,24.84; 3844800,24.93; 3845400,
          25.01; 3846000,25.01; 3846600,25.1; 3847200,25.1; 3847800,25.1;
          3848400,25.27; 3849000,25.08; 3849600,25.01; 3850200,24.93; 3850800,
          24.93; 3851400,24.93; 3852000,25.03; 3852600,25.01; 3853200,25.1;
          3853800,24.91; 3854400,24.83; 3855000,24.83; 3855600,24.57; 3856200,
          24.65; 3856800,24.57; 3857400,24.48; 3858000,24.4; 3858600,24.3;
          3859200,24.13; 3859800,24.04; 3860400,24.04; 3861000,24.2; 3861600,
          23.92; 3862200,23.78; 3862800,23.69; 3863400,23.6; 3864000,23.58;
          3864600,23.42; 3865200,23.42; 3865800,23.33; 3866400,23.24; 3867000,
          23.15; 3867600,23.06; 3868200,23.01; 3868800,23.15; 3869400,23.32;
          3870000,23.32; 3870600,23.42; 3871200,23.33; 3871800,23.32; 3872400,
          23.25; 3873000,23.15; 3873600,23.15; 3874200,22.98; 3874800,22.89;
          3875400,22.72; 3876000,22.62; 3876600,22.53; 3877200,22.44; 3877800,
          22.38; 3878400,22.36; 3879000,22.36; 3879600,22.27; 3880200,22.24;
          3880800,22.18; 3881400,22.17; 3882000,22.09; 3882600,22.09; 3883200,
          22; 3883800,22; 3884400,22; 3885000,21.99; 3885600,21.91; 3886200,
          21.91; 3886800,21.91; 3887400,21.91; 3888000,21.83; 3888600,21.83;
          3889200,21.83; 3889800,21.83; 3890400,21.83; 3891000,21.75; 3891600,
          21.74; 3892200,21.74; 3892800,21.74; 3893400,21.74; 3894000,21.74;
          3894600,21.74; 3895200,21.74; 3895800,21.81; 3896400,21.83; 3897000,
          21.91; 3897600,21.91; 3898200,21.91; 3898800,21.91; 3899400,21.91;
          3900000,21.91; 3900600,22; 3901200,22; 3901800,22; 3902400,22;
          3903000,22; 3903600,22; 3904200,22.24; 3904800,22.44; 3905400,22.71;
          3906000,22.98; 3906600,23.24; 3907200,23.32; 3907800,23.33; 3908400,
          23.33; 3909000,23.26; 3909600,23.15; 3910200,23.15; 3910800,23.15;
          3911400,23.24; 3912000,23.32; 3912600,23.32; 3913200,23.42; 3913800,
          23.42; 3914400,23.42; 3915000,23.42; 3915600,23.42; 3916200,23.51;
          3916800,23.77; 3917400,23.78; 3918000,23.95; 3918600,24.3; 3919200,
          24.42; 3919800,24.48; 3920400,24.66; 3921000,24.66; 3921600,24.75;
          3922200,24.75; 3922800,24.93; 3923400,24.93; 3924000,25.01; 3924600,
          25.09; 3925200,25.02; 3925800,25.01; 3926400,25.09; 3927000,25.09;
          3927600,24.99; 3928200,25.01; 3928800,24.84; 3929400,24.84; 3930000,
          24.75; 3930600,24.75; 3931200,24.66; 3931800,24.66; 3932400,24.57;
          3933000,24.57; 3933600,24.48; 3934200,24.48; 3934800,24.48; 3935400,
          24.48; 3936000,24.48; 3936600,24.48; 3937200,24.48; 3937800,24.48;
          3938400,24.43; 3939000,24.53; 3939600,24.57; 3940200,24.48; 3940800,
          24.48; 3941400,24.48; 3942000,24.57; 3942600,24.57; 3943200,24.49;
          3943800,24.48; 3944400,24.57; 3945000,24.48; 3945600,24.48; 3946200,
          24.48; 3946800,24.48; 3947400,24.48; 3948000,24.4; 3948600,24.4;
          3949200,24.36; 3949800,24.31; 3950400,24.31; 3951000,24.39; 3951600,
          24.31; 3952200,24.31; 3952800,24.31; 3953400,24.22; 3954000,24.22;
          3954600,24.2; 3955200,24.13; 3955800,24.13; 3956400,24.13; 3957000,
          24.04; 3957600,24.04; 3958200,23.86; 3958800,23.78; 3959400,23.69;
          3960000,23.69; 3960600,23.59; 3961200,23.42; 3961800,23.42; 3962400,
          23.42; 3963000,23.33; 3963600,23.33; 3964200,23.33; 3964800,23.33;
          3965400,23.33; 3966000,23.32; 3966600,23.3; 3967200,23.25; 3967800,
          23.25; 3968400,23.22; 3969000,23.21; 3969600,23.15; 3970200,23.15;
          3970800,23.15; 3971400,23.15; 3972000,23.15; 3972600,23.15; 3973200,
          23.06; 3973800,23.06; 3974400,23.06; 3975000,23.06; 3975600,23.06;
          3976200,23.06; 3976800,23.06; 3977400,23.06; 3978000,23.06; 3978600,
          23.06; 3979200,23.06; 3979800,23.06; 3980400,23.06; 3981000,23.06;
          3981600,23.06; 3982200,23.06; 3982800,23.08; 3983400,23.07; 3984000,
          23.06; 3984600,23.06; 3985200,23.06; 3985800,23.06; 3986400,23.06;
          3987000,23.06; 3987600,23.06; 3988200,23.06; 3988800,23.06; 3989400,
          23.06; 3990000,23.06; 3990600,23.3; 3991200,23.42; 3991800,23.68;
          3992400,23.86; 3993000,24.04; 3993600,24.04; 3994200,24.04; 3994800,
          23.95; 3995400,23.86; 3996000,23.78; 3996600,23.78; 3997200,23.78;
          3997800,23.86; 3998400,23.95; 3999000,24.04; 3999600,24.12; 4000200,
          24.04; 4000800,24.04; 4001400,24.01; 4002000,23.95; 4002600,23.86;
          4003200,23.86; 4003800,23.94; 4004400,23.86; 4005000,23.93; 4005600,
          23.95; 4006200,24.03; 4006800,24.04; 4007400,24.04; 4008000,24.04;
          4008600,24.07; 4009200,24.13; 4009800,24.13; 4010400,24.04; 4011000,
          24.04; 4011600,24.06; 4012200,24.13; 4012800,24.13; 4013400,24.13;
          4014000,24.13; 4014600,24.21; 4015200,24.21; 4015800,24.22; 4016400,
          24.22; 4017000,24.3; 4017600,24.3; 4018200,24.3; 4018800,24.31;
          4019400,24.31; 4020000,24.31; 4020600,24.31; 4021200,24.4; 4021800,
          24.31; 4022400,24.31; 4023000,24.31; 4023600,24.3; 4024200,24.3;
          4024800,24.3; 4025400,24.31; 4026000,24.31; 4026600,24.4; 4027200,
          24.4; 4027800,24.4; 4028400,24.4; 4029000,24.4; 4029600,24.4; 4030200,
          24.4; 4030800,24.43; 4031400,24.4; 4032000,24.4; 4032600,24.4;
          4033200,24.4; 4033800,24.4; 4034400,24.4; 4035000,24.4; 4035600,24.4;
          4036200,24.4; 4036800,24.4; 4037400,24.4; 4038000,24.4; 4038600,24.4;
          4039200,24.31; 4039800,24.31; 4040400,24.31; 4041000,24.31; 4041600,
          24.3; 4042200,24.22; 4042800,24.22; 4043400,24.22; 4044000,24.13;
          4044600,24.04; 4045200,23.86; 4045800,23.78; 4046400,23.78; 4047000,
          23.69; 4047600,23.59; 4048200,23.5; 4048800,23.41; 4049400,23.33;
          4050000,23.25; 4050600,23.24; 4051200,23.15; 4051800,23.06; 4052400,
          22.98; 4053000,22.98; 4053600,22.89; 4054200,22.89; 4054800,22.89;
          4055400,22.8; 4056000,22.74; 4056600,22.62; 4057200,22.62; 4057800,
          22.62; 4058400,22.62; 4059000,22.62; 4059600,22.62; 4060200,22.57;
          4060800,22.54; 4061400,22.53; 4062000,22.53; 4062600,22.53; 4063200,
          22.53; 4063800,22.44; 4064400,22.44; 4065000,22.44; 4065600,22.44;
          4066200,22.53; 4066800,22.53; 4067400,22.62; 4068000,22.53; 4068600,
          22.62; 4069200,22.62; 4069800,22.62; 4070400,22.62; 4071000,22.62;
          4071600,22.71; 4072200,22.71; 4072800,22.62; 4073400,22.62; 4074000,
          22.62; 4074600,22.62; 4075200,22.62; 4075800,22.62; 4076400,22.71;
          4077000,22.98; 4077600,23.16; 4078200,23.42; 4078800,23.68; 4079400,
          23.68; 4080000,23.68; 4080600,23.69; 4081200,23.6; 4081800,23.53;
          4082400,23.42; 4083000,23.42; 4083600,23.51; 4084200,23.59; 4084800,
          23.59; 4085400,23.59; 4086000,23.68; 4086600,23.59; 4087200,23.51;
          4087800,23.42; 4088400,23.51; 4089000,23.51; 4089600,23.59; 4090200,
          23.59; 4090800,23.77; 4091400,23.78; 4092000,23.78; 4092600,23.78;
          4093200,23.86; 4093800,24.03; 4094400,23.78; 4095000,23.95; 4095600,
          24.03; 4096200,23.96; 4096800,24.04; 4097400,23.96; 4098000,23.86;
          4098600,23.86; 4099200,23.93; 4099800,24.05; 4100400,23.86; 4101000,
          24.04; 4101600,24.04; 4102200,24.04; 4102800,24.21; 4103400,24.3;
          4104000,24.13; 4104600,24.15; 4105200,24.3; 4105800,24.3; 4106400,
          24.31; 4107000,24.32; 4107600,24.4; 4108200,24.56; 4108800,24.66;
          4109400,24.59; 4110000,24.67; 4110600,24.74; 4111200,24.75; 4111800,
          24.75; 4112400,24.84; 4113000,24.83; 4113600,24.87; 4114200,24.84;
          4114800,24.92; 4115400,24.84; 4116000,24.84; 4116600,24.84; 4117200,
          24.84; 4117800,24.84; 4118400,24.93; 4119000,24.84; 4119600,24.84;
          4120200,24.84; 4120800,24.83; 4121400,24.75; 4122000,24.72; 4122600,
          24.66; 4123200,24.65; 4123800,24.61; 4124400,24.57; 4125000,24.57;
          4125600,24.57; 4126200,24.48; 4126800,24.48; 4127400,24.48; 4128000,
          24.48; 4128600,24.4; 4129200,24.4; 4129800,24.4; 4130400,24.3;
          4131000,24.13; 4131600,23.95; 4132200,23.86; 4132800,23.78; 4133400,
          23.69; 4134000,23.51; 4134600,23.33; 4135200,23.25; 4135800,23.15;
          4136400,22.98; 4137000,22.98; 4137600,22.89; 4138200,22.86; 4138800,
          22.8; 4139400,22.71; 4140000,22.71; 4140600,22.68; 4141200,22.62;
          4141800,22.62; 4142400,22.56; 4143000,22.53; 4143600,22.53; 4144200,
          22.44; 4144800,22.44; 4145400,22.43; 4146000,22.36; 4146600,22.36;
          4147200,22.36; 4147800,22.36; 4148400,22.36; 4149000,22.36; 4149600,
          22.36; 4150200,22.27; 4150800,22.27; 4151400,22.27; 4152000,22.25;
          4152600,22.18; 4153200,22.18; 4153800,22.18; 4154400,22.18; 4155000,
          22.18; 4155600,22.19; 4156200,22.26; 4156800,22.36; 4157400,22.36;
          4158000,22.36; 4158600,22.43; 4159200,22.44; 4159800,22.44; 4160400,
          22.44; 4161000,22.44; 4161600,22.46; 4162200,22.53; 4162800,22.53;
          4163400,22.78; 4164000,22.98; 4164600,23.24; 4165200,23.42; 4165800,
          23.68; 4166400,23.68; 4167000,23.59; 4167600,23.51; 4168200,23.53;
          4168800,23.59; 4169400,23.59; 4170000,23.51; 4170600,23.51; 4171200,
          23.59; 4171800,23.59; 4172400,23.51; 4173000,23.42; 4173600,23.51;
          4174200,23.51; 4174800,23.42; 4175400,23.42; 4176000,23.42; 4176600,
          23.33; 4177200,23.42; 4177800,23.42; 4178400,23.59; 4179000,23.59;
          4179600,23.65; 4180200,23.68; 4180800,23.57; 4181400,23.59; 4182000,
          23.59; 4182600,23.59; 4183200,23.68; 4183800,23.33; 4184400,23.24;
          4185000,23.24; 4185600,23.27; 4186200,23.42; 4186800,23.37; 4187400,
          23.51; 4188000,23.59; 4188600,23.68; 4189200,23.86; 4189800,23.93;
          4190400,23.95; 4191000,24.04; 4191600,24.13; 4192200,24.13; 4192800,
          24.21; 4193400,24.3; 4194000,24.31; 4194600,24.4; 4195200,24.4;
          4195800,24.57; 4196400,24.74; 4197000,24.73; 4197600,24.75; 4198200,
          25; 4198800,24.93; 4199400,25.01; 4200000,25.01; 4200600,25.01;
          4201200,25.01; 4201800,25.04; 4202400,25.01; 4203000,24.99; 4203600,
          24.93; 4204200,24.93; 4204800,25.01; 4205400,25.01; 4206000,24.84;
          4206600,24.83; 4207200,24.75; 4207800,24.68; 4208400,24.66; 4209000,
          24.66; 4209600,24.66; 4210200,24.61; 4210800,24.57; 4211400,24.57;
          4212000,24.57; 4212600,24.48; 4213200,24.48; 4213800,24.4; 4214400,
          24.31; 4215000,24.23; 4215600,24.13; 4216200,24.13; 4216800,24.04;
          4217400,23.86; 4218000,23.78; 4218600,23.69; 4219200,23.59; 4219800,
          23.59; 4220400,23.42; 4221000,23.25; 4221600,23.06; 4222200,22.98;
          4222800,22.9; 4223400,22.89; 4224000,22.8; 4224600,22.71; 4225200,
          22.71; 4225800,22.62; 4226400,22.57; 4227000,22.53; 4227600,22.44;
          4228200,22.44; 4228800,22.36; 4229400,22.36; 4230000,22.27; 4230600,
          22.27; 4231200,22.18; 4231800,22.09; 4232400,22; 4233000,22; 4233600,
          21.91])
      annotation (Placement(transformation(extent={{-86,74},{-76,84}})));
    Modelica.Blocks.Math.UnitConversions.From_degC from_degC1
      annotation (Placement(transformation(extent={{-16,46},{-10,52}})));
    Modelica.Blocks.Math.UnitConversions.From_degC from_degC2
      annotation (Placement(transformation(extent={{-20,24},{-12,32}})));
    Modelica.Blocks.Sources.TimeTable East(table=[0,16.42; 600,16.4; 1200,16.4;
          1800,16.4; 2400,16.4; 3000,16.4; 3600,16.4; 4200,16.4; 4800,16.4;
          5400,16.4; 6000,16.36; 6600,16.4; 7200,16.36; 7800,16.36; 8400,16.36;
          9000,16.36; 9600,16.36; 10200,16.32; 10800,16.32; 11400,16.32; 12000,
          16.32; 12600,16.32; 13200,16.32; 13800,16.32; 14400,16.3; 15000,16.32;
          15600,16.28; 16200,16.28; 16800,16.28; 17400,16.28; 18000,16.28;
          18600,16.28; 19200,16.29; 19800,16.27; 20400,16.27; 21000,16.24;
          21600,16.24; 22200,16.24; 22800,16.24; 23400,16.24; 24000,16.24;
          24600,16.24; 25200,16.24; 25800,16.24; 26400,16.24; 27000,16.24;
          27600,16.2; 28200,16.19; 28800,16.19; 29400,16.19; 30000,16.19; 30600,
          16.19; 31200,16.22; 31800,16.23; 32400,16.22; 33000,16.23; 33600,
          16.22; 34200,16.23; 34800,16.24; 35400,16.24; 36000,16.24; 36600,
          16.24; 37200,16.26; 37800,16.24; 38400,16.28; 39000,16.28; 39600,
          16.28; 40200,16.31; 40800,16.32; 41400,16.32; 42000,16.36; 42600,16.4;
          43200,16.4; 43800,16.44; 44400,16.44; 45000,16.49; 45600,16.48; 46200,
          16.52; 46800,16.53; 47400,16.56; 48000,16.52; 48600,16.56; 49200,
          16.56; 49800,16.56; 50400,16.56; 51000,16.56; 51600,16.6; 52200,16.56;
          52800,16.56; 53400,16.56; 54000,16.56; 54600,16.52; 55200,16.52;
          55800,16.48; 56400,16.49; 57000,16.45; 57600,16.44; 58200,16.42;
          58800,16.4; 59400,16.4; 60000,16.4; 60600,16.36; 61200,16.35; 61800,
          16.32; 62400,16.32; 63000,16.3; 63600,16.28; 64200,16.28; 64800,16.28;
          65400,16.27; 66000,16.24; 66600,16.24; 67200,16.24; 67800,16.2; 68400,
          16.19; 69000,16.19; 69600,16.19; 70200,16.16; 70800,16.15; 71400,
          16.11; 72000,16.11; 72600,16.11; 73200,16.11; 73800,16.11; 74400,
          16.07; 75000,16.07; 75600,16.07; 76200,16.07; 76800,16.04; 77400,
          16.03; 78000,16.02; 78600,15.99; 79200,15.99; 79800,15.99; 80400,
          15.99; 81000,15.99; 81600,15.98; 82200,15.95; 82800,15.95; 83400,
          15.95; 84000,15.95; 84600,15.95; 85200,15.94; 85800,15.91; 86400,
          15.91; 87000,15.91; 87600,15.91; 88200,15.91; 88800,15.91; 89400,15.9;
          90000,15.88; 90600,15.88; 91200,15.87; 91800,15.87; 92400,15.86;
          93000,15.84; 93600,15.83; 94200,15.83; 94800,15.83; 95400,15.82;
          96000,15.82; 96600,15.79; 97200,15.79; 97800,15.79; 98400,15.79;
          99000,15.79; 99600,15.79; 100200,15.75; 100800,15.77; 101400,15.75;
          102000,15.74; 102600,15.76; 103200,15.74; 103800,15.74; 104400,15.75;
          105000,15.75; 105600,15.71; 106200,15.7; 106800,15.71; 107400,15.7;
          108000,15.7; 108600,15.7; 109200,15.7; 109800,15.69; 110400,15.66;
          111000,15.66; 111600,15.66; 112200,15.66; 112800,15.66; 113400,15.66;
          114000,15.66; 114600,15.65; 115200,15.66; 115800,15.66; 116400,15.66;
          117000,15.62; 117600,15.62; 118200,15.62; 118800,15.62; 119400,15.64;
          120000,15.62; 120600,15.62; 121200,15.64; 121800,15.62; 122400,15.62;
          123000,15.62; 123600,15.62; 124200,15.62; 124800,15.65; 125400,15.66;
          126000,15.62; 126600,15.62; 127200,15.66; 127800,15.62; 128400,15.64;
          129000,15.62; 129600,15.64; 130200,15.67; 130800,15.66; 131400,15.66;
          132000,15.67; 132600,15.62; 133200,15.65; 133800,15.64; 134400,15.66;
          135000,15.66; 135600,15.66; 136200,15.66; 136800,15.63; 137400,15.66;
          138000,15.62; 138600,15.64; 139200,15.62; 139800,15.62; 140400,15.62;
          141000,15.62; 141600,15.62; 142200,15.62; 142800,15.62; 143400,15.62;
          144000,15.62; 144600,15.62; 145200,15.58; 145800,15.58; 146400,15.58;
          147000,15.58; 147600,15.58; 148200,15.54; 148800,15.54; 149400,15.54;
          150000,15.54; 150600,15.54; 151200,15.54; 151800,15.54; 152400,15.54;
          153000,15.5; 153600,15.5; 154200,15.51; 154800,15.49; 155400,15.49;
          156000,15.46; 156600,15.46; 157200,15.46; 157800,15.46; 158400,15.46;
          159000,15.46; 159600,15.46; 160200,15.47; 160800,15.42; 161400,15.42;
          162000,15.42; 162600,15.42; 163200,15.42; 163800,15.42; 164400,15.42;
          165000,15.38; 165600,15.38; 166200,15.38; 166800,15.38; 167400,15.37;
          168000,15.34; 168600,15.34; 169200,15.34; 169800,15.35; 170400,15.35;
          171000,15.34; 171600,15.33; 172200,15.3; 172800,15.31; 173400,15.3;
          174000,15.3; 174600,15.3; 175200,15.3; 175800,15.3; 176400,15.3;
          177000,15.29; 177600,15.3; 178200,15.26; 178800,15.26; 179400,15.26;
          180000,15.26; 180600,15.27; 181200,15.26; 181800,15.26; 182400,15.23;
          183000,15.22; 183600,15.22; 184200,15.23; 184800,15.22; 185400,15.22;
          186000,15.22; 186600,15.22; 187200,15.18; 187800,15.18; 188400,15.18;
          189000,15.18; 189600,15.18; 190200,15.14; 190800,15.14; 191400,15.14;
          192000,15.15; 192600,15.14; 193200,15.11; 193800,15.1; 194400,15.1;
          195000,15.1; 195600,15.06; 196200,15.05; 196800,15.05; 197400,15.02;
          198000,15.01; 198600,15.01; 199200,14.99; 199800,14.97; 200400,14.97;
          201000,14.98; 201600,14.97; 202200,14.97; 202800,14.97; 203400,14.97;
          204000,14.97; 204600,14.97; 205200,14.97; 205800,15.01; 206400,15.08;
          207000,15.1; 207600,15.1; 208200,15.1; 208800,15.1; 209400,15.1;
          210000,15.14; 210600,15.16; 211200,15.16; 211800,15.14; 212400,15.14;
          213000,15.14; 213600,15.18; 214200,15.22; 214800,15.26; 215400,15.3;
          216000,15.31; 216600,15.3; 217200,15.3; 217800,15.3; 218400,15.3;
          219000,15.3; 219600,15.3; 220200,15.3; 220800,15.3; 221400,15.3;
          222000,15.3; 222600,15.3; 223200,15.3; 223800,15.3; 224400,15.26;
          225000,15.26; 225600,15.26; 226200,15.25; 226800,15.22; 227400,15.22;
          228000,15.22; 228600,15.18; 229200,15.18; 229800,15.18; 230400,15.14;
          231000,15.14; 231600,15.14; 232200,15.14; 232800,15.1; 233400,15.1;
          234000,15.1; 234600,15.09; 235200,15.06; 235800,15.05; 236400,15.05;
          237000,15.05; 237600,15.03; 238200,15.01; 238800,15.01; 239400,15.01;
          240000,15.01; 240600,15.01; 241200,14.97; 241800,14.97; 242400,14.97;
          243000,14.97; 243600,14.97; 244200,14.97; 244800,14.97; 245400,14.96;
          246000,14.94; 246600,14.94; 247200,14.93; 247800,14.93; 248400,14.93;
          249000,14.93; 249600,14.93; 250200,14.89; 250800,14.89; 251400,14.89;
          252000,14.89; 252600,14.89; 253200,14.89; 253800,14.9; 254400,14.89;
          255000,14.85; 255600,14.85; 256200,14.85; 256800,14.85; 257400,14.85;
          258000,14.81; 258600,14.81; 259200,14.81; 259800,14.81; 260400,14.81;
          261000,14.81; 261600,14.81; 262200,14.81; 262800,14.81; 263400,14.81;
          264000,14.81; 264600,14.81; 265200,14.77; 265800,14.77; 266400,14.77;
          267000,14.77; 267600,14.77; 268200,14.77; 268800,14.78; 269400,14.77;
          270000,14.76; 270600,14.73; 271200,14.73; 271800,14.73; 272400,14.73;
          273000,14.73; 273600,14.73; 274200,14.69; 274800,14.73; 275400,14.72;
          276000,14.72; 276600,14.72; 277200,14.69; 277800,14.69; 278400,14.69;
          279000,14.69; 279600,14.69; 280200,14.69; 280800,14.69; 281400,14.69;
          282000,14.68; 282600,14.65; 283200,14.65; 283800,14.65; 284400,14.64;
          285000,14.61; 285600,14.65; 286200,14.65; 286800,14.64; 287400,14.72;
          288000,14.77; 288600,14.9; 289200,15.05; 289800,15.18; 290400,15.37;
          291000,15.42; 291600,15.57; 292200,15.63; 292800,15.8; 293400,16.11;
          294000,16.07; 294600,16.07; 295200,16.11; 295800,16.44; 296400,16.24;
          297000,16.32; 297600,16.4; 298200,16.45; 298800,16.64; 299400,16.64;
          300000,16.72; 300600,16.76; 301200,16.79; 301800,16.81; 302400,16.85;
          303000,17.01; 303600,17.09; 304200,17.09; 304800,17.13; 305400,17.17;
          306000,17.25; 306600,17.22; 307200,17.25; 307800,17.29; 308400,17.38;
          309000,17.51; 309600,17.58; 310200,17.74; 310800,17.82; 311400,17.86;
          312000,17.94; 312600,18.02; 313200,18.06; 313800,18.15; 314400,18.14;
          315000,18.12; 315600,18.1; 316200,17.94; 316800,17.86; 317400,17.86;
          318000,17.82; 318600,17.82; 319200,17.82; 319800,17.85; 320400,17.86;
          321000,17.98; 321600,18.02; 322200,18.2; 322800,18.14; 323400,18.14;
          324000,18.08; 324600,18.06; 325200,18.02; 325800,18.01; 326400,17.98;
          327000,17.94; 327600,17.94; 328200,17.99; 328800,18.06; 329400,18.06;
          330000,18.02; 330600,17.94; 331200,17.9; 331800,17.82; 332400,17.74;
          333000,17.66; 333600,17.58; 334200,17.58; 334800,17.54; 335400,17.5;
          336000,17.5; 336600,17.5; 337200,17.54; 337800,17.54; 338400,17.5;
          339000,17.5; 339600,17.5; 340200,17.5; 340800,17.5; 341400,17.5;
          342000,17.5; 342600,17.5; 343200,17.5; 343800,17.51; 344400,17.5;
          345000,17.5; 345600,17.5; 346200,17.5; 346800,17.5; 347400,17.5;
          348000,17.51; 348600,17.54; 349200,17.54; 349800,17.53; 350400,17.54;
          351000,17.54; 351600,17.54; 352200,17.54; 352800,17.54; 353400,17.54;
          354000,17.58; 354600,17.58; 355200,17.58; 355800,17.59; 356400,17.58;
          357000,17.58; 357600,17.58; 358200,17.58; 358800,17.6; 359400,17.62;
          360000,17.62; 360600,17.62; 361200,17.62; 361800,17.63; 362400,17.82;
          363000,18.06; 363600,18.23; 364200,18.35; 364800,18.51; 365400,18.6;
          366000,18.68; 366600,18.73; 367200,18.76; 367800,18.82; 368400,18.88;
          369000,18.88; 369600,18.92; 370200,19; 370800,19.04; 371400,19.08;
          372000,19.12; 372600,19.16; 373200,19.2; 373800,19.2; 374400,19.37;
          375000,19.49; 375600,19.64; 376200,19.64; 376800,19.78; 377400,19.94;
          378000,20.03; 378600,20.18; 379200,20.31; 379800,20.41; 380400,20.51;
          381000,20.63; 381600,20.46; 382200,20.67; 382800,20.79; 383400,20.87;
          384000,20.91; 384600,20.83; 385200,20.88; 385800,20.87; 386400,20.9;
          387000,21; 387600,21.12; 388200,21.2; 388800,21.2; 389400,21.23;
          390000,21.32; 390600,21.46; 391200,21.58; 391800,21.6; 392400,21.65;
          393000,21.69; 393600,21.73; 394200,21.77; 394800,21.77; 395400,21.8;
          396000,21.81; 396600,21.85; 397200,21.93; 397800,21.97; 398400,21.85;
          399000,21.93; 399600,21.97; 400200,21.97; 400800,22.04; 401400,22.06;
          402000,22.09; 402600,22.09; 403200,21.98; 403800,22.05; 404400,22.1;
          405000,22.14; 405600,22.22; 406200,22.22; 406800,22.23; 407400,22.26;
          408000,22.3; 408600,22.34; 409200,22.3; 409800,22.26; 410400,22.14;
          411000,22.09; 411600,22.06; 412200,22.01; 412800,21.97; 413400,21.97;
          414000,21.93; 414600,21.89; 415200,21.85; 415800,21.8; 416400,21.68;
          417000,21.52; 417600,21.48; 418200,21.31; 418800,21.16; 419400,21.08;
          420000,20.96; 420600,20.8; 421200,20.68; 421800,20.63; 422400,20.55;
          423000,20.5; 423600,20.43; 424200,20.38; 424800,20.32; 425400,20.3;
          426000,20.22; 426600,20.18; 427200,20.14; 427800,20.1; 428400,20.09;
          429000,20.02; 429600,20.02; 430200,19.98; 430800,19.94; 431400,19.92;
          432000,19.9; 432600,19.86; 433200,19.86; 433800,19.82; 434400,19.81;
          435000,19.78; 435600,19.78; 436200,19.77; 436800,19.73; 437400,19.71;
          438000,19.73; 438600,19.69; 439200,19.66; 439800,19.65; 440400,19.65;
          441000,19.66; 441600,19.61; 442200,19.62; 442800,19.59; 443400,19.6;
          444000,19.61; 444600,19.57; 445200,19.57; 445800,19.57; 446400,19.57;
          447000,19.57; 447600,19.57; 448200,19.57; 448800,19.73; 449400,19.99;
          450000,20.18; 450600,20.34; 451200,20.54; 451800,20.63; 452400,20.67;
          453000,20.67; 453600,20.71; 454200,20.75; 454800,20.79; 455400,20.83;
          456000,20.86; 456600,20.87; 457200,20.94; 457800,20.96; 458400,21.03;
          459000,21.08; 459600,21.13; 460200,21.2; 460800,21.32; 461400,21.45;
          462000,21.53; 462600,21.6; 463200,21.64; 463800,21.65; 464400,21.69;
          465000,21.69; 465600,21.73; 466200,21.73; 466800,21.76; 467400,21.78;
          468000,21.73; 468600,21.6; 469200,21.52; 469800,21.6; 470400,21.65;
          471000,21.9; 471600,22.16; 472200,22.3; 472800,22.38; 473400,22.5;
          474000,22.54; 474600,22.58; 475200,22.58; 475800,22.57; 476400,22.54;
          477000,22.62; 477600,22.74; 478200,22.84; 478800,22.91; 479400,22.91;
          480000,22.99; 480600,23.1; 481200,22.74; 481800,22.58; 482400,22.54;
          483000,22.49; 483600,22.38; 484200,22.42; 484800,22.36; 485400,22.3;
          486000,22.42; 486600,22.74; 487200,22.95; 487800,22.78; 488400,22.58;
          489000,22.54; 489600,22.74; 490200,22.78; 490800,22.56; 491400,22.5;
          492000,22.46; 492600,22.46; 493200,22.46; 493800,22.42; 494400,22.58;
          495000,22.87; 495600,23.03; 496200,23.03; 496800,23.03; 497400,23.03;
          498000,23.04; 498600,23.04; 499200,23.03; 499800,23.07; 500400,23.07;
          501000,23.06; 501600,23.06; 502200,22.95; 502800,22.87; 503400,22.74;
          504000,22.62; 504600,22.46; 505200,22.37; 505800,22.25; 506400,22.14;
          507000,22.05; 507600,21.97; 508200,21.89; 508800,21.81; 509400,21.77;
          510000,21.73; 510600,21.65; 511200,21.6; 511800,21.56; 512400,21.52;
          513000,21.48; 513600,21.44; 514200,21.4; 514800,21.36; 515400,21.32;
          516000,21.29; 516600,21.28; 517200,21.24; 517800,21.2; 518400,21.2;
          519000,21.16; 519600,21.12; 520200,21.12; 520800,21.12; 521400,21.08;
          522000,21.09; 522600,21.08; 523200,21.04; 523800,21.04; 524400,21;
          525000,21; 525600,21; 526200,20.96; 526800,20.96; 527400,20.96;
          528000,20.93; 528600,20.91; 529200,20.92; 529800,20.91; 530400,20.9;
          531000,20.88; 531600,20.87; 532200,20.87; 532800,20.87; 533400,20.87;
          534000,20.87; 534600,20.87; 535200,21.12; 535800,21.36; 536400,21.59;
          537000,21.81; 537600,21.98; 538200,22.01; 538800,22.04; 539400,22.05;
          540000,22.08; 540600,22.09; 541200,22.14; 541800,22.18; 542400,22.23;
          543000,22.26; 543600,22.3; 544200,22.33; 544800,22.34; 545400,22.39;
          546000,22.42; 546600,22.46; 547200,22.46; 547800,22.5; 548400,22.65;
          549000,22.18; 549600,22.46; 550200,22.27; 550800,22.54; 551400,22.78;
          552000,22.91; 552600,22.99; 553200,23.07; 553800,23.16; 554400,23.24;
          555000,23.3; 555600,23.36; 556200,23.45; 556800,23.48; 557400,23.56;
          558000,23.61; 558600,23.69; 559200,23.72; 559800,23.76; 560400,23.83;
          561000,23.88; 561600,23.89; 562200,23.92; 562800,23.96; 563400,24.01;
          564000,24.03; 564600,24.05; 565200,24.05; 565800,24.09; 566400,24.12;
          567000,24.13; 567600,24.25; 568200,24.26; 568800,24.41; 569400,24.47;
          570000,24.58; 570600,24.65; 571200,24.75; 571800,24.82; 572400,24.86;
          573000,24.94; 573600,24.94; 574200,24.26; 574800,24.54; 575400,24.74;
          576000,24.78; 576600,24.74; 577200,24.74; 577800,24.74; 578400,24.74;
          579000,24.74; 579600,24.75; 580200,24.75; 580800,24.74; 581400,24.74;
          582000,24.74; 582600,24.74; 583200,24.74; 583800,24.74; 584400,24.74;
          585000,24.74; 585600,24.74; 586200,24.74; 586800,24.73; 587400,24.7;
          588000,24.7; 588600,24.61; 589200,24.45; 589800,24.33; 590400,24.21;
          591000,24.05; 591600,23.9; 592200,23.72; 592800,23.65; 593400,23.56;
          594000,23.47; 594600,23.4; 595200,23.36; 595800,23.31; 596400,23.23;
          597000,23.19; 597600,23.15; 598200,23.11; 598800,23.07; 599400,23.03;
          600000,22.99; 600600,22.95; 601200,22.91; 601800,22.91; 602400,22.87;
          603000,22.83; 603600,22.78; 604200,22.78; 604800,22.74; 605400,22.74;
          606000,22.71; 606600,22.7; 607200,22.66; 607800,22.68; 608400,22.62;
          609000,22.62; 609600,22.62; 610200,22.62; 610800,22.58; 611400,22.58;
          612000,22.54; 612600,22.54; 613200,22.54; 613800,22.54; 614400,22.5;
          615000,22.51; 615600,22.5; 616200,22.5; 616800,22.5; 617400,22.46;
          618000,22.46; 618600,22.46; 619200,22.46; 619800,22.46; 620400,22.46;
          621000,22.45; 621600,22.64; 622200,22.91; 622800,23.07; 623400,23.27;
          624000,23.48; 624600,23.56; 625200,23.59; 625800,23.61; 626400,23.68;
          627000,23.69; 627600,23.72; 628200,23.8; 628800,23.81; 629400,23.86;
          630000,23.92; 630600,23.96; 631200,24; 631800,24.04; 632400,24.05;
          633000,24.08; 633600,24.21; 634200,24.33; 634800,24.13; 635400,24.25;
          636000,24.25; 636600,24.21; 637200,23.72; 637800,23.52; 638400,23.4;
          639000,23.36; 639600,23.48; 640200,23.56; 640800,23.6; 641400,23.62;
          642000,23.61; 642600,23.6; 643200,23.6; 643800,23.6; 644400,23.61;
          645000,23.68; 645600,23.96; 646200,24.19; 646800,24.21; 647400,24.21;
          648000,24.13; 648600,24.04; 649200,23.92; 649800,23.88; 650400,23.82;
          651000,23.89; 651600,23.96; 652200,24.01; 652800,24.01; 653400,24.01;
          654000,24.02; 654600,24; 655200,24.01; 655800,24.04; 656400,24.05;
          657000,24.09; 657600,24.21; 658200,24.21; 658800,24.22; 659400,24.18;
          660000,24.17; 660600,24.13; 661200,24.09; 661800,24.08; 662400,24.17;
          663000,24.22; 663600,24.21; 664200,24.13; 664800,24.05; 665400,24.04;
          666000,24; 666600,23.96; 667200,24.02; 667800,24.09; 668400,24.13;
          669000,24.13; 669600,24.09; 670200,24.01; 670800,23.93; 671400,23.89;
          672000,23.88; 672600,23.92; 673200,23.96; 673800,23.96; 674400,23.92;
          675000,23.91; 675600,23.84; 676200,23.76; 676800,23.72; 677400,23.64;
          678000,23.6; 678600,23.56; 679200,23.48; 679800,23.4; 680400,23.36;
          681000,23.27; 681600,23.24; 682200,23.19; 682800,23.16; 683400,23.16;
          684000,23.16; 684600,23.16; 685200,23.11; 685800,23.11; 686400,23.07;
          687000,23.07; 687600,23.06; 688200,23.03; 688800,23.03; 689400,22.99;
          690000,22.95; 690600,22.92; 691200,22.9; 691800,22.83; 692400,22.78;
          693000,22.78; 693600,22.74; 694200,22.7; 694800,22.66; 695400,22.62;
          696000,22.62; 696600,22.58; 697200,22.58; 697800,22.54; 698400,22.5;
          699000,22.5; 699600,22.47; 700200,22.45; 700800,22.42; 701400,22.42;
          702000,22.38; 702600,22.38; 703200,22.34; 703800,22.32; 704400,22.3;
          705000,22.27; 705600,22.26; 706200,22.26; 706800,22.22; 707400,22.22;
          708000,22.18; 708600,22.18; 709200,22.17; 709800,22.14; 710400,22.14;
          711000,22.13; 711600,22.1; 712200,22.13; 712800,22.09; 713400,22.09;
          714000,22.06; 714600,22.05; 715200,22.05; 715800,22.05; 716400,22.04;
          717000,22.05; 717600,22.03; 718200,22.02; 718800,21.97; 719400,22;
          720000,21.97; 720600,21.97; 721200,21.97; 721800,21.97; 722400,21.98;
          723000,21.97; 723600,21.96; 724200,21.96; 724800,21.94; 725400,21.93;
          726000,21.93; 726600,21.94; 727200,21.93; 727800,21.93; 728400,21.93;
          729000,21.94; 729600,21.93; 730200,21.89; 730800,21.91; 731400,21.9;
          732000,21.89; 732600,21.89; 733200,21.9; 733800,21.9; 734400,21.89;
          735000,21.89; 735600,21.9; 736200,21.86; 736800,21.89; 737400,21.89;
          738000,21.85; 738600,21.85; 739200,21.86; 739800,21.85; 740400,21.85;
          741000,21.86; 741600,21.86; 742200,21.85; 742800,21.85; 743400,21.85;
          744000,21.88; 744600,21.85; 745200,21.85; 745800,21.86; 746400,21.88;
          747000,21.85; 747600,21.85; 748200,21.81; 748800,21.82; 749400,21.81;
          750000,21.81; 750600,21.81; 751200,21.81; 751800,21.81; 752400,21.81;
          753000,21.78; 753600,21.77; 754200,21.77; 754800,21.77; 755400,21.77;
          756000,21.76; 756600,21.73; 757200,21.73; 757800,21.73; 758400,21.73;
          759000,21.69; 759600,21.69; 760200,21.7; 760800,21.69; 761400,21.68;
          762000,21.65; 762600,21.65; 763200,21.65; 763800,21.66; 764400,21.65;
          765000,21.63; 765600,21.62; 766200,21.6; 766800,21.6; 767400,21.6;
          768000,21.6; 768600,21.6; 769200,21.6; 769800,21.56; 770400,21.58;
          771000,21.56; 771600,21.56; 772200,21.52; 772800,21.54; 773400,21.52;
          774000,21.52; 774600,21.52; 775200,21.48; 775800,21.5; 776400,21.48;
          777000,21.48; 777600,21.48; 778200,21.44; 778800,21.44; 779400,21.44;
          780000,21.44; 780600,21.44; 781200,21.44; 781800,21.45; 782400,21.4;
          783000,21.4; 783600,21.4; 784200,21.4; 784800,21.4; 785400,21.4;
          786000,21.4; 786600,21.4; 787200,21.37; 787800,21.36; 788400,21.33;
          789000,21.36; 789600,21.32; 790200,21.36; 790800,21.32; 791400,21.34;
          792000,21.32; 792600,21.32; 793200,21.32; 793800,21.33; 794400,21.32;
          795000,21.3; 795600,21.28; 796200,21.28; 796800,21.28; 797400,21.29;
          798000,21.28; 798600,21.26; 799200,21.24; 799800,21.27; 800400,21.24;
          801000,21.24; 801600,21.24; 802200,21.24; 802800,21.24; 803400,21.23;
          804000,21.24; 804600,21.23; 805200,21.2; 805800,21.21; 806400,21.2;
          807000,21.21; 807600,21.2; 808200,21.16; 808800,21.16; 809400,21.16;
          810000,21.16; 810600,21.16; 811200,21.16; 811800,21.16; 812400,21.16;
          813000,21.16; 813600,21.16; 814200,21.17; 814800,21.21; 815400,21.2;
          816000,21.2; 816600,21.2; 817200,21.24; 817800,21.28; 818400,21.27;
          819000,21.28; 819600,21.28; 820200,21.27; 820800,21.28; 821400,21.28;
          822000,21.28; 822600,21.28; 823200,21.28; 823800,21.28; 824400,21.32;
          825000,21.31; 825600,21.29; 826200,21.28; 826800,21.28; 827400,21.27;
          828000,21.22; 828600,21.24; 829200,21.24; 829800,21.21; 830400,21.2;
          831000,21.2; 831600,21.2; 832200,21.22; 832800,21.2; 833400,21.2;
          834000,21.2; 834600,21.2; 835200,21.2; 835800,21.2; 836400,21.16;
          837000,21.16; 837600,21.16; 838200,21.16; 838800,21.16; 839400,21.16;
          840000,21.12; 840600,21.14; 841200,21.12; 841800,21.12; 842400,21.12;
          843000,21.12; 843600,21.12; 844200,21.12; 844800,21.1; 845400,21.08;
          846000,21.08; 846600,21.08; 847200,21.08; 847800,21.08; 848400,21.08;
          849000,21.08; 849600,21.08; 850200,21.08; 850800,21.08; 851400,21.08;
          852000,21.08; 852600,21.09; 853200,21.08; 853800,21.08; 854400,21.07;
          855000,21.3; 855600,21.05; 856200,21.04; 856800,21.04; 857400,21.04;
          858000,21.03; 858600,21.01; 859200,21; 859800,21; 860400,21; 861000,
          21; 861600,21; 862200,21.08; 862800,21.16; 863400,21.2; 864000,21.28;
          864600,21.32; 865200,21.33; 865800,21.4; 866400,21.4; 867000,21.44;
          867600,21.46; 868200,21.48; 868800,21.52; 869400,21.52; 870000,21.56;
          870600,21.56; 871200,21.6; 871800,21.6; 872400,21.6; 873000,21.6;
          873600,21.62; 874200,21.64; 874800,21.64; 875400,21.6; 876000,21.86;
          876600,21.6; 877200,21.65; 877800,21.65; 878400,21.65; 879000,21.69;
          879600,21.72; 880200,21.73; 880800,21.89; 881400,22.14; 882000,22.3;
          882600,22.48; 883200,22.62; 883800,22.67; 884400,22.62; 885000,22.58;
          885600,22.5; 886200,22.46; 886800,22.42; 887400,22.54; 888000,22.62;
          888600,22.7; 889200,22.73; 889800,22.7; 890400,22.7; 891000,22.7;
          891600,22.74; 892200,22.74; 892800,22.75; 893400,22.79; 894000,22.87;
          894600,22.91; 895200,22.95; 895800,22.86; 896400,22.79; 897000,22.87;
          897600,23.03; 898200,22.95; 898800,22.95; 899400,22.95; 900000,23.07;
          900600,23.07; 901200,23.07; 901800,23.24; 902400,23.4; 903000,23.48;
          903600,23.6; 904200,23.56; 904800,23.44; 905400,23.52; 906000,23.72;
          906600,23.84; 907200,23.88; 907800,23.89; 908400,23.68; 909000,23.6;
          909600,23.72; 910200,23.84; 910800,23.88; 911400,23.88; 912000,23.92;
          912600,23.92; 913200,23.96; 913800,23.96; 914400,23.84; 915000,23.68;
          915600,23.6; 916200,23.57; 916800,23.56; 917400,23.56; 918000,23.55;
          918600,23.56; 919200,23.52; 919800,23.72; 920400,23.68; 921000,23.6;
          921600,23.52; 922200,23.48; 922800,23.48; 923400,23.48; 924000,23.62;
          924600,23.77; 925200,23.92; 925800,23.96; 926400,23.96; 927000,23.95;
          927600,23.92; 928200,23.82; 928800,23.76; 929400,23.72; 930000,23.68;
          930600,23.68; 931200,23.64; 931800,23.64; 932400,23.64; 933000,23.6;
          933600,23.6; 934200,23.56; 934800,23.52; 935400,23.44; 936000,23.4;
          936600,23.35; 937200,23.27; 937800,23.2; 938400,23.1; 939000,23.04;
          939600,22.95; 940200,22.9; 940800,22.84; 941400,22.83; 942000,22.83;
          942600,22.83; 943200,22.82; 943800,22.78; 944400,22.78; 945000,22.78;
          945600,22.74; 946200,22.74; 946800,22.7; 947400,22.7; 948000,22.7;
          948600,22.7; 949200,22.66; 949800,22.68; 950400,22.63; 951000,22.64;
          951600,22.62; 952200,22.62; 952800,22.62; 953400,22.62; 954000,22.59;
          954600,22.58; 955200,22.58; 955800,22.55; 956400,22.55; 957000,22.54;
          957600,22.54; 958200,22.54; 958800,22.54; 959400,22.54; 960000,22.54;
          960600,22.54; 961200,22.52; 961800,22.5; 962400,22.5; 963000,22.5;
          963600,22.5; 964200,22.5; 964800,22.5; 965400,22.5; 966000,22.51;
          966600,22.52; 967200,22.7; 967800,22.95; 968400,23.11; 969000,23.18;
          969600,23.15; 970200,23.11; 970800,23.03; 971400,22.95; 972000,22.91;
          972600,22.86; 973200,22.91; 973800,23.03; 974400,23.11; 975000,23.15;
          975600,23.15; 976200,23.11; 976800,23.07; 977400,23.02; 978000,22.98;
          978600,22.99; 979200,23.03; 979800,23.07; 980400,23.11; 981000,23.16;
          981600,23.19; 982200,23.15; 982800,23; 983400,22.99; 984000,23.07;
          984600,23.11; 985200,23.16; 985800,23.27; 986400,23.32; 987000,23.39;
          987600,23.42; 988200,23.49; 988800,23.56; 989400,23.6; 990000,23.68;
          990600,23.73; 991200,23.68; 991800,23.72; 992400,23.77; 993000,23.88;
          993600,24.09; 994200,24.17; 994800,24.09; 995400,23.96; 996000,23.89;
          996600,23.88; 997200,23.92; 997800,24.01; 998400,24.05; 999000,24.14;
          999600,24.11; 1000200,24.25; 1000800,24.42; 1001400,24.29; 1002000,
          24.25; 1002600,24.21; 1003200,24.24; 1003800,24.22; 1004400,24.22;
          1005000,24.21; 1005600,24.24; 1006200,24.17; 1006800,24.17; 1007400,
          24.14; 1008000,24.22; 1008600,24.38; 1009200,24.49; 1009800,24.54;
          1010400,24.41; 1011000,24.37; 1011600,24.33; 1012200,24.25; 1012800,
          24.25; 1013400,24.37; 1014000,24.45; 1014600,24.5; 1015200,24.45;
          1015800,24.37; 1016400,24.29; 1017000,24.21; 1017600,24.13; 1018200,
          24.13; 1018800,24.21; 1019400,24.25; 1020000,24.21; 1020600,24.14;
          1021200,24.1; 1021800,24.04; 1022400,23.92; 1023000,23.81; 1023600,
          23.76; 1024200,23.68; 1024800,23.58; 1025400,23.48; 1026000,23.42;
          1026600,23.4; 1027200,23.4; 1027800,23.37; 1028400,23.35; 1029000,
          23.32; 1029600,23.28; 1030200,23.27; 1030800,23.25; 1031400,23.2;
          1032000,23.19; 1032600,23.15; 1033200,23.11; 1033800,23.11; 1034400,
          23.11; 1035000,23.07; 1035600,23.08; 1036200,23.07; 1036800,23.03;
          1037400,23.03; 1038000,23.03; 1038600,23.03; 1039200,22.99; 1039800,
          22.99; 1040400,22.99; 1041000,22.95; 1041600,22.98; 1042200,22.95;
          1042800,22.95; 1043400,22.95; 1044000,22.91; 1044600,22.88; 1045200,
          22.88; 1045800,22.88; 1046400,22.87; 1047000,22.87; 1047600,22.87;
          1048200,22.87; 1048800,22.86; 1049400,22.87; 1050000,22.87; 1050600,
          22.88; 1051200,22.83; 1051800,22.83; 1052400,22.83; 1053000,22.87;
          1053600,23.11; 1054200,23.36; 1054800,23.48; 1055400,23.48; 1056000,
          23.4; 1056600,23.36; 1057200,23.28; 1057800,23.19; 1058400,23.11;
          1059000,23.11; 1059600,23.2; 1060200,23.35; 1060800,23.4; 1061400,
          23.42; 1062000,23.4; 1062600,23.28; 1063200,23.23; 1063800,23.16;
          1064400,23.19; 1065000,23.27; 1065600,23.4; 1066200,23.45; 1066800,
          23.44; 1067400,23.4; 1068000,23.4; 1068600,23.36; 1069200,23.37;
          1069800,23.4; 1070400,23.38; 1071000,23.36; 1071600,23.4; 1072200,
          23.52; 1072800,23.6; 1073400,23.68; 1074000,23.74; 1074600,23.82;
          1075200,23.88; 1075800,23.92; 1076400,24.1; 1077000,24.01; 1077600,
          24.05; 1078200,24.08; 1078800,24.09; 1079400,24.09; 1080000,24.05;
          1080600,24.05; 1081200,24.13; 1081800,24.17; 1082400,24.21; 1083000,
          24.21; 1083600,24.25; 1084200,24.25; 1084800,24.25; 1085400,24.25;
          1086000,24.25; 1086600,24.3; 1087200,24.26; 1087800,24.28; 1088400,
          24.25; 1089000,24.29; 1089600,24.22; 1090200,24.24; 1090800,24.21;
          1091400,24.22; 1092000,24.25; 1092600,24.23; 1093200,24.21; 1093800,
          24.21; 1094400,24.25; 1095000,24.21; 1095600,24.29; 1096200,24.32;
          1096800,24.39; 1097400,24.53; 1098000,24.57; 1098600,24.53; 1099200,
          24.45; 1099800,24.37; 1100400,24.29; 1101000,24.28; 1101600,24.29;
          1102200,24.33; 1102800,24.34; 1103400,24.29; 1104000,24.25; 1104600,
          24.17; 1105200,24.09; 1105800,24.09; 1106400,24.09; 1107000,24.09;
          1107600,24.05; 1108200,24.01; 1108800,23.92; 1109400,23.84; 1110000,
          23.73; 1110600,23.68; 1111200,23.64; 1111800,23.6; 1112400,23.64;
          1113000,23.63; 1113600,23.6; 1114200,23.59; 1114800,23.56; 1115400,
          23.56; 1116000,23.52; 1116600,23.52; 1117200,23.49; 1117800,23.48;
          1118400,23.44; 1119000,23.44; 1119600,23.4; 1120200,23.4; 1120800,
          23.41; 1121400,23.4; 1122000,23.36; 1122600,23.36; 1123200,23.32;
          1123800,23.32; 1124400,23.32; 1125000,23.3; 1125600,23.27; 1126200,
          23.27; 1126800,23.27; 1127400,23.24; 1128000,23.23; 1128600,23.23;
          1129200,23.23; 1129800,23.21; 1130400,23.19; 1131000,23.19; 1131600,
          23.19; 1132200,23.19; 1132800,23.19; 1133400,23.15; 1134000,23.15;
          1134600,23.15; 1135200,23.12; 1135800,23.11; 1136400,23.11; 1137000,
          23.11; 1137600,23.11; 1138200,23.12; 1138800,23.11; 1139400,23.19;
          1140000,23.4; 1140600,23.57; 1141200,23.6; 1141800,23.56; 1142400,
          23.48; 1143000,23.42; 1143600,23.36; 1144200,23.27; 1144800,23.27;
          1145400,23.4; 1146000,23.49; 1146600,23.56; 1147200,23.56; 1147800,
          23.54; 1148400,23.45; 1149000,23.4; 1149600,23.35; 1150200,23.32;
          1150800,23.36; 1151400,23.44; 1152000,23.48; 1152600,23.32; 1153200,
          23.23; 1153800,23.16; 1154400,23.23; 1155000,23.48; 1155600,23.64;
          1156200,23.72; 1156800,23.76; 1157400,23.8; 1158000,23.56; 1158600,
          23.48; 1159200,23.52; 1159800,23.6; 1160400,23.67; 1161000,23.72;
          1161600,23.92; 1162200,23.88; 1162800,23.84; 1163400,23.86; 1164000,
          23.87; 1164600,23.88; 1165200,23.88; 1165800,23.92; 1166400,24.04;
          1167000,24.22; 1167600,24.27; 1168200,24.12; 1168800,24.02; 1169400,
          23.95; 1170000,23.92; 1170600,23.96; 1171200,24.03; 1171800,24.05;
          1172400,24.05; 1173000,24.09; 1173600,24.21; 1174200,24.26; 1174800,
          24.25; 1175400,24.25; 1176000,24.28; 1176600,24.29; 1177200,24.2;
          1177800,24.13; 1178400,24.13; 1179000,24.13; 1179600,24.13; 1180200,
          24.13; 1180800,24.13; 1181400,24.17; 1182000,24.22; 1182600,24.25;
          1183200,24.25; 1183800,24.29; 1184400,24.29; 1185000,24.28; 1185600,
          24.22; 1186200,24.17; 1186800,24.16; 1187400,24.16; 1188000,24.14;
          1188600,24.13; 1189200,24.09; 1189800,24.09; 1190400,24.05; 1191000,
          24.01; 1191600,24.02; 1192200,23.96; 1192800,23.92; 1193400,23.92;
          1194000,23.88; 1194600,23.8; 1195200,23.8; 1195800,23.76; 1196400,
          23.72; 1197000,23.64; 1197600,23.56; 1198200,23.56; 1198800,23.56;
          1199400,23.56; 1200000,23.52; 1200600,23.48; 1201200,23.49; 1201800,
          23.47; 1202400,23.44; 1203000,23.42; 1203600,23.4; 1204200,23.4;
          1204800,23.38; 1205400,23.36; 1206000,23.36; 1206600,23.32; 1207200,
          23.32; 1207800,23.32; 1208400,23.27; 1209000,23.27; 1209600,23.28;
          1210200,23.27; 1210800,23.27; 1211400,23.26; 1212000,23.23; 1212600,
          23.23; 1213200,23.22; 1213800,23.2; 1214400,23.19; 1215000,23.19;
          1215600,23.19; 1216200,23.19; 1216800,23.18; 1217400,23.15; 1218000,
          23.15; 1218600,23.15; 1219200,23.15; 1219800,23.12; 1220400,23.15;
          1221000,23.14; 1221600,23.11; 1222200,23.11; 1222800,23.11; 1223400,
          23.11; 1224000,23.11; 1224600,23.11; 1225200,23.11; 1225800,23.11;
          1226400,23.33; 1227000,23.52; 1227600,23.6; 1228200,23.61; 1228800,
          23.55; 1229400,23.44; 1230000,23.4; 1230600,23.32; 1231200,23.23;
          1231800,23.27; 1232400,23.42; 1233000,23.52; 1233600,23.6; 1234200,
          23.6; 1234800,23.56; 1235400,23.48; 1236000,23.4; 1236600,23.36;
          1237200,23.36; 1237800,23.4; 1238400,23.56; 1239000,23.72; 1239600,
          23.84; 1240200,23.88; 1240800,23.89; 1241400,23.84; 1242000,23.8;
          1242600,23.76; 1243200,23.8; 1243800,23.88; 1244400,23.92; 1245000,
          23.9; 1245600,23.96; 1246200,24; 1246800,24.01; 1247400,24.04;
          1248000,24.05; 1248600,24.09; 1249200,24.05; 1249800,24.09; 1250400,
          24.13; 1251000,24.13; 1251600,24.13; 1252200,24.13; 1252800,24.13;
          1253400,24.13; 1254000,24.09; 1254600,24.08; 1255200,24.09; 1255800,
          24.13; 1256400,24.17; 1257000,24.21; 1257600,24.21; 1258200,24.21;
          1258800,24.23; 1259400,24.25; 1260000,24.25; 1260600,24.29; 1261200,
          24.29; 1261800,24.29; 1262400,24.34; 1263000,24.33; 1263600,24.33;
          1264200,24.33; 1264800,24.25; 1265400,24.28; 1266000,24.42; 1266600,
          24.41; 1267200,24.34; 1267800,24.29; 1268400,24.28; 1269000,24.28;
          1269600,24.3; 1270200,24.21; 1270800,24.21; 1271400,24.25; 1272000,
          24.21; 1272600,24.18; 1273200,24.13; 1273800,24.09; 1274400,24.22;
          1275000,24.41; 1275600,24.42; 1276200,24.41; 1276800,24.37; 1277400,
          24.29; 1278000,24.25; 1278600,24.2; 1279200,24.17; 1279800,24.13;
          1280400,24.09; 1281000,24.05; 1281600,24.01; 1282200,23.92; 1282800,
          23.88; 1283400,23.8; 1284000,23.74; 1284600,23.71; 1285200,23.68;
          1285800,23.68; 1286400,23.64; 1287000,23.6; 1287600,23.59; 1288200,
          23.56; 1288800,23.56; 1289400,23.56; 1290000,23.52; 1290600,23.52;
          1291200,23.48; 1291800,23.48; 1292400,23.44; 1293000,23.44; 1293600,
          23.44; 1294200,23.4; 1294800,23.36; 1295400,23.27; 1296000,23.23;
          1296600,23.12; 1297200,23.07; 1297800,22.99; 1298400,22.91; 1299000,
          22.88; 1299600,22.87; 1300200,22.83; 1300800,22.78; 1301400,22.78;
          1302000,22.74; 1302600,22.7; 1303200,22.66; 1303800,22.62; 1304400,
          22.62; 1305000,22.58; 1305600,22.5; 1306200,22.5; 1306800,22.47;
          1307400,22.42; 1308000,22.42; 1308600,22.38; 1309200,22.38; 1309800,
          22.34; 1310400,22.3; 1311000,22.26; 1311600,22.26; 1312200,22.26;
          1312800,22.22; 1313400,22.18; 1314000,22.16; 1314600,22.14; 1315200,
          22.1; 1315800,22.09; 1316400,22.09; 1317000,22.05; 1317600,22.05;
          1318200,22.05; 1318800,22.01; 1319400,22.01; 1320000,21.97; 1320600,
          21.97; 1321200,21.93; 1321800,22.08; 1322400,21.94; 1323000,21.89;
          1323600,21.89; 1324200,21.88; 1324800,21.85; 1325400,21.85; 1326000,
          21.85; 1326600,21.85; 1327200,21.85; 1327800,21.85; 1328400,21.84;
          1329000,21.85; 1329600,21.85; 1330200,21.89; 1330800,21.89; 1331400,
          21.94; 1332000,21.93; 1332600,21.93; 1333200,21.94; 1333800,21.97;
          1334400,21.97; 1335000,21.97; 1335600,22; 1336200,21.97; 1336800,
          21.98; 1337400,21.97; 1338000,21.98; 1338600,21.97; 1339200,22.01;
          1339800,22.05; 1340400,22.02; 1341000,22.01; 1341600,22.01; 1342200,
          21.98; 1342800,21.97; 1343400,22.02; 1344000,22.01; 1344600,22.05;
          1345200,22.05; 1345800,22.01; 1346400,21.97; 1347000,21.97; 1347600,
          21.93; 1348200,21.89; 1348800,21.89; 1349400,21.85; 1350000,21.81;
          1350600,21.81; 1351200,21.77; 1351800,21.73; 1352400,21.72; 1353000,
          21.69; 1353600,21.66; 1354200,21.65; 1354800,21.64; 1355400,21.61;
          1356000,21.6; 1356600,21.6; 1357200,21.6; 1357800,21.56; 1358400,
          21.56; 1359000,21.56; 1359600,21.52; 1360200,21.52; 1360800,21.48;
          1361400,21.48; 1362000,21.48; 1362600,21.45; 1363200,21.44; 1363800,
          21.44; 1364400,21.4; 1365000,21.4; 1365600,21.4; 1366200,21.4;
          1366800,21.37; 1367400,21.36; 1368000,21.34; 1368600,21.32; 1369200,
          21.33; 1369800,21.32; 1370400,21.28; 1371000,21.28; 1371600,21.28;
          1372200,21.25; 1372800,21.24; 1373400,21.24; 1374000,21.2; 1374600,
          21.2; 1375200,21.2; 1375800,21.16; 1376400,21.16; 1377000,21.16;
          1377600,21.16; 1378200,21.15; 1378800,21.16; 1379400,21.12; 1380000,
          21.12; 1380600,21.12; 1381200,21.12; 1381800,21.12; 1382400,21.08;
          1383000,21.08; 1383600,21.04; 1384200,21.04; 1384800,21.04; 1385400,
          21; 1386000,21; 1386600,21; 1387200,20.99; 1387800,20.96; 1388400,
          20.96; 1389000,20.96; 1389600,20.96; 1390200,20.95; 1390800,20.93;
          1391400,20.91; 1392000,20.91; 1392600,20.91; 1393200,20.87; 1393800,
          20.87; 1394400,20.87; 1395000,20.87; 1395600,20.83; 1396200,20.83;
          1396800,20.84; 1397400,20.83; 1398000,20.83; 1398600,20.83; 1399200,
          20.82; 1399800,20.79; 1400400,20.79; 1401000,20.79; 1401600,20.78;
          1402200,20.78; 1402800,20.75; 1403400,20.75; 1404000,20.75; 1404600,
          20.72; 1405200,20.71; 1405800,20.71; 1406400,20.71; 1407000,20.67;
          1407600,20.67; 1408200,20.68; 1408800,20.67; 1409400,20.67; 1410000,
          20.67; 1410600,20.67; 1411200,20.65; 1411800,20.63; 1412400,20.63;
          1413000,20.63; 1413600,20.64; 1414200,20.63; 1414800,20.64; 1415400,
          20.67; 1416000,20.67; 1416600,20.67; 1417200,20.71; 1417800,20.75;
          1418400,20.75; 1419000,20.75; 1419600,20.79; 1420200,20.77; 1420800,
          20.77; 1421400,20.79; 1422000,20.79; 1422600,20.83; 1423200,20.84;
          1423800,20.87; 1424400,20.87; 1425000,20.91; 1425600,20.91; 1426200,
          20.91; 1426800,20.94; 1427400,20.96; 1428000,20.95; 1428600,20.96;
          1429200,20.96; 1429800,20.97; 1430400,20.97; 1431000,20.96; 1431600,
          20.97; 1432200,20.97; 1432800,20.99; 1433400,21; 1434000,21; 1434600,
          21; 1435200,20.96; 1435800,20.96; 1436400,20.96; 1437000,20.96;
          1437600,20.91; 1438200,20.91; 1438800,20.87; 1439400,20.84; 1440000,
          20.83; 1440600,20.79; 1441200,20.75; 1441800,20.74; 1442400,20.94;
          1443000,20.67; 1443600,20.63; 1444200,20.63; 1444800,20.59; 1445400,
          20.58; 1446000,20.55; 1446600,20.51; 1447200,20.51; 1447800,20.47;
          1448400,20.48; 1449000,20.43; 1449600,20.42; 1450200,20.38; 1450800,
          20.34; 1451400,20.33; 1452000,20.32; 1452600,20.3; 1453200,20.3;
          1453800,20.26; 1454400,20.22; 1455000,20.2; 1455600,20.18; 1456200,
          20.18; 1456800,20.14; 1457400,20.11; 1458000,20.1; 1458600,20.1;
          1459200,20.06; 1459800,20.07; 1460400,20.02; 1461000,20.02; 1461600,
          20.02; 1462200,20.03; 1462800,20.02; 1463400,19.98; 1464000,19.98;
          1464600,19.98; 1465200,19.97; 1465800,19.94; 1466400,19.94; 1467000,
          20.09; 1467600,20.18; 1468200,20.26; 1468800,20.34; 1469400,20.38;
          1470000,20.46; 1470600,20.51; 1471200,20.55; 1471800,20.59; 1472400,
          20.64; 1473000,20.67; 1473600,20.72; 1474200,20.75; 1474800,20.75;
          1475400,20.79; 1476000,20.83; 1476600,20.83; 1477200,20.87; 1477800,
          20.91; 1478400,20.91; 1479000,20.92; 1479600,20.96; 1480200,20.96;
          1480800,21; 1481400,21; 1482000,21.04; 1482600,21.04; 1483200,21.08;
          1483800,21.08; 1484400,21.12; 1485000,21.4; 1485600,21.6; 1486200,
          21.83; 1486800,21.99; 1487400,22.09; 1488000,22.09; 1488600,22.01;
          1489200,21.93; 1489800,21.85; 1490400,21.89; 1491000,22; 1491600,
          22.09; 1492200,22.14; 1492800,22.18; 1493400,22.24; 1494000,22.24;
          1494600,22.26; 1495200,22.26; 1495800,22.3; 1496400,22.31; 1497000,
          22.13; 1497600,22.05; 1498200,22.01; 1498800,22.09; 1499400,22.13;
          1500000,22.18; 1500600,22.18; 1501200,22.26; 1501800,22.34; 1502400,
          22.54; 1503000,22.84; 1503600,22.95; 1504200,22.99; 1504800,23.03;
          1505400,22.99; 1506000,22.74; 1506600,22.62; 1507200,22.7; 1507800,
          22.74; 1508400,22.78; 1509000,22.83; 1509600,22.86; 1510200,22.91;
          1510800,22.83; 1511400,22.78; 1512000,22.75; 1512600,22.8; 1513200,
          22.82; 1513800,22.88; 1514400,23.16; 1515000,23.38; 1515600,23.45;
          1516200,23.44; 1516800,23.36; 1517400,23.21; 1518000,23.03; 1518600,
          23.03; 1519200,23.03; 1519800,23.07; 1520400,23.11; 1521000,23.07;
          1521600,23.12; 1522200,23.11; 1522800,23.12; 1523400,23.12; 1524000,
          23.15; 1524600,23.2; 1525200,23.19; 1525800,23.23; 1526400,23.19;
          1527000,23.16; 1527600,23.22; 1528200,23.19; 1528800,23.16; 1529400,
          23.15; 1530000,23.19; 1530600,23.21; 1531200,23.23; 1531800,23.4;
          1532400,23.6; 1533000,23.68; 1533600,23.68; 1534200,23.6; 1534800,
          23.52; 1535400,23.4; 1536000,23.35; 1536600,23.31; 1537200,23.36;
          1537800,23.36; 1538400,23.36; 1539000,23.32; 1539600,23.24; 1540200,
          23.11; 1540800,23.03; 1541400,22.95; 1542000,22.83; 1542600,22.78;
          1543200,22.74; 1543800,22.72; 1544400,22.7; 1545000,22.64; 1545600,
          22.62; 1546200,22.58; 1546800,22.54; 1547400,22.5; 1548000,22.5;
          1548600,22.47; 1549200,22.46; 1549800,22.42; 1550400,22.42; 1551000,
          22.38; 1551600,22.38; 1552200,22.34; 1552800,22.34; 1553400,22.32;
          1554000,22.31; 1554600,22.3; 1555200,22.3; 1555800,22.26; 1556400,
          22.26; 1557000,22.26; 1557600,22.26; 1558200,22.22; 1558800,22.22;
          1559400,22.22; 1560000,22.21; 1560600,22.19; 1561200,22.2; 1561800,
          22.18; 1562400,22.18; 1563000,22.18; 1563600,22.15; 1564200,22.15;
          1564800,22.14; 1565400,22.14; 1566000,22.14; 1566600,22.14; 1567200,
          22.14; 1567800,22.15; 1568400,22.14; 1569000,22.14; 1569600,22.14;
          1570200,22.12; 1570800,22.13; 1571400,22.22; 1572000,22.47; 1572600,
          22.62; 1573200,22.74; 1573800,22.78; 1574400,22.78; 1575000,22.7;
          1575600,22.62; 1576200,22.5; 1576800,22.46; 1577400,22.51; 1578000,
          22.65; 1578600,22.74; 1579200,22.78; 1579800,22.83; 1580400,22.83;
          1581000,22.77; 1581600,22.7; 1582200,22.64; 1582800,22.62; 1583400,
          22.68; 1584000,22.8; 1584600,22.72; 1585200,22.58; 1585800,22.52;
          1586400,22.5; 1587000,22.52; 1587600,22.62; 1588200,22.66; 1588800,
          22.7; 1589400,22.78; 1590000,22.87; 1590600,22.91; 1591200,22.95;
          1591800,22.99; 1592400,23.08; 1593000,23.07; 1593600,23.15; 1594200,
          23.2; 1594800,23.27; 1595400,23.27; 1596000,23.28; 1596600,23.34;
          1597200,23.34; 1597800,23.36; 1598400,23.38; 1599000,23.4; 1599600,
          23.44; 1600200,23.48; 1600800,23.48; 1601400,23.52; 1602000,23.56;
          1602600,23.56; 1603200,23.6; 1603800,23.6; 1604400,23.6; 1605000,23.6;
          1605600,23.61; 1606200,23.6; 1606800,23.64; 1607400,23.61; 1608000,
          23.57; 1608600,23.68; 1609200,23.72; 1609800,23.76; 1610400,23.79;
          1611000,23.8; 1611600,23.8; 1612200,23.8; 1612800,23.8; 1613400,23.8;
          1614000,23.8; 1614600,23.8; 1615200,23.76; 1615800,23.72; 1616400,
          23.8; 1617000,23.92; 1617600,24.01; 1618200,23.96; 1618800,23.92;
          1619400,23.8; 1620000,23.76; 1620600,23.72; 1621200,23.72; 1621800,
          23.72; 1622400,23.73; 1623000,23.72; 1623600,23.72; 1624200,23.68;
          1624800,23.6; 1625400,23.56; 1626000,23.56; 1626600,23.56; 1627200,
          23.48; 1627800,23.41; 1628400,23.32; 1629000,23.23; 1629600,23.19;
          1630200,23.15; 1630800,23.15; 1631400,23.15; 1632000,23.11; 1632600,
          23.11; 1633200,23.08; 1633800,23.07; 1634400,23.07; 1635000,23.04;
          1635600,23.03; 1636200,23.03; 1636800,22.99; 1637400,22.98; 1638000,
          22.95; 1638600,22.92; 1639200,22.91; 1639800,22.91; 1640400,22.91;
          1641000,22.87; 1641600,22.87; 1642200,22.87; 1642800,22.83; 1643400,
          22.83; 1644000,22.84; 1644600,22.83; 1645200,22.78; 1645800,22.78;
          1646400,22.78; 1647000,22.78; 1647600,22.78; 1648200,22.78; 1648800,
          22.78; 1649400,22.78; 1650000,22.78; 1650600,22.78; 1651200,22.78;
          1651800,22.78; 1652400,22.74; 1653000,22.74; 1653600,22.76; 1654200,
          22.74; 1654800,22.76; 1655400,22.74; 1656000,22.74; 1656600,22.74;
          1657200,22.76; 1657800,22.74; 1658400,22.99; 1659000,23.17; 1659600,
          23.31; 1660200,23.32; 1660800,23.27; 1661400,23.2; 1662000,23.12;
          1662600,23.07; 1663200,22.99; 1663800,22.99; 1664400,23.11; 1665000,
          23.23; 1665600,23.27; 1666200,23.28; 1666800,23.27; 1667400,23.19;
          1668000,23.15; 1668600,23.11; 1669200,23.07; 1669800,22.99; 1670400,
          22.95; 1671000,23.04; 1671600,23.07; 1672200,23.11; 1672800,23.15;
          1673400,23.23; 1674000,23.36; 1674600,23.35; 1675200,23.36; 1675800,
          23.4; 1676400,23.44; 1677000,23.48; 1677600,23.6; 1678200,23.69;
          1678800,23.76; 1679400,23.8; 1680000,23.78; 1680600,23.81; 1681200,
          23.8; 1681800,23.84; 1682400,23.84; 1683000,23.92; 1683600,23.99;
          1684200,24.05; 1684800,24.09; 1685400,24.05; 1686000,24.01; 1686600,
          23.99; 1687200,23.96; 1687800,24.01; 1688400,24.05; 1689000,24.05;
          1689600,24.06; 1690200,24.06; 1690800,24.05; 1691400,24.13; 1692000,
          24.26; 1692600,24.33; 1693200,24.32; 1693800,24.25; 1694400,24.17;
          1695000,24.05; 1695600,23.96; 1696200,23.96; 1696800,23.98; 1697400,
          24.01; 1698000,24.04; 1698600,24.21; 1699200,24.37; 1699800,24.41;
          1700400,24.45; 1701000,24.42; 1701600,24.41; 1702200,24.37; 1702800,
          24.37; 1703400,24.41; 1704000,24.55; 1704600,24.54; 1705200,24.54;
          1705800,24.45; 1706400,24.38; 1707000,24.28; 1707600,24.21; 1708200,
          24.17; 1708800,24.21; 1709400,24.21; 1710000,24.2; 1710600,24.15;
          1711200,24.18; 1711800,24.06; 1712400,24.01; 1713000,23.96; 1713600,
          23.88; 1714200,23.8; 1714800,23.76; 1715400,23.68; 1716000,23.57;
          1716600,23.52; 1717200,23.52; 1717800,23.51; 1718400,23.48; 1719000,
          23.47; 1719600,23.44; 1720200,23.43; 1720800,23.4; 1721400,23.4;
          1722000,23.38; 1722600,23.36; 1723200,23.33; 1723800,23.32; 1724400,
          23.32; 1725000,23.27; 1725600,23.27; 1726200,23.24; 1726800,23.24;
          1727400,23.23; 1728000,23.19; 1728600,23.19; 1729200,23.2; 1729800,
          23.15; 1730400,23.15; 1731000,23.16; 1731600,23.15; 1732200,23.11;
          1732800,23.11; 1733400,23.12; 1734000,23.11; 1734600,23.11; 1735200,
          23.12; 1735800,23.11; 1736400,23.07; 1737000,23.07; 1737600,23.07;
          1738200,23.07; 1738800,23.07; 1739400,23.07; 1740000,23.05; 1740600,
          23.03; 1741200,23.03; 1741800,23.03; 1742400,23.03; 1743000,23.03;
          1743600,23.02; 1744200,23.03; 1744800,23.11; 1745400,23.35; 1746000,
          23.48; 1746600,23.52; 1747200,23.52; 1747800,23.44; 1748400,23.4;
          1749000,23.31; 1749600,23.23; 1750200,23.23; 1750800,23.32; 1751400,
          23.41; 1752000,23.48; 1752600,23.52; 1753200,23.52; 1753800,23.48;
          1754400,23.4; 1755000,23.36; 1755600,23.36; 1756200,23.36; 1756800,
          23.4; 1757400,23.44; 1758000,23.48; 1758600,23.52; 1759200,23.56;
          1759800,23.6; 1760400,23.64; 1761000,23.72; 1761600,23.72; 1762200,
          23.68; 1762800,23.72; 1763400,23.89; 1764000,24.05; 1764600,24.01;
          1765200,24; 1765800,23.95; 1766400,23.93; 1767000,23.94; 1767600,
          23.98; 1768200,24.01; 1768800,24.06; 1769400,24.21; 1770000,24.33;
          1770600,24.37; 1771200,24.37; 1771800,24.31; 1772400,24.28; 1773000,
          24.33; 1773600,24.33; 1774200,24.42; 1774800,24.46; 1775400,24.58;
          1776000,24.56; 1776600,24.5; 1777200,24.41; 1777800,24.33; 1778400,
          24.33; 1779000,24.37; 1779600,24.42; 1780200,24.5; 1780800,24.45;
          1781400,24.29; 1782000,24.2; 1782600,24.17; 1783200,24.16; 1783800,
          24.13; 1784400,24.14; 1785000,24.16; 1785600,24.13; 1786200,24.21;
          1786800,24.29; 1787400,24.33; 1788000,24.33; 1788600,24.25; 1789200,
          24.21; 1789800,24.17; 1790400,24.13; 1791000,24.14; 1791600,24.13;
          1792200,24.13; 1792800,24.13; 1793400,24.09; 1794000,24.1; 1794600,
          24.09; 1795200,24.09; 1795800,24.09; 1796400,24.09; 1797000,24.05;
          1797600,24.05; 1798200,24.04; 1798800,24; 1799400,23.92; 1800000,
          23.88; 1800600,23.8; 1801200,23.72; 1801800,23.64; 1802400,23.56;
          1803000,23.52; 1803600,23.48; 1804200,23.48; 1804800,23.48; 1805400,
          23.46; 1806000,23.44; 1806600,23.43; 1807200,23.4; 1807800,23.4;
          1808400,23.37; 1809000,23.36; 1809600,23.35; 1810200,23.32; 1810800,
          23.31; 1811400,23.27; 1812000,23.27; 1812600,23.27; 1813200,23.27;
          1813800,23.23; 1814400,23.23; 1815000,23.21; 1815600,23.19; 1816200,
          23.19; 1816800,23.16; 1817400,23.15; 1818000,23.15; 1818600,23.14;
          1819200,23.12; 1819800,23.11; 1820400,23.11; 1821000,23.11; 1821600,
          23.12; 1822200,23.07; 1822800,23.07; 1823400,23.05; 1824000,23.08;
          1824600,23.04; 1825200,23.03; 1825800,23.03; 1826400,23.04; 1827000,
          23.01; 1827600,22.99; 1828200,23; 1828800,23; 1829400,22.99; 1830000,
          22.97; 1830600,23.03; 1831200,23.24; 1831800,23.4; 1832400,23.4;
          1833000,23.36; 1833600,23.3; 1834200,23.24; 1834800,23.14; 1835400,
          23.07; 1836000,23.07; 1836600,23.18; 1837200,23.27; 1837800,23.33;
          1838400,23.36; 1839000,23.35; 1839600,23.27; 1840200,23.23; 1840800,
          23.19; 1841400,23.15; 1842000,23.16; 1842600,23.23; 1843200,23.36;
          1843800,23.47; 1844400,23.56; 1845000,23.64; 1845600,23.68; 1846200,
          23.68; 1846800,23.48; 1847400,23.4; 1848000,23.4; 1848600,23.48;
          1849200,23.57; 1849800,23.68; 1850400,23.72; 1851000,23.72; 1851600,
          23.76; 1852200,23.8; 1852800,23.8; 1853400,23.8; 1854000,23.84;
          1854600,23.88; 1855200,23.94; 1855800,23.96; 1856400,24.21; 1857000,
          24.05; 1857600,24.01; 1858200,24.01; 1858800,24.09; 1859400,24.08;
          1860000,24.12; 1860600,24.13; 1861200,24.1; 1861800,24.1; 1862400,
          24.12; 1863000,24.09; 1863600,24.13; 1864200,24.17; 1864800,24.17;
          1865400,24.16; 1866000,24.37; 1866600,24.45; 1867200,24.43; 1867800,
          24.4; 1868400,24.37; 1869000,24.29; 1869600,24.26; 1870200,24.29;
          1870800,24.29; 1871400,24.29; 1872000,24.28; 1872600,24.25; 1873200,
          24.21; 1873800,24.21; 1874400,24.21; 1875000,24.18; 1875600,24.17;
          1876200,24.13; 1876800,24.09; 1877400,24.05; 1878000,24.05; 1878600,
          24.01; 1879200,24.01; 1879800,23.97; 1880400,23.96; 1881000,23.95;
          1881600,23.92; 1882200,23.93; 1882800,23.88; 1883400,23.88; 1884000,
          23.88; 1884600,23.88; 1885200,23.81; 1885800,23.79; 1886400,23.72;
          1887000,23.68; 1887600,23.6; 1888200,23.48; 1888800,23.4; 1889400,
          23.4; 1890000,23.4; 1890600,23.36; 1891200,23.37; 1891800,23.32;
          1892400,23.33; 1893000,23.28; 1893600,23.27; 1894200,23.26; 1894800,
          23.23; 1895400,23.23; 1896000,23.19; 1896600,23.18; 1897200,23.15;
          1897800,23.15; 1898400,23.12; 1899000,23.08; 1899600,23.03; 1900200,
          22.95; 1900800,22.87; 1901400,22.82; 1902000,22.78; 1902600,22.72;
          1903200,22.66; 1903800,22.62; 1904400,22.62; 1905000,22.54; 1905600,
          22.5; 1906200,22.46; 1906800,22.42; 1907400,22.42; 1908000,22.37;
          1908600,22.32; 1909200,22.3; 1909800,22.26; 1910400,22.26; 1911000,
          22.18; 1911600,22.18; 1912200,22.14; 1912800,22.1; 1913400,22.09;
          1914000,22.05; 1914600,22.05; 1915200,22.01; 1915800,22.01; 1916400,
          21.97; 1917000,21.97; 1917600,21.93; 1918200,21.93; 1918800,21.89;
          1919400,21.86; 1920000,21.85; 1920600,21.85; 1921200,21.81; 1921800,
          21.81; 1922400,21.81; 1923000,21.77; 1923600,21.77; 1924200,21.73;
          1924800,21.73; 1925400,21.73; 1926000,21.72; 1926600,21.69; 1927200,
          21.66; 1927800,21.65; 1928400,21.65; 1929000,21.65; 1929600,21.64;
          1930200,21.64; 1930800,21.64; 1931400,21.65; 1932000,21.65; 1932600,
          21.65; 1933200,21.65; 1933800,21.7; 1934400,21.69; 1935000,21.73;
          1935600,21.77; 1936200,21.77; 1936800,21.77; 1937400,21.77; 1938000,
          21.77; 1938600,21.81; 1939200,21.85; 1939800,21.85; 1940400,21.85;
          1941000,21.85; 1941600,21.85; 1942200,21.86; 1942800,21.85; 1943400,
          21.85; 1944000,21.88; 1944600,21.86; 1945200,21.89; 1945800,21.89;
          1946400,21.89; 1947000,21.89; 1947600,21.89; 1948200,21.89; 1948800,
          21.9; 1949400,21.9; 1950000,21.9; 1950600,21.89; 1951200,21.92;
          1951800,21.89; 1952400,21.89; 1953000,21.89; 1953600,21.88; 1954200,
          21.85; 1954800,21.85; 1955400,21.85; 1956000,21.85; 1956600,21.85;
          1957200,21.85; 1957800,21.81; 1958400,21.81; 1959000,21.79; 1959600,
          21.77; 1960200,21.73; 1960800,21.69; 1961400,21.69; 1962000,21.65;
          1962600,21.64; 1963200,21.6; 1963800,21.6; 1964400,21.6; 1965000,
          21.56; 1965600,21.52; 1966200,21.52; 1966800,21.51; 1967400,21.48;
          1968000,21.48; 1968600,21.44; 1969200,21.44; 1969800,21.45; 1970400,
          21.43; 1971000,21.4; 1971600,21.4; 1972200,21.39; 1972800,21.36;
          1973400,21.37; 1974000,21.36; 1974600,21.32; 1975200,21.32; 1975800,
          21.3; 1976400,21.28; 1977000,21.51; 1977600,21.28; 1978200,21.24;
          1978800,21.24; 1979400,21.2; 1980000,21.21; 1980600,21.16; 1981200,
          21.16; 1981800,21.12; 1982400,21.12; 1983000,21.1; 1983600,21.08;
          1984200,21.08; 1984800,21.04; 1985400,21.03; 1986000,21; 1986600,21;
          1987200,20.96; 1987800,20.97; 1988400,20.96; 1989000,20.91; 1989600,
          20.91; 1990200,20.88; 1990800,20.87; 1991400,20.87; 1992000,20.83;
          1992600,20.83; 1993200,20.79; 1993800,20.8; 1994400,20.79; 1995000,
          20.76; 1995600,20.75; 1996200,20.74; 1996800,20.71; 1997400,20.7;
          1998000,20.67; 1998600,20.67; 1999200,20.67; 1999800,20.63; 2000400,
          20.63; 2001000,20.59; 2001600,20.59; 2002200,20.59; 2002800,20.55;
          2003400,20.56; 2004000,20.55; 2004600,20.54; 2005200,20.51; 2005800,
          20.51; 2006400,20.51; 2007000,20.48; 2007600,20.46; 2008200,20.46;
          2008800,20.43; 2009400,20.42; 2010000,20.42; 2010600,20.38; 2011200,
          20.38; 2011800,20.38; 2012400,20.38; 2013000,20.34; 2013600,20.36;
          2014200,20.34; 2014800,20.34; 2015400,20.36; 2016000,20.51; 2016600,
          20.63; 2017200,20.76; 2017800,20.83; 2018400,20.87; 2019000,20.91;
          2019600,20.88; 2020200,20.84; 2020800,20.83; 2021400,20.83; 2022000,
          20.83; 2022600,20.83; 2023200,20.83; 2023800,20.83; 2024400,20.83;
          2025000,20.87; 2025600,20.87; 2026200,20.87; 2026800,20.87; 2027400,
          20.87; 2028000,20.87; 2028600,20.87; 2029200,20.91; 2029800,20.9;
          2030400,20.91; 2031000,20.91; 2031600,20.92; 2032200,20.92; 2032800,
          20.95; 2033400,20.96; 2034000,20.95; 2034600,20.96; 2035200,20.97;
          2035800,20.96; 2036400,20.96; 2037000,20.96; 2037600,20.96; 2038200,
          20.96; 2038800,20.96; 2039400,20.96; 2040000,20.96; 2040600,20.96;
          2041200,20.96; 2041800,20.96; 2042400,20.96; 2043000,20.96; 2043600,
          20.95; 2044200,20.92; 2044800,20.91; 2045400,20.87; 2046000,20.86;
          2046600,20.83; 2047200,20.83; 2047800,20.79; 2048400,20.79; 2049000,
          20.75; 2049600,20.74; 2050200,20.72; 2050800,20.67; 2051400,20.67;
          2052000,20.67; 2052600,20.63; 2053200,20.63; 2053800,20.59; 2054400,
          20.58; 2055000,20.55; 2055600,20.55; 2056200,20.51; 2056800,20.51;
          2057400,20.48; 2058000,20.46; 2058600,20.44; 2059200,20.42; 2059800,
          20.41; 2060400,20.38; 2061000,20.34; 2061600,20.34; 2062200,20.33;
          2062800,20.3; 2063400,20.3; 2064000,20.3; 2064600,20.28; 2065200,
          20.26; 2065800,20.24; 2066400,20.22; 2067000,20.22; 2067600,20.2;
          2068200,20.18; 2068800,20.18; 2069400,20.18; 2070000,20.14; 2070600,
          20.14; 2071200,20.14; 2071800,20.22; 2072400,20.38; 2073000,20.48;
          2073600,20.51; 2074200,20.55; 2074800,20.59; 2075400,20.63; 2076000,
          20.67; 2076600,20.74; 2077200,20.75; 2077800,20.79; 2078400,20.83;
          2079000,20.83; 2079600,20.87; 2080200,20.87; 2080800,20.91; 2081400,
          20.96; 2082000,20.96; 2082600,20.96; 2083200,21; 2083800,21; 2084400,
          21.01; 2085000,21.05; 2085600,21.06; 2086200,21.08; 2086800,21.08;
          2087400,21.08; 2088000,21.12; 2088600,21.12; 2089200,21.12; 2089800,
          21.28; 2090400,21.48; 2091000,21.65; 2091600,21.81; 2092200,21.97;
          2092800,22.05; 2093400,22.05; 2094000,21.97; 2094600,21.86; 2095200,
          21.77; 2095800,21.81; 2096400,21.97; 2097000,22.07; 2097600,22.14;
          2098200,22.22; 2098800,22.26; 2099400,22.3; 2100000,22.34; 2100600,
          22.39; 2101200,22.38; 2101800,22.41; 2102400,22.58; 2103000,22.76;
          2103600,22.91; 2104200,23.02; 2104800,22.78; 2105400,22.7; 2106000,
          22.66; 2106600,22.77; 2107200,22.87; 2107800,22.99; 2108400,23.07;
          2109000,23.15; 2109600,23.27; 2110200,23.4; 2110800,23.48; 2111400,
          23.51; 2112000,23.6; 2112600,23.6; 2113200,23.71; 2113800,23.75;
          2114400,23.84; 2115000,23.97; 2115600,24.05; 2116200,24.08; 2116800,
          24.09; 2117400,24.09; 2118000,24.04; 2118600,23.76; 2119200,23.72;
          2119800,23.68; 2120400,23.68; 2121000,23.68; 2121600,23.77; 2122200,
          23.92; 2122800,23.93; 2123400,23.8; 2124000,23.84; 2124600,23.84;
          2125200,23.84; 2125800,23.84; 2126400,23.85; 2127000,23.8; 2127600,
          23.77; 2128200,23.75; 2128800,23.72; 2129400,23.64; 2130000,23.67;
          2130600,23.76; 2131200,23.98; 2131800,24.09; 2132400,24; 2133000,
          24.05; 2133600,24.09; 2134200,24.05; 2134800,24.01; 2135400,23.97;
          2136000,23.92; 2136600,23.88; 2137200,23.84; 2137800,23.8; 2138400,
          23.76; 2139000,23.72; 2139600,23.68; 2140200,23.68; 2140800,23.67;
          2141400,23.64; 2142000,23.6; 2142600,23.6; 2143200,23.56; 2143800,
          23.52; 2144400,23.44; 2145000,23.41; 2145600,23.32; 2146200,23.27;
          2146800,23.16; 2147400,23.07; 2148000,23.03; 2148600,23; 2149200,
          22.97; 2149800,22.95; 2150400,22.91; 2151000,22.91; 2151600,22.87;
          2152200,22.84; 2152800,22.83; 2153400,22.8; 2154000,22.78; 2154600,
          22.78; 2155200,22.78; 2155800,22.74; 2156400,22.74; 2157000,22.7;
          2157600,22.7; 2158200,22.7; 2158800,22.67; 2159400,22.66; 2160000,
          22.66; 2160600,22.62; 2161200,22.62; 2161800,22.62; 2162400,22.62;
          2163000,22.59; 2163600,22.58; 2164200,22.58; 2164800,22.58; 2165400,
          22.54; 2166000,22.54; 2166600,22.56; 2167200,22.54; 2167800,22.54;
          2168400,22.54; 2169000,22.5; 2169600,22.5; 2170200,22.5; 2170800,22.5;
          2171400,22.51; 2172000,22.5; 2172600,22.5; 2173200,22.5; 2173800,
          22.49; 2174400,22.49; 2175000,22.49; 2175600,22.46; 2176200,22.55;
          2176800,22.78; 2177400,22.91; 2178000,23.07; 2178600,23.11; 2179200,
          23.07; 2179800,22.99; 2180400,22.91; 2181000,22.79; 2181600,22.76;
          2182200,22.78; 2182800,22.91; 2183400,23.03; 2184000,23.11; 2184600,
          23.11; 2185200,23.07; 2185800,22.96; 2186400,22.91; 2187000,22.87;
          2187600,22.87; 2188200,22.83; 2188800,22.95; 2189400,23.07; 2190000,
          23.27; 2190600,23.44; 2191200,23.47; 2191800,23.44; 2192400,23.4;
          2193000,23.4; 2193600,23.4; 2194200,23.48; 2194800,23.56; 2195400,
          23.64; 2196000,23.72; 2196600,23.73; 2197200,23.72; 2197800,23.72;
          2198400,23.72; 2199000,23.76; 2199600,23.84; 2200200,23.68; 2200800,
          23.64; 2201400,23.8; 2202000,24; 2202600,24.09; 2203200,24.15;
          2203800,24.13; 2204400,24.13; 2205000,24.09; 2205600,24.1; 2206200,
          24.09; 2206800,24.09; 2207400,24.13; 2208000,24.17; 2208600,24.09;
          2209200,24.05; 2209800,24.02; 2210400,23.96; 2211000,24.13; 2211600,
          24.26; 2212200,24.31; 2212800,24.29; 2213400,24.26; 2214000,24.29;
          2214600,24.3; 2215200,24.25; 2215800,24.25; 2216400,24.29; 2217000,
          24.33; 2217600,24.33; 2218200,24.29; 2218800,24.25; 2219400,24.25;
          2220000,24.25; 2220600,24.21; 2221200,24.01; 2221800,23.92; 2222400,
          23.92; 2223000,23.96; 2223600,23.92; 2224200,23.92; 2224800,23.88;
          2225400,23.96; 2226000,24.09; 2226600,24.12; 2227200,24.09; 2227800,
          24.05; 2228400,24.01; 2229000,23.96; 2229600,23.92; 2230200,23.92;
          2230800,23.84; 2231400,23.8; 2232000,23.76; 2232600,23.69; 2233200,
          23.6; 2233800,23.54; 2234400,23.48; 2235000,23.44; 2235600,23.43;
          2236200,23.4; 2236800,23.4; 2237400,23.36; 2238000,23.36; 2238600,
          23.32; 2239200,23.32; 2239800,23.27; 2240400,23.27; 2241000,23.23;
          2241600,23.23; 2242200,23.21; 2242800,23.19; 2243400,23.18; 2244000,
          23.15; 2244600,23.15; 2245200,23.15; 2245800,23.11; 2246400,23.11;
          2247000,23.11; 2247600,23.11; 2248200,23.1; 2248800,23.07; 2249400,
          23.07; 2250000,23.07; 2250600,23.06; 2251200,23.03; 2251800,23.07;
          2252400,23.06; 2253000,23.03; 2253600,23.03; 2254200,23.03; 2254800,
          23.02; 2255400,23.02; 2256000,22.99; 2256600,22.99; 2257200,22.99;
          2257800,22.99; 2258400,22.98; 2259000,22.98; 2259600,22.95; 2260200,
          22.95; 2260800,22.95; 2261400,22.95; 2262000,22.95; 2262600,22.96;
          2263200,23.11; 2263800,23.31; 2264400,23.43; 2265000,23.4; 2265600,
          23.36; 2266200,23.27; 2266800,23.23; 2267400,23.11; 2268000,23.06;
          2268600,23.07; 2269200,23.15; 2269800,23.27; 2270400,23.36; 2271000,
          23.4; 2271600,23.36; 2272200,23.27; 2272800,23.23; 2273400,23.16;
          2274000,23.18; 2274600,23.24; 2275200,23.44; 2275800,23.68; 2276400,
          23.84; 2277000,23.92; 2277600,23.93; 2278200,23.92; 2278800,23.86;
          2279400,23.76; 2280000,23.77; 2280600,23.88; 2281200,24.01; 2281800,
          24.33; 2282400,24.57; 2283000,24.63; 2283600,24.62; 2284200,24.58;
          2284800,24.54; 2285400,24.5; 2286000,24.41; 2286600,24.45; 2287200,
          24.55; 2287800,24.66; 2288400,24.74; 2289000,24.7; 2289600,24.66;
          2290200,24.59; 2290800,24.54; 2291400,24.5; 2292000,24.58; 2292600,
          24.7; 2293200,24.78; 2293800,24.81; 2294400,24.76; 2295000,24.74;
          2295600,24.7; 2296200,24.66; 2296800,24.66; 2297400,24.7; 2298000,
          24.74; 2298600,24.78; 2299200,24.78; 2299800,24.76; 2300400,24.74;
          2301000,24.7; 2301600,24.66; 2302200,24.62; 2302800,24.62; 2303400,
          24.66; 2304000,24.66; 2304600,24.66; 2305200,24.62; 2305800,24.58;
          2306400,24.5; 2307000,24.46; 2307600,24.45; 2308200,24.45; 2308800,
          24.45; 2309400,24.45; 2310000,24.45; 2310600,24.45; 2311200,24.41;
          2311800,24.41; 2312400,24.37; 2313000,24.34; 2313600,24.34; 2314200,
          24.32; 2314800,24.3; 2315400,24.25; 2316000,24.22; 2316600,24.21;
          2317200,24.17; 2317800,24.13; 2318400,24.09; 2319000,24.04; 2319600,
          23.96; 2320200,23.9; 2320800,23.84; 2321400,23.79; 2322000,23.76;
          2322600,23.76; 2323200,23.76; 2323800,23.76; 2324400,23.72; 2325000,
          23.72; 2325600,23.69; 2326200,23.68; 2326800,23.68; 2327400,23.64;
          2328000,23.64; 2328600,23.6; 2329200,23.61; 2329800,23.57; 2330400,
          23.56; 2331000,23.56; 2331600,23.56; 2332200,23.52; 2332800,23.51;
          2333400,23.48; 2334000,23.48; 2334600,23.48; 2335200,23.46; 2335800,
          23.44; 2336400,23.44; 2337000,23.4; 2337600,23.4; 2338200,23.4;
          2338800,23.4; 2339400,23.4; 2340000,23.4; 2340600,23.4; 2341200,23.36;
          2341800,23.37; 2342400,23.36; 2343000,23.36; 2343600,23.35; 2344200,
          23.36; 2344800,23.32; 2345400,23.32; 2346000,23.32; 2346600,23.32;
          2347200,23.27; 2347800,23.27; 2348400,23.27; 2349000,23.27; 2349600,
          23.44; 2350200,23.62; 2350800,23.71; 2351400,23.68; 2352000,23.6;
          2352600,23.56; 2353200,23.52; 2353800,23.43; 2354400,23.36; 2355000,
          23.42; 2355600,23.56; 2356200,23.64; 2356800,23.68; 2357400,23.68;
          2358000,23.6; 2358600,23.56; 2359200,23.52; 2359800,23.48; 2360400,
          23.52; 2361000,23.56; 2361600,23.55; 2362200,23.44; 2362800,23.42;
          2363400,23.4; 2364000,23.44; 2364600,23.48; 2365200,23.48; 2365800,
          23.6; 2366400,23.69; 2367000,23.76; 2367600,23.88; 2368200,23.92;
          2368800,23.92; 2369400,23.94; 2370000,24.01; 2370600,24.01; 2371200,
          24.09; 2371800,24.1; 2372400,24.05; 2373000,24.09; 2373600,24.14;
          2374200,24.17; 2374800,24.21; 2375400,24.25; 2376000,24.21; 2376600,
          24.25; 2377200,24.29; 2377800,24.25; 2378400,24.13; 2379000,24.09;
          2379600,24.15; 2380200,24.21; 2380800,24.26; 2381400,24.21; 2382000,
          24.21; 2382600,24.25; 2383200,24.25; 2383800,24.19; 2384400,24.21;
          2385000,24.2; 2385600,24.21; 2386200,24.21; 2386800,24.21; 2387400,
          24.16; 2388000,24.13; 2388600,24.09; 2389200,24.13; 2389800,24.05;
          2390400,24.01; 2391000,24.04; 2391600,24.04; 2392200,24.02; 2392800,
          24.01; 2393400,23.97; 2394000,23.96; 2394600,24.05; 2395200,24.09;
          2395800,24.12; 2396400,24.09; 2397000,24.09; 2397600,24.05; 2398200,
          24.07; 2398800,24.01; 2399400,23.96; 2400000,23.92; 2400600,23.92;
          2401200,23.9; 2401800,23.9; 2402400,23.88; 2403000,23.84; 2403600,
          23.8; 2404200,23.76; 2404800,23.72; 2405400,23.68; 2406000,23.6;
          2406600,23.56; 2407200,23.52; 2407800,23.48; 2408400,23.44; 2409000,
          23.43; 2409600,23.41; 2410200,23.4; 2410800,23.4; 2411400,23.4;
          2412000,23.4; 2412600,23.39; 2413200,23.36; 2413800,23.36; 2414400,
          23.32; 2415000,23.32; 2415600,23.28; 2416200,23.27; 2416800,23.23;
          2417400,23.23; 2418000,23.23; 2418600,23.19; 2419200,23.2; 2419800,
          23.15; 2420400,23.15; 2421000,23.15; 2421600,23.15; 2422200,23.15;
          2422800,23.12; 2423400,23.11; 2424000,23.11; 2424600,23.11; 2425200,
          23.11; 2425800,23.11; 2426400,23.09; 2427000,23.07; 2427600,23.07;
          2428200,23.07; 2428800,23.07; 2429400,23.07; 2430000,23.04; 2430600,
          23.03; 2431200,23.03; 2431800,23.03; 2432400,23.03; 2433000,23.03;
          2433600,23.03; 2434200,23.03; 2434800,23.03; 2435400,23.03; 2436000,
          23.03; 2436600,23.06; 2437200,23.11; 2437800,23.11; 2438400,23.07;
          2439000,23.03; 2439600,23.03; 2440200,23.02; 2440800,22.99; 2441400,
          22.99; 2442000,23.06; 2442600,23.11; 2443200,23.15; 2443800,23.15;
          2444400,23.11; 2445000,23.07; 2445600,23.07; 2446200,23.03; 2446800,
          22.96; 2447400,22.96; 2448000,23.02; 2448600,23.08; 2449200,23.11;
          2449800,23.08; 2450400,23.08; 2451000,23.11; 2451600,23.11; 2452200,
          23.17; 2452800,23.36; 2453400,23.4; 2454000,23.48; 2454600,23.56;
          2455200,23.72; 2455800,23.8; 2456400,23.84; 2457000,23.84; 2457600,
          23.88; 2458200,23.92; 2458800,23.97; 2459400,24.01; 2460000,24.04;
          2460600,24.04; 2461200,24.05; 2461800,24.05; 2462400,24.09; 2463000,
          24.09; 2463600,24.05; 2464200,24.01; 2464800,24; 2465400,24.1;
          2466000,24.21; 2466600,24.21; 2467200,24.2; 2467800,24.18; 2468400,
          24.13; 2469000,24.1; 2469600,24.1; 2470200,24.13; 2470800,24.16;
          2471400,24.17; 2472000,24.14; 2472600,24.13; 2473200,24.09; 2473800,
          24.05; 2474400,24.01; 2475000,24.04; 2475600,24.09; 2476200,24.09;
          2476800,24.09; 2477400,24.09; 2478000,24.05; 2478600,24.04; 2479200,
          24.01; 2479800,23.96; 2480400,23.96; 2481000,23.96; 2481600,23.92;
          2482200,23.92; 2482800,24; 2483400,24.02; 2484000,23.96; 2484600,
          23.92; 2485200,23.88; 2485800,23.85; 2486400,23.84; 2487000,23.8;
          2487600,23.8; 2488200,23.78; 2488800,23.77; 2489400,23.72; 2490000,
          23.68; 2490600,23.64; 2491200,23.6; 2491800,23.56; 2492400,23.52;
          2493000,23.48; 2493600,23.44; 2494200,23.4; 2494800,23.4; 2495400,
          23.4; 2496000,23.38; 2496600,23.38; 2497200,23.36; 2497800,23.32;
          2498400,23.32; 2499000,23.27; 2499600,23.27; 2500200,23.23; 2500800,
          23.22; 2501400,23.19; 2502000,23.15; 2502600,23.15; 2503200,23.14;
          2503800,23.11; 2504400,23.07; 2505000,23.03; 2505600,22.99; 2506200,
          22.95; 2506800,22.91; 2507400,22.91; 2508000,22.87; 2508600,22.86;
          2509200,22.83; 2509800,22.79; 2510400,22.78; 2511000,22.78; 2511600,
          22.76; 2512200,22.7; 2512800,22.7; 2513400,22.66; 2514000,22.62;
          2514600,22.62; 2515200,22.62; 2515800,22.58; 2516400,22.54; 2517000,
          22.54; 2517600,22.74; 2518200,22.5; 2518800,22.5; 2519400,22.46;
          2520000,22.46; 2520600,22.42; 2521200,22.42; 2521800,22.38; 2522400,
          22.38; 2523000,22.38; 2523600,22.34; 2524200,22.3; 2524800,22.26;
          2525400,22.26; 2526000,22.26; 2526600,22.24; 2527200,22.24; 2527800,
          22.22; 2528400,22.18; 2529000,22.18; 2529600,22.18; 2530200,22.16;
          2530800,22.14; 2531400,22.14; 2532000,22.14; 2532600,22.14; 2533200,
          22.14; 2533800,22.18; 2534400,22.22; 2535000,22.26; 2535600,22.26;
          2536200,22.34; 2536800,22.44; 2537400,22.5; 2538000,22.54; 2538600,
          22.54; 2539200,22.54; 2539800,22.54; 2540400,22.58; 2541000,22.62;
          2541600,22.62; 2542200,22.62; 2542800,22.62; 2543400,22.68; 2544000,
          22.66; 2544600,22.7; 2545200,22.7; 2545800,22.7; 2546400,22.74;
          2547000,22.74; 2547600,22.78; 2548200,22.78; 2548800,22.78; 2549400,
          22.84; 2550000,22.83; 2550600,22.83; 2551200,22.83; 2551800,22.83;
          2552400,22.84; 2553000,22.87; 2553600,22.86; 2554200,22.83; 2554800,
          22.87; 2555400,22.9; 2556000,22.87; 2556600,22.87; 2557200,22.88;
          2557800,22.91; 2558400,22.87; 2559000,22.87; 2559600,22.87; 2560200,
          22.83; 2560800,22.84; 2561400,22.78; 2562000,22.74; 2562600,22.74;
          2563200,22.7; 2563800,22.66; 2564400,22.66; 2565000,22.62; 2565600,
          22.62; 2566200,22.62; 2566800,22.58; 2567400,22.58; 2568000,22.58;
          2568600,22.54; 2569200,22.54; 2569800,22.55; 2570400,22.54; 2571000,
          22.5; 2571600,22.5; 2572200,22.46; 2572800,22.46; 2573400,22.46;
          2574000,22.46; 2574600,22.46; 2575200,22.42; 2575800,22.42; 2576400,
          22.42; 2577000,22.42; 2577600,22.39; 2578200,22.38; 2578800,22.38;
          2579400,22.38; 2580000,22.34; 2580600,22.34; 2581200,22.31; 2581800,
          22.3; 2582400,22.3; 2583000,22.27; 2583600,22.26; 2584200,22.26;
          2584800,22.26; 2585400,22.26; 2586000,22.22; 2586600,22.21; 2587200,
          22.18; 2587800,22.18; 2588400,22.17; 2589000,22.17; 2589600,22.14;
          2590200,22.15; 2590800,22.14; 2591400,22.09; 2505600,22.09; 2506200,
          22.09; 2506800,22.09; 2507400,22.05; 2508000,22.06; 2508600,22.05;
          2509200,22.05; 2509800,22.05; 2510400,22.01; 2511000,22.01; 2511600,
          21.98; 2512200,21.98; 2512800,21.97; 2513400,21.98; 2514000,21.97;
          2514600,21.97; 2515200,21.97; 2515800,21.93; 2516400,21.93; 2517000,
          21.93; 2517600,21.93; 2518200,21.93; 2518800,21.89; 2519400,21.89;
          2520000,21.89; 2520600,21.85; 2521200,21.85; 2521800,21.85; 2522400,
          21.85; 2523000,21.85; 2523600,21.86; 2524200,21.81; 2524800,21.81;
          2525400,21.81; 2526000,21.81; 2526600,21.81; 2527200,21.81; 2527800,
          21.81; 2528400,21.81; 2529000,21.81; 2529600,21.81; 2530200,21.81;
          2530800,21.81; 2531400,21.81; 2532000,21.78; 2532600,21.81; 2533200,
          21.81; 2533800,21.81; 2534400,21.81; 2535000,21.81; 2535600,21.81;
          2536200,21.81; 2536800,21.81; 2537400,21.81; 2538000,21.81; 2538600,
          21.81; 2539200,21.84; 2539800,21.85; 2540400,21.85; 2541000,21.85;
          2541600,21.85; 2542200,21.87; 2542800,21.89; 2543400,21.89; 2544000,
          21.92; 2544600,21.93; 2545200,21.93; 2545800,21.93; 2546400,21.92;
          2547000,21.9; 2547600,21.93; 2548200,21.93; 2548800,21.93; 2549400,
          21.93; 2550000,21.93; 2550600,21.93; 2551200,21.94; 2551800,21.93;
          2552400,21.93; 2553000,21.97; 2553600,21.95; 2554200,21.93; 2554800,
          21.96; 2555400,21.94; 2556000,21.93; 2556600,21.93; 2557200,21.93;
          2557800,21.93; 2558400,21.93; 2559000,21.93; 2559600,21.93; 2560200,
          21.92; 2560800,21.89; 2561400,21.9; 2562000,21.85; 2562600,21.85;
          2563200,21.85; 2563800,21.85; 2564400,21.85; 2565000,21.85; 2565600,
          21.82; 2566200,21.81; 2566800,21.81; 2567400,21.81; 2568000,21.81;
          2568600,21.81; 2569200,21.81; 2569800,21.82; 2570400,21.81; 2571000,
          21.8; 2571600,21.77; 2572200,21.77; 2572800,21.77; 2573400,21.77;
          2574000,21.77; 2574600,21.77; 2575200,21.73; 2575800,21.76; 2576400,
          21.73; 2577000,21.73; 2577600,21.73; 2578200,21.73; 2578800,21.73;
          2579400,21.69; 2580000,21.69; 2580600,21.69; 2581200,21.65; 2581800,
          21.65; 2582400,21.65; 2583000,21.65; 2583600,21.64; 2584200,21.64;
          2584800,21.63; 2585400,21.61; 2586000,21.6; 2586600,21.6; 2587200,
          21.6; 2587800,21.62; 2588400,21.6; 2589000,21.6; 2589600,21.6;
          2590200,21.65; 2590800,21.73; 2591400,21.77; 2592000,21.85; 2592600,
          21.89; 2593200,21.94; 2593800,21.94; 2594400,21.97; 2595000,22.01;
          2595600,22.02; 2596200,22.05; 2596800,22.09; 2597400,22.1; 2598000,
          22.13; 2598600,22.14; 2599200,22.17; 2599800,22.18; 2600400,22.18;
          2601000,22.18; 2601600,22.22; 2602200,22.22; 2602800,22.24; 2603400,
          22.26; 2604000,22.26; 2604600,22.26; 2605200,22.26; 2605800,22.27;
          2606400,22.27; 2607000,22.3; 2607600,22.3; 2608200,22.3; 2608800,
          22.38; 2609400,22.59; 2610000,22.7; 2610600,22.74; 2611200,22.7;
          2611800,22.62; 2612400,22.58; 2613000,22.54; 2613600,22.46; 2614200,
          22.42; 2614800,22.51; 2615400,22.62; 2616000,22.7; 2616600,22.7;
          2617200,22.7; 2617800,22.64; 2618400,22.58; 2619000,22.54; 2619600,
          22.5; 2620200,22.54; 2620800,22.54; 2621400,22.57; 2622000,22.61;
          2622600,22.62; 2623200,22.64; 2623800,22.66; 2624400,22.7; 2625000,
          22.74; 2625600,22.87; 2626200,22.91; 2626800,22.91; 2627400,22.95;
          2628000,23.02; 2628600,23.07; 2629200,23.15; 2629800,23.2; 2630400,
          23.27; 2631000,23.27; 2631600,23.32; 2632200,23.32; 2632800,23.36;
          2633400,23.4; 2634000,23.4; 2634600,23.4; 2635200,23.43; 2635800,
          23.44; 2636400,23.44; 2637000,23.44; 2637600,23.4; 2638200,23.44;
          2638800,23.52; 2639400,23.56; 2640000,23.71; 2640600,23.76; 2641200,
          23.84; 2641800,23.92; 2642400,23.92; 2643000,23.94; 2643600,23.88;
          2644200,23.88; 2644800,23.84; 2645400,23.77; 2646000,23.68; 2646600,
          23.65; 2647200,23.68; 2647800,23.68; 2648400,23.67; 2649000,23.64;
          2649600,23.64; 2650200,23.61; 2650800,23.64; 2651400,23.71; 2652000,
          23.64; 2652600,23.69; 2653200,23.64; 2653800,23.64; 2654400,23.64;
          2655000,23.64; 2655600,23.65; 2656200,23.76; 2656800,23.84; 2657400,
          23.84; 2658000,23.84; 2658600,23.79; 2659200,23.76; 2659800,23.72;
          2660400,23.68; 2661000,23.61; 2661600,23.6; 2662200,23.6; 2662800,
          23.56; 2663400,23.56; 2664000,23.56; 2664600,23.52; 2665200,23.48;
          2665800,23.4; 2666400,23.32; 2667000,23.27; 2667600,23.23; 2668200,
          23.15; 2668800,23.15; 2669400,23.15; 2670000,23.16; 2670600,23.11;
          2671200,23.11; 2671800,23.07; 2672400,23.05; 2673000,23.03; 2673600,
          22.99; 2674200,22.95; 2674800,22.92; 2675400,22.91; 2676000,22.9;
          2676600,22.87; 2677200,22.86; 2677800,22.83; 2678400,22.83; 2679000,
          22.82; 2679600,22.79; 2680200,22.78; 2680800,22.8; 2681400,22.78;
          2682000,22.78; 2682600,22.81; 2683200,22.78; 2683800,22.78; 2684400,
          22.74; 2685000,22.76; 2685600,22.74; 2686200,22.74; 2686800,22.7;
          2687400,22.7; 2688000,22.7; 2688600,22.7; 2689200,22.7; 2689800,22.66;
          2690400,22.66; 2691000,22.66; 2691600,22.66; 2692200,22.62; 2692800,
          22.62; 2693400,22.62; 2694000,22.62; 2694600,22.62; 2695200,22.62;
          2695800,22.7; 2696400,22.74; 2697000,22.74; 2697600,22.7; 2698200,
          22.62; 2698800,22.61; 2699400,22.55; 2700000,22.58; 2700600,22.68;
          2701200,22.78; 2701800,22.83; 2702400,22.83; 2703000,22.78; 2703600,
          22.78; 2704200,22.7; 2704800,22.66; 2705400,22.66; 2706000,22.7;
          2706600,22.78; 2707200,22.83; 2707800,22.84; 2708400,22.78; 2709000,
          22.82; 2709600,22.83; 2710200,22.91; 2710800,22.95; 2711400,23.07;
          2712000,23.15; 2712600,23.23; 2713200,23.29; 2713800,23.36; 2714400,
          23.48; 2715000,23.47; 2715600,23.58; 2716200,23.72; 2716800,23.88;
          2717400,24.01; 2718000,24.05; 2718600,24.09; 2719200,24.17; 2719800,
          24.18; 2720400,24.18; 2721000,24.13; 2721600,24.13; 2722200,24.14;
          2722800,24.18; 2723400,24.13; 2724000,24.05; 2724600,24.09; 2725200,
          24.05; 2725800,24.06; 2726400,24.05; 2727000,24.13; 2727600,24.21;
          2728200,24.21; 2728800,24.21; 2729400,24.21; 2730000,24.17; 2730600,
          24.13; 2731200,24.09; 2731800,24.09; 2732400,24.1; 2733000,24.09;
          2733600,24.09; 2734200,24.13; 2734800,24.14; 2735400,24.1; 2736000,
          24.05; 2736600,24; 2737200,23.92; 2737800,23.88; 2738400,23.92;
          2739000,23.92; 2739600,23.93; 2740200,23.92; 2740800,23.92; 2741400,
          23.84; 2742000,23.84; 2742600,23.8; 2743200,23.76; 2743800,23.81;
          2744400,23.84; 2745000,23.86; 2745600,23.84; 2746200,23.8; 2746800,
          23.76; 2747400,23.71; 2748000,23.65; 2748600,23.6; 2749200,23.6;
          2749800,23.64; 2750400,23.64; 2751000,23.6; 2751600,23.57; 2752200,
          23.51; 2752800,23.44; 2753400,23.36; 2754000,23.32; 2754600,23.27;
          2755200,23.28; 2755800,23.24; 2756400,23.25; 2757000,23.27; 2757600,
          23.24; 2758200,23.23; 2758800,23.19; 2759400,23.19; 2760000,23.15;
          2760600,23.15; 2761200,23.11; 2761800,23.11; 2762400,23.11; 2763000,
          23.07; 2763600,23.07; 2764200,23.04; 2764800,23.03; 2765400,23.03;
          2766000,23.02; 2766600,22.99; 2767200,22.99; 2767800,22.96; 2768400,
          22.95; 2769000,22.95; 2769600,22.91; 2770200,22.94; 2770800,22.91;
          2771400,22.91; 2772000,22.91; 2772600,22.91; 2773200,22.9; 2773800,
          22.91; 2774400,22.87; 2775000,22.87; 2775600,22.86; 2776200,22.86;
          2776800,22.83; 2777400,22.83; 2778000,22.83; 2778600,22.83; 2779200,
          22.82; 2779800,22.82; 2780400,22.78; 2781000,22.78; 2781600,22.83;
          2782200,22.91; 2782800,22.95; 2783400,22.95; 2784000,22.91; 2784600,
          22.88; 2785200,22.8; 2785800,22.78; 2786400,22.74; 2787000,22.81;
          2787600,22.93; 2788200,23.03; 2788800,23.03; 2789400,23.03; 2790000,
          22.99; 2790600,22.95; 2791200,22.92; 2791800,22.87; 2792400,22.91;
          2793000,22.99; 2793600,23.1; 2794200,23.11; 2794800,23.11; 2795400,
          23.08; 2796000,23.1; 2796600,23.11; 2797200,23.11; 2797800,23.19;
          2798400,23.35; 2799000,23.48; 2799600,23.48; 2800200,23.48; 2800800,
          23.44; 2801400,23.44; 2802000,23.4; 2802600,23.44; 2803200,23.45;
          2803800,23.56; 2804400,23.62; 2805000,23.65; 2805600,23.64; 2806200,
          23.65; 2806800,23.6; 2807400,23.61; 2808000,23.64; 2808600,23.6;
          2809200,23.64; 2809800,23.72; 2810400,23.76; 2811000,23.76; 2811600,
          23.72; 2812200,23.68; 2812800,23.68; 2813400,23.68; 2814000,23.72;
          2814600,23.9; 2815200,23.96; 2815800,24; 2816400,23.95; 2817000,23.88;
          2817600,23.8; 2818200,23.88; 2818800,23.88; 2819400,23.88; 2820000,
          23.88; 2820600,23.88; 2821200,23.88; 2821800,23.8; 2822400,23.75;
          2823000,23.72; 2823600,23.64; 2824200,23.61; 2824800,23.64; 2825400,
          23.68; 2826000,23.68; 2826600,23.68; 2827200,23.64; 2827800,23.6;
          2828400,23.57; 2829000,23.52; 2829600,23.52; 2830200,23.56; 2830800,
          23.64; 2831400,23.65; 2832000,23.6; 2832600,23.52; 2833200,23.44;
          2833800,23.4; 2834400,23.3; 2835000,23.31; 2835600,23.27; 2836200,
          23.27; 2836800,23.23; 2837400,23.19; 2838000,23.12; 2838600,23.1;
          2839200,23.03; 2839800,23.03; 2840400,23.03; 2841000,23.03; 2841600,
          23.03; 2842200,23.03; 2842800,22.99; 2843400,22.99; 2844000,22.99;
          2844600,22.95; 2845200,22.95; 2845800,22.91; 2846400,22.91; 2847000,
          22.91; 2847600,22.87; 2848200,22.83; 2848800,22.83; 2849400,22.83;
          2850000,22.82; 2850600,22.82; 2851200,22.78; 2851800,22.78; 2852400,
          22.78; 2853000,22.78; 2853600,22.78; 2854200,22.79; 2854800,22.74;
          2855400,22.74; 2856000,22.76; 2856600,22.73; 2857200,22.7; 2857800,
          22.7; 2858400,22.72; 2859000,22.7; 2859600,22.7; 2860200,22.7;
          2860800,22.7; 2861400,22.7; 2862000,22.66; 2862600,22.66; 2863200,
          22.66; 2863800,22.66; 2864400,22.66; 2865000,22.66; 2865600,22.66;
          2866200,22.66; 2866800,22.62; 2867400,22.62; 2868000,22.7; 2868600,
          22.76; 2869200,22.78; 2869800,22.74; 2870400,22.7; 2871000,22.64;
          2871600,22.62; 2872200,22.59; 2872800,22.62; 2873400,22.74; 2874000,
          22.84; 2874600,22.91; 2875200,22.87; 2875800,22.83; 2876400,22.78;
          2877000,22.74; 2877600,22.74; 2878200,22.74; 2878800,22.91; 2879400,
          23.08; 2880000,23.4; 2880600,23.6; 2881200,23.72; 2881800,23.76;
          2882400,23.73; 2883000,23.72; 2883600,23.72; 2884200,23.72; 2884800,
          23.8; 2885400,23.8; 2886000,23.88; 2886600,23.9; 2887200,23.96;
          2887800,24.05; 2888400,24.14; 2889000,24.21; 2889600,24.25; 2890200,
          24.29; 2890800,24.29; 2891400,24.33; 2892000,24.38; 2892600,24.41;
          2893200,24.53; 2893800,24.45; 2894400,24.45; 2895000,24.41; 2895600,
          24.37; 2896200,24.25; 2896800,24.25; 2897400,24.25; 2898000,24.29;
          2898600,24.22; 2899200,24.14; 2899800,24.12; 2900400,24.09; 2901000,
          24.09; 2901600,24.06; 2902200,24.05; 2902800,24.05; 2903400,24.12;
          2904000,24.13; 2904600,24.14; 2905200,24.09; 2905800,24.04; 2906400,
          24; 2907000,23.97; 2907600,24.01; 2908200,24.05; 2908800,24.01;
          2909400,23.96; 2910000,23.92; 2910600,23.92; 2911200,23.88; 2911800,
          23.82; 2912400,23.8; 2913000,23.84; 2913600,23.91; 2914200,23.92;
          2914800,23.92; 2915400,23.84; 2916000,23.8; 2916600,23.76; 2917200,
          23.72; 2917800,23.7; 2918400,23.72; 2919000,23.76; 2919600,23.8;
          2920200,23.77; 2920800,23.76; 2921400,23.72; 2922000,23.64; 2922600,
          23.56; 2923200,23.5; 2923800,23.44; 2924400,23.4; 2925000,23.39;
          2925600,23.32; 2926200,23.27; 2926800,23.27; 2927400,23.27; 2928000,
          23.28; 2928600,23.24; 2929200,23.23; 2929800,23.21; 2930400,23.19;
          2931000,23.15; 2931600,23.11; 2932200,23.11; 2932800,23.07; 2933400,
          23.03; 2934000,23.03; 2934600,23; 2935200,22.99; 2935800,22.95;
          2936400,22.95; 2937000,22.95; 2937600,22.92; 2938200,22.91; 2938800,
          22.91; 2939400,22.91; 2940000,22.91; 2940600,22.88; 2941200,22.87;
          2941800,22.83; 2942400,22.86; 2943000,22.83; 2943600,22.83; 2944200,
          22.83; 2944800,22.83; 2945400,22.82; 2946000,22.78; 2946600,22.78;
          2947200,22.78; 2947800,22.78; 2948400,22.78; 2949000,22.74; 2949600,
          22.74; 2950200,22.74; 2950800,22.74; 2951400,22.76; 2952000,22.74;
          2952600,22.72; 2953200,22.7; 2953800,22.73; 2954400,22.78; 2955000,
          22.83; 2955600,22.86; 2956200,22.83; 2956800,22.78; 2957400,22.74;
          2958000,22.7; 2958600,22.66; 2959200,22.66; 2959800,22.78; 2960400,
          22.91; 2961000,22.95; 2961600,22.96; 2962200,22.91; 2962800,22.88;
          2963400,22.82; 2964000,22.78; 2964600,22.74; 2965200,22.78; 2965800,
          22.91; 2966400,23.03; 2967000,23.14; 2967600,23.27; 2968200,23.23;
          2968800,23.23; 2969400,23.32; 2970000,23.36; 2970600,23.4; 2971200,
          23.52; 2971800,23.64; 2972400,23.72; 2973000,23.76; 2973600,23.76;
          2974200,23.76; 2974800,23.76; 2975400,23.76; 2976000,23.76; 2976600,
          23.76; 2977200,23.84; 2977800,23.92; 2978400,23.92; 2979000,23.92;
          2979600,23.94; 2980200,23.88; 2980800,23.88; 2981400,23.86; 2982000,
          23.86; 2982600,23.89; 2983200,23.92; 2983800,23.96; 2984400,24.05;
          2985000,24.14; 2985600,24.13; 2986200,24.09; 2986800,24.05; 2987400,
          24.05; 2988000,24.09; 2988600,24.13; 2989200,24.19; 2989800,24.21;
          2990400,24.21; 2991000,24.16; 2991600,24.13; 2992200,24.09; 2992800,
          24.06; 2993400,24.08; 2994000,24.09; 2994600,24.09; 2995200,24.09;
          2995800,24.05; 2996400,24.05; 2997000,24; 2997600,23.92; 2998200,
          23.92; 2998800,23.92; 2999400,23.98; 3000000,24; 3000600,23.96;
          3001200,23.92; 3001800,23.87; 3002400,23.82; 3003000,23.76; 3003600,
          23.72; 3004200,23.76; 3004800,23.8; 3005400,23.8; 3006000,23.76;
          3006600,23.72; 3007200,23.64; 3007800,23.56; 3008400,23.48; 3009000,
          23.44; 3009600,23.4; 3010200,23.36; 3010800,23.34; 3011400,23.28;
          3012000,23.23; 3012600,23.23; 3013200,23.19; 3013800,23.19; 3014400,
          23.19; 3015000,23.16; 3015600,23.16; 3016200,23.14; 3016800,23.11;
          3017400,23.07; 3018000,23.07; 3018600,23.04; 3019200,23.03; 3019800,
          22.99; 3020400,22.99; 3021000,22.95; 3021600,22.94; 3022200,22.91;
          3022800,22.88; 3023400,22.78; 3024000,22.74; 3024600,22.71; 3025200,
          22.7; 3025800,22.66; 3026400,22.62; 3027000,22.54; 3027600,22.5;
          3028200,22.46; 3028800,22.42; 3029400,22.42; 3030000,22.38; 3030600,
          22.34; 3031200,22.3; 3031800,22.3; 3032400,22.26; 3033000,22.26;
          3033600,22.26; 3034200,22.22; 3034800,22.18; 3035400,22.17; 3036000,
          22.14; 3036600,22.13; 3037200,22.09; 3037800,22.09; 3038400,22.05;
          3039000,22.05; 3039600,22.02; 3040200,21.97; 3040800,21.97; 3041400,
          21.97; 3042000,21.94; 3042600,21.93; 3043200,21.89; 3043800,21.85;
          3044400,21.86; 3045000,21.85; 3045600,21.81; 3046200,21.81; 3046800,
          21.81; 3047400,21.81; 3048000,21.77; 3048600,21.77; 3049200,21.77;
          3049800,21.77; 3050400,21.77; 3051000,21.77; 3051600,21.76; 3052200,
          21.77; 3052800,21.74; 3053400,21.76; 3054000,21.73; 3054600,21.76;
          3055200,21.77; 3055800,21.77; 3056400,21.78; 3057000,21.77; 3057600,
          21.81; 3058200,21.81; 3058800,21.86; 3059400,21.88; 3060000,21.89;
          3060600,21.92; 3061200,21.93; 3061800,21.97; 3062400,21.97; 3063000,
          22.05; 3063600,22.05; 3064200,22.09; 3064800,22.14; 3065400,22.18;
          3066000,22.18; 3066600,22.18; 3067200,22.22; 3067800,22.22; 3068400,
          22.22; 3069000,22.26; 3069600,22.26; 3070200,22.25; 3070800,22.24;
          3071400,22.22; 3072000,22.26; 3072600,22.26; 3073200,22.26; 3073800,
          22.31; 3074400,22.3; 3075000,22.3; 3075600,22.35; 3076200,22.34;
          3076800,22.37; 3077400,22.38; 3078000,22.38; 3078600,22.38; 3079200,
          22.38; 3079800,22.37; 3080400,22.34; 3081000,22.34; 3081600,22.3;
          3082200,22.3; 3082800,22.26; 3083400,22.26; 3084000,22.22; 3084600,
          22.2; 3085200,22.18; 3085800,22.17; 3086400,22.14; 3087000,22.14;
          3087600,22.09; 3088200,22.09; 3088800,22.06; 3089400,22.06; 3090000,
          22.05; 3090600,22.01; 3091200,21.98; 3091800,21.97; 3092400,21.97;
          3093000,21.97; 3093600,21.93; 3094200,21.9; 3094800,21.89; 3095400,
          21.89; 3096000,21.85; 3096600,21.86; 3097200,21.84; 3097800,21.81;
          3098400,21.81; 3099000,21.81; 3099600,21.77; 3100200,21.77; 3100800,
          21.73; 3101400,21.73; 3102000,21.73; 3102600,21.73; 3103200,21.69;
          3103800,21.67; 3104400,21.65; 3105000,21.66; 3105600,21.64; 3106200,
          21.61; 3106800,21.6; 3107400,21.6; 3108000,21.6; 3108600,21.6;
          3109200,21.56; 3109800,21.56; 3110400,21.56; 3111000,21.52; 3111600,
          21.52; 3112200,21.52; 3112800,21.49; 3113400,21.48; 3114000,21.48;
          3114600,21.49; 3115200,21.44; 3115800,21.44; 3116400,21.44; 3117000,
          21.44; 3117600,21.44; 3118200,21.43; 3118800,21.4; 3119400,21.4;
          3120000,21.38; 3120600,21.36; 3121200,21.36; 3121800,21.32; 3122400,
          21.32; 3123000,21.32; 3123600,21.32; 3124200,21.32; 3124800,21.32;
          3125400,21.33; 3126000,21.32; 3126600,21.28; 3127200,21.28; 3127800,
          21.28; 3128400,21.28; 3129000,21.26; 3129600,21.25; 3130200,21.24;
          3130800,21.24; 3131400,21.2; 3132000,21.2; 3132600,21.2; 3133200,21.2;
          3133800,21.2; 3134400,21.2; 3135000,21.2; 3135600,21.2; 3136200,21.2;
          3136800,21.2; 3137400,21.21; 3138000,21.2; 3138600,21.2; 3139200,21.2;
          3139800,21.2; 3140400,21.2; 3141000,21.2; 3141600,21.2; 3142200,21.21;
          3142800,21.21; 3143400,21.24; 3144000,21.24; 3144600,21.24; 3145200,
          21.25; 3145800,21.2; 3146400,21.2; 3147000,21.2; 3147600,21.16;
          3148200,21.12; 3148800,21.16; 3149400,21.16; 3150000,21.15; 3150600,
          21.12; 3151200,21.16; 3151800,21.12; 3152400,21.12; 3153000,21.12;
          3153600,21.12; 3154200,21.12; 3154800,21.12; 3155400,21.12; 3156000,
          21.12; 3156600,21.13; 3157200,21.12; 3157800,21.12; 3158400,21.12;
          3159000,21.16; 3159600,21.16; 3160200,21.16; 3160800,21.16; 3161400,
          21.16; 3162000,21.16; 3162600,21.17; 3163200,21.16; 3163800,21.16;
          3164400,21.16; 3165000,21.19; 3165600,21.2; 3166200,21.2; 3166800,
          21.2; 3167400,21.18; 3168000,21.16; 3168600,21.16; 3169200,21.16;
          3169800,21.17; 3170400,21.13; 3171000,21.12; 3171600,21.12; 3172200,
          21.12; 3172800,21.12; 3173400,21.08; 3174000,21.08; 3174600,21.08;
          3175200,21.08; 3175800,21.04; 3176400,21.04; 3177000,21.03; 3177600,
          21; 3178200,21; 3178800,21; 3179400,20.99; 3180000,20.98; 3180600,
          20.96; 3181200,20.96; 3181800,20.96; 3182400,20.96; 3183000,20.95;
          3183600,20.92; 3184200,20.91; 3184800,20.91; 3185400,20.91; 3186000,
          20.87; 3186600,20.87; 3187200,20.87; 3187800,20.87; 3188400,20.83;
          3189000,20.83; 3189600,20.83; 3190200,20.83; 3190800,20.83; 3191400,
          20.79; 3192000,20.79; 3192600,20.79; 3193200,20.79; 3193800,20.75;
          3194400,20.75; 3195000,20.83; 3195600,20.91; 3196200,20.99; 3196800,
          21.04; 3197400,21.12; 3198000,21.16; 3198600,21.19; 3199200,21.24;
          3199800,21.26; 3200400,21.28; 3201000,21.32; 3201600,21.36; 3202200,
          21.4; 3202800,21.4; 3203400,21.44; 3204000,21.44; 3204600,21.44;
          3205200,21.48; 3205800,21.48; 3206400,21.52; 3207000,21.52; 3207600,
          21.54; 3208200,21.56; 3208800,21.56; 3209400,21.6; 3210000,21.6;
          3210600,21.6; 3211200,21.62; 3211800,21.66; 3212400,21.65; 3213000,
          21.69; 3213600,21.89; 3214200,22.12; 3214800,22.26; 3215400,22.26;
          3216000,22.22; 3216600,22.14; 3217200,22.05; 3217800,21.98; 3218400,
          21.97; 3219000,22.05; 3219600,22.18; 3220200,22.26; 3220800,22.3;
          3221400,22.26; 3222000,22.22; 3222600,22.14; 3223200,22.09; 3223800,
          22.14; 3224400,22.26; 3225000,22.3; 3225600,22.26; 3226200,22.18;
          3226800,22.14; 3227400,22.26; 3228000,22.38; 3228600,22.44; 3229200,
          22.59; 3229800,22.68; 3230400,22.82; 3231000,22.83; 3231600,22.83;
          3232200,22.83; 3232800,22.82; 3233400,22.87; 3234000,22.99; 3234600,
          23.07; 3235200,23.07; 3235800,23.06; 3236400,23.03; 3237000,23;
          3237600,22.99; 3238200,23.03; 3238800,23.04; 3239400,23.19; 3240000,
          23.32; 3240600,23.4; 3241200,23.37; 3241800,23.36; 3242400,23.31;
          3243000,23.33; 3243600,23.32; 3244200,23.38; 3244800,23.45; 3245400,
          23.53; 3246000,23.4; 3246600,23.4; 3247200,23.44; 3247800,23.44;
          3248400,23.51; 3249000,23.56; 3249600,23.64; 3250200,23.72; 3250800,
          23.72; 3251400,23.55; 3252000,23.45; 3252600,23.42; 3253200,23.39;
          3253800,23.43; 3254400,23.39; 3255000,23.38; 3255600,23.4; 3256200,
          23.44; 3256800,23.41; 3257400,23.4; 3258000,23.44; 3258600,23.44;
          3259200,23.4; 3259800,23.36; 3260400,23.39; 3261000,23.44; 3261600,
          23.53; 3262200,23.52; 3262800,23.52; 3263400,23.45; 3264000,23.4;
          3264600,23.36; 3265200,23.27; 3265800,23.28; 3266400,23.27; 3267000,
          23.27; 3267600,23.27; 3268200,23.27; 3268800,23.23; 3269400,23.14;
          3270000,23.07; 3270600,23.03; 3271200,22.95; 3271800,22.92; 3272400,
          22.83; 3273000,22.78; 3273600,22.73; 3274200,22.66; 3274800,22.62;
          3275400,22.59; 3276000,22.62; 3276600,22.61; 3277200,22.56; 3277800,
          22.55; 3278400,22.52; 3279000,22.47; 3279600,22.44; 3280200,22.42;
          3280800,22.38; 3281400,22.34; 3282000,22.38; 3282600,22.38; 3283200,
          22.39; 3283800,22.38; 3284400,22.34; 3285000,22.34; 3285600,22.35;
          3286200,22.34; 3286800,22.34; 3287400,22.3; 3288000,22.3; 3288600,
          22.3; 3289200,22.3; 3289800,22.3; 3290400,22.3; 3291000,22.3; 3291600,
          22.3; 3292200,22.3; 3292800,22.3; 3293400,22.29; 3294000,22.26;
          3294600,22.26; 3295200,22.26; 3295800,22.26; 3296400,22.26; 3297000,
          22.26; 3297600,22.26; 3298200,22.26; 3298800,22.26; 3299400,22.26;
          3300000,22.3; 3300600,22.5; 3301200,22.62; 3301800,22.66; 3302400,
          22.62; 3303000,22.58; 3303600,22.54; 3304200,22.5; 3304800,22.42;
          3305400,22.4; 3306000,22.38; 3306600,22.46; 3307200,22.56; 3307800,
          22.63; 3308400,22.63; 3309000,22.56; 3309600,22.51; 3310200,22.46;
          3310800,22.45; 3311400,22.43; 3312000,22.5; 3312600,22.58; 3313200,
          22.62; 3313800,22.66; 3314400,22.66; 3315000,22.66; 3315600,22.65;
          3316200,22.66; 3316800,22.7; 3317400,22.74; 3318000,22.83; 3318600,
          22.83; 3319200,22.91; 3319800,22.91; 3320400,22.91; 3321000,22.95;
          3321600,23.04; 3322200,23.03; 3322800,23.07; 3323400,23.07; 3324000,
          23.07; 3324600,23.11; 3325200,23.11; 3325800,23.15; 3326400,23.15;
          3327000,23.17; 3327600,23.27; 3328200,23.31; 3328800,23.28; 3329400,
          23.28; 3330000,23.34; 3330600,23.36; 3331200,23.39; 3331800,23.4;
          3332400,23.42; 3333000,23.44; 3333600,23.48; 3334200,23.48; 3334800,
          23.55; 3335400,23.57; 3336000,23.57; 3336600,23.68; 3337200,23.68;
          3337800,23.6; 3338400,23.6; 3339000,23.6; 3339600,23.56; 3340200,
          23.64; 3340800,23.61; 3341400,23.68; 3342000,23.68; 3342600,23.68;
          3343200,23.68; 3343800,23.64; 3344400,23.68; 3345000,23.68; 3345600,
          23.64; 3346200,23.72; 3346800,23.76; 3347400,23.72; 3348000,23.72;
          3348600,23.65; 3349200,23.6; 3349800,23.52; 3350400,23.47; 3351000,
          23.4; 3351600,23.4; 3352200,23.4; 3352800,23.4; 3353400,23.36;
          3354000,23.32; 3354600,23.27; 3355200,23.2; 3355800,23.14; 3356400,
          23.07; 3357000,23.03; 3357600,22.99; 3358200,22.96; 3358800,22.87;
          3359400,22.83; 3360000,22.78; 3360600,22.78; 3361200,22.78; 3361800,
          22.8; 3362400,22.79; 3363000,22.79; 3363600,22.79; 3364200,22.78;
          3364800,22.78; 3365400,22.78; 3366000,22.78; 3366600,22.74; 3367200,
          22.7; 3367800,22.7; 3368400,22.7; 3369000,22.7; 3369600,22.66;
          3370200,22.66; 3370800,22.68; 3371400,22.66; 3372000,22.66; 3372600,
          22.66; 3373200,22.7; 3373800,22.66; 3374400,22.66; 3375000,22.66;
          3375600,22.66; 3376200,22.66; 3376800,22.66; 3377400,22.66; 3378000,
          22.66; 3378600,22.66; 3379200,22.62; 3379800,22.62; 3380400,22.62;
          3381000,22.62; 3381600,22.62; 3382200,22.62; 3382800,22.62; 3383400,
          22.62; 3384000,22.58; 3384600,22.59; 3385200,22.58; 3385800,22.62;
          3386400,22.71; 3387000,22.86; 3387600,22.86; 3388200,22.78; 3388800,
          22.74; 3389400,22.7; 3390000,22.62; 3390600,22.57; 3391200,22.52;
          3391800,22.58; 3392400,22.7; 3393000,22.78; 3393600,22.79; 3394200,
          22.77; 3394800,22.71; 3395400,22.66; 3396000,22.58; 3396600,22.56;
          3397200,22.58; 3397800,22.64; 3398400,22.7; 3399000,22.87; 3399600,
          22.99; 3400200,22.99; 3400800,23.03; 3401400,23.07; 3402000,23.07;
          3402600,23.11; 3403200,23.23; 3403800,23.32; 3404400,23.4; 3405000,
          23.45; 3405600,23.44; 3406200,23.4; 3406800,23.47; 3407400,23.56;
          3408000,23.72; 3408600,23.72; 3409200,23.8; 3409800,23.86; 3410400,
          23.81; 3411000,23.84; 3411600,23.84; 3412200,23.88; 3412800,23.88;
          3413400,23.84; 3414000,23.88; 3414600,23.91; 3415200,23.88; 3415800,
          23.91; 3416400,23.93; 3417000,24.01; 3417600,23.97; 3418200,24.05;
          3418800,24.13; 3419400,24.22; 3420000,24.25; 3420600,24.29; 3421200,
          24.3; 3421800,24.17; 3422400,24.1; 3423000,24.09; 3423600,24.13;
          3424200,24.17; 3424800,24.17; 3425400,24.17; 3426000,24.13; 3426600,
          24.32; 3427200,24.1; 3427800,24.05; 3428400,24.09; 3429000,24.12;
          3429600,24.2; 3430200,24.13; 3430800,24.09; 3431400,24.13; 3432000,
          24.13; 3432600,24.1; 3433200,24.05; 3433800,24.02; 3434400,24.01;
          3435000,24.02; 3435600,23.96; 3436200,23.92; 3436800,23.84; 3437400,
          23.76; 3438000,23.72; 3438600,23.68; 3439200,23.72; 3439800,23.72;
          3440400,23.72; 3441000,23.68; 3441600,23.6; 3442200,23.52; 3442800,
          23.44; 3443400,23.4; 3444000,23.32; 3444600,23.28; 3445200,23.27;
          3445800,23.24; 3446400,23.23; 3447000,23.23; 3447600,23.23; 3448200,
          23.19; 3448800,23.19; 3449400,23.15; 3450000,23.11; 3450600,23.11;
          3451200,23.08; 3451800,23.07; 3452400,23.07; 3453000,23.03; 3453600,
          23.03; 3454200,23.03; 3454800,22.99; 3455400,22.99; 3456000,22.95;
          3456600,22.95; 3457200,22.95; 3457800,22.94; 3458400,22.95; 3459000,
          22.91; 3459600,22.91; 3460200,22.91; 3460800,22.91; 3461400,22.9;
          3462000,22.87; 3462600,22.87; 3463200,22.86; 3463800,22.86; 3464400,
          22.83; 3465000,22.83; 3465600,22.87; 3466200,22.86; 3466800,22.88;
          3467400,22.86; 3468000,22.86; 3468600,22.86; 3469200,22.83; 3469800,
          22.83; 3470400,22.82; 3471000,22.8; 3471600,22.78; 3472200,22.83;
          3472800,22.91; 3473400,22.91; 3474000,22.91; 3474600,22.83; 3475200,
          22.78; 3475800,22.74; 3476400,22.7; 3477000,22.74; 3477600,22.86;
          3478200,22.99; 3478800,22.99; 3479400,22.95; 3480000,22.91; 3480600,
          22.91; 3481200,22.83; 3481800,22.78; 3482400,22.83; 3483000,22.95;
          3483600,23.07; 3484200,23.12; 3484800,23.11; 3485400,23.11; 3486000,
          23.11; 3486600,23.12; 3487200,23.11; 3487800,23.11; 3488400,23.22;
          3489000,23.39; 3489600,23.48; 3490200,23.56; 3490800,23.6; 3491400,
          23.61; 3492000,23.56; 3492600,23.57; 3493200,23.65; 3493800,23.68;
          3494400,23.72; 3495000,23.73; 3495600,23.76; 3496200,23.72; 3496800,
          23.72; 3497400,23.76; 3498000,23.76; 3498600,23.8; 3499200,23.92;
          3499800,23.92; 3500400,24.01; 3501000,24.01; 3501600,23.98; 3502200,
          24.04; 3502800,24.09; 3503400,24.13; 3504000,24.16; 3504600,24.21;
          3505200,24.25; 3505800,24.33; 3506400,24.34; 3507000,24.25; 3507600,
          24.3; 3508200,24.29; 3508800,24.25; 3509400,24.26; 3510000,24.25;
          3510600,24.21; 3511200,24.17; 3511800,24.17; 3512400,24.13; 3513000,
          24.09; 3513600,24.08; 3514200,24.05; 3514800,24.04; 3515400,24;
          3516000,23.92; 3516600,23.88; 3517200,23.88; 3517800,23.87; 3518400,
          23.76; 3519000,23.76; 3519600,23.88; 3520200,23.92; 3520800,23.96;
          3521400,23.92; 3522000,23.88; 3522600,23.8; 3523200,23.72; 3523800,
          23.68; 3524400,23.68; 3525000,23.73; 3525600,23.76; 3526200,23.72;
          3526800,23.69; 3527400,23.6; 3528000,23.56; 3528600,23.48; 3529200,
          23.44; 3529800,23.4; 3530400,23.36; 3531000,23.32; 3531600,23.36;
          3532200,23.32; 3532800,23.32; 3533400,23.28; 3534000,23.27; 3534600,
          23.23; 3535200,23.19; 3535800,23.15; 3536400,23.11; 3537000,23.11;
          3537600,23.07; 3538200,23.08; 3538800,23.08; 3539400,23.07; 3540000,
          23.03; 3540600,23.03; 3541200,23.03; 3541800,23.03; 3542400,22.99;
          3543000,22.99; 3543600,22.96; 3544200,22.95; 3544800,22.95; 3545400,
          22.94; 3546000,22.91; 3546600,22.91; 3547200,22.91; 3547800,22.91;
          3548400,22.9; 3549000,22.87; 3549600,22.87; 3550200,22.88; 3550800,
          22.83; 3551400,22.83; 3552000,22.83; 3552600,22.82; 3553200,22.81;
          3553800,22.8; 3554400,22.78; 3555000,22.78; 3555600,22.78; 3556200,
          22.78; 3556800,22.78; 3557400,22.75; 3558000,22.74; 3558600,22.75;
          3559200,23.02; 3559800,22.83; 3560400,22.86; 3561000,22.83; 3561600,
          22.78; 3562200,22.78; 3562800,22.74; 3563400,22.7; 3564000,22.76;
          3564600,22.84; 3565200,22.95; 3565800,22.99; 3566400,22.95; 3567000,
          22.91; 3567600,22.9; 3568200,22.83; 3568800,22.82; 3569400,22.87;
          3570000,22.95; 3570600,23.11; 3571200,23.15; 3571800,23.17; 3572400,
          23.19; 3573000,23.15; 3573600,23.11; 3574200,23.19; 3574800,23.23;
          3575400,23.32; 3576000,23.39; 3576600,23.4; 3577200,23.4; 3577800,
          23.4; 3578400,23.4; 3579000,23.4; 3579600,23.39; 3580200,23.41;
          3580800,23.48; 3581400,23.53; 3582000,23.52; 3582600,23.52; 3583200,
          23.51; 3583800,23.48; 3584400,23.48; 3585000,23.48; 3585600,23.52;
          3586200,23.61; 3586800,23.63; 3587400,23.61; 3588000,23.57; 3588600,
          23.61; 3589200,23.56; 3589800,23.56; 3590400,23.56; 3591000,23.6;
          3591600,23.64; 3592200,23.64; 3592800,23.6; 3593400,23.56; 3594000,
          23.56; 3594600,23.56; 3595200,23.52; 3595800,23.56; 3596400,23.64;
          3597000,23.68; 3597600,23.68; 3598200,23.72; 3598800,23.72; 3599400,
          23.72; 3600000,23.68; 3600600,23.67; 3601200,23.68; 3601800,23.68;
          3602400,23.68; 3603000,23.68; 3603600,23.64; 3604200,23.6; 3604800,
          23.61; 3605400,23.56; 3606000,23.6; 3606600,23.6; 3607200,23.64;
          3607800,23.6; 3608400,23.56; 3609000,23.56; 3609600,23.52; 3610200,
          23.48; 3610800,23.52; 3611400,23.56; 3612000,23.6; 3612600,23.56;
          3613200,23.52; 3613800,23.48; 3614400,23.42; 3615000,23.4; 3615600,
          23.36; 3616200,23.32; 3616800,23.27; 3617400,23.27; 3618000,23.23;
          3618600,23.23; 3619200,23.2; 3619800,23.22; 3620400,23.19; 3621000,
          23.21; 3621600,23.23; 3622200,23.2; 3622800,23.19; 3623400,23.19;
          3624000,23.18; 3624600,23.15; 3625200,23.15; 3625800,23.12; 3626400,
          23.11; 3627000,23.12; 3627600,23.07; 3628200,23.04; 3628800,23.03;
          3629400,22.99; 3630000,22.95; 3630600,22.91; 3631200,22.87; 3631800,
          22.83; 3632400,22.83; 3633000,22.82; 3633600,22.78; 3634200,22.77;
          3634800,22.74; 3635400,22.74; 3636000,22.7; 3636600,22.7; 3637200,
          22.7; 3637800,22.66; 3638400,22.62; 3639000,22.62; 3639600,22.62;
          3640200,22.58; 3640800,22.58; 3641400,22.58; 3642000,22.54; 3642600,
          22.54; 3643200,22.5; 3643800,22.5; 3644400,22.5; 3645000,22.46;
          3645600,22.46; 3646200,22.46; 3646800,22.42; 3647400,22.42; 3648000,
          22.42; 3648600,22.42; 3649200,22.43; 3649800,22.38; 3650400,22.38;
          3651000,22.38; 3651600,22.38; 3652200,22.34; 3652800,22.34; 3653400,
          22.33; 3654000,22.3; 3654600,22.3; 3655200,22.3; 3655800,22.35;
          3656400,22.37; 3657000,22.5; 3657600,22.42; 3658200,22.38; 3658800,
          22.38; 3659400,22.38; 3660000,22.38; 3660600,22.37; 3661200,22.37;
          3661800,22.35; 3662400,22.35; 3663000,22.34; 3663600,22.34; 3664200,
          22.34; 3664800,22.34; 3665400,22.34; 3666000,22.34; 3666600,22.38;
          3667200,22.39; 3667800,22.38; 3668400,22.42; 3669000,22.47; 3669600,
          22.46; 3670200,22.5; 3670800,22.5; 3671400,22.5; 3672000,22.51;
          3672600,22.54; 3673200,22.54; 3673800,22.56; 3674400,22.59; 3675000,
          22.58; 3675600,22.58; 3676200,22.61; 3676800,22.62; 3677400,22.62;
          3678000,22.62; 3678600,22.62; 3679200,22.7; 3679800,22.62; 3680400,
          22.58; 3681000,22.58; 3681600,22.62; 3682200,22.58; 3682800,22.58;
          3683400,22.58; 3684000,22.58; 3684600,22.58; 3685200,22.57; 3685800,
          22.57; 3686400,22.59; 3687000,22.56; 3687600,22.54; 3688200,22.54;
          3688800,22.5; 3689400,22.5; 3690000,22.5; 3690600,22.5; 3691200,22.46;
          3691800,22.46; 3692400,22.46; 3693000,22.46; 3693600,22.46; 3694200,
          22.46; 3694800,22.46; 3695400,22.42; 3696000,22.42; 3696600,22.42;
          3697200,22.42; 3697800,22.42; 3698400,22.42; 3699000,22.42; 3699600,
          22.42; 3700200,22.42; 3700800,22.42; 3701400,22.42; 3702000,22.42;
          3702600,22.38; 3703200,22.38; 3703800,22.38; 3704400,22.39; 3705000,
          22.38; 3705600,22.38; 3706200,22.39; 3706800,22.38; 3707400,22.38;
          3708000,22.38; 3708600,22.38; 3709200,22.38; 3709800,22.38; 3710400,
          22.34; 3711000,22.34; 3711600,22.34; 3712200,22.34; 3712800,22.33;
          3713400,22.33; 3714000,22.3; 3714600,22.3; 3715200,22.32; 3715800,
          22.3; 3716400,22.3; 3717000,22.3; 3717600,22.3; 3718200,22.3; 3718800,
          22.3; 3719400,22.26; 3720000,22.26; 3720600,22.26; 3721200,22.26;
          3721800,22.26; 3722400,22.26; 3723000,22.26; 3723600,22.26; 3724200,
          22.26; 3724800,22.26; 3725400,22.26; 3726000,22.22; 3726600,22.22;
          3727200,22.22; 3727800,22.22; 3728400,22.22; 3729000,22.21; 3729600,
          22.18; 3730200,22.18; 3730800,22.18; 3731400,22.18; 3732000,22.18;
          3732600,22.18; 3733200,22.17; 3733800,22.17; 3734400,22.14; 3735000,
          22.14; 3735600,22.14; 3736200,22.14; 3736800,22.14; 3737400,22.13;
          3738000,22.13; 3738600,22.14; 3739200,22.1; 3739800,22.09; 3740400,
          22.09; 3741000,22.09; 3741600,22.09; 3742200,22.1; 3742800,22.09;
          3743400,22.09; 3744000,22.09; 3744600,22.1; 3745200,22.14; 3745800,
          22.13; 3746400,22.13; 3747000,22.14; 3747600,22.14; 3748200,22.1;
          3748800,22.1; 3749400,22.09; 3750000,22.09; 3750600,22.09; 3751200,
          22.09; 3751800,22.1; 3752400,22.14; 3753000,22.14; 3753600,22.14;
          3754200,22.14; 3754800,22.14; 3755400,22.17; 3756000,22.18; 3756600,
          22.26; 3757200,22.3; 3757800,22.3; 3758400,22.34; 3759000,22.34;
          3759600,22.38; 3760200,22.38; 3760800,22.38; 3761400,22.34; 3762000,
          22.3; 3762600,22.3; 3763200,22.31; 3763800,22.38; 3764400,22.26;
          3765000,22.26; 3765600,22.3; 3766200,22.3; 3766800,22.34; 3767400,
          22.34; 3768000,22.38; 3768600,22.38; 3769200,22.38; 3769800,22.38;
          3770400,22.38; 3771000,22.35; 3771600,22.34; 3772200,22.34; 3772800,
          22.32; 3773400,22.3; 3774000,22.3; 3774600,22.3; 3775200,22.28;
          3775800,22.26; 3776400,22.26; 3777000,22.22; 3777600,22.18; 3778200,
          22.18; 3778800,22.14; 3779400,22.15; 3780000,22.13; 3780600,22.09;
          3781200,22.09; 3781800,22.09; 3782400,22.05; 3783000,22.05; 3783600,
          22.05; 3784200,22.02; 3784800,21.97; 3785400,21.97; 3786000,21.97;
          3786600,21.93; 3787200,21.93; 3787800,21.93; 3788400,21.89; 3789000,
          21.89; 3789600,21.85; 3790200,21.85; 3790800,21.85; 3791400,21.81;
          3792000,21.81; 3792600,21.81; 3793200,21.77; 3793800,21.77; 3794400,
          21.74; 3795000,21.73; 3795600,21.73; 3796200,21.69; 3796800,21.68;
          3797400,21.65; 3798000,21.65; 3798600,21.64; 3799200,21.62; 3799800,
          21.69; 3800400,21.77; 3801000,21.85; 3801600,21.92; 3802200,21.97;
          3802800,22.02; 3803400,22.05; 3804000,22.09; 3804600,22.13; 3805200,
          22.14; 3805800,22.18; 3806400,22.22; 3807000,22.22; 3807600,22.22;
          3808200,22.26; 3808800,22.3; 3809400,22.26; 3810000,22.3; 3810600,
          22.34; 3811200,22.34; 3811800,22.38; 3812400,22.38; 3813000,22.42;
          3813600,22.42; 3814200,22.42; 3814800,22.42; 3815400,22.46; 3816000,
          22.46; 3816600,22.46; 3817200,22.46; 3817800,22.54; 3818400,22.78;
          3819000,22.86; 3819600,22.83; 3820200,22.78; 3820800,22.74; 3821400,
          22.65; 3822000,22.59; 3822600,22.58; 3823200,22.66; 3823800,22.84;
          3824400,22.94; 3825000,22.95; 3825600,22.91; 3826200,22.83; 3826800,
          22.78; 3827400,22.7; 3828000,22.68; 3828600,22.74; 3829200,22.86;
          3829800,22.95; 3830400,22.98; 3831000,23; 3831600,23.04; 3832200,
          23.08; 3832800,23.03; 3833400,23.03; 3834000,22.98; 3834600,23.03;
          3835200,23; 3835800,23.02; 3836400,23.1; 3837000,23.15; 3837600,23.19;
          3838200,23.23; 3838800,23.23; 3839400,23.23; 3840000,23.23; 3840600,
          23.23; 3841200,23.19; 3841800,23.19; 3842400,23.26; 3843000,23.33;
          3843600,23.4; 3844200,23.48; 3844800,23.48; 3845400,23.44; 3846000,
          23.36; 3846600,23.27; 3847200,23.26; 3847800,23.27; 3848400,23.32;
          3849000,23.36; 3849600,23.4; 3850200,23.4; 3850800,23.4; 3851400,23.4;
          3852000,23.39; 3852600,23.39; 3853200,23.4; 3853800,23.4; 3854400,
          23.48; 3855000,23.57; 3855600,23.6; 3856200,23.6; 3856800,23.56;
          3857400,23.44; 3858000,23.4; 3858600,23.36; 3859200,23.32; 3859800,
          23.27; 3860400,23.36; 3861000,23.44; 3861600,23.4; 3862200,23.44;
          3862800,23.43; 3863400,23.4; 3864000,23.4; 3864600,23.35; 3865200,
          23.32; 3865800,23.36; 3866400,23.4; 3867000,23.46; 3867600,23.44;
          3868200,23.4; 3868800,23.36; 3869400,23.31; 3870000,23.26; 3870600,
          23.19; 3871200,23.15; 3871800,23.11; 3872400,23.11; 3873000,23.11;
          3873600,23.1; 3874200,23.03; 3874800,22.99; 3875400,22.94; 3876000,
          22.88; 3876600,22.83; 3877200,22.78; 3877800,22.74; 3878400,22.74;
          3879000,22.74; 3879600,22.7; 3880200,22.7; 3880800,22.66; 3881400,
          22.62; 3882000,22.62; 3882600,22.58; 3883200,22.54; 3883800,22.53;
          3884400,22.5; 3885000,22.46; 3885600,22.46; 3886200,22.42; 3886800,
          22.42; 3887400,22.42; 3888000,22.38; 3888600,22.39; 3889200,22.38;
          3889800,22.38; 3890400,22.34; 3891000,22.33; 3891600,22.3; 3892200,
          22.3; 3892800,22.3; 3893400,22.3; 3894000,22.29; 3894600,22.3;
          3895200,22.26; 3895800,22.26; 3896400,22.26; 3897000,22.24; 3897600,
          22.22; 3898200,22.22; 3898800,22.19; 3899400,22.18; 3900000,22.19;
          3900600,22.18; 3901200,22.18; 3901800,22.18; 3902400,22.18; 3903000,
          22.18; 3903600,22.15; 3904200,22.14; 3904800,22.18; 3905400,22.22;
          3906000,22.26; 3906600,22.26; 3907200,22.22; 3907800,22.18; 3908400,
          22.14; 3909000,22.13; 3909600,22.09; 3910200,22.18; 3910800,22.3;
          3911400,22.38; 3912000,22.38; 3912600,22.34; 3913200,22.3; 3913800,
          22.26; 3914400,22.26; 3915000,22.26; 3915600,22.36; 3916200,22.66;
          3916800,22.95; 3917400,23.07; 3918000,23.19; 3918600,23.28; 3919200,
          23.36; 3919800,23.4; 3920400,23.4; 3921000,23.48; 3921600,23.56;
          3922200,23.6; 3922800,23.6; 3923400,23.6; 3924000,23.6; 3924600,23.56;
          3925200,23.6; 3925800,23.61; 3926400,23.6; 3927000,23.6; 3927600,
          23.57; 3928200,23.55; 3928800,23.48; 3929400,23.48; 3930000,23.4;
          3930600,23.4; 3931200,23.4; 3931800,23.4; 3932400,23.4; 3933000,23.4;
          3933600,23.4; 3934200,23.4; 3934800,23.4; 3935400,23.44; 3936000,
          23.44; 3936600,23.48; 3937200,23.57; 3937800,23.64; 3938400,23.68;
          3939000,23.6; 3939600,23.56; 3940200,23.56; 3940800,23.48; 3941400,
          23.47; 3942000,23.4; 3942600,23.36; 3943200,23.44; 3943800,23.52;
          3944400,23.52; 3945000,23.48; 3945600,23.56; 3946200,23.56; 3946800,
          23.56; 3947400,23.52; 3948000,23.48; 3948600,23.43; 3949200,23.49;
          3949800,23.52; 3950400,23.49; 3951000,23.54; 3951600,23.6; 3952200,
          23.6; 3952800,23.56; 3953400,23.5; 3954000,23.45; 3954600,23.4;
          3955200,23.36; 3955800,23.4; 3956400,23.4; 3957000,23.4; 3957600,
          23.35; 3958200,23.27; 3958800,23.2; 3959400,23.12; 3960000,23.11;
          3960600,23.07; 3961200,23.03; 3961800,22.95; 3962400,22.91; 3963000,
          22.91; 3963600,22.87; 3964200,22.84; 3964800,22.83; 3965400,22.82;
          3966000,22.79; 3966600,22.78; 3967200,22.74; 3967800,22.7; 3968400,
          22.7; 3969000,22.66; 3969600,22.62; 3970200,22.62; 3970800,22.61;
          3971400,22.59; 3972000,22.58; 3972600,22.58; 3973200,22.54; 3973800,
          22.54; 3974400,22.52; 3975000,22.5; 3975600,22.5; 3976200,22.5;
          3976800,22.46; 3977400,22.46; 3978000,22.46; 3978600,22.46; 3979200,
          22.42; 3979800,22.42; 3980400,22.42; 3981000,22.42; 3981600,22.42;
          3982200,22.43; 3982800,22.38; 3983400,22.38; 3984000,22.38; 3984600,
          22.39; 3985200,22.38; 3985800,22.38; 3986400,22.38; 3987000,22.37;
          3987600,22.34; 3988200,22.34; 3988800,22.34; 3989400,22.34; 3990000,
          22.34; 3990600,22.34; 3991200,22.35; 3991800,22.38; 3992400,22.42;
          3993000,22.38; 3993600,22.38; 3994200,22.34; 3994800,22.3; 3995400,
          22.3; 3996000,22.26; 3996600,22.34; 3997200,22.42; 3997800,22.53;
          3998400,22.5; 3999000,22.46; 3999600,22.46; 4000200,22.42; 4000800,
          22.42; 4001400,22.38; 4002000,22.42; 4002600,22.54; 4003200,22.63;
          4003800,22.66; 4004400,22.71; 4005000,22.71; 4005600,22.78; 4006200,
          22.79; 4006800,22.78; 4007400,22.78; 4008000,22.78; 4008600,22.84;
          4009200,22.91; 4009800,22.95; 4010400,23; 4011000,23.01; 4011600,
          23.03; 4012200,23.11; 4012800,23.15; 4013400,23.19; 4014000,23.19;
          4014600,23.23; 4015200,23.32; 4015800,23.37; 4016400,23.4; 4017000,
          23.4; 4017600,23.4; 4018200,23.4; 4018800,23.4; 4019400,23.4; 4020000,
          23.4; 4020600,23.38; 4021200,23.4; 4021800,23.48; 4022400,23.48;
          4023000,23.48; 4023600,23.48; 4024200,23.48; 4024800,23.48; 4025400,
          23.44; 4026000,23.44; 4026600,23.56; 4027200,23.56; 4027800,23.56;
          4028400,23.56; 4029000,23.56; 4029600,23.54; 4030200,23.48; 4030800,
          23.48; 4031400,23.56; 4032000,23.52; 4032600,23.48; 4033200,23.52;
          4033800,23.56; 4034400,23.56; 4035000,23.55; 4035600,23.52; 4036200,
          23.52; 4036800,23.48; 4037400,23.44; 4038000,23.4; 4038600,23.4;
          4039200,23.44; 4039800,23.53; 4040400,23.57; 4041000,23.52; 4041600,
          23.6; 4042200,23.6; 4042800,23.56; 4043400,23.48; 4044000,23.44;
          4044600,23.36; 4045200,23.32; 4045800,23.33; 4046400,23.36; 4047000,
          23.36; 4047600,23.35; 4048200,23.27; 4048800,23.24; 4049400,23.15;
          4050000,23.11; 4050600,23.06; 4051200,23.03; 4051800,23.02; 4052400,
          22.99; 4053000,22.95; 4053600,22.92; 4054200,22.91; 4054800,22.87;
          4055400,22.86; 4056000,22.82; 4056600,22.78; 4057200,22.78; 4057800,
          22.74; 4058400,22.7; 4059000,22.7; 4059600,22.7; 4060200,22.67;
          4060800,22.66; 4061400,22.66; 4062000,22.65; 4062600,22.62; 4063200,
          22.62; 4063800,22.62; 4064400,22.59; 4065000,22.58; 4065600,22.58;
          4066200,22.55; 4066800,22.54; 4067400,22.52; 4068000,22.54; 4068600,
          22.5; 4069200,22.5; 4069800,22.5; 4070400,22.48; 4071000,22.47;
          4071600,22.46; 4072200,22.46; 4072800,22.47; 4073400,22.42; 4074000,
          22.42; 4074600,22.42; 4075200,22.42; 4075800,22.42; 4076400,22.38;
          4077000,22.38; 4077600,22.38; 4078200,22.42; 4078800,22.42; 4079400,
          22.42; 4080000,22.42; 4080600,22.38; 4081200,22.34; 4081800,22.3;
          4082400,22.31; 4083000,22.4; 4083600,22.5; 4084200,22.59; 4084800,
          22.58; 4085400,22.54; 4086000,22.5; 4086600,22.48; 4087200,22.46;
          4087800,22.44; 4088400,22.46; 4089000,22.62; 4089600,22.7; 4090200,
          22.78; 4090800,22.83; 4091400,22.91; 4092000,22.95; 4092600,23.03;
          4093200,23.12; 4093800,23.15; 4094400,23.23; 4095000,23.27; 4095600,
          23.35; 4096200,23.4; 4096800,23.52; 4097400,23.56; 4098000,23.6;
          4098600,23.69; 4099200,23.68; 4099800,23.73; 4100400,23.76; 4101000,
          23.88; 4101600,23.96; 4102200,24.02; 4102800,24.14; 4103400,24.17;
          4104000,24.13; 4104600,24.01; 4105200,23.92; 4105800,23.97; 4106400,
          24.01; 4107000,24.05; 4107600,24.06; 4108200,24.06; 4108800,24.09;
          4109400,24.09; 4110000,24.17; 4110600,24.18; 4111200,24.16; 4111800,
          24.21; 4112400,24.25; 4113000,24.26; 4113600,24.25; 4114200,24.25;
          4114800,24.26; 4115400,24.25; 4116000,24.25; 4116600,24.29; 4117200,
          24.27; 4117800,24.33; 4118400,24.29; 4119000,24.29; 4119600,24.29;
          4120200,24.29; 4120800,24.25; 4121400,24.28; 4122000,24.21; 4122600,
          24.25; 4123200,24.28; 4123800,24.25; 4124400,24.2; 4125000,24.13;
          4125600,24.05; 4126200,24.01; 4126800,23.96; 4127400,23.89; 4128000,
          23.84; 4128600,23.8; 4129200,23.8; 4129800,23.76; 4130400,23.76;
          4131000,23.72; 4131600,23.68; 4132200,23.6; 4132800,23.56; 4133400,
          23.49; 4134000,23.44; 4134600,23.4; 4135200,23.32; 4135800,23.27;
          4136400,23.24; 4137000,23.23; 4137600,23.23; 4138200,23.19; 4138800,
          23.19; 4139400,23.15; 4140000,23.15; 4140600,23.11; 4141200,23.07;
          4141800,23.03; 4142400,23.03; 4143000,23.03; 4143600,22.99; 4144200,
          22.95; 4144800,22.95; 4145400,22.95; 4146000,22.95; 4146600,22.92;
          4147200,22.91; 4147800,22.91; 4148400,22.91; 4149000,22.91; 4149600,
          22.87; 4150200,22.87; 4150800,22.85; 4151400,22.83; 4152000,22.82;
          4152600,22.78; 4153200,22.78; 4153800,22.78; 4154400,22.78; 4155000,
          22.76; 4155600,22.78; 4156200,22.74; 4156800,22.74; 4157400,22.74;
          4158000,22.76; 4158600,22.74; 4159200,22.74; 4159800,22.7; 4160400,
          22.72; 4161000,22.7; 4161600,22.7; 4162200,22.7; 4162800,22.66;
          4163400,22.66; 4164000,22.66; 4164600,22.69; 4165200,22.7; 4165800,
          22.7; 4166400,22.67; 4167000,22.65; 4167600,22.62; 4168200,22.62;
          4168800,22.58; 4169400,22.59; 4170000,22.68; 4170600,22.78; 4171200,
          22.78; 4171800,22.78; 4172400,22.74; 4173000,22.74; 4173600,22.72;
          4174200,22.68; 4174800,22.66; 4175400,22.62; 4176000,22.71; 4176600,
          22.79; 4177200,22.87; 4177800,22.95; 4178400,22.96; 4179000,23.02;
          4179600,23.03; 4180200,23.03; 4180800,23.12; 4181400,23.12; 4182000,
          23.15; 4182600,23.24; 4183200,23.32; 4183800,23.36; 4184400,23.36;
          4185000,23.4; 4185600,23.41; 4186200,23.44; 4186800,23.44; 4187400,
          23.43; 4188000,23.5; 4188600,23.56; 4189200,23.6; 4189800,23.68;
          4190400,23.72; 4191000,23.68; 4191600,23.68; 4192200,23.68; 4192800,
          23.73; 4193400,23.76; 4194000,23.76; 4194600,23.88; 4195200,23.92;
          4195800,23.92; 4196400,23.92; 4197000,23.92; 4197600,23.91; 4198200,
          23.88; 4198800,23.86; 4199400,23.88; 4200000,23.84; 4200600,23.82;
          4201200,23.8; 4201800,23.8; 4202400,23.8; 4203000,23.8; 4203600,23.76;
          4204200,23.73; 4204800,23.76; 4205400,23.8; 4206000,23.8; 4206600,
          23.76; 4207200,23.72; 4207800,23.68; 4208400,23.68; 4209000,23.68;
          4209600,23.68; 4210200,23.61; 4210800,23.6; 4211400,23.57; 4212000,
          23.53; 4212600,23.48; 4213200,23.48; 4213800,23.47; 4214400,23.44;
          4215000,23.44; 4215600,23.41; 4216200,23.39; 4216800,23.32; 4217400,
          23.27; 4218000,23.23; 4218600,23.14; 4219200,23.07; 4219800,23.07;
          4220400,23.03; 4221000,22.99; 4221600,22.95; 4222200,22.91; 4222800,
          22.87; 4223400,22.83; 4224000,23.05; 4224600,22.78; 4225200,22.75;
          4225800,22.71; 4226400,22.68; 4227000,22.64; 4227600,22.62; 4228200,
          22.58; 4228800,22.59; 4229400,22.54; 4230000,22.5; 4230600,22.51;
          4231200,22.5; 4231800,22.46; 4232400,22.42; 4233000,22.42; 4233600,
          22.43])
      annotation (Placement(transformation(extent={{-86,44},{-76,54}})));
    Modelica.Blocks.Math.UnitConversions.From_degC from_degC3
      annotation (Placement(transformation(extent={{-18,36},{-12,42}})));
  equation
    connect(multiplex3_2.y[3],TWest. T) annotation (Line(points={{36.6,42},{40,
            42},{40,23},{66.6,23}},      color={0,0,127}));
    connect(multiplex3_2.y[1],TSud. T) annotation (Line(points={{36.6,42},{72.8,
            42},{72.8,46}},            color={0,0,127}));
    connect(South.y, from_degC1.u) annotation (Line(points={{-75.5,79},{-16.6,
            79},{-16.6,49}}, color={0,0,127}));
    connect(multiplex3_2.u1[1],from_degC1. y) annotation (Line(points={{22.8,
            46.2},{0,46.2},{0,49},{-9.7,49}},
                                           color={0,0,127}));
    connect(West.y, from_degC2.u) annotation (Line(points={{-77.5,21},{-54,21},
            {-54,28},{-20.8,28}}, color={0,0,127}));
    connect(multiplex3_2.u3[1],from_degC2. y) annotation (Line(points={{22.8,
            37.8},{0,37.8},{0,28},{-11.6,28}},       color={0,0,127}));
    connect(East.y, from_degC3.u) annotation (Line(points={{-75.5,49},{-46.75,
            49},{-46.75,39},{-18.6,39}}, color={0,0,127}));
    connect(from_degC3.y, multiplex3_2.u2[1]) annotation (Line(points={{-11.7,
            39},{5.15,39},{5.15,42},{22.8,42}}, color={0,0,127}));
    annotation (Icon(coordinateSystem(preserveAspectRatio=false)), Diagram(
          coordinateSystem(preserveAspectRatio=false)));
  end Building_Test;

  model ShadingAtrium "shading for the roof of the atrium"
  parameter Modelica.SIunits.Irradiance IrrdianceThreesholdAtri = 300
      "Threeshold for irradiance on atrium ceilling for the shading";
      parameter Modelica.SIunits.Angle lat=45.5667*3.14159/180 "Latitude";
      parameter Modelica.SIunits.Angle azi=180 "Surface azimuth";
       parameter Modelica.SIunits.Duration  dT_On_Off=300
      "Minimum time lapse between a switch";
      parameter Real start=8;
      parameter Real off = 20;
    Buildings.BoundaryConditions.SolarIrradiation.DirectTiltedSurface HDirTil(
      lat=lat,
      til=Buildings.Types.Tilt.Ceiling,
      azi=azi)
      annotation (Placement(transformation(extent={{-232,-34},{-212,-14}})));
    Buildings.Controls.SetPoints.OccupancySchedule occSchShading(occupancy=3600*{
          start,off})  "Start the shading automate between 6 & 20hours"
      annotation (Placement(transformation(extent={{132,10},{152,30}})));
    Modelica.Blocks.Logical.Switch swi11 "Switch to select set point"
      annotation (Placement(transformation(extent={{-34,-34},{-14,-14}})));
    Modelica.Blocks.Logical.Switch swi12
      "Switch to select set point (between night and day)"
      annotation (Placement(transformation(extent={{180,-50},{200,-30}})));
    Modelica.Blocks.Sources.Constant uShaDay(k=0.20)
    "Si insolation faible on peut ouvrir la couverture"
    annotation (Placement(transformation(extent={{-68,2},{-48,22}})));
    Modelica.Blocks.Sources.Constant uShaDayWest4(k=1)
      "Si insolation forte, alors fermer automatiquement rideau"
      annotation (Placement(transformation(extent={{-84,-64},{-64,-44}})));
    Modelica.Blocks.Sources.Constant uShaDayWest5(k=1) "La nuit fermeture"
      annotation (Placement(transformation(extent={{132,-60},{152,-40}})));
    Modelica.Blocks.Routing.Replicator replicator5(nout=1)
      annotation (Placement(transformation(extent={{256,-50},{276,-30}})));
    Modelica.Blocks.Logical.Switch swi13 "Switch to select set point"
      annotation (Placement(transformation(extent={{34,-18},{54,2}})));
    Modelica.Blocks.Sources.Constant uShaDayWest6(k=1)
      "Si je suis sous Tbasse alors fermeture"
      annotation (Placement(transformation(extent={{-6,62},{14,82}})));
    Modelica.Blocks.Logical.Switch swi14 "Switch to select set point"
      annotation (Placement(transformation(extent={{86,-10},{106,10}})));
    Modelica.Blocks.Sources.Constant uShaDayWest7(k=1)
      "Si je suis au dessus Thaute alors fermeture"
      annotation (Placement(transformation(extent={{54,6},{74,26}})));
    Modelica.Blocks.Logical.Hysteresis hysteresis(uLow=
          IrrdianceThreesholdAtri - 15, uHigh=IrrdianceThreesholdAtri + 15)
      annotation (Placement(transformation(extent={{-204,-34},{-184,-14}})));
    Modelica.Blocks.Logical.Not not1
      annotation (Placement(transformation(extent={{-168,-34},{-148,-14}})));
    Modelica.Blocks.Logical.Hysteresis hysteresis1(uLow=283.15 - 1, uHigh=
          283.15 + 1)
      annotation (Placement(transformation(extent={{-130,38},{-110,58}})));
    Modelica.Blocks.Logical.Not not2
      annotation (Placement(transformation(extent={{-98,38},{-78,58}})));
    Modelica.Blocks.Logical.Hysteresis hysteresis2(uLow=293.15 - 2, uHigh=
          293.15 + 2)
      annotation (Placement(transformation(extent={{50,-50},{70,-30}})));
  public
    Buildings.Controls.Continuous.OffTimer
             offHys1
      annotation (Placement(transformation(extent={{-136,-22},{-116,-2}})));
  protected
    Modelica.Blocks.Logical.GreaterEqualThreshold greaterEqualThreshold1(threshold=
         dT_On_Off)
      annotation (Placement(transformation(extent={{-108,-22},{-88,-2}})));
  protected
    Modelica.Blocks.Logical.And and1
      annotation (Placement(transformation(extent={{-72,-34},{-52,-14}})));
  public
    Buildings.Controls.Continuous.OffTimer
             offHys2
      annotation (Placement(transformation(extent={{-66,38},{-46,58}})));
  protected
    Modelica.Blocks.Logical.And and3
      annotation (Placement(transformation(extent={{-12,28},{8,48}})));
    Modelica.Blocks.Logical.GreaterEqualThreshold greaterEqualThreshold2(threshold=
         dT_On_Off)
      annotation (Placement(transformation(extent={{-38,40},{-18,60}})));
  public
    Buildings.BoundaryConditions.WeatherData.Bus weaBus
      "Bus with weather data"
      annotation (Placement(transformation(extent={{-228,182},{-208,202}}),
          iconTransformation(extent={{-228,182},{-208,202}})));
    Modelica.Blocks.Interfaces.RealInput TAtrium "Temperature atrium"
      annotation (Placement(transformation(extent={{-24,-24},{24,24}},
          rotation=270,
          origin={70,280})));
    Modelica.Blocks.Interfaces.RealOutput y[1]
      annotation (Placement(transformation(extent={{320,-22},{364,22}})));
  equation
    connect(occSchShading.occupied, swi12.u2) annotation (Line(
        points={{153,14},{160,14},{160,-40},{178,-40}},
        color={255,0,255},
        pattern=LinePattern.Dash));
  connect(uShaDay.y, swi11.u1) annotation (Line(
      points={{-47,12},{-42,12},{-42,-16},{-36,-16}},
      color={0,0,127},
      pattern=LinePattern.Dash));
    connect(uShaDayWest4.y,swi11. u3) annotation (Line(
        points={{-63,-54},{-46,-54},{-46,-32},{-36,-32}},
        color={0,0,127},
        pattern=LinePattern.Dash));
    connect(uShaDayWest5.y,swi12. u3) annotation (Line(
        points={{153,-50},{153,-49},{178,-49},{178,-48}},
        color={0,0,127},
        pattern=LinePattern.Dash));
    connect(uShaDayWest6.y,swi13. u1) annotation (Line(
        points={{15,72},{22,72},{22,0},{32,0}},
        color={0,0,127},
        pattern=LinePattern.Dash));
    connect(swi11.y,swi13. u3) annotation (Line(
        points={{-13,-24},{-13,-16},{32,-16}},
        color={0,0,127},
        pattern=LinePattern.Dash));
    connect(uShaDayWest7.y,swi14. u1) annotation (Line(
        points={{75,16},{80,16},{80,8},{84,8}},
        color={0,0,127},
        pattern=LinePattern.Dash));
    connect(swi13.y,swi14. u3) annotation (Line(
        points={{55,-8},{66,-8},{84,-8}},
        color={0,0,127},
        pattern=LinePattern.Dash));
    connect(HDirTil.H, hysteresis.u) annotation (Line(points={{-211,-24},{-211,-24},
            {-206,-24}},      color={0,0,127}));
    connect(hysteresis.y,not1. u) annotation (Line(points={{-183,-24},{-170,-24}},
                        color={255,0,255}));
    connect(hysteresis1.y,not2. u)
      annotation (Line(points={{-109,48},{-100,48}},   color={255,0,255}));
    connect(hysteresis2.y,swi14. u2) annotation (Line(points={{71,-40},{76,-40},{76,
            0},{84,0}},             color={255,0,255}));
    connect(offHys1.y,greaterEqualThreshold1. u) annotation (Line(points={{-115,-12},
            {-115,-9},{-110,-9},{-110,-12}},   color={0,0,127}));
    connect(not1.y,offHys1. u)
      annotation (Line(points={{-147,-24},{-142,-24},{-142,-12},{-138,-12}},
                                                       color={255,0,255}));
    connect(greaterEqualThreshold1.y,and1. u1) annotation (Line(points={{-87,-12},
            {-88,-12},{-88,-12},{-86,-12},{-80,-12},{-80,-24},{-74,-24}},
                                    color={255,0,255}));
    connect(not1.y,and1. u2) annotation (Line(points={{-147,-24},{-144,-24},{-144,
            -32},{-74,-32}},
                         color={255,0,255}));
    connect(and1.y,swi11. u2) annotation (Line(points={{-51,-24},{-44,-24},{-36,-24}},
                               color={255,0,255}));
    connect(not2.y,offHys2. u)
      annotation (Line(points={{-77,48},{-68,48}},     color={255,0,255}));
    connect(and3.y,swi13. u2) annotation (Line(points={{9,38},{18,38},{18,-8},{
            32,-8}},           color={255,0,255}));
    connect(not2.y,and3. u2) annotation (Line(points={{-77,48},{-74,48},{-74,30},
            {-14,30}},   color={255,0,255}));
    connect(offHys2.y,greaterEqualThreshold2. u) annotation (Line(points={{-45,48},
            {-42,48},{-42,50},{-40,50}},       color={0,0,127}));
    connect(greaterEqualThreshold2.y,and3. u1) annotation (Line(points={{-17,50},
            {-16,50},{-16,38},{-14,38}},       color={255,0,255}));
    connect(swi14.y,swi12. u1) annotation (Line(points={{107,0},{134.5,0},{134.5,-32},
            {178,-32}},        color={0,0,127}));
    connect(swi12.y,replicator5. u) annotation (Line(points={{201,-40},{228,-40},{
            254,-40}},   color={0,0,127}));
    connect(weaBus, HDirTil.weaBus) annotation (Line(
        points={{-218,192},{-240,192},{-240,-24},{-232,-24}},
        color={255,204,51},
        thickness=0.5), Text(
        string="%first",
        index=-1,
        extent={{-6,3},{-6,3}}));
    connect(TAtrium, hysteresis1.u) annotation (Line(points={{70,280},{-152,280},{
            -152,48},{-132,48}}, color={0,0,127}));
    connect(TAtrium, hysteresis2.u) annotation (Line(points={{70,280},{26,280},{26,
            -40},{48,-40}}, color={0,0,127}));
    connect(replicator5.y, y) annotation (Line(points={{277,-40},{298,-40},{298,0},
            {342,0}}, color={0,0,127}));
    annotation (Icon(coordinateSystem(preserveAspectRatio=false, extent={{-320,-300},
              {320,280}}), graphics={
          Rectangle(
            extent={{-320,280},{322,-302}},
            lineColor={0,0,127},
            pattern=LinePattern.Dash,
            fillColor={95,95,95},
            fillPattern=FillPattern.Solid),
          Rectangle(
            extent={{-304,264},{-294,-290}},
            lineColor={0,0,127},
            pattern=LinePattern.Dash,
            fillColor={215,215,215},
            fillPattern=FillPattern.Solid),
          Rectangle(
            extent={{-294,264},{302,-282}},
            lineColor={0,0,127},
            pattern=LinePattern.Dash,
            fillColor={170,213,255},
            fillPattern=FillPattern.Solid),
          Rectangle(
            extent={{-294,-290},{306,-282}},
            lineColor={0,0,127},
            pattern=LinePattern.Dash,
            fillColor={215,215,215},
            fillPattern=FillPattern.Solid),
          Rectangle(
            extent={{-304,272},{312,264}},
            lineColor={0,0,127},
            pattern=LinePattern.Dash,
            fillColor={215,215,215},
            fillPattern=FillPattern.Solid),
          Rectangle(
            extent={{302,264},{312,-290}},
            lineColor={0,0,127},
            pattern=LinePattern.Dash,
            fillColor={215,215,215},
            fillPattern=FillPattern.Solid),
          Rectangle(
            extent={{302,264},{-88,-282}},
            lineColor={0,0,0},
            fillColor={175,175,175},
            fillPattern=FillPattern.Solid),
          Ellipse(
            extent={{-244,218},{-192,166}},
            lineColor={255,255,0},
            fillColor={255,255,0},
            fillPattern=FillPattern.Solid),
          Line(
            points={{-8,-8},{6,6}},
            color={255,255,0},
            smooth=Smooth.None,
            thickness=1,
            origin={-188,222},
            rotation=180),
          Line(
            points={{-8,-8},{6,6}},
            color={255,255,0},
            smooth=Smooth.None,
            thickness=1,
            origin={-252,160},
            rotation=180),
          Line(
            points={{-184,190},{-164,190}},
            color={255,255,0},
            smooth=Smooth.None,
            thickness=1),
          Line(
            points={{-274,192},{-254,192}},
            color={255,255,0},
            smooth=Smooth.None,
            thickness=1),
          Line(
            points={{-10,0},{10,0}},
            color={255,255,0},
            smooth=Smooth.None,
            thickness=1,
            origin={-218,150},
            rotation=90),
          Line(
            points={{-10,0},{10,0}},
            color={255,255,0},
            smooth=Smooth.None,
            thickness=1,
            origin={-218,238},
            rotation=90),
          Line(
            points={{-8,-8},{6,6}},
            color={255,255,0},
            smooth=Smooth.None,
            thickness=1,
            origin={-188,164},
            rotation=90),
          Line(
            points={{-8,-8},{6,6}},
            color={255,255,0},
            smooth=Smooth.None,
            thickness=1,
            origin={-252,226},
            rotation=90),
          Rectangle(
            extent={{-294,4},{-88,-4}},
            lineColor={0,0,127},
            pattern=LinePattern.Dash,
            fillColor={215,215,215},
            fillPattern=FillPattern.Solid),
          Text(
            extent={{-76,146},{298,-140}},
            lineColor={0,0,0},
            fillColor={175,175,175},
            fillPattern=FillPattern.Solid,
            textString="Roof Shading")}), Diagram(coordinateSystem(
            preserveAspectRatio=false, extent={{-320,-300},{320,280}})),
            Documentation(info="<html>
          <p> Ce composant permet de simuler un système d'ombrage automatisé présent sur le toit (en verre) de l'atrium du bâtiment hélios. La position par défaut (ou éteint) du système est fermé (ombrage total)<br> Les différents paramètres à renseigner sont :<br></p>
          <p>- IrradianceThreshold : Seuil d'irradiance direct (W/m²) sur le toit à partir de laquelle le système se mets en marche et osculte les surfaces vitrés quand le système est en mode marche</p>
          <p>- Azi : Azimuth de l'orientation extérieur du toit (par défaut Sud)</p>
          <p>- lat : La lattitude du bâtiment</p>
          <p>- dT_On_Off :Delta temps entre deux switchs d'etat du système</p>
          <br><p> Afin d'éviter les switchs intempestifs du système deux temporisations sont intégrées au système. Un hystéresis de 10W/m² autour de la valeur seuil d'ombragre (Irradiancethreshold) et une différence de temps mimimum entre deux switchs d'état (dT_On_Off). Le matériau du système d'ombrage n'est pas défini dans ce composant et doit l'être de manière classique avec la bibliothèque Buildings. Comme convenu dans le DOE du bâtiment 
          Hélios il existe deux températures (10°C et 20°C) à partir desquelles le systèmes ombrage s'active afin de réduire les pertes ou les gains en chaleur</p> 
     
        </html>"));
  end ShadingAtrium;

  model WallShadding "shadding for the wall surface of the helios building"
    parameter Modelica.SIunits.Angle azi "Surface azimuth";
    parameter Real Start "Hours at wich the systems start";
    parameter Real Finish "Hours at wich the systems closed";
    parameter Modelica.SIunits.Angle lat=45.5667*3.14159/180 "Latitude";
    parameter Modelica.SIunits.Duration  dT_On_Off=300
      "Minimum time lapse between a switch";
    parameter Modelica.SIunits.Irradiance IrrdianceThreeshold = 200
      "Irradiance threeshold for the shading";
    Modelica.Blocks.Logical.Switch swi9
      "Switch to select set point (between night and day)"
      annotation (Placement(transformation(extent={{32,-14},{52,6}})));
    Modelica.Blocks.Sources.Constant uShaNightWest4(k=1)
      "Control signal for the shading device (at night shading =0)"
      annotation (Placement(transformation(extent={{-54,-96},{-34,-76}})));
    Modelica.Blocks.Routing.Replicator replicator4(
                                                  nout=1)
      annotation (Placement(transformation(extent={{60,-14},{80,6}})));
    Modelica.Blocks.Logical.Switch swi10 "Switch to select set point"
      annotation (Placement(transformation(extent={{-6,-6},{14,14}})));
    Modelica.Blocks.Sources.Constant uShaDayWest2(k=0)
      "Control signal for the shading device (under the irradiance limit, shading =0)"
      annotation (Placement(transformation(extent={{-146,32},{-126,52}})));
    Buildings.BoundaryConditions.SolarIrradiation.DirectTiltedSurface HDirTil2(
      lat=lat,
      til=Buildings.Types.Tilt.Wall,
      azi=azi)
      annotation (Placement(transformation(extent={{-232,-4},{-212,16}})));
    Modelica.Blocks.Logical.Hysteresis hysteresis5(uLow=IrrdianceThreeshold - 10,
        uHigh=IrrdianceThreeshold + 10)
      annotation (Placement(transformation(extent={{-184,-16},{-164,4}})));
    Modelica.Blocks.Logical.Not not5
      annotation (Placement(transformation(extent={{-136,-16},{-116,4}})));
  public
    Buildings.Controls.Continuous.OffTimer
             offHys4
      annotation (Placement(transformation(extent={{-94,-10},{-74,10}})));
  protected
    Modelica.Blocks.Logical.GreaterEqualThreshold greaterEqualThreshold4(threshold=
         dT_On_Off)
      annotation (Placement(transformation(extent={{-62,-10},{-42,10}})));
  protected
    Modelica.Blocks.Logical.And and4
      annotation (Placement(transformation(extent={{-36,-14},{-16,6}})));
  public
    Modelica.Blocks.Sources.Constant uShaNightWest1(k=1)
      "Control signal for the shading device (at night shading =0)"
      annotation (Placement(transformation(extent={{-56,-62},{-36,-42}})));
    Buildings.Controls.SetPoints.OccupancySchedule occSchShading1(occupancy=3600*{
          Start,Finish}) "Start the shading automate between 6 & 20hours"
      annotation (Placement(transformation(extent={{-30,44},{-10,64}})));
  public
    Buildings.BoundaryConditions.WeatherData.Bus weaBus
      "Bus with weather data"
      annotation (Placement(transformation(extent={{-218,56},{-198,76}}),
          iconTransformation(extent={{-190,24},{-170,44}})));
    Modelica.Blocks.Interfaces.RealOutput y[1]
      annotation (Placement(transformation(extent={{98,-28},{142,16}})));
  equation
    connect(uShaNightWest4.y,swi9. u3) annotation (Line(
        points={{-33,-86},{-2.5,-86},{-2.5,-12},{30,-12}},
        color={0,0,127},
        pattern=LinePattern.Dash));
    connect(uShaDayWest2.y,swi10. u1) annotation (Line(
        points={{-125,42},{-70,42},{-70,12},{-8,12}},
        color={0,0,127},
        pattern=LinePattern.Dash));
    connect(swi10.y,swi9. u1) annotation (Line(
        points={{15,4},{38,4},{30,4}},
        color={0,0,127},
        pattern=LinePattern.Dash));
    connect(hysteresis5.y,not5. u)
      annotation (Line(points={{-163,-6},{-138,-6}},   color={255,0,255}));
    connect(HDirTil2.H,hysteresis5. u) annotation (Line(points={{-211,6},{-196,6},
            {-196,-6},{-186,-6}},   color={0,0,127}));
    connect(offHys4.y,greaterEqualThreshold4. u) annotation (Line(points={{-73,0},
            {-68,0},{-64,0}},       color={0,0,127}));
    connect(not5.y,offHys4. u) annotation (Line(points={{-115,-6},{-104,-6},{-104,
            0},{-96,0}},       color={255,0,255}));
    connect(greaterEqualThreshold4.y,and4. u1) annotation (Line(points={{-41,0},{-40,
            0},{-40,-4},{-38,-4}},             color={255,0,255}));
    connect(not5.y,and4. u2) annotation (Line(points={{-115,-6},{-104,-6},{-104,-12},
            {-38,-12}},  color={255,0,255}));
    connect(and4.y,swi10. u2) annotation (Line(points={{-15,-4},{-10,-4},{-10,4},{
            -8,4}},            color={255,0,255}));
    connect(swi9.y,replicator4. u) annotation (Line(points={{53,-4},{53,-4},{58,-4}},
                         color={0,0,127}));
    connect(swi10.u3, uShaNightWest1.y) annotation (Line(points={{-8,-4},{-12,-4},
            {-12,-52},{-35,-52}}, color={0,0,127}));
    connect(occSchShading1.occupied, swi9.u2) annotation (Line(points={{-9,48},{22,
            48},{22,-4},{30,-4}}, color={255,0,255}));
    connect(HDirTil2.weaBus, weaBus) annotation (Line(
        points={{-232,6},{-236,6},{-236,66},{-208,66}},
        color={255,204,51},
        thickness=0.5), Text(
        string="%second",
        index=1,
        extent={{6,3},{6,3}}));
    connect(replicator4.y, y)
      annotation (Line(points={{81,-4},{120,-4},{120,-6}}, color={0,0,127}));
    annotation (Icon(coordinateSystem(preserveAspectRatio=false, extent={{-240,-200},
              {100,100}}), graphics={
          Rectangle(
            extent={{-240,100},{100,-200}},
            lineColor={0,0,127},
            pattern=LinePattern.Dash,
            fillColor={95,95,95},
            fillPattern=FillPattern.Solid),
          Ellipse(
            extent={{-206,62},{-154,10}},
            lineColor={255,255,0},
            fillColor={255,255,0},
            fillPattern=FillPattern.Solid),
          Line(
            points={{-8,-8},{6,6}},
            color={255,255,0},
            smooth=Smooth.None,
            thickness=1,
            origin={-214,4},
            rotation=180),
          Line(
            points={{-236,36},{-216,36}},
            color={255,255,0},
            smooth=Smooth.None,
            thickness=1),
          Line(
            points={{-8,-8},{6,6}},
            color={255,255,0},
            smooth=Smooth.None,
            thickness=1,
            origin={-214,70},
            rotation=90),
          Polygon(
            points={{-70,26},{88,-16},{86,-170},{-70,-118},{-70,26}},
            lineColor={28,108,200},
            fillColor={170,213,255},
            fillPattern=FillPattern.Solid),
          Polygon(
            points={{-68,-34},{88,-80},{88,-88},{-70,-40},{-68,-34}},
            lineColor={28,108,200},
            fillColor={175,175,175},
            fillPattern=FillPattern.Solid),
          Polygon(
            points={{-68,30},{88,-16},{88,-24},{-70,24},{-68,30}},
            lineColor={28,108,200},
            fillColor={175,175,175},
            fillPattern=FillPattern.Solid),
          Polygon(
            points={{-70,-116},{86,-162},{86,-170},{-72,-122},{-70,-116}},
            lineColor={28,108,200},
            fillColor={175,175,175},
            fillPattern=FillPattern.Solid),
          Rectangle(
            extent={{-74,30},{-66,-122}},
            lineColor={0,0,127},
            pattern=LinePattern.Dash,
            fillColor={175,175,175},
            fillPattern=FillPattern.Solid),
          Rectangle(
            extent={{80,-18},{88,-170}},
            lineColor={0,0,127},
            pattern=LinePattern.Dash,
            fillColor={175,175,175},
            fillPattern=FillPattern.Solid),
          Line(
            points={{-8,-8},{6,6}},
            color={255,255,0},
            smooth=Smooth.None,
            thickness=1,
            origin={-154,66},
            rotation=180),
          Line(
            points={{-8,-8},{6,6}},
            color={255,255,0},
            smooth=Smooth.None,
            thickness=1,
            origin={-148,14},
            rotation=90),
          Line(
            points={{-10,0},{10,0}},
            color={255,255,0},
            smooth=Smooth.None,
            thickness=1,
            origin={-180,-4},
            rotation=90),
          Line(
            points={{-10,0},{10,0}},
            color={255,255,0},
            smooth=Smooth.None,
            thickness=1,
            origin={-180,78},
            rotation=90),
          Polygon(
            points={{-66,22},{80,-22},{80,-72},{-66,-30},{-66,22}},
            lineColor={0,0,0},
            pattern=LinePattern.Dash,
            fillColor={215,215,215},
            fillPattern=FillPattern.Solid),
          Polygon(
            points={{-66,20},{80,-24},{80,-28},{-66,16},{-66,20}},
            lineColor={0,0,0},
            pattern=LinePattern.Dash,
            fillColor={170,213,255},
            fillPattern=FillPattern.Solid),
          Polygon(
            points={{-66,12},{80,-32},{80,-36},{-66,8},{-66,12}},
            lineColor={0,0,0},
            pattern=LinePattern.Dash,
            fillColor={170,213,255},
            fillPattern=FillPattern.Solid),
          Polygon(
            points={{-66,4},{80,-40},{80,-44},{-66,0},{-66,4}},
            lineColor={0,0,0},
            pattern=LinePattern.Dash,
            fillColor={170,213,255},
            fillPattern=FillPattern.Solid),
          Polygon(
            points={{-66,-4},{80,-48},{80,-52},{-66,-8},{-66,-4}},
            lineColor={0,0,0},
            pattern=LinePattern.Dash,
            fillColor={170,213,255},
            fillPattern=FillPattern.Solid),
          Polygon(
            points={{-66,-12},{80,-56},{80,-60},{-66,-16},{-66,-12}},
            lineColor={0,0,0},
            pattern=LinePattern.Dash,
            fillColor={170,213,255},
            fillPattern=FillPattern.Solid),
          Polygon(
            points={{-66,-20},{80,-64},{80,-68},{-66,-24},{-66,-20}},
            lineColor={0,0,0},
            pattern=LinePattern.Dash,
            fillColor={170,213,255},
            fillPattern=FillPattern.Solid)}),
                            Diagram(coordinateSystem(preserveAspectRatio=false,
            extent={{-240,-200},{100,100}})),
            Documentation(info="<html>
          <p> Ce composant permet de simuler un système d'ombrage automatisé(de type store ou volet)fonctionnant en tout ou rien. La position par défaut (ou éteint) du système est fermé (ombrage total)<br> Les différents paramètres à renseigner sont :<br></p>
          <p>- Start : L'heure de mise en marche du système d'ombrage (en heure impérativement)</p>
          <p>- Finish : L'heure de mise à l'arrêt du système (en heure impérativement)</p>
          <p>- IrradianceThreshold : Seuil d'irradiance direct (W/m²) sur la surface verticale (murs) à partir de laquelle le système se mets en marche et osculte les surfaces vitrés quand le système est en mode marche</p>
          <p>- Azi : Azimuth de l'orientation extérieur du murs (Voir figure ci-dessous pour plus de détail)</p>
          <p>- lat : La lattitude du bâtiment</p>
          <p>- dT_On_Off :Delta temps entre deux switchs d'etat du système</p>
          <br><p> Afin d'éviter les switchs intempestifs du système deux temporisations sont intégrées au système. Un hystéresis de 10W/m² autour de la valeur seuil d'ombragre (Irradiancethreshold) et une différence de temps mimimum entre deux switchs d'état (dT_On_Off). Le matériau du système d'ombrage n'est pas défini dans ce composant et doit l'être de manière classique avec la bibliothèque Buildings</p> 
<p align=\"center\">
<img alt=\"image\" src=\"modelica://Buildings/Resources/Images/Comis/azi.png\" border=\"1\"/>
</p> 
     
        </html>"));
  end WallShadding;

  model InteriorWall
    "Interior wall (opaque construction, window and frame)between two rooms"
   extends
      Buildings.ThermalZones.Detailed.Constructions.BaseClasses.PartialConstruction(
      final AOpa=A-AWin, layers(material={matIso,matCon}, nLay=2));
    parameter Modelica.SIunits.Area AWin "Heat transfer area of window"
        annotation (Dialog(group="Glazing system"));
    parameter Real fFra(
      min=0,
      max=1) = 0.25 "Fraction of window frame divided by total window area"
      annotation (Dialog(group="Glazing system"));
    final parameter Modelica.SIunits.Area AFra = fFra*AWin "Frame area"
      annotation (Dialog(group="Glazing system"));
    final parameter Modelica.SIunits.Area AGla=AWin - AFra "Glass area"
      annotation (Dialog(group="Glazing system"));
     parameter Boolean linearize = false
      "Set to true to linearize emissive power";
     parameter Boolean homotopyInitialization = true
      "= true, use homotopy method"
      annotation(Evaluate=true, Dialog(tab="Advanced"));
   parameter Modelica.SIunits.Temperature Tini = 15.6+273.15;
    Buildings.HeatTransfer.Windows.Window window(
      fFra=fFra,
      glaSys=glaSys,
      linearize=linearize,
      til=til,
      A=AWin) "Window"
      annotation (Placement(transformation(extent={{-36,12},{4,52}})));
    Buildings.HeatTransfer.Radiosity.IndoorRadiosity indRad(A=AWin)
      "Model for indoor radiosity"
      annotation (Placement(transformation(extent={{204,42},{184,62}})));
    Buildings.HeatTransfer.Windows.BaseClasses.ShadeRadiation intShaRad(
      thisSideHasShade=glaSys.haveInteriorShade,
      linearize=linearize,
      absIR_air=glaSys.shade.absIR_a,
      absIR_glass=glaSys.shade.absIR_b,
      tauIR_air=glaSys.shade.tauIR_a,
      tauIR_glass=glaSys.shade.tauIR_b,
      A=AGla,
      TSha(start=Tini)) if
       glaSys.haveShade "Interior shade radiation model"
      annotation (Placement(transformation(extent={{122,48},{102,68}})));
    Buildings.HeatTransfer.Windows.BaseClasses.ShadingSignal shaSig(
      haveShade=glaSys.haveInteriorShade) "Conversion for shading signal"
      annotation (Placement(transformation(extent={{-108,154},{-128,134}})));
    Buildings.HeatTransfer.Windows.InteriorHeatTransferConvective intShaCon(
      fFra=fFra,
      til=Buildings.Types.Tilt.Wall,
      haveExteriorShade=glaSys.haveExteriorShade,
      haveInteriorShade=glaSys.haveInteriorShade,
      A=AWin) "Model for interior shade heat transfer"
      annotation (Placement(transformation(extent={{130,-38},{110,-18}})));
  protected
    Modelica.Blocks.Math.Sum sumJ(nin=if glaSys.haveShade then 2 else 1)
      "Sum of radiosity fom glass to outside"
      annotation (Placement(transformation(extent={{142,2},{162,22}})));
    Buildings.HeatTransfer.Radiosity.RadiositySplitter radShaOut
      "Radiosity that strikes shading device"
      annotation (Placement(transformation(extent={{162,42},{142,62}})));
  public
    Modelica.Thermal.HeatTransfer.Interfaces.HeatPort_a port_a
      "Port that connects to the air"
      annotation (Placement(transformation(extent={{-310,-8},{-290,12}})));
    Modelica.Blocks.Sources.Constant AtriumSurface(k=0)
      "no shadding or wind speed between to room"
      annotation (Placement(transformation(extent={{42,122},{62,142}})));
    Buildings.HeatTransfer.Windows.InteriorHeatTransferConvective intShaCon1(
      fFra=fFra,
      til=Buildings.Types.Tilt.Wall,
      haveExteriorShade=glaSys.haveExteriorShade,
      haveInteriorShade=glaSys.haveInteriorShade,
      A=AWin) "Model for interior shade heat transfer"
      annotation (Placement(transformation(extent={{-130,22},{-110,42}})));
    Buildings.HeatTransfer.Windows.BaseClasses.ShadeRadiation intShaRad1(
      thisSideHasShade=glaSys.haveInteriorShade,
      linearize=linearize,
      absIR_air=glaSys.shade.absIR_a,
      absIR_glass=glaSys.shade.absIR_b,
      tauIR_air=glaSys.shade.tauIR_a,
      tauIR_glass=glaSys.shade.tauIR_b,
      A=AGla,
      TSha(start=Tini)) if
       glaSys.haveShade "Interior shade radiation model"
      annotation (Placement(transformation(extent={{-150,54},{-130,74}})));
    Modelica.Blocks.Sources.Constant Interior1[size(glaSys.glass, 1)](k=0)
      "No absoprtion by shadding on both face" annotation (Placement(
          transformation(
          extent={{-10,-10},{10,10}},
          rotation=90,
          origin={6,-52})));
    Modelica.Blocks.Sources.Constant Interior2[size(glaSys.glass, 1)](k=0.10)
      "Dummy data for absorption by window" annotation (Placement(
          transformation(
          extent={{-10,-10},{10,10}},
          rotation=90,
          origin={-38,-52})));
    Buildings.HeatTransfer.Radiosity.IndoorRadiosity indRad1(A=AWin)
      "Model for indoor radiosity"
      annotation (Placement(transformation(extent={{-260,56},{-240,76}})));
  protected
    Modelica.Blocks.Math.Sum sumJ1(
                                  nin=if glaSys.haveShade then 2 else 1)
      "Sum of radiosity fom glass to outside"
      annotation (Placement(transformation(extent={{-188,36},{-208,56}})));
  public
    Modelica.Thermal.HeatTransfer.Interfaces.HeatPort_b port_b
      annotation (Placement(transformation(extent={{290,-8},{310,12}})));
    parameter Buildings.HeatTransfer.Data.Solids.InsulationBoard matIso(
      x=0.2,
      c=1000,
      d=28,
      k=0.04,
      nStaRef=2) "Isofacade 32R 200mm"
      annotation (Placement(transformation(extent={{260,290},{280,310}})));
  protected
    Buildings.HeatTransfer.Radiosity.RadiositySplitter radShaOut1
      "Radiosity that strikes shading device"
      annotation (Placement(transformation(extent={{-214,70},{-194,90}})));
  public
    parameter Buildings.HeatTransfer.Data.Solids.Concrete
                                                matCon(
      c=836,
      x=0.25,
      k=1.75,
      d=2400,
      nStaRef=1) "Concrete"
      annotation (Placement(transformation(extent={{260,264},{280,284}})));
   Buildings.HeatTransfer.Data.GlazingSystems.DoubleClearAir13Clear glaSys(
      shade=Buildings.HeatTransfer.Data.Shades.Gray(),
      haveExteriorShade=false,
      UFra=1.8,
      haveInteriorShade=true)
      annotation (Placement(transformation(extent={{226,290},{246,310}})));
    Modelica.Blocks.Interfaces.RealInput uSha(each min=0, each max=1)  "Control signal for the interior shading device " annotation (
        Placement(transformation(extent={{-326,240},{-286,280}}),
          iconTransformation(extent={{-232,164},{-200,196}})));
    Buildings.HeatTransfer.Windows.BaseClasses.ShadingSignal shaSig1(
      haveShade=glaSys.haveInteriorShade) "Conversion for shading signal"
      annotation (Placement(transformation(extent={{94,142},{114,122}})));
  equation
    connect(indRad.JOut,radShaOut. JIn) annotation (Line(
        points={{183,56},{174,56},{174,58},{163,58}},
        color={0,127,0},
        smooth=Smooth.None));
    connect(radShaOut.JOut_1,intShaRad. JIn_air) annotation (Line(
        points={{141,58},{132,58},{132,54},{123,54}},
        color={0,127,0},
        smooth=Smooth.None));
    connect(indRad.JIn,sumJ. y) annotation (Line(
        points={{183,48},{174,48},{174,12},{163,12}},
        color={0,0,0},
        smooth=Smooth.None));
    connect(sumJ.u[2],intShaRad. JOut_air) annotation (Line(
        points={{140,12},{132,12},{132,50},{123,50}},
        color={0,0,127},
        smooth=Smooth.None));
    connect(window.JOutUns_b,sumJ. u[1]) annotation (Line(
        points={{5,44},{34,44},{34,76},{136,76},{136,12},{140,12}},
        color={0,127,0},
        smooth=Smooth.None));
    connect(intShaRad.JOut_glass,window. JInSha_b) annotation (Line(
        points={{101,54},{54,54},{54,22},{5,22}},
        color={0,127,0},
        smooth=Smooth.None));
    connect(window.JInUns_b,radShaOut. JOut_2) annotation (Line(
        points={{5,40},{36,40},{36,80},{138,80},{138,46},{141,46}},
        color={0,0,0},
        smooth=Smooth.None));
    connect(intShaRad.JIn_glass,window. JOutSha_b) annotation (Line(
        points={{101,50},{56,50},{56,26},{5,26}},
        color={0,0,0},
        smooth=Smooth.None));
    connect(intShaCon.TSha,intShaRad. TSha) annotation (Line(
        points={{120,-39},{120,-50},{102,-50},{102,42},{107,42},{107,47}},
        color={0,0,127},
        smooth=Smooth.None));
    connect(window.fra_b,intShaCon. frame) annotation (Line(
        points={{4.2,16},{34,16},{34,-42},{113,-42},{113,-38}},
        color={191,0,0},
        smooth=Smooth.None));
    connect(window.glaUns_b,intShaCon. glaUns) annotation (Line(
        points={{4,34},{42,34},{42,-26},{110,-26}},
        color={191,0,0},
        smooth=Smooth.None));
    connect(intShaCon.glaSha,window. glaSha_b) annotation (Line(
        points={{110,-30},{38,-30},{38,30},{4,30}},
        color={191,0,0},
        smooth=Smooth.None));
    connect(intShaCon.QRadAbs_flow,intShaRad. QRadAbs_flow) annotation (Line(
        points={{126,-39},{126,-52},{104,-52},{104,36},{117,36},{117,47}},
        color={0,0,127},
        smooth=Smooth.None));
    connect(AtriumSurface.y, intShaCon.uSha) annotation (Line(points={{63,132},
            {72,132},{72,-60},{146,-60},{146,-20},{130.8,-20}},
                                                              color={0,0,127}));
    connect(intShaCon1.glaUns, window.glaUns_a)
      annotation (Line(points={{-110,34},{-110,34},{-36,34}}, color={191,0,0}));
    connect(intShaCon1.glaSha, window.glaSha_a)
      annotation (Line(points={{-110,30},{-110,30},{-36,30}}, color={191,0,0}));
    connect(window.fra_a, intShaCon1.frame) annotation (Line(points={{-36,16},{-114,
            16},{-114,22},{-113,22}}, color={191,0,0}));
    connect(port_a, intShaCon1.air) annotation (Line(points={{-300,2},{-250,2},{-250,
            32},{-130,32}}, color={191,0,0}));
    connect(intShaRad1.QRadAbs_flow, intShaCon1.QRadAbs_flow) annotation (Line(
          points={{-145,53},{-145,16.5},{-126,16.5},{-126,21}}, color={0,0,127}));
    connect(intShaRad1.JOut_glass, window.JInSha_a) annotation (Line(points={{-129,
            60},{-54,60},{-54,26},{-37,26}}, color={0,127,0}));
    connect(window.JOutSha_a, intShaRad1.JIn_glass) annotation (Line(points={{-37,
            22},{-60,22},{-60,56},{-129,56}}, color={0,127,0}));
    connect(intShaCon1.TSha, intShaRad1.TSha) annotation (Line(points={{-120,21},{
            -134,21},{-134,53},{-135,53}}, color={0,0,127}));
    connect(Interior1.y, window.QAbsSha_flow) annotation (Line(points={{6,-41},{6,
            -42},{6,-16},{-8,-16},{-8,10}}, color={0,0,127}));
    connect(AtriumSurface.y, intShaRad.QSolAbs_flow) annotation (Line(points={{63,
            132},{86,132},{86,47},{112,47}}, color={0,0,127}));
    connect(Interior2.y, window.QAbsUns_flow) annotation (Line(points={{-38,-41},{
            -38,-42},{-38,-16},{-24,-16},{-24,10}}, color={0,0,127}));
    connect(indRad1.JIn, sumJ1.y) annotation (Line(points={{-239,62},{-212,62},
            {-212,46},{-209,46}},
                            color={0,0,0}));
    connect(window.JOutUns_a, sumJ1.u[1]) annotation (Line(points={{-37,40},{-46,40},
            {-46,46},{-186,46}}, color={0,127,0}));
    connect(intShaRad1.JOut_air, sumJ1.u[2]) annotation (Line(points={{-151,56},{-168,
            56},{-168,46},{-186,46}}, color={0,127,0}));
    connect(port_a, indRad1.heatPort) annotation (Line(points={{-300,2},{-250,
            2},{-250,56.2},{-249.2,56.2}},
                                       color={191,0,0}));
    connect(indRad.heatPort, port_b) annotation (Line(points={{193.2,42.2},{193.6,
            42.2},{193.6,2},{300,2}}, color={191,0,0}));
    connect(intShaCon.air, port_b) annotation (Line(points={{130,-28},{194,-28},{194,
            2},{300,2}}, color={191,0,0}));
    connect(indRad1.JOut, radShaOut1.JIn) annotation (Line(points={{-239,70},
            {-222,70},{-222,86},{-215,86}}, color={0,127,0}));
    connect(shaSig.y, radShaOut1.u) annotation (Line(points={{-129,144},{-140,
            144},{-140,144},{-218,144},{-218,74},{-216,74}},
                                                      color={0,0,127}));
    connect(radShaOut1.JOut_2, window.JInUns_a) annotation (Line(points={{-193,74},
            {-44,74},{-44,44},{-37,44}},          color={0,127,0}));
    connect(radShaOut1.JOut_1, intShaRad1.JIn_air) annotation (Line(points={{
            -193,86},{-172,86},{-172,60},{-151,60}}, color={0,127,0}));
    connect(uSha, intShaRad1.QSolAbs_flow) annotation (Line(points={{-306,260},{-160,
            260},{-160,53},{-140,53}}, color={0,0,127}));
    connect(uSha, intShaRad1.u) annotation (Line(points={{-306,260},{-306,260},{-151,
            260},{-151,72}}, color={0,0,127}));
    connect(shaSig1.y, intShaRad.u) annotation (Line(points={{115,132},{130,132},{
            130,66},{123,66}}, color={0,0,127}));
    connect(shaSig1.y, radShaOut.u) annotation (Line(points={{115,132},{168,132},{
            168,46},{164,46}}, color={0,0,127}));
    connect(uSha, shaSig.u) annotation (Line(points={{-306,260},{-84,260},{-84,
            144},{-106,144}},
                      color={0,0,127}));
    connect(AtriumSurface.y, shaSig1.u)
      annotation (Line(points={{63,132},{86,132},{92,132}}, color={0,0,127}));
    connect(uSha, intShaCon1.uSha) annotation (Line(points={{-306,260},{-160,260},
            {-160,40},{-130.8,40}}, color={0,0,127}));
    connect(uSha, window.uSha) annotation (Line(points={{-306,260},{-84,260},{-84,
            48},{-38,48}}, color={0,0,127}));
    annotation (Icon(coordinateSystem(preserveAspectRatio=false, extent={{-300,-180},
              {300,320}}), graphics={
          Polygon(
            visible = glaSys.haveInteriorShade,
            points={{42,132},{42,32},{110,-32},{110,68},{42,132}},
            lineColor={0,0,0},
            smooth=Smooth.None,
            fillPattern=FillPattern.CrossDiag,
            fillColor={215,215,215}),
          Line(
            points={{-80,-116},{22,-116}},
            color={0,0,0},
            smooth=Smooth.None),
          Polygon(
            points={{22,132},{22,-116},{84,-180},{84,68},{22,132}},
            lineColor={0,0,0},
            smooth=Smooth.None,
            fillColor={215,215,215},
            fillPattern=FillPattern.Solid),
          Polygon(
            points={{32,110},{32,-112},{72,-152},{72,68},{32,110}},
            lineColor={0,0,0},
            smooth=Smooth.None,
            fillColor={170,213,255},
            fillPattern=FillPattern.Solid),
          Line(
            points={{-108,132},{42,132}},
            color={0,0,0},
            smooth=Smooth.None),
          Line(
            points={{-16,-198},{86,-198}},
            color={0,0,0},
            smooth=Smooth.None),
          Polygon(
            points={{-26,132},{-26,-116},{36,-180},{36,68},{-26,132}},
            lineColor={0,0,0},
            smooth=Smooth.None,
            fillColor={215,215,215},
            fillPattern=FillPattern.Solid),
          Polygon(
            points={{-16,110},{-16,-112},{24,-152},{24,68},{-16,110}},
            lineColor={0,0,0},
            smooth=Smooth.None,
            fillColor={170,213,255},
            fillPattern=FillPattern.Solid),
          Polygon(
            points={{-80,132},{-80,-116},{-18,-180},{-18,68},{-80,132}},
            lineColor={0,0,0},
            smooth=Smooth.None,
            fillColor={215,215,215},
            fillPattern=FillPattern.Solid),
          Polygon(
            points={{-70,108},{-70,-114},{-30,-154},{-30,66},{-70,108}},
            lineColor={0,0,0},
            smooth=Smooth.None,
            fillColor={170,213,255},
            fillPattern=FillPattern.Solid),
          Polygon(
            visible = glaSys.haveExteriorShade,
            points={{-108,132},{-108,32},{-40,-32},{-40,68},{-108,132}},
            lineColor={0,0,0},
            smooth=Smooth.None,
            fillPattern=FillPattern.CrossDiag,
            fillColor={215,215,215}),
          Line(
            points={{-40,68},{110,68}},
            color={0,0,0},
            smooth=Smooth.None),
          Rectangle(
            extent={{-296,4},{-80,-2}},
            lineColor={162,29,33},
            fillColor={193,19,3},
            fillPattern=FillPattern.Solid),
          Rectangle(
            extent={{84,4},{300,-2}},
            lineColor={162,29,33},
            fillColor={193,19,3},
            fillPattern=FillPattern.Solid)}),
                            Diagram(coordinateSystem(preserveAspectRatio=false,
            extent={{-300,-180},{300,320}})));
  end InteriorWall;

  block SwitchVectoriel "Switch between two Real vector signals"
    extends Modelica.Blocks.Icons.PartialBooleanBlock;
    parameter Integer nout=1 "Number of outputs";
    parameter Integer nin=1 "Number of inputs";
    Modelica.Blocks.Interfaces.RealInput u1[nin]
      "Connector of first Real input signal" annotation (Placement(
          transformation(extent={{-140,60},{-100,100}}, rotation=0)));
    Modelica.Blocks.Interfaces.BooleanInput u2
      "Connector of Boolean input signal" annotation (Placement(transformation(
            extent={{-140,-20},{-100,20}}, rotation=0)));
    Modelica.Blocks.Interfaces.RealInput u3[nin]
      "Connector of second Real input signal" annotation (Placement(
          transformation(extent={{-140,-100},{-100,-60}}, rotation=0)));
    Modelica.Blocks.Interfaces.RealOutput y[nout]
      "Connector of Real output signal" annotation (Placement(transformation(
            extent={{100,-10},{120,10}}, rotation=0)));
  equation
    y = if u2 then u1 else u3;
    annotation (
      defaultComponentName="switch1",
      Documentation(info="<html>
<p>The Logical.Switch switches, depending on the
logical connector u2 (the middle connector)
between the two possible input signals
u1 (upper connector) and u3 (lower connector).</p>
<p>If u2 is <b>true</b>, the output signal y is set equal to
u1, else it is set equal to u3.</p>
</html>"),
      Icon(coordinateSystem(
          preserveAspectRatio=true,
          extent={{-100,-100},{100,100}},
          initialScale=0.1), graphics={
          Line(points={{12.0,0.0},{100.0,0.0}},
            color={0,0,127}),
          Line(points={{-100.0,0.0},{-40.0,0.0}},
            color={255,0,255}),
          Line(points={{-100.0,-80.0},{-40.0,-80.0},{-40.0,-80.0}},
            color={0,0,127}),
          Line(points={{-40.0,12.0},{-40.0,-12.0}},
            color={255,0,255}),
          Line(points={{-100.0,80.0},{-38.0,80.0}},
            color={0,0,127}),
          Line(points={{-38.0,80.0},{6.0,2.0}},
            color={0,0,127},
            thickness=1.0),
          Ellipse(lineColor={0,0,255},
            pattern=LinePattern.None,
            fillPattern=FillPattern.Solid,
            extent={{2.0,-8.0},{18.0,8.0}})}));
  end SwitchVectoriel;
end BaseClasses;
